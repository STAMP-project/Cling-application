import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest22 {

    public static boolean debug = false;

    @Test
    public void test11001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11001");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        boolean boolean8 = multiBackgroundInitializerResultsFuture7.isCancelled();
        boolean boolean10 = multiBackgroundInitializerResultsFuture7.cancel(true);
        boolean boolean12 = multiBackgroundInitializerResultsFuture7.cancel(false);
        boolean boolean14 = multiBackgroundInitializerResultsFuture7.cancel(true);
        boolean boolean16 = multiBackgroundInitializerResultsFuture7.cancel(false);
        boolean boolean18 = multiBackgroundInitializerResultsFuture7.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializerResultsFuture7.get();
        boolean boolean20 = multiBackgroundInitializerResults19.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test11002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11002");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService3 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean4 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(executorService3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test11003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11003");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture24 = multiBackgroundInitializer22.getFuture();
        boolean boolean25 = multiBackgroundInitializer22.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer22.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture27 = multiBackgroundInitializer22.getFuture();
        boolean boolean28 = multiBackgroundInitializer22.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture29 = multiBackgroundInitializer22.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer22.getFuture();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture29);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
    }

    @Test
    public void test11004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11004");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture5.isDone();
        boolean boolean7 = multiBackgroundInitializerResultsFuture5.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture5.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = multiBackgroundInitializerResults8.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test11005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11005");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer0.start();
        boolean boolean11 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer0.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
    }

    @Test
    public void test11006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11006");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean7 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture2.get();
        java.lang.Class<?> wildcardClass12 = multiBackgroundInitializerResults11.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test11007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11007");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer3.getFuture();
        boolean boolean22 = multiBackgroundInitializerResultsFuture21.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test11008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11008");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        boolean boolean9 = multiBackgroundInitializer0.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test11009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11009");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer0.getFuture();
        boolean boolean11 = multiBackgroundInitializerResultsFuture10.isDone();
        boolean boolean12 = multiBackgroundInitializerResultsFuture10.isCancelled();
        boolean boolean13 = multiBackgroundInitializerResultsFuture10.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test11010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11010");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        boolean boolean12 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet14 = multiBackgroundInitializerResults13.initializerNames();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults13.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test11011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11011");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer10.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer10.getFuture();
        java.util.concurrent.ExecutorService executorService22 = multiBackgroundInitializer10.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture23 = multiBackgroundInitializer10.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults24 = multiBackgroundInitializerResultsFuture23.get();
        boolean boolean25 = multiBackgroundInitializerResults24.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertNull(executorService22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture23);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test11012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11012");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        boolean boolean19 = multiBackgroundInitializerResults18.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = multiBackgroundInitializerResults18.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test11013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11013");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer3.getFuture();
        boolean boolean8 = multiBackgroundInitializerResultsFuture7.isDone();
        boolean boolean9 = multiBackgroundInitializerResultsFuture7.isCancelled();
        boolean boolean10 = multiBackgroundInitializerResultsFuture7.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture7.get();
        boolean boolean12 = multiBackgroundInitializerResultsFuture7.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializerResultsFuture7.get();
        boolean boolean14 = multiBackgroundInitializerResultsFuture7.isDone();
        boolean boolean16 = multiBackgroundInitializerResultsFuture7.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializerResultsFuture7.get();
        java.lang.Class<?> wildcardClass18 = multiBackgroundInitializerResults17.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test11014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11014");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean7 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean13 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean14 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean15 = multiBackgroundInitializerResultsFuture2.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializerResultsFuture2.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test11015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11015");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        boolean boolean20 = multiBackgroundInitializerResults19.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test11016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11016");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
    }

    @Test
    public void test11017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11017");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet17 = multiBackgroundInitializerResults16.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test11018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11018");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean5 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean6 = multiBackgroundInitializerResultsFuture2.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean8 = multiBackgroundInitializerResults7.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test11019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11019");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        boolean boolean19 = multiBackgroundInitializer0.isStarted();
        boolean boolean20 = multiBackgroundInitializer0.start();
        boolean boolean21 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService22 = multiBackgroundInitializer0.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(executorService22);
    }

    @Test
    public void test11020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11020");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.ExecutorService executorService31 = multiBackgroundInitializer18.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer18.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture34 = multiBackgroundInitializer18.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(executorService31);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture34);
    }

    @Test
    public void test11021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11021");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializerResultsFuture18.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
    }

    @Test
    public void test11022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11022");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializerResults16.isException("hi!");
        boolean boolean19 = multiBackgroundInitializerResults16.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test11023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11023");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer0.get();
        boolean boolean39 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture40 = multiBackgroundInitializer0.getFuture();
        boolean boolean41 = multiBackgroundInitializer0.isStarted();
        java.lang.Class<?> wildcardClass42 = multiBackgroundInitializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test11024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11024");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer21);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer25 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean26 = multiBackgroundInitializer25.isStarted();
        multiBackgroundInitializer21.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer25);
        boolean boolean28 = multiBackgroundInitializer21.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults29 = multiBackgroundInitializer21.get();
        boolean boolean30 = multiBackgroundInitializer21.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer21.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture32 = multiBackgroundInitializer21.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer21.get();
        boolean boolean34 = multiBackgroundInitializer21.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer21.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer21.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
    }

    @Test
    public void test11025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11025");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.start();
        boolean boolean8 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer13);
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer13.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer13.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer13.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer13.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer13.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer13.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer13.getFuture();
        boolean boolean23 = multiBackgroundInitializer13.start();
        boolean boolean24 = multiBackgroundInitializer13.start();
        java.util.concurrent.ExecutorService executorService25 = multiBackgroundInitializer13.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService26 = multiBackgroundInitializer13.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(executorService25);
        org.junit.Assert.assertNull(executorService26);
    }

    @Test
    public void test11026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11026");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer27.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer27.getExternalExecutor();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean38 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        boolean boolean40 = multiBackgroundInitializer4.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture41 = multiBackgroundInitializer4.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults42 = multiBackgroundInitializer4.get();
        java.lang.Class<?> wildcardClass43 = multiBackgroundInitializerResults42.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture41);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test11027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11027");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture26 = multiBackgroundInitializer14.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture27 = multiBackgroundInitializer14.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture28 = multiBackgroundInitializer14.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults29 = multiBackgroundInitializerResultsFuture28.get();
        java.util.Set<java.lang.String> strSet30 = multiBackgroundInitializerResults29.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture26);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture27);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture28);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults29);
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test11028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11028");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test11029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11029");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService29 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture32 = multiBackgroundInitializer18.getFuture();
        boolean boolean33 = multiBackgroundInitializerResultsFuture32.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializerResultsFuture32.get();
        java.util.Set<java.lang.String> strSet35 = multiBackgroundInitializerResults34.initializerNames();
        java.util.Set<java.lang.String> strSet36 = multiBackgroundInitializerResults34.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNull(executorService29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strSet36);
    }

    @Test
    public void test11030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11030");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        boolean boolean37 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService38 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(executorService38);
    }

    @Test
    public void test11031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11031");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = multiBackgroundInitializerResults12.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
    }

    @Test
    public void test11032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11032");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture4.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture4.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer8 = multiBackgroundInitializerResults6.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test11033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11033");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.lang.Class<?> wildcardClass15 = multiBackgroundInitializerResults14.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test11034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11034");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        boolean boolean12 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
    }

    @Test
    public void test11035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11035");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        boolean boolean19 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService20 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean27 = multiBackgroundInitializer26.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
        boolean boolean29 = multiBackgroundInitializer23.isStarted();
        boolean boolean30 = multiBackgroundInitializer23.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService33 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService34 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService35 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean36 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService37 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService37);
        java.util.concurrent.ExecutorService executorService39 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService40 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService40);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer43 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean44 = multiBackgroundInitializer43.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture45 = multiBackgroundInitializer43.getFuture();
        boolean boolean46 = multiBackgroundInitializer43.start();
        java.util.concurrent.ExecutorService executorService47 = multiBackgroundInitializer43.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService48 = multiBackgroundInitializer43.getExternalExecutor();
        boolean boolean49 = multiBackgroundInitializer43.start();
        boolean boolean50 = multiBackgroundInitializer43.start();
        boolean boolean51 = multiBackgroundInitializer43.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults52 = multiBackgroundInitializer43.get();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer43);
        java.lang.Class<?> wildcardClass54 = multiBackgroundInitializer43.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertNull(executorService33);
        org.junit.Assert.assertNull(executorService34);
        org.junit.Assert.assertNull(executorService35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(executorService39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(executorService47);
        org.junit.Assert.assertNull(executorService48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults52);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test11036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11036");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(executorService16);
    }

    @Test
    public void test11037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11037");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean5 = multiBackgroundInitializerResultsFuture4.isCancelled();
        boolean boolean6 = multiBackgroundInitializerResultsFuture4.isCancelled();
        boolean boolean8 = multiBackgroundInitializerResultsFuture4.cancel(false);
        boolean boolean9 = multiBackgroundInitializerResultsFuture4.isCancelled();
        boolean boolean10 = multiBackgroundInitializerResultsFuture4.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture4.get();
        boolean boolean13 = multiBackgroundInitializerResultsFuture4.cancel(true);
        boolean boolean14 = multiBackgroundInitializerResultsFuture4.isDone();
        boolean boolean15 = multiBackgroundInitializerResultsFuture4.isCancelled();
        java.util.concurrent.TimeUnit timeUnit17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializerResultsFuture4.get((long) 100, timeUnit17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test11038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11038");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
    }

    @Test
    public void test11039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11039");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer18.get();
        boolean boolean34 = multiBackgroundInitializerResults32.isException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults31);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test11040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11040");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture8.get();
        boolean boolean10 = multiBackgroundInitializerResultsFuture8.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test11041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11041");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        boolean boolean12 = multiBackgroundInitializerResultsFuture11.isCancelled();
        boolean boolean13 = multiBackgroundInitializerResultsFuture11.isDone();
        boolean boolean14 = multiBackgroundInitializerResultsFuture11.isCancelled();
        boolean boolean15 = multiBackgroundInitializerResultsFuture11.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test11042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11042");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer0.getFuture();
        boolean boolean13 = multiBackgroundInitializerResultsFuture11.cancel(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test11043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11043");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture23 = multiBackgroundInitializer3.getFuture();
        boolean boolean24 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test11044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11044");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean6 = multiBackgroundInitializerResultsFuture2.cancel(true);
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean10 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean12 = multiBackgroundInitializerResultsFuture2.cancel(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializerResultsFuture2.get();
            org.junit.Assert.fail("Expected exception of type java.util.concurrent.CancellationException; message: null");
        } catch (java.util.concurrent.CancellationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test11045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11045");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = multiBackgroundInitializerResults14.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
    }

    @Test
    public void test11046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11046");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializerResultsFuture13.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializerResultsFuture13.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
    }

    @Test
    public void test11047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11047");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService17 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test11048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11048");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializerResults16.isException("hi!");
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer20 = multiBackgroundInitializerResults16.getInitializer("hi!");
        java.lang.Class<?> wildcardClass21 = multiBackgroundInitializerResults16.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test11049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11049");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService11 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test11050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11050");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        boolean boolean20 = multiBackgroundInitializerResultsFuture19.isCancelled();
        boolean boolean21 = multiBackgroundInitializerResultsFuture19.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializerResultsFuture19.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializerResultsFuture19.get();
        boolean boolean24 = multiBackgroundInitializerResultsFuture19.isCancelled();
        java.util.concurrent.TimeUnit timeUnit26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializerResultsFuture19.get(100L, timeUnit26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test11051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11051");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        boolean boolean19 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        multiBackgroundInitializer21.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
        java.util.concurrent.ExecutorService executorService27 = multiBackgroundInitializer24.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
        boolean boolean29 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService30 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        boolean boolean34 = multiBackgroundInitializer32.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer39 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean40 = multiBackgroundInitializer39.isStarted();
        multiBackgroundInitializer36.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer39);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer43 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean44 = multiBackgroundInitializer43.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer46 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean47 = multiBackgroundInitializer46.isStarted();
        multiBackgroundInitializer43.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer46);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer50 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean51 = multiBackgroundInitializer50.isStarted();
        multiBackgroundInitializer46.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer50);
        boolean boolean53 = multiBackgroundInitializer46.start();
        multiBackgroundInitializer36.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer46);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer56 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean57 = multiBackgroundInitializer56.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer59 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean60 = multiBackgroundInitializer59.isStarted();
        multiBackgroundInitializer56.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer59);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer63 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean64 = multiBackgroundInitializer63.isStarted();
        multiBackgroundInitializer59.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer63);
        java.util.concurrent.ExecutorService executorService66 = null;
        multiBackgroundInitializer59.setExternalExecutor(executorService66);
        java.util.concurrent.ExecutorService executorService68 = multiBackgroundInitializer59.getExternalExecutor();
        multiBackgroundInitializer36.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer59);
        boolean boolean70 = multiBackgroundInitializer36.start();
        multiBackgroundInitializer32.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer36);
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        java.util.concurrent.ExecutorService executorService73 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService73);
        java.util.concurrent.ExecutorService executorService75 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService75);
        java.util.concurrent.ExecutorService executorService77 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService77);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(executorService27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(executorService30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(executorService68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test11052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11052");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        java.util.concurrent.ExecutorService executorService9 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService9);
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializerResultsFuture16.get();
        boolean boolean18 = multiBackgroundInitializerResultsFuture16.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializerResultsFuture16.get();
        boolean boolean20 = multiBackgroundInitializerResultsFuture16.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializerResultsFuture16.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializerResultsFuture16.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
    }

    @Test
    public void test11053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11053");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture6.get();
        boolean boolean8 = multiBackgroundInitializerResultsFuture6.isDone();
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture6.get((long) 'a', timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test11054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11054");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer22 = multiBackgroundInitializerResults20.getInitializer("hi!");
        java.lang.Object obj24 = multiBackgroundInitializerResults20.getResultObject("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer22);
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test11055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11055");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
    }

    @Test
    public void test11056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11056");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test11057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11057");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer10.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer10.get();
        boolean boolean22 = multiBackgroundInitializerResults21.isSuccessful();
        boolean boolean24 = multiBackgroundInitializerResults21.isException("hi!");
        java.util.Set<java.lang.String> strSet25 = multiBackgroundInitializerResults21.initializerNames();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException27 = multiBackgroundInitializerResults21.getException("hi!");
        boolean boolean28 = multiBackgroundInitializerResults21.isSuccessful();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer30 = multiBackgroundInitializerResults21.getInitializer("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer32 = multiBackgroundInitializerResults21.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNull(concurrentException27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer30);
    }

    @Test
    public void test11058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11058");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService11 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test11059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11059");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = multiBackgroundInitializerResults6.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test11060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11060");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer18 = multiBackgroundInitializerResults16.getInitializer("hi!");
        java.util.Set<java.lang.String> strSet19 = multiBackgroundInitializerResults16.initializerNames();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException21 = multiBackgroundInitializerResults16.getException("hi!");
        java.util.Set<java.lang.String> strSet22 = multiBackgroundInitializerResults16.initializerNames();
        java.lang.Class<?> wildcardClass23 = strSet22.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(concurrentException21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test11061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11061");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializer18.get();
        boolean boolean31 = multiBackgroundInitializer18.start();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer34 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean35 = multiBackgroundInitializer34.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer37 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean38 = multiBackgroundInitializer37.isStarted();
        multiBackgroundInitializer34.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer37);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer41 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean42 = multiBackgroundInitializer41.isStarted();
        multiBackgroundInitializer37.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer41);
        java.util.concurrent.ExecutorService executorService44 = multiBackgroundInitializer37.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer46 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean47 = multiBackgroundInitializer46.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer49 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean50 = multiBackgroundInitializer49.isStarted();
        multiBackgroundInitializer46.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer49);
        java.util.concurrent.ExecutorService executorService52 = multiBackgroundInitializer49.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService53 = null;
        multiBackgroundInitializer49.setExternalExecutor(executorService53);
        boolean boolean55 = multiBackgroundInitializer49.start();
        boolean boolean56 = multiBackgroundInitializer49.start();
        multiBackgroundInitializer37.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer49);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture58 = multiBackgroundInitializer49.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture59 = multiBackgroundInitializer49.getFuture();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer18.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(executorService44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(executorService52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture58);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture59);
    }

    @Test
    public void test11062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11062");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer0.isStarted();
        boolean boolean11 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test11063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11063");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        boolean boolean20 = multiBackgroundInitializerResultsFuture19.isCancelled();
        boolean boolean21 = multiBackgroundInitializerResultsFuture19.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializerResultsFuture19.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializerResultsFuture19.get();
        boolean boolean24 = multiBackgroundInitializerResultsFuture19.isCancelled();
        java.util.concurrent.TimeUnit timeUnit26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializerResultsFuture19.get((long) 'a', timeUnit26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test11064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11064");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture4.get();
        java.util.Set<java.lang.String> strSet6 = multiBackgroundInitializerResults5.initializerNames();
        java.util.Set<java.lang.String> strSet7 = multiBackgroundInitializerResults5.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException9 = multiBackgroundInitializerResults5.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test11065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11065");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test11066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11066");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean10 = multiBackgroundInitializerResultsFuture2.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test11067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11067");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.isStarted();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        boolean boolean12 = multiBackgroundInitializer3.start();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test11068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11068");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer12.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer15.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService19 = null;
        multiBackgroundInitializer15.setExternalExecutor(executorService19);
        boolean boolean21 = multiBackgroundInitializer15.start();
        boolean boolean22 = multiBackgroundInitializer15.start();
        multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        java.util.concurrent.ExecutorService executorService24 = multiBackgroundInitializer15.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer15.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer27 = multiBackgroundInitializerResults25.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(executorService24);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
    }

    @Test
    public void test11069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11069");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
    }

    @Test
    public void test11070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11070");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean30 = multiBackgroundInitializer23.isStarted();
        boolean boolean31 = multiBackgroundInitializer23.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture32 = multiBackgroundInitializer23.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer23.get();
        boolean boolean34 = multiBackgroundInitializer23.start();
        boolean boolean35 = multiBackgroundInitializer23.start();
        boolean boolean36 = multiBackgroundInitializer23.isStarted();
        boolean boolean37 = multiBackgroundInitializer23.start();
        boolean boolean38 = multiBackgroundInitializer23.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test11071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11071");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        boolean boolean17 = multiBackgroundInitializer3.start();
        boolean boolean18 = multiBackgroundInitializer3.start();
        boolean boolean19 = multiBackgroundInitializer3.start();
        boolean boolean20 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = multiBackgroundInitializerResults21.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
    }

    @Test
    public void test11072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11072");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet13 = multiBackgroundInitializerResults12.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = multiBackgroundInitializerResults12.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test11073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11073");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = multiBackgroundInitializerResults10.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
    }

    @Test
    public void test11074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11074");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture38 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializerResultsFuture38.get();
        boolean boolean40 = multiBackgroundInitializerResultsFuture38.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializerResultsFuture38.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture38);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
    }

    @Test
    public void test11075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11075");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        boolean boolean8 = multiBackgroundInitializerResultsFuture7.isCancelled();
        boolean boolean10 = multiBackgroundInitializerResultsFuture7.cancel(true);
        boolean boolean12 = multiBackgroundInitializerResultsFuture7.cancel(false);
        boolean boolean14 = multiBackgroundInitializerResultsFuture7.cancel(true);
        boolean boolean16 = multiBackgroundInitializerResultsFuture7.cancel(false);
        boolean boolean18 = multiBackgroundInitializerResultsFuture7.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializerResultsFuture7.get();
        java.util.concurrent.TimeUnit timeUnit21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializerResultsFuture7.get(10L, timeUnit21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
    }

    @Test
    public void test11076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11076");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        boolean boolean17 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean19 = multiBackgroundInitializer3.start();
        boolean boolean20 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
    }

    @Test
    public void test11077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11077");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        boolean boolean9 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test11078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11078");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.isStarted();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService12 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService12);
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService15 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test11079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11079");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService12);
        boolean boolean14 = multiBackgroundInitializer7.start();
        boolean boolean15 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer7.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer7.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer7.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
    }

    @Test
    public void test11080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11080");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test11081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11081");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        boolean boolean9 = multiBackgroundInitializer0.start();
        boolean boolean10 = multiBackgroundInitializer0.isStarted();
        boolean boolean11 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
    }

    @Test
    public void test11082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11082");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        boolean boolean19 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test11083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11083");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.start();
        boolean boolean9 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        boolean boolean13 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test11084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11084");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        boolean boolean10 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNull(executorService14);
    }

    @Test
    public void test11085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11085");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean5 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean7 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.isCancelled();
        java.util.concurrent.TimeUnit timeUnit11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializerResultsFuture2.get((long) ' ', timeUnit11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test11086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11086");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.lang.Class<?> wildcardClass16 = multiBackgroundInitializer3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test11087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11087");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture29 = multiBackgroundInitializer18.getFuture();
        boolean boolean30 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializer18.start();
        boolean boolean33 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializer18.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults34);
    }

    @Test
    public void test11088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11088");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
    }

    @Test
    public void test11089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11089");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        boolean boolean12 = multiBackgroundInitializerResultsFuture11.isDone();
        boolean boolean13 = multiBackgroundInitializerResultsFuture11.isDone();
        boolean boolean14 = multiBackgroundInitializerResultsFuture11.isCancelled();
        java.util.concurrent.TimeUnit timeUnit16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializerResultsFuture11.get(0L, timeUnit16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test11090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11090");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer14.getFuture();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean24 = multiBackgroundInitializer14.isStarted();
        boolean boolean25 = multiBackgroundInitializer14.start();
        boolean boolean26 = multiBackgroundInitializer14.start();
        boolean boolean27 = multiBackgroundInitializer14.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture28 = multiBackgroundInitializer14.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults29 = multiBackgroundInitializer14.get();
        boolean boolean30 = multiBackgroundInitializer14.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture28);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test11091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11091");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test11092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11092");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test11093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11093");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService29 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean30 = multiBackgroundInitializer18.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializer18.get();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        boolean boolean33 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture34 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture35 = multiBackgroundInitializer18.getFuture();
        boolean boolean36 = multiBackgroundInitializerResultsFuture35.isDone();
        boolean boolean37 = multiBackgroundInitializerResultsFuture35.isCancelled();
        boolean boolean38 = multiBackgroundInitializerResultsFuture35.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNull(executorService29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture34);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test11094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11094");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer10.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer10.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer10.getFuture();
        boolean boolean23 = multiBackgroundInitializer10.isStarted();
        java.util.concurrent.ExecutorService executorService24 = multiBackgroundInitializer10.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(executorService24);
    }

    @Test
    public void test11095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11095");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService29 = multiBackgroundInitializer18.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService30 = multiBackgroundInitializer18.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass31 = executorService30.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNull(executorService29);
        org.junit.Assert.assertNull(executorService30);
    }

    @Test
    public void test11096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11096");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializerResults15.isException("hi!");
        java.lang.Object obj19 = multiBackgroundInitializerResults15.getResultObject("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj19);
    }

    @Test
    public void test11097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11097");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        boolean boolean19 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
    }

    @Test
    public void test11098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11098");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        boolean boolean11 = multiBackgroundInitializer7.start();
        boolean boolean12 = multiBackgroundInitializer7.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer7.getExternalExecutor();
        boolean boolean14 = multiBackgroundInitializer7.start();
        boolean boolean15 = multiBackgroundInitializer7.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer7.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer7.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer7.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer7.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
    }

    @Test
    public void test11099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11099");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer17 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean18 = multiBackgroundInitializer17.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer17);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        multiBackgroundInitializer21.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer28 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean29 = multiBackgroundInitializer28.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer28);
        boolean boolean31 = multiBackgroundInitializer24.start();
        multiBackgroundInitializer14.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
        boolean boolean33 = multiBackgroundInitializer14.isStarted();
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService34);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer37 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean38 = multiBackgroundInitializer37.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer40 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean41 = multiBackgroundInitializer40.isStarted();
        multiBackgroundInitializer37.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer40);
        boolean boolean43 = multiBackgroundInitializer37.isStarted();
        boolean boolean44 = multiBackgroundInitializer37.start();
        multiBackgroundInitializer14.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer37);
        java.util.concurrent.ExecutorService executorService46 = multiBackgroundInitializer14.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService47 = multiBackgroundInitializer14.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService48 = multiBackgroundInitializer14.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(executorService46);
        org.junit.Assert.assertNull(executorService47);
        org.junit.Assert.assertNull(executorService48);
    }

    @Test
    public void test11100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11100");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        boolean boolean19 = multiBackgroundInitializer3.start();
        boolean boolean20 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
    }

    @Test
    public void test11101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11101");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = multiBackgroundInitializerResults10.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
    }

    @Test
    public void test11102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11102");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer3.getFuture();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        boolean boolean11 = multiBackgroundInitializer3.start();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
    }

    @Test
    public void test11103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11103");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        boolean boolean19 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService20 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean27 = multiBackgroundInitializer26.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
        boolean boolean29 = multiBackgroundInitializer23.isStarted();
        boolean boolean30 = multiBackgroundInitializer23.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer23.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer23.get();
        boolean boolean34 = multiBackgroundInitializer23.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture35 = multiBackgroundInitializer23.getFuture();
        boolean boolean36 = multiBackgroundInitializer23.start();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer23.getExternalExecutor();
        boolean boolean38 = multiBackgroundInitializer23.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test11104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11104");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture4.cancel(true);
        boolean boolean7 = multiBackgroundInitializerResultsFuture4.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test11105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11105");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test11106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11106");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializerResultsFuture15.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException18 = multiBackgroundInitializerResults16.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test11107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11107");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        boolean boolean34 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService35 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean36 = multiBackgroundInitializer18.start();
        boolean boolean37 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService38 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean39 = multiBackgroundInitializer18.isStarted();
        boolean boolean40 = multiBackgroundInitializer18.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(executorService35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(executorService38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test11108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11108");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test11109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11109");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture36 = multiBackgroundInitializer0.getFuture();
        boolean boolean38 = multiBackgroundInitializerResultsFuture36.cancel(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test11110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11110");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean11 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean12 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean14 = multiBackgroundInitializerResultsFuture2.cancel(false);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean18 = multiBackgroundInitializerResultsFuture2.cancel(true);
        boolean boolean20 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean22 = multiBackgroundInitializerResultsFuture2.cancel(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test11111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11111");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        boolean boolean8 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test11112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11112");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService16 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(executorService15);
    }

    @Test
    public void test11113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11113");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        boolean boolean19 = multiBackgroundInitializerResultsFuture18.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializerResultsFuture18.get();
        boolean boolean22 = multiBackgroundInitializerResultsFuture18.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test11114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11114");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        boolean boolean10 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        boolean boolean13 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer0.get();
        boolean boolean16 = multiBackgroundInitializerResults15.isSuccessful();
        boolean boolean17 = multiBackgroundInitializerResults15.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer19 = multiBackgroundInitializerResults15.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test11115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11115");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        boolean boolean19 = multiBackgroundInitializerResults18.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test11116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11116");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException22 = multiBackgroundInitializerResults20.getException("hi!");
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException24 = multiBackgroundInitializerResults20.getException("hi!");
        boolean boolean25 = multiBackgroundInitializerResults20.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNull(concurrentException22);
        org.junit.Assert.assertNull(concurrentException24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test11117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11117");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test11118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11118");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        boolean boolean36 = multiBackgroundInitializer0.start();
        boolean boolean37 = multiBackgroundInitializer0.start();
        boolean boolean38 = multiBackgroundInitializer0.isStarted();
        boolean boolean39 = multiBackgroundInitializer0.start();
        boolean boolean40 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture41 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture42 = multiBackgroundInitializer0.getFuture();
        boolean boolean43 = multiBackgroundInitializerResultsFuture42.isCancelled();
        boolean boolean44 = multiBackgroundInitializerResultsFuture42.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture41);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test11119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11119");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer11.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        boolean boolean15 = multiBackgroundInitializer11.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        boolean boolean17 = multiBackgroundInitializer11.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer11.getFuture();
        boolean boolean19 = multiBackgroundInitializerResultsFuture18.isDone();
        boolean boolean21 = multiBackgroundInitializerResultsFuture18.cancel(true);
        java.lang.Class<?> wildcardClass22 = multiBackgroundInitializerResultsFuture18.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test11120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11120");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        boolean boolean19 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean21 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test11121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11121");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test11122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11122");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        boolean boolean8 = multiBackgroundInitializerResultsFuture7.isCancelled();
        boolean boolean10 = multiBackgroundInitializerResultsFuture7.cancel(true);
        boolean boolean12 = multiBackgroundInitializerResultsFuture7.cancel(false);
        boolean boolean14 = multiBackgroundInitializerResultsFuture7.cancel(true);
        boolean boolean16 = multiBackgroundInitializerResultsFuture7.cancel(false);
        boolean boolean17 = multiBackgroundInitializerResultsFuture7.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializerResultsFuture7.get();
        boolean boolean20 = multiBackgroundInitializerResultsFuture7.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test11123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11123");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
    }

    @Test
    public void test11124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11124");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializerResultsFuture31.isCancelled();
        boolean boolean34 = multiBackgroundInitializerResultsFuture31.cancel(false);
        boolean boolean35 = multiBackgroundInitializerResultsFuture31.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializerResultsFuture31.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
    }

    @Test
    public void test11125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11125");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException19 = multiBackgroundInitializerResults17.getException("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException21 = multiBackgroundInitializerResults17.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNull(concurrentException19);
    }

    @Test
    public void test11126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11126");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        boolean boolean20 = multiBackgroundInitializerResultsFuture19.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test11127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11127");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        boolean boolean12 = multiBackgroundInitializerResultsFuture11.isCancelled();
        boolean boolean13 = multiBackgroundInitializerResultsFuture11.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test11128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11128");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNull(executorService20);
    }

    @Test
    public void test11129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11129");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = multiBackgroundInitializerResults16.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test11130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11130");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        boolean boolean21 = multiBackgroundInitializer3.isStarted();
        boolean boolean22 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService24 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertNull(executorService24);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
    }

    @Test
    public void test11131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11131");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        boolean boolean19 = multiBackgroundInitializer15.start();
        boolean boolean20 = multiBackgroundInitializer15.start();
        boolean boolean21 = multiBackgroundInitializer15.isStarted();
        java.util.concurrent.ExecutorService executorService22 = multiBackgroundInitializer15.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer15.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(executorService22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
    }

    @Test
    public void test11132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11132");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test11133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11133");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
    }

    @Test
    public void test11134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11134");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        boolean boolean19 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test11135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11135");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        boolean boolean13 = multiBackgroundInitializerResults11.isSuccessful();
        java.lang.Object obj15 = multiBackgroundInitializerResults11.getResultObject("hi!");
        boolean boolean16 = multiBackgroundInitializerResults11.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test11136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11136");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        boolean boolean8 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer11 = multiBackgroundInitializerResults9.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
    }

    @Test
    public void test11137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11137");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture26 = multiBackgroundInitializer14.getFuture();
        java.util.concurrent.ExecutorService executorService27 = multiBackgroundInitializer14.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer14.get();
        java.util.concurrent.ExecutorService executorService29 = multiBackgroundInitializer14.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer14.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture26);
        org.junit.Assert.assertNull(executorService27);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNull(executorService29);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
    }

    @Test
    public void test11138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11138");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer3.getFuture();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
    }

    @Test
    public void test11139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11139");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        boolean boolean8 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService9);
    }

    @Test
    public void test11140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11140");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService16 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
    }

    @Test
    public void test11141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11141");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializerResultsFuture19.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
    }

    @Test
    public void test11142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11142");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializerResultsFuture14.isDone();
        boolean boolean16 = multiBackgroundInitializerResultsFuture14.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test11143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11143");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        boolean boolean19 = multiBackgroundInitializerResultsFuture18.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test11144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11144");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        boolean boolean36 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer0.get();
        boolean boolean38 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture40 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializerResultsFuture40.get();
        boolean boolean42 = multiBackgroundInitializerResultsFuture40.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test11145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11145");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer10.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer10.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializer10.get();
        boolean boolean23 = multiBackgroundInitializer10.start();
        java.util.concurrent.ExecutorService executorService24 = multiBackgroundInitializer10.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer10.get();
        boolean boolean26 = multiBackgroundInitializer10.isStarted();
        boolean boolean27 = multiBackgroundInitializer10.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(executorService24);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test11146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11146");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        boolean boolean17 = multiBackgroundInitializerResultsFuture15.cancel(true);
        boolean boolean18 = multiBackgroundInitializerResultsFuture15.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test11147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11147");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        boolean boolean9 = multiBackgroundInitializer0.start();
        java.lang.Class<?> wildcardClass10 = multiBackgroundInitializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test11148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11148");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer11.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        boolean boolean15 = multiBackgroundInitializer11.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        boolean boolean17 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer11.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer11.get();
        boolean boolean20 = multiBackgroundInitializer11.isStarted();
        java.util.concurrent.ExecutorService executorService21 = multiBackgroundInitializer11.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(executorService21);
    }

    @Test
    public void test11149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11149");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.lang.Object obj14 = multiBackgroundInitializerResults11.getResultObject("hi!");
        boolean boolean16 = multiBackgroundInitializerResults11.isException("hi!");
        boolean boolean17 = multiBackgroundInitializerResults11.isSuccessful();
        java.util.Set<java.lang.String> strSet18 = multiBackgroundInitializerResults11.initializerNames();
        java.lang.Object obj20 = multiBackgroundInitializerResults11.getResultObject("hi!");
        java.lang.Object obj22 = multiBackgroundInitializerResults11.getResultObject("hi!");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = multiBackgroundInitializerResults11.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test11150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11150");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer27.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer27.getExternalExecutor();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean38 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer4.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture41 = multiBackgroundInitializer4.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture42 = multiBackgroundInitializer4.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer4.get();
        java.util.concurrent.ExecutorService executorService44 = multiBackgroundInitializer4.getExternalExecutor();
        boolean boolean45 = multiBackgroundInitializer4.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture46 = multiBackgroundInitializer4.getFuture();
        boolean boolean47 = multiBackgroundInitializerResultsFuture46.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture41);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture42);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertNull(executorService44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test11151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11151");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.start();
        boolean boolean7 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer0.getFuture();
        boolean boolean13 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test11152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11152");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializerResultsFuture15.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = multiBackgroundInitializerResults16.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test11153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11153");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        boolean boolean19 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService21 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean22 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer35 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean36 = multiBackgroundInitializer35.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer35.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer35.get();
        boolean boolean39 = multiBackgroundInitializer35.start();
        multiBackgroundInitializer31.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer35);
        boolean boolean41 = multiBackgroundInitializer35.isStarted();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer35);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer35.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer35.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture45 = multiBackgroundInitializer35.getFuture();
        boolean boolean46 = multiBackgroundInitializerResultsFuture45.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNull(executorService21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test11154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11154");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test11155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11155");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture29 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer18.getFuture();
        boolean boolean31 = multiBackgroundInitializer18.start();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        boolean boolean33 = multiBackgroundInitializer18.isStarted();
        boolean boolean34 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture35 = multiBackgroundInitializer18.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer37 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean38 = multiBackgroundInitializer37.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer40 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean41 = multiBackgroundInitializer40.isStarted();
        multiBackgroundInitializer37.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer40);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer44 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean45 = multiBackgroundInitializer44.isStarted();
        multiBackgroundInitializer40.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer44);
        java.util.concurrent.ExecutorService executorService47 = null;
        multiBackgroundInitializer40.setExternalExecutor(executorService47);
        java.util.concurrent.ExecutorService executorService49 = multiBackgroundInitializer40.getExternalExecutor();
        boolean boolean50 = multiBackgroundInitializer40.start();
        boolean boolean51 = multiBackgroundInitializer40.isStarted();
        boolean boolean52 = multiBackgroundInitializer40.start();
        java.util.concurrent.ExecutorService executorService53 = multiBackgroundInitializer40.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService54 = multiBackgroundInitializer40.getExternalExecutor();
        boolean boolean55 = multiBackgroundInitializer40.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults56 = multiBackgroundInitializer40.get();
        boolean boolean57 = multiBackgroundInitializer40.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer18.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture29);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(executorService49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(executorService53);
        org.junit.Assert.assertNull(executorService54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test11156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11156");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        boolean boolean5 = multiBackgroundInitializer0.start();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService8 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test11157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11157");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean17 = multiBackgroundInitializer3.start();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test11158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11158");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean38 = multiBackgroundInitializer0.start();
        boolean boolean39 = multiBackgroundInitializer0.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test11159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11159");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializerResultsFuture6.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture6.get();
        boolean boolean9 = multiBackgroundInitializerResults8.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = multiBackgroundInitializerResults8.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test11160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11160");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture38 = multiBackgroundInitializer0.getFuture();
        java.lang.Class<?> wildcardClass39 = multiBackgroundInitializerResultsFuture38.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test11161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11161");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService28 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService28);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer0.getFuture();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test11162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11162");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNull(executorService20);
    }

    @Test
    public void test11163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11163");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        java.lang.Object obj38 = multiBackgroundInitializerResults36.getResultObject("");
        boolean boolean39 = multiBackgroundInitializerResults36.isSuccessful();
        java.util.Set<java.lang.String> strSet40 = multiBackgroundInitializerResults36.initializerNames();
        java.util.Set<java.lang.String> strSet41 = multiBackgroundInitializerResults36.initializerNames();
        boolean boolean43 = multiBackgroundInitializerResults36.isException("hi!");
        java.lang.Object obj45 = multiBackgroundInitializerResults36.getResultObject("");
        boolean boolean47 = multiBackgroundInitializerResults36.isException("");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test11164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11164");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer12.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer15.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService19 = null;
        multiBackgroundInitializer15.setExternalExecutor(executorService19);
        boolean boolean21 = multiBackgroundInitializer15.start();
        boolean boolean22 = multiBackgroundInitializer15.start();
        multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        boolean boolean24 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService25 = multiBackgroundInitializer3.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer3.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(executorService25);
    }

    @Test
    public void test11165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11165");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer11.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        boolean boolean15 = multiBackgroundInitializer11.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        boolean boolean17 = multiBackgroundInitializer11.start();
        java.util.concurrent.ExecutorService executorService18 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer11.setExternalExecutor(executorService18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test11166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11166");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture26 = multiBackgroundInitializer14.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture27 = multiBackgroundInitializer14.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture28 = multiBackgroundInitializer14.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults29 = multiBackgroundInitializer14.get();
        boolean boolean30 = multiBackgroundInitializer14.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture26);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture27);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture28);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test11167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11167");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNull(executorService8);
    }

    @Test
    public void test11168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11168");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializerResultsFuture31.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializerResultsFuture31.get();
        boolean boolean34 = multiBackgroundInitializerResults33.isSuccessful();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException36 = multiBackgroundInitializerResults33.getException("hi!");
        java.lang.Object obj38 = multiBackgroundInitializerResults33.getResultObject("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(concurrentException36);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test11169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11169");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        boolean boolean17 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test11170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11170");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture24 = multiBackgroundInitializer3.getFuture();
        boolean boolean25 = multiBackgroundInitializer3.isStarted();
        boolean boolean26 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture27 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture27);
    }

    @Test
    public void test11171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11171");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
    }

    @Test
    public void test11172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11172");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet14 = multiBackgroundInitializerResults13.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test11173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11173");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        boolean boolean17 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test11174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11174");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        boolean boolean20 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer25 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean26 = multiBackgroundInitializer25.isStarted();
        multiBackgroundInitializer22.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer25);
        java.util.concurrent.ExecutorService executorService28 = multiBackgroundInitializer25.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer30 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean31 = multiBackgroundInitializer30.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer33 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean34 = multiBackgroundInitializer33.isStarted();
        multiBackgroundInitializer30.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer33);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer37 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean38 = multiBackgroundInitializer37.isStarted();
        multiBackgroundInitializer33.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer37);
        multiBackgroundInitializer25.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer37);
        boolean boolean41 = multiBackgroundInitializer37.start();
        boolean boolean42 = multiBackgroundInitializer37.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(executorService28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test11175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11175");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService29 = multiBackgroundInitializer18.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService31 = multiBackgroundInitializer18.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNull(executorService29);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertNull(executorService31);
    }

    @Test
    public void test11176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11176");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializerResultsFuture13.isDone();
        boolean boolean15 = multiBackgroundInitializerResultsFuture13.isCancelled();
        boolean boolean16 = multiBackgroundInitializerResultsFuture13.isCancelled();
        boolean boolean17 = multiBackgroundInitializerResultsFuture13.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializerResultsFuture13.get();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException20 = multiBackgroundInitializerResults18.getException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNull(concurrentException20);
    }

    @Test
    public void test11177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11177");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean6 = multiBackgroundInitializerResultsFuture2.cancel(true);
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean10 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean11 = multiBackgroundInitializerResultsFuture2.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test11178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11178");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializerResults16.isException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test11179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11179");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer27.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer27.getExternalExecutor();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean38 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer4.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture41 = multiBackgroundInitializer4.getFuture();
        boolean boolean42 = multiBackgroundInitializer4.start();
        boolean boolean43 = multiBackgroundInitializer4.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer4.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture45 = multiBackgroundInitializer4.getFuture();
        java.util.concurrent.ExecutorService executorService46 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer4.setExternalExecutor(executorService46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture45);
    }

    @Test
    public void test11180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11180");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer19 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean20 = multiBackgroundInitializer19.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer19.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean27 = multiBackgroundInitializer26.isStarted();
        multiBackgroundInitializer22.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer30 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean31 = multiBackgroundInitializer30.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer33 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean34 = multiBackgroundInitializer33.isStarted();
        multiBackgroundInitializer30.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer33);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer37 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean38 = multiBackgroundInitializer37.isStarted();
        multiBackgroundInitializer33.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer37);
        java.util.concurrent.ExecutorService executorService40 = null;
        multiBackgroundInitializer33.setExternalExecutor(executorService40);
        java.util.concurrent.ExecutorService executorService42 = multiBackgroundInitializer33.getExternalExecutor();
        boolean boolean43 = multiBackgroundInitializer33.start();
        multiBackgroundInitializer26.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer33);
        java.util.concurrent.ExecutorService executorService45 = null;
        multiBackgroundInitializer26.setExternalExecutor(executorService45);
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(executorService42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test11181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11181");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        java.util.concurrent.ExecutorService executorService9 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService9);
        boolean boolean11 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
    }

    @Test
    public void test11182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11182");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        boolean boolean36 = multiBackgroundInitializer0.start();
        boolean boolean37 = multiBackgroundInitializer0.start();
        boolean boolean38 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture39 = multiBackgroundInitializer0.getFuture();
        boolean boolean40 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializer0.get();
        boolean boolean42 = multiBackgroundInitializer0.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test11183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11183");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer0.getFuture();
        boolean boolean11 = multiBackgroundInitializerResultsFuture10.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test11184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11184");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        boolean boolean22 = multiBackgroundInitializerResults20.isException("hi!");
        java.util.Set<java.lang.String> strSet23 = multiBackgroundInitializerResults20.initializerNames();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException25 = multiBackgroundInitializerResults20.getException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(concurrentException25);
    }

    @Test
    public void test11185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11185");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.start();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer0.getFuture();
        java.lang.Class<?> wildcardClass11 = multiBackgroundInitializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test11186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11186");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean26 = multiBackgroundInitializer23.isStarted();
        boolean boolean27 = multiBackgroundInitializer23.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer23.get();
        boolean boolean29 = multiBackgroundInitializer23.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializer23.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializer23.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer23.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults31);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
    }

    @Test
    public void test11187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11187");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer11.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        boolean boolean15 = multiBackgroundInitializer11.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        boolean boolean17 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer11.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer11.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer11.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer11.get();
        boolean boolean22 = multiBackgroundInitializer11.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test11188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11188");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer21);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer25 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean26 = multiBackgroundInitializer25.isStarted();
        multiBackgroundInitializer21.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer25);
        boolean boolean28 = multiBackgroundInitializer21.start();
        multiBackgroundInitializer11.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer21);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer21.getFuture();
        java.util.concurrent.ExecutorService executorService31 = multiBackgroundInitializer21.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer21.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer21.get();
        boolean boolean34 = multiBackgroundInitializer21.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer21.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture36 = multiBackgroundInitializer21.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer21.getFuture();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertNull(executorService31);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
    }

    @Test
    public void test11189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11189");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean21 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
    }

    @Test
    public void test11190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11190");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        boolean boolean20 = multiBackgroundInitializer3.isStarted();
        boolean boolean21 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test11191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11191");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        boolean boolean31 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean33 = multiBackgroundInitializer18.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializer18.get();
        boolean boolean35 = multiBackgroundInitializer18.start();
        java.util.concurrent.ExecutorService executorService36 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer18.setExternalExecutor(executorService36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test11192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11192");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        boolean boolean34 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService35 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean36 = multiBackgroundInitializer18.start();
        boolean boolean37 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService38 = multiBackgroundInitializer18.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService39 = multiBackgroundInitializer18.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService41 = multiBackgroundInitializer18.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(executorService35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(executorService38);
        org.junit.Assert.assertNull(executorService39);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNull(executorService41);
    }

    @Test
    public void test11193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11193");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializer18.get();
        boolean boolean31 = multiBackgroundInitializer18.start();
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer18.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        java.lang.Class<?> wildcardClass34 = multiBackgroundInitializerResults33.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test11194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11194");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer13);
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer13.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = null;
        multiBackgroundInitializer13.setExternalExecutor(executorService17);
        java.util.concurrent.ExecutorService executorService19 = null;
        multiBackgroundInitializer13.setExternalExecutor(executorService19);
        boolean boolean21 = multiBackgroundInitializer13.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer13.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture23 = multiBackgroundInitializer13.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture24 = multiBackgroundInitializer13.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture25 = multiBackgroundInitializer13.getFuture();
        boolean boolean26 = multiBackgroundInitializer13.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer13.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture23);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture24);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
    }

    @Test
    public void test11195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11195");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        boolean boolean20 = multiBackgroundInitializerResultsFuture19.isCancelled();
        boolean boolean21 = multiBackgroundInitializerResultsFuture19.isCancelled();
        boolean boolean23 = multiBackgroundInitializerResultsFuture19.cancel(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test11196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11196");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer18.getFuture();
        boolean boolean31 = multiBackgroundInitializer18.start();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService33 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean34 = multiBackgroundInitializer18.isStarted();
        boolean boolean35 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture36 = multiBackgroundInitializer18.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer18.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = multiBackgroundInitializerResults37.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(executorService33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
    }

    @Test
    public void test11197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11197");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture5.isDone();
        boolean boolean7 = multiBackgroundInitializerResultsFuture5.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture5.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture5.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException11 = multiBackgroundInitializerResults9.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
    }

    @Test
    public void test11198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11198");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(executorService15);
    }

    @Test
    public void test11199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11199");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture8.get();
        boolean boolean10 = multiBackgroundInitializerResults9.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = multiBackgroundInitializerResults9.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test11200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11200");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNull(executorService18);
    }

    @Test
    public void test11201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11201");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializer18.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService34 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean35 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture36 = multiBackgroundInitializer18.getFuture();
        boolean boolean37 = multiBackgroundInitializer18.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertNull(executorService34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test11202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11202");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService29 = multiBackgroundInitializer18.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.ExecutorService executorService31 = multiBackgroundInitializer18.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer18.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNull(executorService29);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertNull(executorService31);
        org.junit.Assert.assertNull(executorService32);
    }

    @Test
    public void test11203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11203");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture38 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService42 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture38);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
        org.junit.Assert.assertNull(executorService42);
    }

    @Test
    public void test11204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11204");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializerResults3.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = multiBackgroundInitializerResults3.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test11205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11205");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.isStarted();
        boolean boolean11 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializerResultsFuture12.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test11206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11206");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializer18.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture32 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture33 = multiBackgroundInitializer18.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializer18.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults31);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture33);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults34);
    }

    @Test
    public void test11207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11207");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture24 = multiBackgroundInitializer3.getFuture();
        boolean boolean26 = multiBackgroundInitializerResultsFuture24.cancel(true);
        boolean boolean27 = multiBackgroundInitializerResultsFuture24.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializerResultsFuture24.get();
        boolean boolean29 = multiBackgroundInitializerResults28.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test11208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11208");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test11209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11209");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        boolean boolean11 = multiBackgroundInitializer0.isStarted();
        boolean boolean12 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer0.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
    }

    @Test
    public void test11210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11210");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService3 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService4 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService4);
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(executorService3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(executorService9);
    }

    @Test
    public void test11211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11211");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean5 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean7 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean11 = multiBackgroundInitializerResultsFuture2.cancel(true);
        java.util.concurrent.TimeUnit timeUnit13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializerResultsFuture2.get(10L, timeUnit13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test11212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11212");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean17 = multiBackgroundInitializer3.start();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService20 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
    }

    @Test
    public void test11213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11213");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet19 = multiBackgroundInitializerResults18.initializerNames();
        boolean boolean20 = multiBackgroundInitializerResults18.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer22 = multiBackgroundInitializerResults18.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test11214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11214");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService10 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test11215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11215");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNull(executorService16);
    }

    @Test
    public void test11216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11216");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test11217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11217");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer14.getFuture();
        boolean boolean17 = multiBackgroundInitializer14.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer14.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer14.get();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer14.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer14.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer14.getFuture();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
    }

    @Test
    public void test11218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11218");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture38 = multiBackgroundInitializer36.getFuture();
        boolean boolean39 = multiBackgroundInitializer36.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer36.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializer36.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults42 = multiBackgroundInitializer36.get();
        boolean boolean43 = multiBackgroundInitializer36.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer36.get();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer36);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults46 = multiBackgroundInitializer36.get();
        java.util.concurrent.ExecutorService executorService47 = multiBackgroundInitializer36.getExternalExecutor();
        boolean boolean48 = multiBackgroundInitializer36.start();
        boolean boolean49 = multiBackgroundInitializer36.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults46);
        org.junit.Assert.assertNull(executorService47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test11219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11219");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet40 = multiBackgroundInitializerResults39.initializerNames();
        java.lang.Class<?> wildcardClass41 = multiBackgroundInitializerResults39.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test11220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11220");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.lang.Class<?> wildcardClass16 = multiBackgroundInitializerResults15.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test11221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11221");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        boolean boolean36 = multiBackgroundInitializer0.start();
        boolean boolean37 = multiBackgroundInitializer0.start();
        boolean boolean38 = multiBackgroundInitializer0.start();
        boolean boolean39 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException42 = multiBackgroundInitializerResults40.getException("hi!");
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer44 = multiBackgroundInitializerResults40.getInitializer("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNull(concurrentException42);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer44);
    }

    @Test
    public void test11222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11222");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.start();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        boolean boolean9 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean12 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer0.getFuture();
        boolean boolean14 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(executorService15);
    }

    @Test
    public void test11223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11223");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        java.util.concurrent.ExecutorService executorService9 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService9);
        boolean boolean11 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.TimeUnit timeUnit21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializerResultsFuture19.get((long) 'a', timeUnit21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
    }

    @Test
    public void test11224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11224");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService21 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService22 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture23 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService24 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(executorService21);
        org.junit.Assert.assertNull(executorService22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture23);
    }

    @Test
    public void test11225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11225");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        boolean boolean20 = multiBackgroundInitializerResultsFuture19.isDone();
        boolean boolean21 = multiBackgroundInitializerResultsFuture19.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test11226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11226");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test11227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11227");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        boolean boolean21 = multiBackgroundInitializer3.isStarted();
        boolean boolean22 = multiBackgroundInitializer3.start();
        boolean boolean23 = multiBackgroundInitializer3.isStarted();
        boolean boolean24 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService25 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(executorService25);
    }

    @Test
    public void test11228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11228");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException18 = multiBackgroundInitializerResults16.getException("hi!");
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer20 = multiBackgroundInitializerResults16.getInitializer("hi!");
        java.lang.Object obj22 = multiBackgroundInitializerResults16.getResultObject("hi!");
        boolean boolean23 = multiBackgroundInitializerResults16.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = multiBackgroundInitializerResults16.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNull(concurrentException18);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test11229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11229");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializerResults17.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test11230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11230");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        boolean boolean19 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
    }

    @Test
    public void test11231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11231");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService16 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
    }

    @Test
    public void test11232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11232");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        boolean boolean37 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer0.get();
        boolean boolean39 = multiBackgroundInitializer0.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test11233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11233");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = multiBackgroundInitializerResults16.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test11234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11234");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.lang.Class<?> wildcardClass17 = multiBackgroundInitializer3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test11235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11235");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        boolean boolean13 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer16 = multiBackgroundInitializerResults14.getInitializer("hi!");
        boolean boolean17 = multiBackgroundInitializerResults14.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test11236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11236");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer27.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer27.getExternalExecutor();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean38 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer4.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture41 = multiBackgroundInitializer4.getFuture();
        java.util.concurrent.ExecutorService executorService42 = multiBackgroundInitializer4.getExternalExecutor();
        boolean boolean43 = multiBackgroundInitializer4.isStarted();
        boolean boolean44 = multiBackgroundInitializer4.start();
        boolean boolean45 = multiBackgroundInitializer4.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults46 = multiBackgroundInitializer4.get();
        java.util.concurrent.ExecutorService executorService47 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer4.setExternalExecutor(executorService47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture41);
        org.junit.Assert.assertNull(executorService42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults46);
    }

    @Test
    public void test11237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11237");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture5.isDone();
        boolean boolean7 = multiBackgroundInitializerResultsFuture5.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture5.get();
        boolean boolean10 = multiBackgroundInitializerResultsFuture5.cancel(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test11238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11238");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializerResultsFuture19.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializerResultsFuture19.get();
        boolean boolean22 = multiBackgroundInitializerResultsFuture19.isDone();
        boolean boolean23 = multiBackgroundInitializerResultsFuture19.isDone();
        boolean boolean25 = multiBackgroundInitializerResultsFuture19.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializerResultsFuture19.get();
        boolean boolean28 = multiBackgroundInitializerResultsFuture19.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test11239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11239");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        boolean boolean10 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer0.get();
        boolean boolean12 = multiBackgroundInitializerResults11.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = multiBackgroundInitializerResults11.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test11240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11240");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        boolean boolean11 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test11241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11241");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer11.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        boolean boolean15 = multiBackgroundInitializer11.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        boolean boolean17 = multiBackgroundInitializer7.start();
        boolean boolean18 = multiBackgroundInitializer7.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test11242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11242");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer17 = multiBackgroundInitializerResults15.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
    }

    @Test
    public void test11243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11243");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService19 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
    }

    @Test
    public void test11244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11244");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean7 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.cancel(false);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializerResultsFuture2.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
    }

    @Test
    public void test11245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11245");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        boolean boolean17 = multiBackgroundInitializerResultsFuture16.isCancelled();
        boolean boolean18 = multiBackgroundInitializerResultsFuture16.isCancelled();
        boolean boolean20 = multiBackgroundInitializerResultsFuture16.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test11246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11246");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        java.util.concurrent.ExecutorService executorService18 = null;
        multiBackgroundInitializer11.setExternalExecutor(executorService18);
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer11.getExternalExecutor();
        boolean boolean21 = multiBackgroundInitializer11.start();
        java.util.concurrent.ExecutorService executorService22 = multiBackgroundInitializer11.getExternalExecutor();
        boolean boolean23 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        java.util.concurrent.ExecutorService executorService25 = multiBackgroundInitializer11.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService26 = multiBackgroundInitializer11.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer11.get();
        boolean boolean28 = multiBackgroundInitializer11.start();
        boolean boolean29 = multiBackgroundInitializer11.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(executorService22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(executorService25);
        org.junit.Assert.assertNull(executorService26);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test11247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11247");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.isStarted();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService16 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
    }

    @Test
    public void test11248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11248");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.start();
        boolean boolean8 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        boolean boolean10 = multiBackgroundInitializer0.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test11249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11249");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean5 = multiBackgroundInitializerResultsFuture2.cancel(true);
        boolean boolean7 = multiBackgroundInitializerResultsFuture2.cancel(true);
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test11250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11250");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.lang.Class<?> wildcardClass13 = multiBackgroundInitializer3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test11251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11251");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture8.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializerResultsFuture8.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture8.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
    }

    @Test
    public void test11252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11252");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        java.util.concurrent.ExecutorService executorService18 = null;
        multiBackgroundInitializer11.setExternalExecutor(executorService18);
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer11.getExternalExecutor();
        boolean boolean21 = multiBackgroundInitializer11.start();
        java.util.concurrent.ExecutorService executorService22 = multiBackgroundInitializer11.getExternalExecutor();
        boolean boolean23 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        java.util.concurrent.ExecutorService executorService25 = multiBackgroundInitializer11.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer11.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = multiBackgroundInitializerResults26.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(executorService22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(executorService25);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
    }

    @Test
    public void test11253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11253");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNull(executorService9);
    }

    @Test
    public void test11254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11254");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService22 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNull(executorService22);
    }

    @Test
    public void test11255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11255");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer7.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer7.getFuture();
        boolean boolean13 = multiBackgroundInitializerResultsFuture11.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test11256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11256");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        boolean boolean34 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture35 = multiBackgroundInitializer18.getFuture();
        boolean boolean36 = multiBackgroundInitializerResultsFuture35.isCancelled();
        boolean boolean37 = multiBackgroundInitializerResultsFuture35.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test11257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11257");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        boolean boolean13 = multiBackgroundInitializerResults11.isSuccessful();
        java.lang.Object obj15 = multiBackgroundInitializerResults11.getResultObject("hi!");
        boolean boolean17 = multiBackgroundInitializerResults11.isException("hi!");
        boolean boolean18 = multiBackgroundInitializerResults11.isSuccessful();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer20 = multiBackgroundInitializerResults11.getInitializer("hi!");
        boolean boolean21 = multiBackgroundInitializerResults11.isSuccessful();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException23 = multiBackgroundInitializerResults11.getException("hi!");
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException25 = multiBackgroundInitializerResults11.getException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(concurrentException23);
        org.junit.Assert.assertNull(concurrentException25);
    }

    @Test
    public void test11258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11258");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test11259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11259");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer35 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean36 = multiBackgroundInitializer35.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer38 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean39 = multiBackgroundInitializer38.isStarted();
        multiBackgroundInitializer35.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer38);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer42 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean43 = multiBackgroundInitializer42.isStarted();
        multiBackgroundInitializer38.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer42);
        java.util.concurrent.ExecutorService executorService45 = null;
        multiBackgroundInitializer38.setExternalExecutor(executorService45);
        java.util.concurrent.ExecutorService executorService47 = multiBackgroundInitializer38.getExternalExecutor();
        boolean boolean48 = multiBackgroundInitializer38.start();
        boolean boolean49 = multiBackgroundInitializer38.isStarted();
        boolean boolean50 = multiBackgroundInitializer38.start();
        java.util.concurrent.ExecutorService executorService51 = multiBackgroundInitializer38.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService52 = multiBackgroundInitializer38.getExternalExecutor();
        boolean boolean53 = multiBackgroundInitializer38.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults54 = multiBackgroundInitializer38.get();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer38);
        java.util.concurrent.ExecutorService executorService56 = multiBackgroundInitializer38.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService57 = multiBackgroundInitializer38.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults58 = multiBackgroundInitializer38.get();
        boolean boolean59 = multiBackgroundInitializer38.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture60 = multiBackgroundInitializer38.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(executorService47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(executorService51);
        org.junit.Assert.assertNull(executorService52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults54);
        org.junit.Assert.assertNull(executorService56);
        org.junit.Assert.assertNull(executorService57);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture60);
    }

    @Test
    public void test11260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11260");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer0.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
    }

    @Test
    public void test11261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11261");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        boolean boolean19 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        multiBackgroundInitializer21.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
        boolean boolean27 = multiBackgroundInitializer21.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        multiBackgroundInitializer29.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer39 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean40 = multiBackgroundInitializer39.isStarted();
        multiBackgroundInitializer36.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer39);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer43 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean44 = multiBackgroundInitializer43.isStarted();
        multiBackgroundInitializer39.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer43);
        boolean boolean46 = multiBackgroundInitializer39.start();
        multiBackgroundInitializer29.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer39);
        multiBackgroundInitializer21.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer39);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults49 = multiBackgroundInitializer39.get();
        boolean boolean50 = multiBackgroundInitializer39.isStarted();
        boolean boolean51 = multiBackgroundInitializer39.start();
        boolean boolean52 = multiBackgroundInitializer39.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults53 = multiBackgroundInitializer39.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults54 = multiBackgroundInitializer39.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults53);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults54);
    }

    @Test
    public void test11262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11262");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        boolean boolean36 = multiBackgroundInitializer0.start();
        boolean boolean37 = multiBackgroundInitializer0.start();
        boolean boolean38 = multiBackgroundInitializer0.isStarted();
        boolean boolean39 = multiBackgroundInitializer0.start();
        boolean boolean40 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture41 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture42 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService43 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture44 = multiBackgroundInitializer0.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture41);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture42);
        org.junit.Assert.assertNull(executorService43);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture44);
    }

    @Test
    public void test11263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11263");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        boolean boolean19 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test11264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11264");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializerResultsFuture5.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture5.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test11265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11265");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        boolean boolean12 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test11266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11266");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.ExecutorService executorService26 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService26);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        multiBackgroundInitializer29.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.isStarted();
        multiBackgroundInitializer32.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer36);
        java.util.concurrent.ExecutorService executorService39 = null;
        multiBackgroundInitializer32.setExternalExecutor(executorService39);
        java.util.concurrent.ExecutorService executorService41 = multiBackgroundInitializer32.getExternalExecutor();
        boolean boolean42 = multiBackgroundInitializer32.start();
        boolean boolean43 = multiBackgroundInitializer32.start();
        boolean boolean44 = multiBackgroundInitializer32.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture45 = multiBackgroundInitializer32.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults46 = multiBackgroundInitializer32.get();
        multiBackgroundInitializer7.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults48 = multiBackgroundInitializer32.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture49 = multiBackgroundInitializer32.getFuture();
        java.lang.Class<?> wildcardClass50 = multiBackgroundInitializerResultsFuture49.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(executorService41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture45);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults46);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults48);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test11267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11267");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
    }

    @Test
    public void test11268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11268");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        boolean boolean19 = multiBackgroundInitializerResultsFuture18.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializerResultsFuture18.get();
        boolean boolean21 = multiBackgroundInitializerResultsFuture18.isDone();
        java.util.concurrent.TimeUnit timeUnit23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults24 = multiBackgroundInitializerResultsFuture18.get(0L, timeUnit23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test11269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11269");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        boolean boolean20 = multiBackgroundInitializer10.start();
        boolean boolean21 = multiBackgroundInitializer10.start();
        boolean boolean22 = multiBackgroundInitializer10.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer10.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture24 = multiBackgroundInitializer10.getFuture();
        boolean boolean25 = multiBackgroundInitializer10.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer10.get();
        boolean boolean27 = multiBackgroundInitializerResults26.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test11270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11270");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        boolean boolean31 = multiBackgroundInitializer18.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer36 = multiBackgroundInitializerResults34.getInitializer("hi!");
        java.lang.Object obj38 = multiBackgroundInitializerResults34.getResultObject("hi!");
        boolean boolean39 = multiBackgroundInitializerResults34.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = multiBackgroundInitializerResults34.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults34);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test11271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11271");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet39 = multiBackgroundInitializerResults38.initializerNames();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer41 = multiBackgroundInitializerResults38.getInitializer("");
        java.lang.Class<?> wildcardClass42 = multiBackgroundInitializerResults38.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test11272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11272");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean5 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean7 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.isCancelled();
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture2.get((long) (short) 100, timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test11273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11273");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        boolean boolean9 = multiBackgroundInitializer0.isStarted();
        boolean boolean10 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer0.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
    }

    @Test
    public void test11274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11274");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService34);
        boolean boolean36 = multiBackgroundInitializer23.start();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer23.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture38 = multiBackgroundInitializer23.getFuture();
        boolean boolean40 = multiBackgroundInitializerResultsFuture38.cancel(true);
        boolean boolean42 = multiBackgroundInitializerResultsFuture38.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test11275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11275");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer27.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer27.getExternalExecutor();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean38 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer4.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture41 = multiBackgroundInitializer4.getFuture();
        java.util.concurrent.ExecutorService executorService42 = multiBackgroundInitializer4.getExternalExecutor();
        boolean boolean43 = multiBackgroundInitializer4.isStarted();
        java.util.concurrent.ExecutorService executorService44 = multiBackgroundInitializer4.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture41);
        org.junit.Assert.assertNull(executorService42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(executorService44);
    }

    @Test
    public void test11276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11276");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializer18.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean33 = multiBackgroundInitializer18.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test11277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11277");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        boolean boolean9 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException14 = multiBackgroundInitializerResults12.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
    }

    @Test
    public void test11278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11278");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test11279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11279");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.start();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService8 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test11280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11280");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        java.util.concurrent.ExecutorService executorService18 = null;
        multiBackgroundInitializer11.setExternalExecutor(executorService18);
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer11.getExternalExecutor();
        boolean boolean21 = multiBackgroundInitializer11.start();
        java.util.concurrent.ExecutorService executorService22 = multiBackgroundInitializer11.getExternalExecutor();
        boolean boolean23 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        boolean boolean25 = multiBackgroundInitializer11.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture26 = multiBackgroundInitializer11.getFuture();
        boolean boolean27 = multiBackgroundInitializer11.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture28 = multiBackgroundInitializer11.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults29 = multiBackgroundInitializer11.get();
        boolean boolean30 = multiBackgroundInitializerResults29.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(executorService22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture28);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test11281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11281");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNull(executorService7);
    }

    @Test
    public void test11282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11282");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer10.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer10.get();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer10.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer10.getFuture();
        boolean boolean16 = multiBackgroundInitializer10.isStarted();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer10.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer10.start();
        boolean boolean19 = multiBackgroundInitializer10.start();
        boolean boolean20 = multiBackgroundInitializer10.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test11283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11283");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean6 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean7 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean10 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean12 = multiBackgroundInitializerResultsFuture2.cancel(false);
        java.util.concurrent.TimeUnit timeUnit14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializerResultsFuture2.get(0L, timeUnit14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test11284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11284");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializerResultsFuture11.get();
        java.util.Set<java.lang.String> strSet13 = multiBackgroundInitializerResults12.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = multiBackgroundInitializerResults12.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test11285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11285");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService20 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNull(executorService19);
    }

    @Test
    public void test11286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11286");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.isStarted();
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer14 = multiBackgroundInitializerResults12.getInitializer("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer14);
    }

    @Test
    public void test11287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11287");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture38 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer0.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture38);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
    }

    @Test
    public void test11288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11288");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        boolean boolean16 = multiBackgroundInitializer3.start();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService19 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
    }

    @Test
    public void test11289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11289");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.isStarted();
        boolean boolean11 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test11290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11290");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService7);
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer0.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNull(executorService12);
    }

    @Test
    public void test11291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11291");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        boolean boolean14 = multiBackgroundInitializerResults13.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer16 = multiBackgroundInitializerResults13.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test11292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11292");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        boolean boolean9 = multiBackgroundInitializerResults8.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test11293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11293");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        boolean boolean9 = multiBackgroundInitializerResults8.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test11294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11294");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
    }

    @Test
    public void test11295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11295");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializerResultsFuture13.cancel(true);
        boolean boolean16 = multiBackgroundInitializerResultsFuture13.isCancelled();
        boolean boolean18 = multiBackgroundInitializerResultsFuture13.cancel(false);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializerResultsFuture13.get();
        boolean boolean20 = multiBackgroundInitializerResultsFuture13.isDone();
        java.lang.Class<?> wildcardClass21 = multiBackgroundInitializerResultsFuture13.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test11296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11296");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService20 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
    }

    @Test
    public void test11297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11297");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        boolean boolean8 = multiBackgroundInitializerResults7.isSuccessful();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults7.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test11298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11298");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
    }

    @Test
    public void test11299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11299");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializerResultsFuture20.get();
        boolean boolean22 = multiBackgroundInitializerResultsFuture20.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test11300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11300");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.cancel(true);
        boolean boolean6 = multiBackgroundInitializerResultsFuture2.cancel(true);
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test11301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11301");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService21 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
        org.junit.Assert.assertNull(executorService21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
    }

    @Test
    public void test11302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11302");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test11303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11303");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        boolean boolean11 = multiBackgroundInitializer3.start();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test11304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11304");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        java.lang.Object obj38 = multiBackgroundInitializerResults36.getResultObject("");
        java.util.Set<java.lang.String> strSet39 = multiBackgroundInitializerResults36.initializerNames();
        boolean boolean40 = multiBackgroundInitializerResults36.isSuccessful();
        java.util.Set<java.lang.String> strSet41 = multiBackgroundInitializerResults36.initializerNames();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException43 = multiBackgroundInitializerResults36.getException("hi!");
        boolean boolean45 = multiBackgroundInitializerResults36.isException("");
        java.util.Set<java.lang.String> strSet46 = multiBackgroundInitializerResults36.initializerNames();
        java.lang.Class<?> wildcardClass47 = strSet46.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNull(concurrentException43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test11305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11305");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        boolean boolean11 = multiBackgroundInitializerResults10.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = multiBackgroundInitializerResults10.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test11306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11306");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer23.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer23.get();
        boolean boolean37 = multiBackgroundInitializerResults35.isException("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException39 = multiBackgroundInitializerResults35.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test11307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11307");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer3.getFuture();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test11308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11308");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture26 = multiBackgroundInitializer14.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer14.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture28 = multiBackgroundInitializer14.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture26);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture28);
    }

    @Test
    public void test11309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11309");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService3 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = multiBackgroundInitializerResults5.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(executorService3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test11310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11310");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer12 = multiBackgroundInitializerResults10.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
    }

    @Test
    public void test11311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11311");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer0.start();
        boolean boolean10 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer0.get();
        boolean boolean12 = multiBackgroundInitializerResults11.isSuccessful();
        java.util.Set<java.lang.String> strSet13 = multiBackgroundInitializerResults11.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test11312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11312");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer20 = multiBackgroundInitializerResults18.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
    }

    @Test
    public void test11313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11313");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer10.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer10.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializer10.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer10.get();
        java.util.concurrent.ExecutorService executorService24 = multiBackgroundInitializer10.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService25 = multiBackgroundInitializer10.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNull(executorService24);
        org.junit.Assert.assertNull(executorService25);
    }

    @Test
    public void test11314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11314");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.start();
        boolean boolean9 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer0.get();
        boolean boolean12 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test11315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11315");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.start();
        boolean boolean7 = multiBackgroundInitializer0.start();
        boolean boolean8 = multiBackgroundInitializer0.start();
        boolean boolean9 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        boolean boolean11 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test11316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11316");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        boolean boolean11 = multiBackgroundInitializerResults9.isException("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException13 = multiBackgroundInitializerResults9.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test11317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11317");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        boolean boolean21 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer24 = multiBackgroundInitializerResults22.getInitializer("hi!");
        boolean boolean25 = multiBackgroundInitializerResults22.isSuccessful();
        java.lang.Object obj27 = multiBackgroundInitializerResults22.getResultObject("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test11318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11318");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService6 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService6);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test11319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11319");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.cancel(false);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture2.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException11 = multiBackgroundInitializerResults9.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
    }

    @Test
    public void test11320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11320");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        boolean boolean13 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService17 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test11321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11321");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test11322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11322");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        boolean boolean21 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer3.getFuture();
        boolean boolean23 = multiBackgroundInitializerResultsFuture22.isDone();
        java.util.concurrent.TimeUnit timeUnit25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializerResultsFuture22.get((long) (short) 0, timeUnit25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test11323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11323");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = multiBackgroundInitializerResults6.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test11324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11324");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
    }

    @Test
    public void test11325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11325");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.Set<java.lang.String> strSet13 = multiBackgroundInitializerResults11.initializerNames();
        java.util.Set<java.lang.String> strSet14 = multiBackgroundInitializerResults11.initializerNames();
        java.lang.Object obj16 = multiBackgroundInitializerResults11.getResultObject("hi!");
        java.util.Set<java.lang.String> strSet17 = multiBackgroundInitializerResults11.initializerNames();
        boolean boolean18 = multiBackgroundInitializerResults11.isSuccessful();
        java.lang.Object obj20 = multiBackgroundInitializerResults11.getResultObject("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test11326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11326");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer10.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer10.get();
        boolean boolean22 = multiBackgroundInitializer10.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture23 = multiBackgroundInitializer10.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults24 = multiBackgroundInitializer10.get();
        java.util.concurrent.ExecutorService executorService25 = multiBackgroundInitializer10.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture26 = multiBackgroundInitializer10.getFuture();
        boolean boolean27 = multiBackgroundInitializer10.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture23);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults24);
        org.junit.Assert.assertNull(executorService25);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test11327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11327");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = multiBackgroundInitializerResults12.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
    }

    @Test
    public void test11328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11328");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        boolean boolean16 = multiBackgroundInitializerResultsFuture15.isCancelled();
        boolean boolean17 = multiBackgroundInitializerResultsFuture15.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test11329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11329");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        boolean boolean17 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        java.lang.Class<?> wildcardClass19 = multiBackgroundInitializerResults18.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test11330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11330");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        boolean boolean21 = multiBackgroundInitializerResultsFuture19.cancel(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test11331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11331");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException13 = multiBackgroundInitializerResults11.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
    }

    @Test
    public void test11332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11332");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
    }

    @Test
    public void test11333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11333");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializerResultsFuture13.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test11334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11334");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet13 = multiBackgroundInitializerResults12.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test11335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11335");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        boolean boolean20 = multiBackgroundInitializerResultsFuture19.isCancelled();
        boolean boolean22 = multiBackgroundInitializerResultsFuture19.cancel(false);
        boolean boolean24 = multiBackgroundInitializerResultsFuture19.cancel(false);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializerResultsFuture19.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializerResultsFuture19.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer28 = multiBackgroundInitializerResults26.getInitializer("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer28);
    }

    @Test
    public void test11336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11336");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer10.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer10.get();
        boolean boolean22 = multiBackgroundInitializer10.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer10.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture24 = multiBackgroundInitializer10.getFuture();
        boolean boolean25 = multiBackgroundInitializer10.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture26 = multiBackgroundInitializer10.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer10.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture26);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
    }

    @Test
    public void test11337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11337");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        boolean boolean16 = multiBackgroundInitializerResults14.isException("hi!");
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException18 = multiBackgroundInitializerResults14.getException("hi!");
        boolean boolean19 = multiBackgroundInitializerResults14.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(concurrentException18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test11338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11338");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer14.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture27 = multiBackgroundInitializer14.getFuture();
        boolean boolean28 = multiBackgroundInitializerResultsFuture27.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test11339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11339");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test11340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11340");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException12 = multiBackgroundInitializerResults10.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
    }

    @Test
    public void test11341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11341");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer3.getFuture();
        boolean boolean8 = multiBackgroundInitializerResultsFuture7.isDone();
        boolean boolean9 = multiBackgroundInitializerResultsFuture7.isCancelled();
        boolean boolean10 = multiBackgroundInitializerResultsFuture7.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture7.get();
        boolean boolean12 = multiBackgroundInitializerResultsFuture7.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializerResultsFuture7.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer15 = multiBackgroundInitializerResults13.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
    }

    @Test
    public void test11342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11342");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer3.getFuture();
        boolean boolean9 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
    }

    @Test
    public void test11343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11343");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        boolean boolean10 = multiBackgroundInitializer0.start();
        boolean boolean11 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        boolean boolean13 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = multiBackgroundInitializerResults15.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
    }

    @Test
    public void test11344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11344");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        boolean boolean9 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test11345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11345");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
    }

    @Test
    public void test11346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11346");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer3.getFuture();
        boolean boolean22 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test11347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11347");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test11348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11348");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService13 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService13);
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test11349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11349");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = multiBackgroundInitializerResults11.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
    }

    @Test
    public void test11350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11350");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        boolean boolean17 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException20 = multiBackgroundInitializerResults18.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
    }

    @Test
    public void test11351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11351");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        java.util.concurrent.ExecutorService executorService9 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService9);
        boolean boolean11 = multiBackgroundInitializer3.start();
        boolean boolean12 = multiBackgroundInitializer3.start();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNull(executorService16);
    }

    @Test
    public void test11352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11352");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializerResultsFuture15.get();
        boolean boolean18 = multiBackgroundInitializerResultsFuture15.cancel(false);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializerResultsFuture15.get();
        java.util.concurrent.TimeUnit timeUnit21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializerResultsFuture15.get(10L, timeUnit21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
    }

    @Test
    public void test11353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11353");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = multiBackgroundInitializerResults7.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test11354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11354");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
    }

    @Test
    public void test11355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11355");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        boolean boolean17 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
    }

    @Test
    public void test11356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11356");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.isStarted();
        boolean boolean8 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer3.getFuture();
        boolean boolean10 = multiBackgroundInitializerResultsFuture9.isCancelled();
        boolean boolean11 = multiBackgroundInitializerResultsFuture9.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test11357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11357");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet17 = multiBackgroundInitializerResults16.initializerNames();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException19 = multiBackgroundInitializerResults16.getException("hi!");
        java.lang.Object obj21 = multiBackgroundInitializerResults16.getResultObject("hi!");
        boolean boolean22 = multiBackgroundInitializerResults16.isSuccessful();
        boolean boolean23 = multiBackgroundInitializerResults16.isSuccessful();
        java.lang.Object obj25 = multiBackgroundInitializerResults16.getResultObject("hi!");
        java.util.Set<java.lang.String> strSet26 = multiBackgroundInitializerResults16.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(concurrentException19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test11358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11358");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        boolean boolean19 = multiBackgroundInitializer3.isStarted();
        java.lang.Class<?> wildcardClass20 = multiBackgroundInitializer3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test11359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11359");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        boolean boolean18 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test11360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11360");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException16 = multiBackgroundInitializerResults14.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
    }

    @Test
    public void test11361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11361");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer14.getFuture();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean24 = multiBackgroundInitializer14.isStarted();
        boolean boolean25 = multiBackgroundInitializer14.start();
        boolean boolean26 = multiBackgroundInitializer14.start();
        boolean boolean27 = multiBackgroundInitializer14.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture28 = multiBackgroundInitializer14.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture28);
    }

    @Test
    public void test11362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11362");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializerResults6.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer9 = multiBackgroundInitializerResults6.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test11363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11363");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        boolean boolean16 = multiBackgroundInitializer3.start();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
    }

    @Test
    public void test11364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11364");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        boolean boolean36 = multiBackgroundInitializer0.start();
        boolean boolean37 = multiBackgroundInitializer0.start();
        boolean boolean38 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture39 = multiBackgroundInitializer0.getFuture();
        boolean boolean40 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture42 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.TimeUnit timeUnit44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults45 = multiBackgroundInitializerResultsFuture42.get((long) 1, timeUnit44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture42);
    }

    @Test
    public void test11365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11365");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        boolean boolean7 = multiBackgroundInitializer3.start();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        java.lang.Class<?> wildcardClass11 = multiBackgroundInitializerResultsFuture10.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test11366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11366");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer22 = multiBackgroundInitializerResults20.getInitializer("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer22);
    }

    @Test
    public void test11367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11367");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer18 = multiBackgroundInitializerResults16.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test11368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11368");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer35 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean36 = multiBackgroundInitializer35.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer35.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer35.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture39 = multiBackgroundInitializer35.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer35.get();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer35);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults42 = multiBackgroundInitializer35.get();
        boolean boolean43 = multiBackgroundInitializer35.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture44 = multiBackgroundInitializer35.getFuture();
        java.util.concurrent.ExecutorService executorService45 = multiBackgroundInitializer35.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults46 = multiBackgroundInitializer35.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer35.get();
        java.util.Set<java.lang.String> strSet48 = multiBackgroundInitializerResults47.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture39);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture44);
        org.junit.Assert.assertNull(executorService45);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults46);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertNotNull(strSet48);
    }

    @Test
    public void test11369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11369");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        java.util.concurrent.ExecutorService executorService9 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService9);
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
    }

    @Test
    public void test11370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11370");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        boolean boolean15 = multiBackgroundInitializerResults14.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test11371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11371");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(executorService8);
    }

    @Test
    public void test11372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11372");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer3.getFuture();
        boolean boolean22 = multiBackgroundInitializer3.start();
        java.lang.Class<?> wildcardClass23 = multiBackgroundInitializer3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test11373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11373");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test11374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11374");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test11375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11375");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        boolean boolean20 = multiBackgroundInitializerResultsFuture19.isDone();
        boolean boolean21 = multiBackgroundInitializerResultsFuture19.isDone();
        boolean boolean22 = multiBackgroundInitializerResultsFuture19.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test11376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11376");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
    }

    @Test
    public void test11377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11377");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
    }

    @Test
    public void test11378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11378");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer18.getFuture();
        boolean boolean31 = multiBackgroundInitializer18.start();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService33 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean34 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService35 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean36 = multiBackgroundInitializer18.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(executorService33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(executorService35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test11379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11379");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        boolean boolean20 = multiBackgroundInitializerResultsFuture19.isDone();
        boolean boolean21 = multiBackgroundInitializerResultsFuture19.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializerResultsFuture19.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
    }

    @Test
    public void test11380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11380");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializerResultsFuture31.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializerResultsFuture31.get();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException35 = multiBackgroundInitializerResults33.getException("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException37 = multiBackgroundInitializerResults33.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertNull(concurrentException35);
    }

    @Test
    public void test11381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11381");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        boolean boolean4 = multiBackgroundInitializerResultsFuture3.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture3.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = multiBackgroundInitializerResults5.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test11382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11382");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializerResultsFuture14.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializerResultsFuture14.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializerResultsFuture14.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = multiBackgroundInitializerResults17.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
    }

    @Test
    public void test11383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11383");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        boolean boolean8 = multiBackgroundInitializerResultsFuture7.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture7.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
    }

    @Test
    public void test11384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11384");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test11385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11385");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertNull(executorService19);
    }

    @Test
    public void test11386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11386");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        boolean boolean20 = multiBackgroundInitializerResults19.isSuccessful();
        java.lang.Object obj22 = multiBackgroundInitializerResults19.getResultObject("hi!");
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException24 = multiBackgroundInitializerResults19.getException("hi!");
        java.util.Set<java.lang.String> strSet25 = multiBackgroundInitializerResults19.initializerNames();
        boolean boolean26 = multiBackgroundInitializerResults19.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNull(concurrentException24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test11387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11387");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        boolean boolean19 = multiBackgroundInitializer3.isStarted();
        boolean boolean20 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService21 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService22 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(executorService21);
        org.junit.Assert.assertNull(executorService22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
    }

    @Test
    public void test11388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11388");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        boolean boolean11 = multiBackgroundInitializerResults10.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test11389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11389");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer0.getFuture();
        boolean boolean11 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        boolean boolean13 = multiBackgroundInitializer0.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test11390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11390");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializerResultsFuture14.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test11391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11391");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.TimeUnit timeUnit19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializerResultsFuture17.get(10L, timeUnit19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
    }

    @Test
    public void test11392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11392");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        boolean boolean19 = multiBackgroundInitializer3.start();
        boolean boolean20 = multiBackgroundInitializer3.start();
        boolean boolean21 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
    }

    @Test
    public void test11393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11393");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test11394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11394");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test11395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11395");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean16 = multiBackgroundInitializerResultsFuture14.cancel(false);
        boolean boolean17 = multiBackgroundInitializerResultsFuture14.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test11396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11396");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        boolean boolean9 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test11397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11397");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        boolean boolean19 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        multiBackgroundInitializer21.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer28 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean29 = multiBackgroundInitializer28.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer28);
        boolean boolean31 = multiBackgroundInitializer24.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer24.get();
        java.util.concurrent.ExecutorService executorService33 = multiBackgroundInitializer24.getExternalExecutor();
        boolean boolean34 = multiBackgroundInitializer24.isStarted();
        java.util.concurrent.ExecutorService executorService35 = multiBackgroundInitializer24.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNull(executorService33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(executorService35);
    }

    @Test
    public void test11398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11398");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        boolean boolean33 = multiBackgroundInitializer18.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test11399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11399");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer14.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer14.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture28 = multiBackgroundInitializer14.getFuture();
        boolean boolean29 = multiBackgroundInitializer14.isStarted();
        java.util.concurrent.ExecutorService executorService30 = multiBackgroundInitializer14.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(executorService30);
    }

    @Test
    public void test11400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11400");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService11 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test11401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11401");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean11 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(executorService12);
    }

    @Test
    public void test11402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11402");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
    }

    @Test
    public void test11403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11403");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService34);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer37 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean38 = multiBackgroundInitializer37.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer40 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean41 = multiBackgroundInitializer40.isStarted();
        multiBackgroundInitializer37.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer40);
        boolean boolean43 = multiBackgroundInitializer40.isStarted();
        boolean boolean44 = multiBackgroundInitializer40.start();
        java.util.concurrent.ExecutorService executorService45 = multiBackgroundInitializer40.getExternalExecutor();
        boolean boolean46 = multiBackgroundInitializer40.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture47 = multiBackgroundInitializer40.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture48 = multiBackgroundInitializer40.getFuture();
        boolean boolean49 = multiBackgroundInitializer40.isStarted();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer40);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture51 = multiBackgroundInitializer40.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults52 = multiBackgroundInitializerResultsFuture51.get();
        java.util.concurrent.TimeUnit timeUnit54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults55 = multiBackgroundInitializerResultsFuture51.get((long) (short) 1, timeUnit54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(executorService45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture47);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture51);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults52);
    }

    @Test
    public void test11404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11404");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        boolean boolean19 = multiBackgroundInitializer15.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer15.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException22 = multiBackgroundInitializerResults20.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
    }

    @Test
    public void test11405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11405");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        boolean boolean31 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer18.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture33 = multiBackgroundInitializer18.getFuture();
        boolean boolean34 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer18.get();
        boolean boolean36 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException39 = multiBackgroundInitializerResults37.getException("hi!");
        java.util.Set<java.lang.String> strSet40 = multiBackgroundInitializerResults37.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertNull(concurrentException39);
        org.junit.Assert.assertNotNull(strSet40);
    }

    @Test
    public void test11406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11406");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        boolean boolean20 = multiBackgroundInitializer3.isStarted();
        boolean boolean21 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean27 = multiBackgroundInitializer26.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer30 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean31 = multiBackgroundInitializer30.isStarted();
        multiBackgroundInitializer26.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer30);
        java.util.concurrent.ExecutorService executorService33 = null;
        multiBackgroundInitializer26.setExternalExecutor(executorService33);
        java.util.concurrent.ExecutorService executorService35 = multiBackgroundInitializer26.getExternalExecutor();
        boolean boolean36 = multiBackgroundInitializer26.start();
        boolean boolean37 = multiBackgroundInitializer26.isStarted();
        boolean boolean38 = multiBackgroundInitializer26.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer26.get();
        boolean boolean40 = multiBackgroundInitializer26.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(executorService35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test11407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11407");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        java.lang.Class<?> wildcardClass21 = multiBackgroundInitializerResults20.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test11408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11408");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        boolean boolean19 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test11409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11409");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        boolean boolean19 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService21 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean22 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer35 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean36 = multiBackgroundInitializer35.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer35.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer35.get();
        boolean boolean39 = multiBackgroundInitializer35.start();
        multiBackgroundInitializer31.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer35);
        boolean boolean41 = multiBackgroundInitializer35.isStarted();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer35);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer35.get();
        boolean boolean44 = multiBackgroundInitializer35.start();
        java.util.concurrent.ExecutorService executorService45 = multiBackgroundInitializer35.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService46 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer35.setExternalExecutor(executorService46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNull(executorService21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(executorService45);
    }

    @Test
    public void test11410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11410");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        boolean boolean19 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test11411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11411");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        boolean boolean12 = multiBackgroundInitializerResultsFuture10.cancel(false);
        boolean boolean13 = multiBackgroundInitializerResultsFuture10.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializerResultsFuture10.get();
        java.util.concurrent.TimeUnit timeUnit16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializerResultsFuture10.get((long) 0, timeUnit16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
    }

    @Test
    public void test11412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11412");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer0.getFuture();
        boolean boolean12 = multiBackgroundInitializerResultsFuture11.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test11413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11413");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.TimeUnit timeUnit12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializerResultsFuture10.get((long) ' ', timeUnit12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
    }

    @Test
    public void test11414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11414");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture34 = multiBackgroundInitializer18.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture34);
    }

    @Test
    public void test11415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11415");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.lang.Object obj17 = multiBackgroundInitializerResults15.getResultObject("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(obj17);
    }

    @Test
    public void test11416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11416");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        boolean boolean19 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        boolean boolean21 = multiBackgroundInitializer3.isStarted();
        boolean boolean22 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(executorService23);
    }

    @Test
    public void test11417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11417");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        boolean boolean17 = multiBackgroundInitializerResultsFuture15.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializerResultsFuture15.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
    }

    @Test
    public void test11418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11418");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        boolean boolean19 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService21 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean22 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        boolean boolean34 = multiBackgroundInitializer27.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer27.get();
        boolean boolean36 = multiBackgroundInitializer27.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer27.get();
        boolean boolean38 = multiBackgroundInitializer27.start();
        boolean boolean39 = multiBackgroundInitializer27.isStarted();
        boolean boolean40 = multiBackgroundInitializer27.start();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService42 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService42);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer45 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean46 = multiBackgroundInitializer45.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer48 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean49 = multiBackgroundInitializer48.isStarted();
        multiBackgroundInitializer45.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer48);
        boolean boolean51 = multiBackgroundInitializer48.start();
        boolean boolean52 = multiBackgroundInitializer48.start();
        boolean boolean53 = multiBackgroundInitializer48.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults54 = multiBackgroundInitializer48.get();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer48);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer57 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean58 = multiBackgroundInitializer57.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer60 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean61 = multiBackgroundInitializer60.isStarted();
        multiBackgroundInitializer57.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer60);
        java.util.concurrent.ExecutorService executorService63 = multiBackgroundInitializer60.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService64 = multiBackgroundInitializer60.getExternalExecutor();
        boolean boolean65 = multiBackgroundInitializer60.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults66 = multiBackgroundInitializer60.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults67 = multiBackgroundInitializer60.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults68 = multiBackgroundInitializer60.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture69 = multiBackgroundInitializer60.getFuture();
        boolean boolean70 = multiBackgroundInitializer60.isStarted();
        java.util.concurrent.ExecutorService executorService71 = multiBackgroundInitializer60.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService72 = multiBackgroundInitializer60.getExternalExecutor();
        boolean boolean73 = multiBackgroundInitializer60.start();
        boolean boolean74 = multiBackgroundInitializer60.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture75 = multiBackgroundInitializer60.getFuture();
        java.util.concurrent.ExecutorService executorService76 = multiBackgroundInitializer60.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer48.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNull(executorService21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(executorService63);
        org.junit.Assert.assertNull(executorService64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults66);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults67);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults68);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(executorService71);
        org.junit.Assert.assertNull(executorService72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture75);
        org.junit.Assert.assertNull(executorService76);
    }

    @Test
    public void test11419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11419");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer16 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean17 = multiBackgroundInitializer16.isStarted();
        multiBackgroundInitializer13.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer16);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        multiBackgroundInitializer16.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer20);
        java.util.concurrent.ExecutorService executorService23 = null;
        multiBackgroundInitializer16.setExternalExecutor(executorService23);
        java.util.concurrent.ExecutorService executorService25 = multiBackgroundInitializer16.getExternalExecutor();
        boolean boolean26 = multiBackgroundInitializer16.start();
        boolean boolean27 = multiBackgroundInitializer16.start();
        boolean boolean28 = multiBackgroundInitializer16.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults29 = multiBackgroundInitializer16.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializer16.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializer16.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture32 = multiBackgroundInitializer16.getFuture();
        java.util.concurrent.ExecutorService executorService33 = multiBackgroundInitializer16.getExternalExecutor();
        boolean boolean34 = multiBackgroundInitializer16.start();
        boolean boolean35 = multiBackgroundInitializer16.start();
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer16.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer16.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(executorService25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults29);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults31);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture32);
        org.junit.Assert.assertNull(executorService33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertNull(executorService37);
    }

    @Test
    public void test11420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11420");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        boolean boolean8 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.TimeUnit timeUnit11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializerResultsFuture9.get((long) (byte) 1, timeUnit11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
    }

    @Test
    public void test11421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11421");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializer18.get();
        boolean boolean31 = multiBackgroundInitializer18.start();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService33 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer18.setExternalExecutor(executorService33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test11422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11422");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        boolean boolean8 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer0.getFuture();
        boolean boolean12 = multiBackgroundInitializerResultsFuture11.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test11423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11423");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.lang.Class<?> wildcardClass17 = multiBackgroundInitializerResults16.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test11424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11424");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        boolean boolean36 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer0.get();
        boolean boolean40 = multiBackgroundInitializerResults38.isException("");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test11425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11425");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer12.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer15.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService19 = null;
        multiBackgroundInitializer15.setExternalExecutor(executorService19);
        boolean boolean21 = multiBackgroundInitializer15.start();
        boolean boolean22 = multiBackgroundInitializer15.start();
        multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults24 = multiBackgroundInitializer15.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer15.get();
        boolean boolean26 = multiBackgroundInitializer15.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults24);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test11426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11426");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet13 = multiBackgroundInitializerResults12.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test11427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11427");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet21 = multiBackgroundInitializerResults20.initializerNames();
        java.util.Set<java.lang.String> strSet22 = multiBackgroundInitializerResults20.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test11428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11428");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializerResultsFuture16.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
    }

    @Test
    public void test11429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11429");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer14 = multiBackgroundInitializerResults12.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
    }

    @Test
    public void test11430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11430");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.start();
        boolean boolean7 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer0.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
    }

    @Test
    public void test11431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11431");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializerResultsFuture14.isCancelled();
        boolean boolean16 = multiBackgroundInitializerResultsFuture14.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializerResultsFuture14.get();
        java.util.Set<java.lang.String> strSet18 = multiBackgroundInitializerResults17.initializerNames();
        boolean boolean20 = multiBackgroundInitializerResults17.isException("hi!");
        java.lang.Object obj22 = multiBackgroundInitializerResults17.getResultObject("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test11432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11432");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer25 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean26 = multiBackgroundInitializer25.isStarted();
        multiBackgroundInitializer22.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer25);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        multiBackgroundInitializer29.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.isStarted();
        multiBackgroundInitializer32.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer36);
        boolean boolean39 = multiBackgroundInitializer32.start();
        multiBackgroundInitializer22.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer42 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean43 = multiBackgroundInitializer42.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer45 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean46 = multiBackgroundInitializer45.isStarted();
        multiBackgroundInitializer42.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer45);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer49 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean50 = multiBackgroundInitializer49.isStarted();
        multiBackgroundInitializer45.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer49);
        java.util.concurrent.ExecutorService executorService52 = null;
        multiBackgroundInitializer45.setExternalExecutor(executorService52);
        java.util.concurrent.ExecutorService executorService54 = multiBackgroundInitializer45.getExternalExecutor();
        multiBackgroundInitializer22.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer45);
        boolean boolean56 = multiBackgroundInitializer22.start();
        boolean boolean57 = multiBackgroundInitializer22.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults58 = multiBackgroundInitializer22.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults59 = multiBackgroundInitializer22.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture60 = multiBackgroundInitializer22.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults61 = multiBackgroundInitializer22.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults62 = multiBackgroundInitializer22.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults63 = multiBackgroundInitializer22.get();
        boolean boolean64 = multiBackgroundInitializer22.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(executorService54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults58);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults59);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture60);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults61);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults62);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test11433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11433");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        boolean boolean9 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = multiBackgroundInitializerResults10.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
    }

    @Test
    public void test11434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11434");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        boolean boolean20 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer3.get();
        boolean boolean22 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test11435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11435");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean5 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean7 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test11436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11436");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture29 = multiBackgroundInitializer18.getFuture();
        boolean boolean30 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer33 = multiBackgroundInitializerResults31.getInitializer("hi!");
        java.util.Set<java.lang.String> strSet34 = multiBackgroundInitializerResults31.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = multiBackgroundInitializerResults31.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults31);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer33);
        org.junit.Assert.assertNotNull(strSet34);
    }

    @Test
    public void test11437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11437");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture4.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture4.get();
        java.util.Set<java.lang.String> strSet7 = multiBackgroundInitializerResults6.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test11438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11438");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializerResultsFuture17.isDone();
        boolean boolean19 = multiBackgroundInitializerResultsFuture17.isCancelled();
        java.lang.Class<?> wildcardClass20 = multiBackgroundInitializerResultsFuture17.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test11439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11439");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        boolean boolean34 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture35 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture36 = multiBackgroundInitializer18.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializerResultsFuture36.get();
        java.util.concurrent.TimeUnit timeUnit39 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializerResultsFuture36.get((long) (-1), timeUnit39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture35);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
    }

    @Test
    public void test11440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11440");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        boolean boolean21 = multiBackgroundInitializer3.isStarted();
        boolean boolean22 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture23 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture24 = multiBackgroundInitializer3.getFuture();
        boolean boolean25 = multiBackgroundInitializerResultsFuture24.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializerResultsFuture24.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture23);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
    }

    @Test
    public void test11441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11441");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer3.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = executorService20.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNull(executorService20);
    }

    @Test
    public void test11442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11442");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        boolean boolean20 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService21 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(executorService21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
    }

    @Test
    public void test11443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11443");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture36 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture38 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer0.get();
        boolean boolean41 = multiBackgroundInitializerResults39.isException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture38);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test11444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11444");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        java.util.concurrent.ExecutorService executorService9 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService9);
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet20 = multiBackgroundInitializerResults19.initializerNames();
        java.lang.Class<?> wildcardClass21 = multiBackgroundInitializerResults19.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test11445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11445");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean11 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean12 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean14 = multiBackgroundInitializerResultsFuture2.cancel(false);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean18 = multiBackgroundInitializerResultsFuture2.cancel(true);
        boolean boolean19 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean20 = multiBackgroundInitializerResultsFuture2.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test11446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11446");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet7 = multiBackgroundInitializerResults6.initializerNames();
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test11447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11447");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
    }

    @Test
    public void test11448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11448");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
    }

    @Test
    public void test11449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11449");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
    }

    @Test
    public void test11450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11450");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService39 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
    }

    @Test
    public void test11451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11451");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        boolean boolean12 = multiBackgroundInitializerResultsFuture11.isDone();
        boolean boolean13 = multiBackgroundInitializerResultsFuture11.isCancelled();
        boolean boolean14 = multiBackgroundInitializerResultsFuture11.isDone();
        boolean boolean15 = multiBackgroundInitializerResultsFuture11.isDone();
        boolean boolean17 = multiBackgroundInitializerResultsFuture11.cancel(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test11452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11452");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean5 = multiBackgroundInitializerResultsFuture4.isCancelled();
        boolean boolean6 = multiBackgroundInitializerResultsFuture4.isCancelled();
        boolean boolean8 = multiBackgroundInitializerResultsFuture4.cancel(false);
        boolean boolean10 = multiBackgroundInitializerResultsFuture4.cancel(false);
        boolean boolean12 = multiBackgroundInitializerResultsFuture4.cancel(false);
        boolean boolean14 = multiBackgroundInitializerResultsFuture4.cancel(false);
        boolean boolean15 = multiBackgroundInitializerResultsFuture4.isCancelled();
        boolean boolean17 = multiBackgroundInitializerResultsFuture4.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test11453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11453");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        java.util.concurrent.ExecutorService executorService19 = null;
        multiBackgroundInitializer15.setExternalExecutor(executorService19);
        boolean boolean21 = multiBackgroundInitializer15.start();
        boolean boolean22 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer15.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture24 = multiBackgroundInitializer15.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer15.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture24);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
    }

    @Test
    public void test11454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11454");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer27.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer27.getExternalExecutor();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean38 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer4.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer42 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean43 = multiBackgroundInitializer42.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture44 = multiBackgroundInitializer42.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults45 = multiBackgroundInitializer42.get();
        java.util.concurrent.ExecutorService executorService46 = multiBackgroundInitializer42.getExternalExecutor();
        boolean boolean47 = multiBackgroundInitializer42.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture48 = multiBackgroundInitializer42.getFuture();
        java.util.concurrent.ExecutorService executorService49 = multiBackgroundInitializer42.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService50 = multiBackgroundInitializer42.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults51 = multiBackgroundInitializer42.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults52 = multiBackgroundInitializer42.get();
        java.util.concurrent.ExecutorService executorService53 = multiBackgroundInitializer42.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture44);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults45);
        org.junit.Assert.assertNull(executorService46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture48);
        org.junit.Assert.assertNull(executorService49);
        org.junit.Assert.assertNull(executorService50);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults51);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults52);
        org.junit.Assert.assertNull(executorService53);
    }

    @Test
    public void test11455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11455");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test11456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11456");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(executorService12);
    }

    @Test
    public void test11457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11457");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer0.getFuture();
        boolean boolean12 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer0.getFuture();
        boolean boolean15 = multiBackgroundInitializerResultsFuture13.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test11458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11458");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        boolean boolean34 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer18.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = multiBackgroundInitializerResults36.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
    }

    @Test
    public void test11459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11459");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test11460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11460");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService6);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer9 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean10 = multiBackgroundInitializer9.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.isStarted();
        multiBackgroundInitializer9.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer12);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer16 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean17 = multiBackgroundInitializer16.isStarted();
        multiBackgroundInitializer12.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer16);
        boolean boolean19 = multiBackgroundInitializer12.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer12.get();
        boolean boolean21 = multiBackgroundInitializer12.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer12.getFuture();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer12);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture24 = multiBackgroundInitializer12.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture25 = multiBackgroundInitializer12.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer12.get();
        java.util.Set<java.lang.String> strSet27 = multiBackgroundInitializerResults26.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture24);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture25);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(strSet27);
    }

    @Test
    public void test11461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11461");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNull(executorService14);
    }

    @Test
    public void test11462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11462");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer10.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer10.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializerResultsFuture21.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = multiBackgroundInitializerResults22.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
    }

    @Test
    public void test11463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11463");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.TimeUnit timeUnit11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializerResultsFuture9.get((long) '4', timeUnit11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
    }

    @Test
    public void test11464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11464");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet14 = multiBackgroundInitializerResults13.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer16 = multiBackgroundInitializerResults13.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test11465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11465");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        java.util.concurrent.ExecutorService executorService9 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService9);
        boolean boolean11 = multiBackgroundInitializer3.start();
        boolean boolean12 = multiBackgroundInitializer3.start();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test11466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11466");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        boolean boolean19 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService21 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(executorService20);
    }

    @Test
    public void test11467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11467");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService29 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean30 = multiBackgroundInitializer18.start();
        boolean boolean31 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService33 = multiBackgroundInitializer18.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializer18.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNull(executorService29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNull(executorService33);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults34);
    }

    @Test
    public void test11468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11468");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer35 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean36 = multiBackgroundInitializer35.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer38 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean39 = multiBackgroundInitializer38.isStarted();
        multiBackgroundInitializer35.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer38);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer42 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean43 = multiBackgroundInitializer42.isStarted();
        multiBackgroundInitializer38.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer42);
        java.util.concurrent.ExecutorService executorService45 = null;
        multiBackgroundInitializer38.setExternalExecutor(executorService45);
        java.util.concurrent.ExecutorService executorService47 = multiBackgroundInitializer38.getExternalExecutor();
        boolean boolean48 = multiBackgroundInitializer38.start();
        boolean boolean49 = multiBackgroundInitializer38.isStarted();
        boolean boolean50 = multiBackgroundInitializer38.start();
        java.util.concurrent.ExecutorService executorService51 = multiBackgroundInitializer38.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService52 = multiBackgroundInitializer38.getExternalExecutor();
        boolean boolean53 = multiBackgroundInitializer38.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults54 = multiBackgroundInitializer38.get();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer38);
        java.util.concurrent.ExecutorService executorService56 = multiBackgroundInitializer38.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults57 = multiBackgroundInitializer38.get();
        java.lang.Object obj59 = multiBackgroundInitializerResults57.getResultObject("hi!");
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer61 = multiBackgroundInitializerResults57.getInitializer("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(executorService47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(executorService51);
        org.junit.Assert.assertNull(executorService52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults54);
        org.junit.Assert.assertNull(executorService56);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer61);
    }

    @Test
    public void test11469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11469");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer3.getFuture();
        boolean boolean9 = multiBackgroundInitializerResultsFuture8.isCancelled();
        boolean boolean11 = multiBackgroundInitializerResultsFuture8.cancel(true);
        java.util.concurrent.TimeUnit timeUnit13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializerResultsFuture8.get((long) (short) 10, timeUnit13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test11470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11470");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        boolean boolean21 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService22 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(executorService22);
    }

    @Test
    public void test11471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11471");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        boolean boolean19 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService21 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService22 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean23 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService24 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService24);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture26 = multiBackgroundInitializer0.getFuture();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNull(executorService21);
        org.junit.Assert.assertNull(executorService22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test11472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11472");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer0.get();
        boolean boolean14 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer16 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean17 = multiBackgroundInitializer16.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer19 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean20 = multiBackgroundInitializer19.isStarted();
        multiBackgroundInitializer16.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer19);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer19.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        java.util.concurrent.ExecutorService executorService26 = multiBackgroundInitializer19.getExternalExecutor();
        boolean boolean27 = multiBackgroundInitializer19.start();
        boolean boolean28 = multiBackgroundInitializer19.start();
        java.util.concurrent.ExecutorService executorService29 = multiBackgroundInitializer19.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(executorService26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService29);
    }

    @Test
    public void test11473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11473");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.ExecutorService executorService19 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService19);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService23);
        java.util.concurrent.ExecutorService executorService25 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean26 = multiBackgroundInitializer0.start();
        boolean boolean27 = multiBackgroundInitializer0.start();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(executorService25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test11474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11474");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        java.util.concurrent.ExecutorService executorService34 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService35 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService35);
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean38 = multiBackgroundInitializer0.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertNull(executorService34);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test11475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11475");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture38 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService40 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean41 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService42 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture38);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertNull(executorService40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test11476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11476");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        boolean boolean10 = multiBackgroundInitializer0.start();
        boolean boolean11 = multiBackgroundInitializer0.start();
        boolean boolean12 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer0.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
    }

    @Test
    public void test11477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11477");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer0.get();
        boolean boolean40 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test11478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11478");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet18 = multiBackgroundInitializerResults17.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(strSet18);
    }

    @Test
    public void test11479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11479");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNull(executorService16);
    }

    @Test
    public void test11480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11480");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        boolean boolean20 = multiBackgroundInitializer10.start();
        boolean boolean21 = multiBackgroundInitializer10.start();
        boolean boolean22 = multiBackgroundInitializer10.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer10.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults24 = multiBackgroundInitializer10.get();
        java.util.concurrent.ExecutorService executorService25 = multiBackgroundInitializer10.getExternalExecutor();
        boolean boolean26 = multiBackgroundInitializer10.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults24);
        org.junit.Assert.assertNull(executorService25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test11481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11481");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        boolean boolean34 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService35 = multiBackgroundInitializer18.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture36 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer18.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(executorService35);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture36);
        org.junit.Assert.assertNull(executorService37);
    }

    @Test
    public void test11482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11482");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.start();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        boolean boolean9 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean12 = multiBackgroundInitializer0.start();
        boolean boolean13 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test11483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11483");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        boolean boolean10 = multiBackgroundInitializerResults9.isSuccessful();
        java.lang.Class<?> wildcardClass11 = multiBackgroundInitializerResults9.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test11484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11484");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService11 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(executorService10);
    }

    @Test
    public void test11485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11485");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        boolean boolean20 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService22 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNull(executorService22);
        org.junit.Assert.assertNull(executorService23);
    }

    @Test
    public void test11486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11486");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer21);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer25 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean26 = multiBackgroundInitializer25.isStarted();
        multiBackgroundInitializer21.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer25);
        java.util.concurrent.ExecutorService executorService28 = null;
        multiBackgroundInitializer21.setExternalExecutor(executorService28);
        java.util.concurrent.ExecutorService executorService30 = multiBackgroundInitializer21.getExternalExecutor();
        boolean boolean31 = multiBackgroundInitializer21.start();
        boolean boolean32 = multiBackgroundInitializer21.start();
        boolean boolean33 = multiBackgroundInitializer21.start();
        boolean boolean34 = multiBackgroundInitializer21.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer21.get();
        boolean boolean36 = multiBackgroundInitializer21.start();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer21.getExternalExecutor();
        boolean boolean38 = multiBackgroundInitializer21.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture39 = multiBackgroundInitializer21.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture40 = multiBackgroundInitializer21.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializer21.get();
        boolean boolean42 = multiBackgroundInitializer21.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer21.get();
        java.util.concurrent.ExecutorService executorService44 = multiBackgroundInitializer21.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture45 = multiBackgroundInitializer21.getFuture();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(executorService30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture39);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertNull(executorService44);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture45);
    }

    @Test
    public void test11487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11487");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializerResultsFuture13.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test11488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11488");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean7 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(executorService8);
    }

    @Test
    public void test11489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11489");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer15 = multiBackgroundInitializerResults13.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
    }

    @Test
    public void test11490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11490");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer18.getFuture();
        boolean boolean31 = multiBackgroundInitializerResultsFuture30.isDone();
        boolean boolean32 = multiBackgroundInitializerResultsFuture30.isCancelled();
        boolean boolean33 = multiBackgroundInitializerResultsFuture30.isCancelled();
        boolean boolean35 = multiBackgroundInitializerResultsFuture30.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test11491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11491");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer3.get();
        boolean boolean24 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService25 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture26 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(executorService25);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture26);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
    }

    @Test
    public void test11492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11492");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        boolean boolean10 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        boolean boolean13 = multiBackgroundInitializer0.start();
        boolean boolean14 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test11493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11493");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService13 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(executorService12);
    }

    @Test
    public void test11494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11494");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.lang.Object obj15 = multiBackgroundInitializerResults13.getResultObject("hi!");
        boolean boolean16 = multiBackgroundInitializerResults13.isSuccessful();
        boolean boolean17 = multiBackgroundInitializerResults13.isSuccessful();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException19 = multiBackgroundInitializerResults13.getException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(concurrentException19);
    }

    @Test
    public void test11495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11495");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
    }

    @Test
    public void test11496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11496");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService2 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService2);
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNull(executorService8);
    }

    @Test
    public void test11497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11497");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet13 = multiBackgroundInitializerResults12.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test11498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11498");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults14.initializerNames();
        boolean boolean16 = multiBackgroundInitializerResults14.isSuccessful();
        java.util.Set<java.lang.String> strSet17 = multiBackgroundInitializerResults14.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException19 = multiBackgroundInitializerResults14.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test11499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11499");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        boolean boolean20 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer25 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean26 = multiBackgroundInitializer25.isStarted();
        multiBackgroundInitializer22.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer25);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        multiBackgroundInitializer29.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.isStarted();
        multiBackgroundInitializer32.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer36);
        boolean boolean39 = multiBackgroundInitializer32.start();
        multiBackgroundInitializer22.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer42 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean43 = multiBackgroundInitializer42.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer45 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean46 = multiBackgroundInitializer45.isStarted();
        multiBackgroundInitializer42.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer45);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer49 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean50 = multiBackgroundInitializer49.isStarted();
        multiBackgroundInitializer45.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer49);
        java.util.concurrent.ExecutorService executorService52 = null;
        multiBackgroundInitializer45.setExternalExecutor(executorService52);
        java.util.concurrent.ExecutorService executorService54 = multiBackgroundInitializer45.getExternalExecutor();
        multiBackgroundInitializer22.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer45);
        boolean boolean56 = multiBackgroundInitializer22.start();
        multiBackgroundInitializer18.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean58 = multiBackgroundInitializer18.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(executorService54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test11500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11500");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        boolean boolean19 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        multiBackgroundInitializer21.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
        java.util.concurrent.ExecutorService executorService27 = multiBackgroundInitializer24.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
        java.util.concurrent.ExecutorService executorService29 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService29);
        java.util.concurrent.ExecutorService executorService31 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService31);
        boolean boolean33 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService34 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(executorService27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(executorService34);
    }
}

