import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest20 {

    public static boolean debug = false;

    @Test
    public void test04001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04001");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        boolean boolean89 = parameterizedType88.matchesObjectContext();
        boolean boolean91 = parameterizedType88.isPropertyInExterns("function (): {920092260}");
        com.google.javascript.rhino.JSDocInfo jSDocInfo92 = parameterizedType88.getJSDocInfo();
        com.google.javascript.rhino.jstype.FunctionType functionType93 = parameterizedType88.getOwnerFunction();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(jSDocInfo92);
        org.junit.Assert.assertNull(functionType93);
    }

    @Test
    public void test04002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04002");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = objectType18.getCtorExtendedInterfaces();
        boolean boolean21 = objectType18.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo24.isConsistentIdGenerator();
        objectType18.setPropertyJSDocInfo("hi!", jSDocInfo24);
        boolean boolean34 = objectType18.isNullType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        jSTypeRegistry37.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean46 = jSDocInfo45.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean48 = jSDocInfo47.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList51 = com.google.common.collect.ImmutableList.of(jSDocInfo43, jSDocInfo44, jSDocInfo45, jSDocInfo47, jSDocInfo49);
        jSDocInfo45.addSuppression("");
        java.lang.String str55 = jSDocInfo45.getDescriptionForParameter("");
        objectType41.setJSDocInfo(jSDocInfo45);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        boolean boolean60 = node59.isComma();
        boolean boolean61 = node59.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        boolean boolean64 = node63.isComma();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        boolean boolean67 = node66.isComma();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        node69.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean73 = node69.isSyntheticBlock();
        boolean boolean74 = node66.isEquivalentToTyped(node69);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 1, node59, node63, node66);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node63.new FileLevelJsDocBuilder();
        boolean boolean77 = node63.isGetElem();
        boolean boolean78 = node63.isQualifiedName();
        boolean boolean79 = objectType18.defineSynthesizedProperty("{}", (com.google.javascript.rhino.jstype.JSType) objectType41, node63);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType83 = objectType82.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = objectType83.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType85 = objectType83.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType83.getImplicitPrototype();
        boolean boolean88 = objectType86.hasProperty("()");
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry1.createEnumType("?", node63, (com.google.javascript.rhino.jstype.JSType) objectType86);
        java.lang.Iterable iterable90 = enumType89.getCtorExtendedInterfaces();
        boolean boolean91 = enumType89.canBeCalled();
        boolean boolean92 = enumType89.isNativeObjectType();
        java.lang.Iterable iterable93 = enumType89.getCtorExtendedInterfaces();
        com.google.javascript.rhino.Node node94 = enumType89.getSource();
        boolean boolean95 = enumType89.canBeCalled();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertNotNull(iterable90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(iterable93);
        org.junit.Assert.assertNotNull(node94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test04003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04003");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        objectType5.clearResolved();
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet8 = objectType5.getPossibleToBooleanOutcomes();
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.ErrorReporter errorReporter11 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry12 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11);
        com.google.javascript.rhino.jstype.ObjectType objectType13 = jSTypeRegistry12.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType14 = objectType13.getParentScope();
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType17 = jSTypeRegistry10.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType13, node16);
        java.lang.String str18 = functionType17.getDisplayName();
        com.google.javascript.rhino.jstype.FunctionType functionType19 = functionType17.getOwnerFunction();
        com.google.javascript.rhino.JSDocInfo jSDocInfo20 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo21 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo22 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean23 = jSDocInfo22.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean25 = jSDocInfo24.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo26 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean27 = jSDocInfo26.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList28 = com.google.common.collect.ImmutableList.of(jSDocInfo20, jSDocInfo21, jSDocInfo22, jSDocInfo24, jSDocInfo26);
        boolean boolean29 = jSDocInfo20.isNoCompile();
        java.lang.String str30 = jSDocInfo20.getVersion();
        functionType17.setJSDocInfo(jSDocInfo20);
        com.google.javascript.rhino.jstype.ObjectType.Property property33 = functionType17.getSlot("Unknown class name");
        boolean boolean34 = functionType17.isStringObjectType();
        boolean boolean35 = functionType17.matchesUint32Context();
        com.google.javascript.rhino.jstype.FunctionType functionType36 = functionType17.getConstructor();
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet37 = functionType17.getPossibleToBooleanOutcomes();
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet38 = booleanLiteralSet8.union(booleanLiteralSet37);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + booleanLiteralSet8 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE + "'", booleanLiteralSet8.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE));
        org.junit.Assert.assertNotNull(objectType13);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(functionType17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(functionType19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(property33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(functionType36);
        org.junit.Assert.assertTrue("'" + booleanLiteralSet37 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE + "'", booleanLiteralSet37.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE));
        org.junit.Assert.assertTrue("'" + booleanLiteralSet38 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE + "'", booleanLiteralSet38.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE));
    }

    @Test
    public void test04004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04004");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        boolean boolean9 = jSDocInfo0.isNoCompile();
        java.lang.String str10 = jSDocInfo0.getVersion();
        java.lang.String str11 = jSDocInfo0.getOriginalCommentString();
        java.lang.String str12 = jSDocInfo0.getLicense();
        boolean boolean14 = jSDocInfo0.hasDescriptionForParameter("{-1939501217}");
        boolean boolean15 = jSDocInfo0.isConstant();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test04005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04005");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        boolean boolean4 = node1.isLabelName();
        int int5 = node1.getCharno();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable8 = node7.siblings();
        int int9 = node7.getSideEffectFlags();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable12 = node11.siblings();
        node7.addChildToBack(node11);
        boolean boolean14 = node11.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder15 = node11.getJsDocBuilderForNode();
        node11.addSuppression("()");
        node11.setString("");
        int int20 = node11.getLength();
        boolean boolean21 = node11.hasMoreThanOneChild();
        boolean boolean22 = node1.isEquivalentTo(node11);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression24 = new com.google.javascript.rhino.JSTypeExpression(node11, "function (): {1164759973}");
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(nodeIterable8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(nodeIterable12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test04006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04006");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        boolean boolean89 = parameterizedType88.matchesObjectContext();
        boolean boolean90 = parameterizedType88.isNoObjectType();
        com.google.javascript.rhino.jstype.FunctionType functionType91 = parameterizedType88.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.JSType jSType92 = parameterizedType88.getParameterType();
        java.lang.String str93 = parameterizedType88.getReferenceName();
        boolean boolean94 = parameterizedType88.hasReferenceName();
        com.google.javascript.rhino.jstype.ObjectType objectType95 = parameterizedType88.getImplicitPrototype();
        boolean boolean97 = parameterizedType88.isPropertyInExterns("{1216629755}");
        boolean boolean99 = parameterizedType88.hasOwnProperty("InputId: function (): {1177818798}");
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(functionType91);
        org.junit.Assert.assertNotNull(jSType92);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(objectType95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test04007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04007");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags1 = new com.google.javascript.rhino.Node.SideEffectFlags(15);
        sideEffectFlags1.setReturnsTainted();
        sideEffectFlags1.setMutatesThis();
        sideEffectFlags1.setAllFlags();
        sideEffectFlags1.setReturnsTainted();
        sideEffectFlags1.setMutatesThis();
    }

    @Test
    public void test04008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04008");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo11 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean12 = jSDocInfo11.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo13 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean14 = jSDocInfo13.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo15 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean16 = jSDocInfo15.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList17 = com.google.common.collect.ImmutableList.of(jSDocInfo9, jSDocInfo10, jSDocInfo11, jSDocInfo13, jSDocInfo15);
        com.google.javascript.rhino.JSDocInfo jSDocInfo18 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo19 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo20 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean21 = jSDocInfo20.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo22 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean23 = jSDocInfo22.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean25 = jSDocInfo24.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList26 = com.google.common.collect.ImmutableList.of(jSDocInfo18, jSDocInfo19, jSDocInfo20, jSDocInfo22, jSDocInfo24);
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo28 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo31 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean32 = jSDocInfo31.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean34 = jSDocInfo33.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList35 = com.google.common.collect.ImmutableList.of(jSDocInfo27, jSDocInfo28, jSDocInfo29, jSDocInfo31, jSDocInfo33);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo>> jSDocInfoListList36 = com.google.common.collect.ImmutableList.of(jSDocInfoList8, jSDocInfoList17, jSDocInfoList26, jSDocInfoList35);
        java.lang.Object[] objArray37 = jSDocInfoList26.toArray();
        com.google.javascript.rhino.JSDocInfo jSDocInfo39 = jSDocInfoList26.get(0);
        com.google.common.collect.UnmodifiableListIterator<com.google.javascript.rhino.JSDocInfo> jSDocInfoItor41 = jSDocInfoList26.listIterator((int) (short) 1);
        java.util.stream.Stream<com.google.javascript.rhino.JSDocInfo> jSDocInfoStream42 = jSDocInfoList26.stream();
        java.util.Spliterator<com.google.javascript.rhino.JSDocInfo> jSDocInfoSpliterator43 = jSDocInfoList26.spliterator();
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.ObjectType objectType46 = jSTypeRegistry45.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType47 = objectType46.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable48 = objectType47.getCtorExtendedInterfaces();
        boolean boolean50 = objectType47.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo52 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo53 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo54 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean55 = jSDocInfo54.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo56 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean57 = jSDocInfo56.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo58 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean59 = jSDocInfo58.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList60 = com.google.common.collect.ImmutableList.of(jSDocInfo52, jSDocInfo53, jSDocInfo54, jSDocInfo56, jSDocInfo58);
        boolean boolean61 = jSDocInfo53.isConsistentIdGenerator();
        objectType47.setPropertyJSDocInfo("hi!", jSDocInfo53);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression63 = jSDocInfo53.getEnumParameterType();
        java.lang.String str64 = jSDocInfo53.getLendsName();
        int int65 = jSDocInfo53.getImplementedInterfaceCount();
        boolean boolean67 = jSDocInfo53.hasParameterType("function (): {1517638406}");
        boolean boolean68 = jSDocInfo53.isJavaDispatch();
        boolean boolean69 = jSDocInfoList26.contains((java.lang.Object) jSDocInfo53);
        boolean boolean70 = jSDocInfoList26.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.JSDocInfo jSDocInfo72 = jSDocInfoList26.remove(15);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList35);
        org.junit.Assert.assertNotNull(jSDocInfoListList36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]");
        org.junit.Assert.assertNotNull(jSDocInfo39);
        org.junit.Assert.assertNotNull(jSDocInfoItor41);
        org.junit.Assert.assertNotNull(jSDocInfoStream42);
        org.junit.Assert.assertNotNull(jSDocInfoSpliterator43);
        org.junit.Assert.assertNotNull(objectType46);
        org.junit.Assert.assertNotNull(objectType47);
        org.junit.Assert.assertNotNull(objectTypeIterable48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(jSTypeExpression63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test04009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04009");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newString("");
        boolean boolean11 = node10.isComma();
        boolean boolean12 = node10.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString("");
        boolean boolean15 = node14.isComma();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        boolean boolean18 = node17.isComma();
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString("");
        node20.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean24 = node20.isSyntheticBlock();
        boolean boolean25 = node17.isEquivalentToTyped(node20);
        com.google.javascript.rhino.Node node26 = new com.google.javascript.rhino.Node((int) (short) 1, node10, node14, node17);
        boolean boolean27 = node10.isDefaultCase();
        boolean boolean28 = node5.isEquivalentTo(node10);
        boolean boolean29 = node5.isBlock();
        java.util.Set<java.lang.String> strSet30 = node5.getDirectives();
        boolean boolean31 = node5.isGetElem();
        boolean boolean32 = node5.isAssign();
        int int33 = node5.getType();
        boolean boolean34 = node5.hasOneChild();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 40 + "'", int33 == 40);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test04010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04010");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        boolean boolean15 = jSTypeRegistry1.hasNamespace("");
        boolean boolean17 = jSTypeRegistry1.isForwardDeclaredType("function (): {1559136837}");
        com.google.javascript.rhino.jstype.JSType jSType22 = jSTypeRegistry1.createNamedType("function (): {55952865}", "function (): {1341062061}", 30, 30);
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(jSType22);
    }

    @Test
    public void test04011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04011");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = objectType18.getCtorExtendedInterfaces();
        boolean boolean21 = objectType18.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo24.isConsistentIdGenerator();
        objectType18.setPropertyJSDocInfo("hi!", jSDocInfo24);
        boolean boolean34 = objectType18.isNullType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        jSTypeRegistry37.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean46 = jSDocInfo45.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean48 = jSDocInfo47.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList51 = com.google.common.collect.ImmutableList.of(jSDocInfo43, jSDocInfo44, jSDocInfo45, jSDocInfo47, jSDocInfo49);
        jSDocInfo45.addSuppression("");
        java.lang.String str55 = jSDocInfo45.getDescriptionForParameter("");
        objectType41.setJSDocInfo(jSDocInfo45);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        boolean boolean60 = node59.isComma();
        boolean boolean61 = node59.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        boolean boolean64 = node63.isComma();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        boolean boolean67 = node66.isComma();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        node69.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean73 = node69.isSyntheticBlock();
        boolean boolean74 = node66.isEquivalentToTyped(node69);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 1, node59, node63, node66);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node63.new FileLevelJsDocBuilder();
        boolean boolean77 = node63.isGetElem();
        boolean boolean78 = node63.isQualifiedName();
        boolean boolean79 = objectType18.defineSynthesizedProperty("{}", (com.google.javascript.rhino.jstype.JSType) objectType41, node63);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType83 = objectType82.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = objectType83.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType85 = objectType83.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType83.getImplicitPrototype();
        boolean boolean88 = objectType86.hasProperty("()");
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry1.createEnumType("?", node63, (com.google.javascript.rhino.jstype.JSType) objectType86);
        com.google.javascript.rhino.jstype.EnumType enumType90 = enumType89.toMaybeEnumType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType91 = enumType89.getElementsType();
        com.google.javascript.rhino.jstype.JSType jSType93 = enumElementType91.findPropertyType("");
        com.google.javascript.rhino.jstype.ObjectType objectType94 = enumElementType91.getImplicitPrototype();
        boolean boolean95 = enumElementType91.hasReferenceName();
        boolean boolean96 = enumElementType91.isNullable();
        com.google.javascript.rhino.jstype.JSType jSType97 = enumElementType91.getPrimitiveType();
        com.google.javascript.rhino.jstype.ObjectType.Property property99 = enumElementType91.getSlot("InputId: function (): {1177818798}");
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertNotNull(enumType90);
        org.junit.Assert.assertNotNull(enumElementType91);
        org.junit.Assert.assertNull(jSType93);
        org.junit.Assert.assertNull(objectType94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(jSType97);
        org.junit.Assert.assertNull(property99);
    }

    @Test
    public void test04012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04012");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.jstype.ObjectType objectType12 = jSTypeRegistry11.createAnonymousObjectType();
        jSTypeRegistry8.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType12);
        boolean boolean14 = objectType12.isNativeObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        boolean boolean18 = objectType17.isUnknownType();
        com.google.javascript.rhino.jstype.JSType jSType20 = objectType17.findPropertyType("true");
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.ObjectType objectType23 = jSTypeRegistry22.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType24 = objectType23.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable25 = objectType24.getCtorExtendedInterfaces();
        boolean boolean26 = objectType24.isStringValueType();
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27);
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.ObjectType objectType31 = jSTypeRegistry30.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType32 = objectType31.getParentScope();
        com.google.javascript.rhino.Node node34 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType35 = jSTypeRegistry28.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType31, node34);
        com.google.javascript.rhino.JSDocInfo jSDocInfo37 = new com.google.javascript.rhino.JSDocInfo();
        functionType35.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo37);
        int int39 = functionType35.getMaxArguments();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.ObjectType objectType42 = jSTypeRegistry41.createAnonymousObjectType();
        boolean boolean43 = objectType42.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType45 = objectType42.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46);
        com.google.javascript.rhino.jstype.ObjectType objectType48 = jSTypeRegistry47.createAnonymousObjectType();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.ErrorReporter errorReporter55 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry56 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter55);
        com.google.javascript.rhino.jstype.ObjectType objectType57 = jSTypeRegistry56.createAnonymousObjectType();
        jSTypeRegistry53.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType57);
        com.google.javascript.rhino.jstype.JSType jSType59 = jSTypeRegistry47.createFromTypeNodes(node50, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType57);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] { objectType12, objectType17, objectType24, functionType35, objectType42, objectType57 };
        com.google.javascript.rhino.Node node61 = jSTypeRegistry1.createParametersWithVarArgs(jSTypeArray60);
        jSTypeRegistry1.incrementGeneration();
        boolean boolean63 = jSTypeRegistry1.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter64 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry65 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter64);
        com.google.javascript.rhino.ErrorReporter errorReporter66 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry67 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter66);
        com.google.javascript.rhino.jstype.ObjectType objectType68 = jSTypeRegistry67.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType69 = objectType68.getParentScope();
        com.google.javascript.rhino.Node node71 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType72 = jSTypeRegistry65.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType68, node71);
        com.google.javascript.rhino.JSDocInfo jSDocInfo74 = new com.google.javascript.rhino.JSDocInfo();
        functionType72.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo74);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable76 = functionType72.getAllImplementedInterfaces();
        com.google.javascript.rhino.ErrorReporter errorReporter77 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry78 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter77);
        com.google.javascript.rhino.ErrorReporter errorReporter79 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry80 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter79);
        com.google.javascript.rhino.jstype.ObjectType objectType81 = jSTypeRegistry80.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType82 = objectType81.getParentScope();
        com.google.javascript.rhino.Node node84 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = jSTypeRegistry78.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType81, node84);
        boolean boolean87 = functionType85.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType88 = functionType85.autoboxesTo();
        com.google.javascript.rhino.jstype.JSType jSType89 = functionType85.autoboxesTo();
        boolean boolean91 = functionType85.removeProperty("");
        java.lang.String str92 = functionType85.getDisplayName();
        com.google.javascript.rhino.jstype.TemplateType templateType93 = functionType85.toMaybeTemplateType();
        com.google.javascript.rhino.jstype.FunctionType functionType94 = jSTypeRegistry1.createFunctionTypeWithNewReturnType(functionType72, (com.google.javascript.rhino.jstype.JSType) functionType85);
        boolean boolean95 = functionType85.isReturnTypeInferred();
        com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> jSTypeStaticScope96 = functionType85.getParentScope();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(objectType12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(jSType20);
        org.junit.Assert.assertNotNull(objectType23);
        org.junit.Assert.assertNotNull(objectType24);
        org.junit.Assert.assertNotNull(objectTypeIterable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objectType31);
        org.junit.Assert.assertNotNull(objectType32);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(functionType35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(objectType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(jSType45);
        org.junit.Assert.assertNotNull(objectType48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(objectType57);
        org.junit.Assert.assertNotNull(jSType59);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objectType68);
        org.junit.Assert.assertNotNull(objectType69);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(functionType72);
        org.junit.Assert.assertNotNull(objectTypeIterable76);
        org.junit.Assert.assertNotNull(objectType81);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(jSType88);
        org.junit.Assert.assertNull(jSType89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(templateType93);
        org.junit.Assert.assertNotNull(functionType94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(jSTypeStaticScope96);
    }

    @Test
    public void test04013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04013");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        int int89 = parameterizedType88.getPropertiesCount();
        boolean boolean90 = parameterizedType88.isInterface();
        com.google.javascript.rhino.jstype.ObjectType objectType91 = parameterizedType88.getTypeOfThis();
        boolean boolean93 = parameterizedType88.isPropertyInExterns("function (): {}");
        com.google.javascript.rhino.jstype.FunctionType functionType94 = parameterizedType88.toMaybeFunctionType();
        java.lang.String str95 = parameterizedType88.toDebugHashCodeString();
        com.google.javascript.rhino.Node node97 = parameterizedType88.getPropertyNode("function (): {188561584}");
        boolean boolean98 = parameterizedType88.isCheckedUnknownType();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(objectType91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(functionType94);
// flaky:         org.junit.Assert.assertEquals("'" + str95 + "' != '" + "{proxy:function (): {1824071731}}" + "'", str95, "{proxy:function (): {1824071731}}");
        org.junit.Assert.assertNull(node97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test04014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04014");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        functionType8.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo10);
        boolean boolean12 = functionType8.isNominalType();
        boolean boolean13 = functionType8.matchesNumberContext();
        java.lang.String str14 = functionType8.toString();
        int int15 = functionType8.getMinArguments();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "function (): {}" + "'", str14, "function (): {}");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test04015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04015");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        java.lang.String str9 = jSDocInfo6.getMeaning();
        boolean boolean10 = jSDocInfo6.isDeprecated();
        boolean boolean11 = jSDocInfo6.hasBaseType();
        java.util.Collection<java.lang.String> strCollection12 = jSDocInfo6.getReferences();
        int int13 = jSDocInfo6.getImplementedInterfaceCount();
        boolean boolean14 = jSDocInfo6.hasBaseType();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression15 = jSDocInfo6.getReturnType();
        boolean boolean16 = jSDocInfo6.isExpose();
        java.lang.String str17 = jSDocInfo6.getLicense();
        java.util.Set<java.lang.String> strSet18 = jSDocInfo6.getParameterNames();
        // The following exception was thrown during execution in test generation
        try {
            strSet18.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(jSTypeExpression15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strSet18);
    }

    @Test
    public void test04016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04016");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        boolean boolean15 = jSTypeRegistry1.hasNamespace("");
        boolean boolean17 = jSTypeRegistry1.isForwardDeclaredType("function (): {1559136837}");
        boolean boolean19 = jSTypeRegistry1.isForwardDeclaredType("STRING ");
        com.google.javascript.rhino.ErrorReporter errorReporter20 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter20);
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.ObjectType objectType24 = jSTypeRegistry23.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType25 = objectType24.getParentScope();
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType28 = jSTypeRegistry21.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType24, node27);
        com.google.javascript.rhino.JSDocInfo jSDocInfo30 = new com.google.javascript.rhino.JSDocInfo();
        functionType28.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo30);
        java.lang.String str32 = functionType28.getDisplayName();
        com.google.javascript.rhino.jstype.JSType jSType37 = jSTypeRegistry1.getType((com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType28, "function (): {1434844343}", "JSDocInfo", 10, 46);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable39 = jSTypeRegistry1.getEachReferenceTypeWithProperty("(hi!)");
        com.google.javascript.rhino.jstype.JSType jSType41 = jSTypeRegistry1.getType("STRING  [jsdoc_info: JSDocInfo]\n");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative42 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.FunctionType functionType43 = jSTypeRegistry1.getNativeFunctionType(jSTypeNative42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objectType24);
        org.junit.Assert.assertNotNull(objectType25);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(functionType28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(jSType37);
        org.junit.Assert.assertNotNull(objectTypeIterable39);
        org.junit.Assert.assertNull(jSType41);
    }

    @Test
    public void test04017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04017");
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType0 = com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN;
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newString("");
        boolean boolean4 = node3.isComma();
        boolean boolean5 = node3.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        boolean boolean8 = node7.isComma();
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newString("");
        boolean boolean11 = node10.isComma();
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString("");
        node13.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean17 = node13.isSyntheticBlock();
        boolean boolean18 = node10.isEquivalentToTyped(node13);
        com.google.javascript.rhino.Node node19 = new com.google.javascript.rhino.Node((int) (short) 1, node3, node7, node10);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder20 = node7.new FileLevelJsDocBuilder();
        node7.setQuotedString();
        com.google.javascript.rhino.Node node23 = com.google.javascript.rhino.Node.newNumber((double) (short) 10);
        com.google.javascript.rhino.Node node24 = node7.copyInformationFrom(node23);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newString("");
        boolean boolean27 = node26.isComma();
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship28 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType0, node23, node26);
        boolean boolean29 = node26.isExprResult();
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable32 = node31.siblings();
        int int33 = node31.getSideEffectFlags();
        com.google.javascript.rhino.Node node35 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable36 = node35.siblings();
        node31.addChildToBack(node35);
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newString("");
        boolean boolean40 = node39.isComma();
        boolean boolean41 = node39.isOnlyModifiesThisCall();
        boolean boolean42 = node39.isSetterDef();
        com.google.javascript.rhino.Node node43 = node35.useSourceInfoFrom(node39);
        com.google.javascript.rhino.Node node44 = node43.getParent();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression46 = new com.google.javascript.rhino.JSTypeExpression(node44, "(true)");
        boolean boolean47 = node44.isRegExp();
        com.google.javascript.rhino.ErrorReporter errorReporter48 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry49 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter48);
        com.google.javascript.rhino.ErrorReporter errorReporter50 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry51 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter50);
        com.google.javascript.rhino.jstype.ObjectType objectType52 = jSTypeRegistry51.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType53 = objectType52.getParentScope();
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType56 = jSTypeRegistry49.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType52, node55);
        boolean boolean58 = functionType56.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType59 = functionType56.autoboxesTo();
        com.google.javascript.rhino.jstype.JSType jSType60 = functionType56.autoboxesTo();
        boolean boolean62 = functionType56.removeProperty("");
        java.lang.String str63 = functionType56.getDisplayName();
        boolean boolean65 = functionType56.isPropertyInExterns("Not declared as a type name");
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType56.getConstructor();
        com.google.javascript.rhino.Node node67 = functionType56.getParametersNode();
        boolean boolean68 = node67.isCall();
        // The following exception was thrown during execution in test generation
        try {
            node26.replaceChild(node44, node67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + subclassType0 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN + "'", subclassType0.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN));
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(nodeIterable32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(nodeIterable36);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objectType52);
        org.junit.Assert.assertNotNull(objectType53);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(functionType56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(jSType59);
        org.junit.Assert.assertNull(jSType60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test04018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04018");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        functionType8.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo10);
        int int12 = functionType8.getMaxArguments();
        java.lang.String str13 = functionType8.getDisplayName();
        int int14 = functionType8.getMaxArguments();
        boolean boolean15 = functionType8.isArrayType();
        com.google.javascript.rhino.jstype.JSType jSType17 = functionType8.getPropertyType("");
        boolean boolean18 = functionType8.isNumberObjectType();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = functionType8.getAllExtendedInterfaces();
        com.google.javascript.rhino.Node node20 = functionType8.getRootNode();
        boolean boolean21 = functionType8.isInterface();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(jSType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test04019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04019");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        functionType8.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo10);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable12 = functionType8.getAllImplementedInterfaces();
        boolean boolean13 = functionType8.isTemplateType();
        com.google.javascript.rhino.jstype.JSType jSType15 = functionType8.getPropertyType("function (): {1846415302}");
        com.google.javascript.rhino.JSDocInfo jSDocInfo16 = functionType8.getJSDocInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = jSDocInfo16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertNotNull(objectTypeIterable12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(jSType15);
        org.junit.Assert.assertNull(jSDocInfo16);
    }

    @Test
    public void test04020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04020");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec16 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec18 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("true");
        java.lang.String str19 = assertionFunctionSpec18.getFunctionName();
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec21 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("true");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec23 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("true");
        java.lang.String str24 = assertionFunctionSpec23.getFunctionName();
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec26 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("PARAM_LIST");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec28 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("");
        com.google.common.collect.ImmutableList<com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec> assertionFunctionSpecList29 = com.google.common.collect.ImmutableList.of(assertionFunctionSpec16, assertionFunctionSpec18, assertionFunctionSpec21, assertionFunctionSpec23, assertionFunctionSpec26, assertionFunctionSpec28);
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition30 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.Node node32 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable33 = node32.siblings();
        namePosition30.setItem(node32);
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable35 = node32.getAncestors();
        int int36 = node32.getLineno();
        com.google.javascript.rhino.Node node37 = assertionFunctionSpec28.getAssertedParam(node32);
        node37.setSourceFileForTesting("Unknown");
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry43 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42);
        com.google.javascript.rhino.jstype.ObjectType objectType44 = jSTypeRegistry43.createAnonymousObjectType();
        boolean boolean45 = objectType44.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType47 = objectType44.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType49 = jSTypeRegistry41.getGreatestSubtypeWithProperty(jSType47, "");
        com.google.javascript.rhino.ErrorReporter errorReporter50 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry51 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter50);
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.jstype.ObjectType objectType54 = jSTypeRegistry53.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType55 = objectType54.getParentScope();
        com.google.javascript.rhino.Node node57 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType58 = jSTypeRegistry51.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType54, node57);
        java.lang.String str59 = functionType58.getDisplayName();
        com.google.javascript.rhino.Node node61 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable62 = node61.siblings();
        int int63 = node61.getSideEffectFlags();
        boolean boolean64 = node61.isLabelName();
        boolean boolean65 = node61.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType66 = jSTypeRegistry41.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType58, node61);
        java.lang.String str67 = functionType66.getReferenceName();
        com.google.javascript.rhino.ErrorReporter errorReporter68 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry69 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter68);
        com.google.javascript.rhino.jstype.ObjectType objectType70 = jSTypeRegistry69.createAnonymousObjectType();
        boolean boolean71 = objectType70.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType73 = objectType70.getRestrictedTypeGivenToBooleanOutcome(true);
        boolean boolean74 = objectType70.hasDisplayName();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair75 = functionType66.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) objectType70);
        com.google.javascript.rhino.jstype.ObjectType objectType76 = functionType66.getTypeOfThis();
        com.google.javascript.rhino.ErrorReporter errorReporter77 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry78 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter77);
        com.google.javascript.rhino.jstype.ObjectType objectType79 = jSTypeRegistry78.createAnonymousObjectType();
        boolean boolean80 = objectType79.isUnknownType();
        com.google.javascript.rhino.jstype.JSType jSType82 = objectType79.findPropertyType("true");
        java.util.Set<java.lang.String> strSet83 = objectType79.getPropertyNames();
        com.google.javascript.rhino.jstype.JSType jSType84 = functionType66.getGreatestSubtype((com.google.javascript.rhino.jstype.JSType) objectType79);
        boolean boolean85 = functionType66.isOrdinaryFunction();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = jSTypeRegistry1.createObjectType("PARAM_LIST", node37, (com.google.javascript.rhino.jstype.ObjectType) functionType66);
        boolean boolean87 = node37.isObjectLit();
        com.google.javascript.rhino.Node node88 = com.google.javascript.jscomp.NodeUtil.newExpr(node37);
        int int89 = node37.getSourcePosition();
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile90 = node37.getStaticSourceFile();
        int int92 = staticSourceFile90.getLineOffset((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            int int94 = staticSourceFile90.getLineOffset((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not call getLineOffset with line number -1");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "true" + "'", str19, "true");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "true" + "'", str24, "true");
        org.junit.Assert.assertNotNull(assertionFunctionSpecList29);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(nodeIterable33);
        org.junit.Assert.assertNotNull(ancestorIterable35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(objectType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jSType47);
        org.junit.Assert.assertNotNull(jSType49);
        org.junit.Assert.assertNotNull(objectType54);
        org.junit.Assert.assertNotNull(objectType55);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(functionType58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(nodeIterable62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(functionType66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(objectType70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(jSType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(typePair75);
        org.junit.Assert.assertNotNull(objectType76);
        org.junit.Assert.assertNotNull(objectType79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(jSType82);
        org.junit.Assert.assertNotNull(strSet83);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(staticSourceFile90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-2147483648) + "'", int92 == (-2147483648));
    }

    @Test
    public void test04021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04021");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        boolean boolean3 = node1.isAdd();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        int int7 = node5.getSideEffectFlags();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable10 = node9.siblings();
        node5.addChildToBack(node9);
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable14 = node13.siblings();
        int int15 = node13.getSideEffectFlags();
        boolean boolean16 = node13.isLabelName();
        com.google.javascript.rhino.Node node17 = node5.copyInformationFromForTree(node13);
        boolean boolean18 = node1.isEquivalentTo(node13);
        boolean boolean19 = node13.isAnd();
        boolean boolean20 = node13.isIf();
        com.google.javascript.rhino.Node node22 = node13.getAncestor(32);
        int int23 = node13.getSourceOffset();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeIterable10);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeIterable14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test04022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04022");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        boolean boolean10 = functionType8.removeProperty("");
        com.google.javascript.rhino.ErrorReporter errorReporter11 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry12 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11);
        com.google.javascript.rhino.jstype.ObjectType objectType13 = jSTypeRegistry12.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType14 = objectType13.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable15 = objectType14.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType16 = objectType14.collapseUnion();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable21 = objectType20.getCtorExtendedInterfaces();
        boolean boolean23 = objectType20.removeProperty("hi!");
        com.google.javascript.rhino.jstype.JSType.TypePair typePair24 = jSType16.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) objectType20);
        boolean boolean25 = functionType8.isSubtype((com.google.javascript.rhino.jstype.JSType) objectType20);
        com.google.javascript.rhino.jstype.JSType jSType27 = functionType8.getPropertyType("hi!");
        com.google.javascript.rhino.jstype.ObjectType objectType28 = functionType8.getImplicitPrototype();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType29 = functionType8.toMaybeParameterizedType();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable30 = functionType8.getCtorImplementedInterfaces();
        boolean boolean32 = functionType8.hasOwnProperty("");
        com.google.javascript.rhino.jstype.ObjectType.Property property34 = functionType8.getSlot("(Unknown class name)");
        boolean boolean35 = functionType8.isNativeObjectType();
        java.lang.String str36 = functionType8.getReferenceName();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objectType13);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(objectTypeIterable15);
        org.junit.Assert.assertNotNull(jSType16);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(objectTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typePair24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(jSType27);
        org.junit.Assert.assertNotNull(objectType28);
        org.junit.Assert.assertNull(parameterizedType29);
        org.junit.Assert.assertNotNull(objectTypeIterable30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(property34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test04023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04023");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression9 = jSDocInfo2.getThisType();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression10 = jSDocInfo2.getType();
        java.lang.String str11 = jSDocInfo2.getDescription();
        boolean boolean12 = jSDocInfo2.isImplicitCast();
        boolean boolean13 = jSDocInfo2.isNoShadow();
        java.lang.String str14 = jSDocInfo2.getLendsName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertNull(jSTypeExpression9);
        org.junit.Assert.assertNull(jSTypeExpression10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test04024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04024");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = objectType18.getCtorExtendedInterfaces();
        boolean boolean21 = objectType18.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo24.isConsistentIdGenerator();
        objectType18.setPropertyJSDocInfo("hi!", jSDocInfo24);
        boolean boolean34 = objectType18.isNullType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        jSTypeRegistry37.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean46 = jSDocInfo45.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean48 = jSDocInfo47.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList51 = com.google.common.collect.ImmutableList.of(jSDocInfo43, jSDocInfo44, jSDocInfo45, jSDocInfo47, jSDocInfo49);
        jSDocInfo45.addSuppression("");
        java.lang.String str55 = jSDocInfo45.getDescriptionForParameter("");
        objectType41.setJSDocInfo(jSDocInfo45);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        boolean boolean60 = node59.isComma();
        boolean boolean61 = node59.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        boolean boolean64 = node63.isComma();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        boolean boolean67 = node66.isComma();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        node69.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean73 = node69.isSyntheticBlock();
        boolean boolean74 = node66.isEquivalentToTyped(node69);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 1, node59, node63, node66);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node63.new FileLevelJsDocBuilder();
        boolean boolean77 = node63.isGetElem();
        boolean boolean78 = node63.isQualifiedName();
        boolean boolean79 = objectType18.defineSynthesizedProperty("{}", (com.google.javascript.rhino.jstype.JSType) objectType41, node63);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType83 = objectType82.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = objectType83.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType85 = objectType83.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType83.getImplicitPrototype();
        boolean boolean88 = objectType86.hasProperty("()");
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry1.createEnumType("?", node63, (com.google.javascript.rhino.jstype.JSType) objectType86);
        com.google.javascript.rhino.jstype.EnumType enumType90 = enumType89.toMaybeEnumType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType91 = enumType89.getElementsType();
        com.google.javascript.rhino.jstype.JSType jSType92 = enumElementType91.getPrimitiveType();
        boolean boolean93 = enumElementType91.canBeCalled();
        java.lang.String str94 = enumElementType91.getReferenceName();
        com.google.javascript.rhino.jstype.FunctionType functionType95 = enumElementType91.getConstructor();
        com.google.javascript.rhino.jstype.ObjectType.Property property97 = enumElementType91.getSlot("");
        enumElementType91.clearCachedValues();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertNotNull(enumType90);
        org.junit.Assert.assertNotNull(enumElementType91);
        org.junit.Assert.assertNotNull(jSType92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "?" + "'", str94, "?");
        org.junit.Assert.assertNull(functionType95);
        org.junit.Assert.assertNull(property97);
    }

    @Test
    public void test04025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04025");
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition0 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable3 = node2.siblings();
        namePosition0.setItem(node2);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node7 = com.google.javascript.jscomp.NodeUtil.newExpr(node6);
        com.google.javascript.rhino.JSDocInfo jSDocInfo8 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean11 = jSDocInfo10.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo12 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean13 = jSDocInfo12.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo14 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean15 = jSDocInfo14.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList16 = com.google.common.collect.ImmutableList.of(jSDocInfo8, jSDocInfo9, jSDocInfo10, jSDocInfo12, jSDocInfo14);
        boolean boolean17 = jSDocInfo8.isNoCompile();
        java.lang.String str18 = jSDocInfo8.getVersion();
        node7.setJSDocInfo(jSDocInfo8);
        boolean boolean20 = node7.isBlock();
        java.lang.String str21 = com.google.javascript.jscomp.NodeUtil.getNearestFunctionName(node7);
        namePosition0.setItem(node7);
        int int23 = namePosition0.getPositionOnStartLine();
        int int24 = namePosition0.getStartLine();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNotNull(nodeIterable3);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test04026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04026");
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition1 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable4 = node3.siblings();
        namePosition1.setItem(node3);
        com.google.javascript.rhino.Node node6 = namePosition1.getItem();
        boolean boolean7 = node6.isNE();
        int int8 = node6.getCharno();
        com.google.javascript.rhino.Node node9 = node6.getFirstChild();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString("");
        node13.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        com.google.javascript.rhino.Node node17 = new com.google.javascript.rhino.Node(29, node6, node11, node13);
        boolean boolean18 = node6.isQualifiedName();
        boolean boolean19 = node6.isNot();
        boolean boolean20 = node6.isBreak();
        com.google.javascript.rhino.Node node23 = com.google.javascript.rhino.Node.newString("");
        node23.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        node23.setSourceEncodedPosition((-1));
        boolean boolean29 = node23.isFunction();
        com.google.javascript.rhino.Node node31 = node23.getAncestor((int) (byte) 0);
        boolean boolean32 = node31.isNumber();
        com.google.javascript.rhino.Node node34 = com.google.javascript.rhino.Node.newString("");
        node34.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        node34.setSourceEncodedPosition((-1));
        boolean boolean40 = node34.isFunction();
        com.google.javascript.rhino.Node node42 = node34.getAncestor((int) (byte) 0);
        boolean boolean43 = node42.isComma();
        com.google.javascript.rhino.Node node45 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable46 = node45.siblings();
        int int47 = node45.getSideEffectFlags();
        com.google.javascript.rhino.Node node49 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable50 = node49.siblings();
        node45.addChildToBack(node49);
        com.google.javascript.rhino.Node node53 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable54 = node53.siblings();
        int int55 = node53.getSideEffectFlags();
        boolean boolean56 = node53.isLabelName();
        com.google.javascript.rhino.Node node57 = node45.copyInformationFromForTree(node53);
        com.google.javascript.rhino.Node node58 = new com.google.javascript.rhino.Node(41, node31, node42, node57);
        boolean boolean59 = node31.isNot();
        boolean boolean60 = node31.isGetProp();
        boolean boolean61 = node31.isNumber();
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.ObjectType objectType67 = jSTypeRegistry66.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType68 = objectType67.getParentScope();
        com.google.javascript.rhino.Node node70 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType71 = jSTypeRegistry64.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType67, node70);
        com.google.javascript.rhino.Node node72 = new com.google.javascript.rhino.Node(0, node70);
        // The following exception was thrown during execution in test generation
        try {
            node6.addChildBefore(node31, node72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The existing child node of the parent should not be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(nodeIterable4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(nodeIterable46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(nodeIterable50);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(nodeIterable54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objectType67);
        org.junit.Assert.assertNotNull(objectType68);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(functionType71);
    }

    @Test
    public void test04027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04027");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        boolean boolean10 = functionType8.removeProperty("");
        com.google.javascript.rhino.ErrorReporter errorReporter11 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry12 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11);
        com.google.javascript.rhino.jstype.ObjectType objectType13 = jSTypeRegistry12.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType14 = objectType13.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable15 = objectType14.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType16 = objectType14.collapseUnion();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable21 = objectType20.getCtorExtendedInterfaces();
        boolean boolean23 = objectType20.removeProperty("hi!");
        com.google.javascript.rhino.jstype.JSType.TypePair typePair24 = jSType16.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) objectType20);
        boolean boolean25 = functionType8.isSubtype((com.google.javascript.rhino.jstype.JSType) objectType20);
        com.google.javascript.rhino.jstype.JSType jSType27 = functionType8.getPropertyType("hi!");
        boolean boolean29 = functionType8.isPropertyInExterns("(Named type with empty name component)");
        boolean boolean31 = functionType8.hasOwnProperty("function (): {2118854728}");
        com.google.javascript.rhino.jstype.ObjectType objectType32 = functionType8.getParentScope();
        boolean boolean33 = functionType8.isUnknownType();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objectType13);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(objectTypeIterable15);
        org.junit.Assert.assertNotNull(jSType16);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(objectTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typePair24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(jSType27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objectType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test04028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04028");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        boolean boolean9 = jSDocInfoList8.isEmpty();
        java.util.stream.Stream<com.google.javascript.rhino.JSDocInfo> jSDocInfoStream10 = jSDocInfoList8.parallelStream();
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.ObjectType objectType16 = jSTypeRegistry15.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType17 = objectType16.getParentScope();
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType20 = jSTypeRegistry13.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType16, node19);
        java.lang.String str21 = functionType20.getDisplayName();
        com.google.javascript.rhino.jstype.FunctionType functionType22 = functionType20.getOwnerFunction();
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo23.isNoCompile();
        java.lang.String str33 = jSDocInfo23.getVersion();
        functionType20.setJSDocInfo(jSDocInfo23);
        boolean boolean35 = jSDocInfo23.hasFileOverview();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression36 = jSDocInfo23.getEnumParameterType();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression37 = jSDocInfo23.getEnumParameterType();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.JSDocInfo jSDocInfo38 = jSDocInfoList8.set(37, jSDocInfo23);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(jSDocInfoStream10);
        org.junit.Assert.assertNotNull(objectType16);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(functionType20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(functionType22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(jSTypeExpression36);
        org.junit.Assert.assertNull(jSTypeExpression37);
    }

    @Test
    public void test04029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04029");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        boolean boolean89 = parameterizedType88.matchesObjectContext();
        boolean boolean90 = parameterizedType88.isNoObjectType();
        com.google.javascript.rhino.jstype.JSType jSType91 = parameterizedType88.getParameterType();
        boolean boolean92 = parameterizedType88.isInstanceType();
        com.google.javascript.rhino.jstype.FunctionType functionType93 = parameterizedType88.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.ObjectType objectType94 = parameterizedType88.getTypeOfThis();
        com.google.javascript.rhino.JSDocInfo jSDocInfo95 = parameterizedType88.getJSDocInfo();
        boolean boolean96 = parameterizedType88.isCheckedUnknownType();
        boolean boolean97 = parameterizedType88.isParameterizedType();
        com.google.javascript.rhino.jstype.ObjectType objectType98 = parameterizedType88.getImplicitPrototype();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(jSType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(functionType93);
        org.junit.Assert.assertNotNull(objectType94);
        org.junit.Assert.assertNull(jSDocInfo95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(objectType98);
    }

    @Test
    public void test04030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04030");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = objectType18.getCtorExtendedInterfaces();
        boolean boolean21 = objectType18.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo24.isConsistentIdGenerator();
        objectType18.setPropertyJSDocInfo("hi!", jSDocInfo24);
        boolean boolean34 = objectType18.isNullType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        jSTypeRegistry37.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean46 = jSDocInfo45.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean48 = jSDocInfo47.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList51 = com.google.common.collect.ImmutableList.of(jSDocInfo43, jSDocInfo44, jSDocInfo45, jSDocInfo47, jSDocInfo49);
        jSDocInfo45.addSuppression("");
        java.lang.String str55 = jSDocInfo45.getDescriptionForParameter("");
        objectType41.setJSDocInfo(jSDocInfo45);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        boolean boolean60 = node59.isComma();
        boolean boolean61 = node59.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        boolean boolean64 = node63.isComma();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        boolean boolean67 = node66.isComma();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        node69.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean73 = node69.isSyntheticBlock();
        boolean boolean74 = node66.isEquivalentToTyped(node69);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 1, node59, node63, node66);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node63.new FileLevelJsDocBuilder();
        boolean boolean77 = node63.isGetElem();
        boolean boolean78 = node63.isQualifiedName();
        boolean boolean79 = objectType18.defineSynthesizedProperty("{}", (com.google.javascript.rhino.jstype.JSType) objectType41, node63);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType83 = objectType82.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = objectType83.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType85 = objectType83.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType83.getImplicitPrototype();
        boolean boolean88 = objectType86.hasProperty("()");
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry1.createEnumType("?", node63, (com.google.javascript.rhino.jstype.JSType) objectType86);
        java.lang.Iterable iterable90 = enumType89.getCtorExtendedInterfaces();
        com.google.javascript.rhino.JSDocInfo jSDocInfo92 = enumType89.getOwnPropertyJSDocInfo("Not declared as a type name");
        com.google.javascript.rhino.jstype.JSType jSType94 = enumType89.getPropertyType("function (): {1517638406}");
        boolean boolean95 = enumType89.hasCachedValues();
        boolean boolean96 = enumType89.matchesNumberContext();
        com.google.javascript.rhino.jstype.TemplateType templateType97 = enumType89.toMaybeTemplateType();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.ObjectType.Property property99 = templateType97.getOwnSlot("{-1939501217}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertNotNull(iterable90);
        org.junit.Assert.assertNull(jSDocInfo92);
        org.junit.Assert.assertNotNull(jSType94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNull(templateType97);
    }

    @Test
    public void test04031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04031");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.jstype.ObjectType objectType12 = jSTypeRegistry11.createAnonymousObjectType();
        jSTypeRegistry8.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType12);
        boolean boolean14 = objectType12.isNativeObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        boolean boolean18 = objectType17.isUnknownType();
        com.google.javascript.rhino.jstype.JSType jSType20 = objectType17.findPropertyType("true");
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.ObjectType objectType23 = jSTypeRegistry22.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType24 = objectType23.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable25 = objectType24.getCtorExtendedInterfaces();
        boolean boolean26 = objectType24.isStringValueType();
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27);
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.ObjectType objectType31 = jSTypeRegistry30.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType32 = objectType31.getParentScope();
        com.google.javascript.rhino.Node node34 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType35 = jSTypeRegistry28.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType31, node34);
        com.google.javascript.rhino.JSDocInfo jSDocInfo37 = new com.google.javascript.rhino.JSDocInfo();
        functionType35.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo37);
        int int39 = functionType35.getMaxArguments();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.ObjectType objectType42 = jSTypeRegistry41.createAnonymousObjectType();
        boolean boolean43 = objectType42.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType45 = objectType42.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46);
        com.google.javascript.rhino.jstype.ObjectType objectType48 = jSTypeRegistry47.createAnonymousObjectType();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.ErrorReporter errorReporter55 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry56 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter55);
        com.google.javascript.rhino.jstype.ObjectType objectType57 = jSTypeRegistry56.createAnonymousObjectType();
        jSTypeRegistry53.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType57);
        com.google.javascript.rhino.jstype.JSType jSType59 = jSTypeRegistry47.createFromTypeNodes(node50, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType57);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] { objectType12, objectType17, objectType24, functionType35, objectType42, objectType57 };
        com.google.javascript.rhino.Node node61 = jSTypeRegistry1.createParametersWithVarArgs(jSTypeArray60);
        com.google.javascript.rhino.ErrorReporter errorReporter62 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry63 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter62);
        com.google.javascript.rhino.ErrorReporter errorReporter64 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry65 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter64);
        com.google.javascript.rhino.jstype.ObjectType objectType66 = jSTypeRegistry65.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType67 = objectType66.getParentScope();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType70 = jSTypeRegistry63.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType66, node69);
        boolean boolean72 = functionType70.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType73 = functionType70.autoboxesTo();
        com.google.javascript.rhino.jstype.ObjectType objectType74 = functionType70.getTypeOfThis();
        com.google.javascript.rhino.jstype.JSType jSType75 = jSTypeRegistry1.createOptionalNullableType((com.google.javascript.rhino.jstype.JSType) objectType74);
        com.google.javascript.rhino.ErrorReporter errorReporter76 = jSTypeRegistry1.getErrorReporter();
        com.google.javascript.rhino.jstype.JSType jSType81 = jSTypeRegistry1.createNamedType("(function (): {2018380832})", "function (): {2118854728}", (int) '#', 130);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(objectType12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(jSType20);
        org.junit.Assert.assertNotNull(objectType23);
        org.junit.Assert.assertNotNull(objectType24);
        org.junit.Assert.assertNotNull(objectTypeIterable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objectType31);
        org.junit.Assert.assertNotNull(objectType32);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(functionType35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(objectType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(jSType45);
        org.junit.Assert.assertNotNull(objectType48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(objectType57);
        org.junit.Assert.assertNotNull(jSType59);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(objectType67);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertNotNull(functionType70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(jSType73);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(jSType75);
        org.junit.Assert.assertNull(errorReporter76);
        org.junit.Assert.assertNotNull(jSType81);
    }

    @Test
    public void test04032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04032");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        int int89 = parameterizedType88.getPropertiesCount();
        boolean boolean90 = parameterizedType88.isInterface();
        com.google.javascript.rhino.jstype.TemplateType templateType91 = parameterizedType88.toMaybeTemplateType();
        com.google.javascript.rhino.jstype.ObjectType.Property property93 = parameterizedType88.getSlot("function (): {1400734327}");
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType94 = parameterizedType88.toMaybeParameterizedType();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(templateType91);
        org.junit.Assert.assertNull(property93);
        org.junit.Assert.assertNotNull(parameterizedType94);
    }

    @Test
    public void test04033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04033");
        com.google.javascript.rhino.JSDocInfo.StringPosition stringPosition0 = new com.google.javascript.rhino.JSDocInfo.StringPosition();
        int int1 = stringPosition0.getPositionOnStartLine();
        int int2 = stringPosition0.getPositionOnEndLine();
        int int3 = stringPosition0.getPositionOnEndLine();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test04034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04034");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable10 = node9.siblings();
        int int11 = node9.getSideEffectFlags();
        boolean boolean12 = node9.isLabelName();
        com.google.javascript.rhino.Node node13 = node1.copyInformationFromForTree(node9);
        java.lang.Object obj15 = node13.getProp(51);
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable18 = node17.siblings();
        boolean boolean19 = node17.isAdd();
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable22 = node21.siblings();
        int int23 = node21.getSideEffectFlags();
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable26 = node25.siblings();
        node21.addChildToBack(node25);
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable30 = node29.siblings();
        int int31 = node29.getSideEffectFlags();
        boolean boolean32 = node29.isLabelName();
        com.google.javascript.rhino.Node node33 = node21.copyInformationFromForTree(node29);
        boolean boolean34 = node17.isEquivalentTo(node29);
        boolean boolean35 = node17.isReturn();
        boolean boolean36 = node17.isNull();
        int int37 = node13.getIndexOfChild(node17);
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newNumber((double) '#');
        boolean boolean40 = node17.isEquivalentTo(node39);
        node39.setSourceEncodedPosition((int) (short) 100);
        com.google.javascript.rhino.Node node43 = com.google.javascript.jscomp.NodeUtil.newExpr(node39);
        boolean boolean44 = node43.isString();
        com.google.javascript.rhino.Node[] nodeArray47 = new com.google.javascript.rhino.Node[] {};
        com.google.javascript.rhino.Node node50 = new com.google.javascript.rhino.Node((int) (short) 1, nodeArray47, 43, 50);
        com.google.javascript.rhino.Node node52 = com.google.javascript.rhino.Node.newString("");
        node52.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean56 = node52.isSyntheticBlock();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder57 = node52.new FileLevelJsDocBuilder();
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile58 = null;
        node52.setStaticSourceFile(staticSourceFile58);
        com.google.javascript.rhino.Node node61 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable62 = node61.siblings();
        int int63 = node61.getSideEffectFlags();
        com.google.javascript.rhino.Node node65 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable66 = node65.siblings();
        node61.addChildToBack(node65);
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        boolean boolean70 = node69.isComma();
        boolean boolean71 = node69.isOnlyModifiesThisCall();
        boolean boolean72 = node69.isSetterDef();
        com.google.javascript.rhino.Node node73 = node65.useSourceInfoFrom(node69);
        com.google.javascript.rhino.Node node76 = new com.google.javascript.rhino.Node(0, node50, node52, node69, (int) (short) 100, 15);
        boolean boolean77 = node52.isInc();
        com.google.javascript.rhino.ErrorReporter errorReporter78 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry79 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter78);
        com.google.javascript.rhino.jstype.ObjectType objectType80 = jSTypeRegistry79.createAnonymousObjectType();
        com.google.javascript.rhino.Node node82 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter84 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry85 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter84);
        com.google.javascript.rhino.ErrorReporter errorReporter87 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry88 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter87);
        com.google.javascript.rhino.jstype.ObjectType objectType89 = jSTypeRegistry88.createAnonymousObjectType();
        jSTypeRegistry85.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType89);
        com.google.javascript.rhino.jstype.JSType jSType91 = jSTypeRegistry79.createFromTypeNodes(node82, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType89);
        com.google.javascript.jscomp.CodingConvention.Bind bind92 = new com.google.javascript.jscomp.CodingConvention.Bind(node43, node52, node82);
        node52.setString("");
        boolean boolean95 = node52.isName();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeIterable10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(nodeIterable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(nodeIterable22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(nodeIterable26);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(nodeIterable30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(nodeArray47);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(nodeIterable62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(nodeIterable66);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objectType80);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNotNull(objectType89);
        org.junit.Assert.assertNotNull(jSType91);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test04035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04035");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString("");
        boolean boolean3 = node2.isComma();
        boolean boolean4 = node2.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString("");
        boolean boolean7 = node6.isComma();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        boolean boolean10 = node9.isComma();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString("");
        node12.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean16 = node12.isSyntheticBlock();
        boolean boolean17 = node9.isEquivalentToTyped(node12);
        com.google.javascript.rhino.Node node18 = new com.google.javascript.rhino.Node((int) (short) 1, node2, node6, node9);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder19 = node6.new FileLevelJsDocBuilder();
        node6.setQuotedString();
        boolean boolean21 = node6.isWhile();
        com.google.javascript.rhino.Node node22 = null;
        com.google.javascript.rhino.Node node23 = node6.getChildBefore(node22);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = node23.isScript();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(node23);
    }

    @Test
    public void test04036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04036");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        functionType8.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo10);
        boolean boolean12 = functionType8.isNominalType();
        com.google.javascript.rhino.Node node14 = functionType8.getPropertyNode("");
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        int int24 = functionType23.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable25 = functionType23.getOwnImplementedInterfaces();
        com.google.javascript.rhino.Node node26 = functionType23.getRootNode();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair27 = functionType8.getTypesUnderShallowInequality((com.google.javascript.rhino.jstype.JSType) functionType23);
        com.google.javascript.rhino.jstype.ObjectType objectType28 = com.google.javascript.rhino.jstype.ObjectType.cast((com.google.javascript.rhino.jstype.JSType) functionType23);
        java.lang.String str29 = objectType28.getDisplayName();
        com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> jSTypeStaticScope30 = objectType28.getParentScope();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable25);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNotNull(typePair27);
        org.junit.Assert.assertNotNull(objectType28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(jSTypeStaticScope30);
    }

    @Test
    public void test04037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04037");
        com.google.common.collect.ImmutableList.Builder<com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec> assertionFunctionSpecBuilder0 = com.google.common.collect.ImmutableList.builder();
        org.junit.Assert.assertNotNull(assertionFunctionSpecBuilder0);
    }

    @Test
    public void test04038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04038");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression4 = new com.google.javascript.rhino.JSTypeExpression(node1, "Not declared as a type name");
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable7 = node6.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression9 = new com.google.javascript.rhino.JSTypeExpression(node6, "Not declared as a type name");
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable12 = node11.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression14 = new com.google.javascript.rhino.JSTypeExpression(node11, "Not declared as a type name");
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable17 = node16.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression19 = new com.google.javascript.rhino.JSTypeExpression(node16, "Not declared as a type name");
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable22 = node21.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression24 = new com.google.javascript.rhino.JSTypeExpression(node21, "Not declared as a type name");
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable27 = node26.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression29 = new com.google.javascript.rhino.JSTypeExpression(node26, "Not declared as a type name");
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable32 = node31.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression34 = new com.google.javascript.rhino.JSTypeExpression(node31, "Not declared as a type name");
        com.google.javascript.rhino.Node node36 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable37 = node36.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression39 = new com.google.javascript.rhino.JSTypeExpression(node36, "Not declared as a type name");
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable42 = node41.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression44 = new com.google.javascript.rhino.JSTypeExpression(node41, "Not declared as a type name");
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression49 = new com.google.javascript.rhino.JSTypeExpression(node46, "Not declared as a type name");
        com.google.javascript.rhino.Node node51 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable52 = node51.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression54 = new com.google.javascript.rhino.JSTypeExpression(node51, "Not declared as a type name");
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList55 = com.google.common.collect.ImmutableList.of(jSTypeExpression4, jSTypeExpression9, jSTypeExpression14, jSTypeExpression19, jSTypeExpression24, jSTypeExpression29, jSTypeExpression34, jSTypeExpression39, jSTypeExpression44, jSTypeExpression49, jSTypeExpression54);
        boolean boolean56 = jSTypeExpression19.isVarArgs();
        com.google.javascript.rhino.Node node58 = com.google.javascript.rhino.Node.newNumber((double) '#');
        boolean boolean59 = node58.isNumber();
        boolean boolean60 = node58.isDec();
        com.google.javascript.rhino.JSDocInfo jSDocInfo61 = node58.getJSDocInfo();
        boolean boolean62 = jSTypeExpression19.equals((java.lang.Object) jSDocInfo61);
        boolean boolean63 = jSTypeExpression19.isVarArgs();
        com.google.javascript.rhino.Node node64 = jSTypeExpression19.getRoot();
        com.google.javascript.rhino.InputId inputId65 = node64.getInputId();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(nodeIterable7);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(nodeIterable12);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(nodeIterable17);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(nodeIterable22);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(nodeIterable27);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(nodeIterable32);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(nodeIterable37);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(nodeIterable42);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(nodeIterable52);
        org.junit.Assert.assertNotNull(jSTypeExpressionList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(jSDocInfo61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNull(inputId65);
    }

    @Test
    public void test04039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04039");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        functionType8.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo10);
        boolean boolean12 = functionType8.isUnknownType();
        com.google.javascript.rhino.jstype.FunctionType functionType14 = functionType8.getBindReturnType(0);
        boolean boolean15 = functionType14.isReturnTypeInferred();
        com.google.javascript.rhino.JSDocInfo jSDocInfo16 = functionType14.getJSDocInfo();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(functionType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(jSDocInfo16);
    }

    @Test
    public void test04040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04040");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        jSDocInfo2.addSuppression("");
        java.util.Collection<com.google.javascript.rhino.JSDocInfo.Marker> markerCollection11 = jSDocInfo2.getMarkers();
        boolean boolean12 = jSDocInfo2.containsDeclaration();
        boolean boolean13 = jSDocInfo2.isInterface();
        jSDocInfo2.setDeprecated(true);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression16 = jSDocInfo2.getBaseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertNotNull(markerCollection11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(jSTypeExpression16);
    }

    @Test
    public void test04041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04041");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        boolean boolean10 = functionType8.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType11 = functionType8.autoboxesTo();
        com.google.javascript.rhino.jstype.JSType jSType12 = functionType8.autoboxesTo();
        boolean boolean14 = functionType8.removeProperty("");
        boolean boolean15 = functionType8.isNominalConstructor();
        boolean boolean16 = functionType8.isEnumType();
        boolean boolean17 = functionType8.matchesStringContext();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(jSType11);
        org.junit.Assert.assertNull(jSType12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test04042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04042");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = objectType18.getCtorExtendedInterfaces();
        boolean boolean21 = objectType18.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo24.isConsistentIdGenerator();
        objectType18.setPropertyJSDocInfo("hi!", jSDocInfo24);
        boolean boolean34 = objectType18.isNullType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        jSTypeRegistry37.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean46 = jSDocInfo45.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean48 = jSDocInfo47.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList51 = com.google.common.collect.ImmutableList.of(jSDocInfo43, jSDocInfo44, jSDocInfo45, jSDocInfo47, jSDocInfo49);
        jSDocInfo45.addSuppression("");
        java.lang.String str55 = jSDocInfo45.getDescriptionForParameter("");
        objectType41.setJSDocInfo(jSDocInfo45);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        boolean boolean60 = node59.isComma();
        boolean boolean61 = node59.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        boolean boolean64 = node63.isComma();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        boolean boolean67 = node66.isComma();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        node69.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean73 = node69.isSyntheticBlock();
        boolean boolean74 = node66.isEquivalentToTyped(node69);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 1, node59, node63, node66);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node63.new FileLevelJsDocBuilder();
        boolean boolean77 = node63.isGetElem();
        boolean boolean78 = node63.isQualifiedName();
        boolean boolean79 = objectType18.defineSynthesizedProperty("{}", (com.google.javascript.rhino.jstype.JSType) objectType41, node63);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType83 = objectType82.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = objectType83.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType85 = objectType83.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType83.getImplicitPrototype();
        boolean boolean88 = objectType86.hasProperty("()");
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry1.createEnumType("?", node63, (com.google.javascript.rhino.jstype.JSType) objectType86);
        com.google.javascript.rhino.jstype.EnumType enumType90 = enumType89.toMaybeEnumType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType91 = enumType89.getElementsType();
        boolean boolean93 = enumElementType91.isPropertyTypeDeclared("true");
        boolean boolean95 = enumElementType91.hasProperty("{proxy:{269772458}}");
        com.google.javascript.rhino.jstype.EnumElementType enumElementType96 = enumElementType91.toMaybeEnumElementType();
        com.google.javascript.rhino.jstype.JSType jSType98 = enumElementType91.getPropertyType("{-1939501217}");
        com.google.javascript.rhino.jstype.ObjectType objectType99 = enumElementType91.getImplicitPrototype();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertNotNull(enumType90);
        org.junit.Assert.assertNotNull(enumElementType91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(enumElementType96);
        org.junit.Assert.assertNotNull(jSType98);
        org.junit.Assert.assertNull(objectType99);
    }

    @Test
    public void test04043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04043");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        node1.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean5 = com.google.javascript.jscomp.NodeUtil.isRelationalOperation(node1);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable8 = node7.siblings();
        int int9 = node7.getSideEffectFlags();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable12 = node11.siblings();
        node7.addChildToBack(node11);
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString("");
        boolean boolean16 = node15.isComma();
        boolean boolean17 = node15.isOnlyModifiesThisCall();
        boolean boolean18 = node15.isSetterDef();
        com.google.javascript.rhino.Node node19 = node11.useSourceInfoFrom(node15);
        com.google.javascript.rhino.Node node20 = node19.getParent();
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable21 = node20.getAncestors();
        boolean boolean22 = node20.isExprResult();
        node20.setSourceEncodedPosition((int) (short) 100);
        com.google.javascript.rhino.Node node25 = node1.useSourceInfoFrom(node20);
        boolean boolean26 = node1.isBlock();
        boolean boolean27 = node1.isIf();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(nodeIterable8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(nodeIterable12);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(ancestorIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test04044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04044");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType3 = objectType2.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable4 = objectType3.getCtorExtendedInterfaces();
        boolean boolean6 = objectType3.removeProperty("hi!");
        com.google.javascript.rhino.jstype.JSType jSType7 = objectType3.restrictByNotNullOrUndefined();
        boolean boolean8 = objectType3.isArrayType();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(objectType3);
        org.junit.Assert.assertNotNull(objectTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(jSType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test04045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04045");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode resolveMode14 = null;
        jSTypeRegistry1.setResolveMode(resolveMode14);
        boolean boolean16 = jSTypeRegistry1.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.ObjectType objectType21 = jSTypeRegistry20.createAnonymousObjectType();
        boolean boolean22 = objectType21.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType24 = objectType21.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType26 = jSTypeRegistry18.getGreatestSubtypeWithProperty(jSType24, "");
        jSTypeRegistry18.forwardDeclareType("");
        boolean boolean30 = jSTypeRegistry18.isForwardDeclaredType("STRING ");
        jSTypeRegistry18.incrementGeneration();
        boolean boolean33 = jSTypeRegistry18.isForwardDeclaredType("Unknown class name");
        com.google.javascript.rhino.ErrorReporter errorReporter34 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry35 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter34);
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.ObjectType objectType39 = jSTypeRegistry38.createAnonymousObjectType();
        jSTypeRegistry35.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType39);
        com.google.javascript.rhino.ErrorReporter errorReporter41 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry42 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.ObjectType objectType46 = jSTypeRegistry45.createAnonymousObjectType();
        jSTypeRegistry42.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType46);
        boolean boolean48 = objectType46.isNativeObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry50 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49);
        com.google.javascript.rhino.jstype.ObjectType objectType51 = jSTypeRegistry50.createAnonymousObjectType();
        boolean boolean52 = objectType51.isUnknownType();
        com.google.javascript.rhino.jstype.JSType jSType54 = objectType51.findPropertyType("true");
        com.google.javascript.rhino.ErrorReporter errorReporter55 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry56 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter55);
        com.google.javascript.rhino.jstype.ObjectType objectType57 = jSTypeRegistry56.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType58 = objectType57.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable59 = objectType58.getCtorExtendedInterfaces();
        boolean boolean60 = objectType58.isStringValueType();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.JSDocInfo jSDocInfo71 = new com.google.javascript.rhino.JSDocInfo();
        functionType69.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo71);
        int int73 = functionType69.getMaxArguments();
        com.google.javascript.rhino.ErrorReporter errorReporter74 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry75 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter74);
        com.google.javascript.rhino.jstype.ObjectType objectType76 = jSTypeRegistry75.createAnonymousObjectType();
        boolean boolean77 = objectType76.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType79 = objectType76.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.Node node84 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter86 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry87 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter86);
        com.google.javascript.rhino.ErrorReporter errorReporter89 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry90 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter89);
        com.google.javascript.rhino.jstype.ObjectType objectType91 = jSTypeRegistry90.createAnonymousObjectType();
        jSTypeRegistry87.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType91);
        com.google.javascript.rhino.jstype.JSType jSType93 = jSTypeRegistry81.createFromTypeNodes(node84, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType91);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray94 = new com.google.javascript.rhino.jstype.JSType[] { objectType46, objectType51, objectType58, functionType69, objectType76, objectType91 };
        com.google.javascript.rhino.Node node95 = jSTypeRegistry35.createParametersWithVarArgs(jSTypeArray94);
        com.google.javascript.rhino.Node node96 = jSTypeRegistry18.createParameters(jSTypeArray94);
        com.google.javascript.rhino.Node node97 = jSTypeRegistry1.createOptionalParameters(jSTypeArray94);
        com.google.common.collect.ImmutableList<java.io.Serializable> serializableList98 = com.google.common.collect.ImmutableList.copyOf((java.io.Serializable[]) jSTypeArray94);
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objectType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSType24);
        org.junit.Assert.assertNotNull(jSType26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objectType39);
        org.junit.Assert.assertNotNull(objectType46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objectType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(jSType54);
        org.junit.Assert.assertNotNull(objectType57);
        org.junit.Assert.assertNotNull(objectType58);
        org.junit.Assert.assertNotNull(objectTypeIterable59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(objectType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(jSType79);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertNotNull(objectType91);
        org.junit.Assert.assertNotNull(jSType93);
        org.junit.Assert.assertNotNull(jSTypeArray94);
        org.junit.Assert.assertNotNull(node95);
        org.junit.Assert.assertNotNull(node96);
        org.junit.Assert.assertNotNull(node97);
        org.junit.Assert.assertNotNull(serializableList98);
    }

    @Test
    public void test04046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04046");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.jstype.ObjectType objectType12 = jSTypeRegistry11.createAnonymousObjectType();
        jSTypeRegistry8.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType12);
        boolean boolean14 = objectType12.isNativeObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        boolean boolean18 = objectType17.isUnknownType();
        com.google.javascript.rhino.jstype.JSType jSType20 = objectType17.findPropertyType("true");
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.ObjectType objectType23 = jSTypeRegistry22.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType24 = objectType23.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable25 = objectType24.getCtorExtendedInterfaces();
        boolean boolean26 = objectType24.isStringValueType();
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27);
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.ObjectType objectType31 = jSTypeRegistry30.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType32 = objectType31.getParentScope();
        com.google.javascript.rhino.Node node34 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType35 = jSTypeRegistry28.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType31, node34);
        com.google.javascript.rhino.JSDocInfo jSDocInfo37 = new com.google.javascript.rhino.JSDocInfo();
        functionType35.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo37);
        int int39 = functionType35.getMaxArguments();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.ObjectType objectType42 = jSTypeRegistry41.createAnonymousObjectType();
        boolean boolean43 = objectType42.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType45 = objectType42.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46);
        com.google.javascript.rhino.jstype.ObjectType objectType48 = jSTypeRegistry47.createAnonymousObjectType();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.ErrorReporter errorReporter55 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry56 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter55);
        com.google.javascript.rhino.jstype.ObjectType objectType57 = jSTypeRegistry56.createAnonymousObjectType();
        jSTypeRegistry53.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType57);
        com.google.javascript.rhino.jstype.JSType jSType59 = jSTypeRegistry47.createFromTypeNodes(node50, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType57);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] { objectType12, objectType17, objectType24, functionType35, objectType42, objectType57 };
        com.google.javascript.rhino.Node node61 = jSTypeRegistry1.createParametersWithVarArgs(jSTypeArray60);
        jSTypeRegistry1.incrementGeneration();
        boolean boolean63 = jSTypeRegistry1.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter64 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry65 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter64);
        com.google.javascript.rhino.ErrorReporter errorReporter66 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry67 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter66);
        com.google.javascript.rhino.jstype.ObjectType objectType68 = jSTypeRegistry67.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType69 = objectType68.getParentScope();
        com.google.javascript.rhino.Node node71 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType72 = jSTypeRegistry65.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType68, node71);
        com.google.javascript.rhino.JSDocInfo jSDocInfo74 = new com.google.javascript.rhino.JSDocInfo();
        functionType72.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo74);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable76 = functionType72.getAllImplementedInterfaces();
        com.google.javascript.rhino.ErrorReporter errorReporter77 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry78 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter77);
        com.google.javascript.rhino.ErrorReporter errorReporter79 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry80 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter79);
        com.google.javascript.rhino.jstype.ObjectType objectType81 = jSTypeRegistry80.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType82 = objectType81.getParentScope();
        com.google.javascript.rhino.Node node84 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = jSTypeRegistry78.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType81, node84);
        boolean boolean87 = functionType85.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType88 = functionType85.autoboxesTo();
        com.google.javascript.rhino.jstype.JSType jSType89 = functionType85.autoboxesTo();
        boolean boolean91 = functionType85.removeProperty("");
        java.lang.String str92 = functionType85.getDisplayName();
        com.google.javascript.rhino.jstype.TemplateType templateType93 = functionType85.toMaybeTemplateType();
        com.google.javascript.rhino.jstype.FunctionType functionType94 = jSTypeRegistry1.createFunctionTypeWithNewReturnType(functionType72, (com.google.javascript.rhino.jstype.JSType) functionType85);
        com.google.javascript.rhino.jstype.FunctionType functionType95 = functionType94.getConstructor();
        boolean boolean96 = functionType94.isInstanceType();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(objectType12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(jSType20);
        org.junit.Assert.assertNotNull(objectType23);
        org.junit.Assert.assertNotNull(objectType24);
        org.junit.Assert.assertNotNull(objectTypeIterable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objectType31);
        org.junit.Assert.assertNotNull(objectType32);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(functionType35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(objectType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(jSType45);
        org.junit.Assert.assertNotNull(objectType48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(objectType57);
        org.junit.Assert.assertNotNull(jSType59);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objectType68);
        org.junit.Assert.assertNotNull(objectType69);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(functionType72);
        org.junit.Assert.assertNotNull(objectTypeIterable76);
        org.junit.Assert.assertNotNull(objectType81);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(jSType88);
        org.junit.Assert.assertNull(jSType89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(templateType93);
        org.junit.Assert.assertNotNull(functionType94);
        org.junit.Assert.assertNull(functionType95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test04047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04047");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = objectType18.getCtorExtendedInterfaces();
        boolean boolean21 = objectType18.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo24.isConsistentIdGenerator();
        objectType18.setPropertyJSDocInfo("hi!", jSDocInfo24);
        boolean boolean34 = objectType18.isNullType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        jSTypeRegistry37.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean46 = jSDocInfo45.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean48 = jSDocInfo47.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList51 = com.google.common.collect.ImmutableList.of(jSDocInfo43, jSDocInfo44, jSDocInfo45, jSDocInfo47, jSDocInfo49);
        jSDocInfo45.addSuppression("");
        java.lang.String str55 = jSDocInfo45.getDescriptionForParameter("");
        objectType41.setJSDocInfo(jSDocInfo45);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        boolean boolean60 = node59.isComma();
        boolean boolean61 = node59.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        boolean boolean64 = node63.isComma();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        boolean boolean67 = node66.isComma();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        node69.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean73 = node69.isSyntheticBlock();
        boolean boolean74 = node66.isEquivalentToTyped(node69);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 1, node59, node63, node66);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node63.new FileLevelJsDocBuilder();
        boolean boolean77 = node63.isGetElem();
        boolean boolean78 = node63.isQualifiedName();
        boolean boolean79 = objectType18.defineSynthesizedProperty("{}", (com.google.javascript.rhino.jstype.JSType) objectType41, node63);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType83 = objectType82.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = objectType83.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType85 = objectType83.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType83.getImplicitPrototype();
        boolean boolean88 = objectType86.hasProperty("()");
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry1.createEnumType("?", node63, (com.google.javascript.rhino.jstype.JSType) objectType86);
        java.lang.Iterable iterable90 = enumType89.getCtorExtendedInterfaces();
        boolean boolean91 = enumType89.hasReferenceName();
        com.google.javascript.rhino.jstype.UnionType unionType92 = enumType89.toMaybeUnionType();
        java.lang.Iterable iterable93 = enumType89.getCtorImplementedInterfaces();
        com.google.javascript.rhino.jstype.ObjectType objectType94 = enumType89.getImplicitPrototype();
        com.google.javascript.rhino.Node node95 = enumType89.getRootNode();
        java.lang.Iterable iterable96 = enumType89.getCtorExtendedInterfaces();
        java.lang.String str97 = enumType89.getDisplayName();
        boolean boolean99 = enumType89.isPropertyInExterns("function (): {1804297139}");
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertNotNull(iterable90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(unionType92);
        org.junit.Assert.assertNotNull(iterable93);
        org.junit.Assert.assertNotNull(objectType94);
        org.junit.Assert.assertNull(node95);
        org.junit.Assert.assertNotNull(iterable96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "?" + "'", str97, "?");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test04048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04048");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        boolean boolean2 = node1.isComma();
        boolean boolean3 = node1.isOnlyModifiesThisCall();
        boolean boolean4 = node1.isVarArgs();
        boolean boolean5 = node1.isAssignAdd();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test04049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04049");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        boolean boolean5 = objectType4.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType7 = objectType4.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType9 = jSTypeRegistry1.getGreatestSubtypeWithProperty(jSType7, "");
        jSTypeRegistry1.forwardDeclareType("");
        boolean boolean12 = jSTypeRegistry1.shouldTolerateUndefinedValues();
        jSTypeRegistry1.incrementGeneration();
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.ObjectType objectType18 = jSTypeRegistry17.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType19 = objectType18.getParentScope();
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType22 = jSTypeRegistry15.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType18, node21);
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        functionType22.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo24);
        boolean boolean26 = functionType22.isNominalType();
        com.google.javascript.rhino.Node node28 = functionType22.getPropertyNode("");
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.jstype.ObjectType objectType33 = jSTypeRegistry32.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType34 = objectType33.getParentScope();
        com.google.javascript.rhino.Node node36 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType37 = jSTypeRegistry30.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType33, node36);
        int int38 = functionType37.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable39 = functionType37.getOwnImplementedInterfaces();
        com.google.javascript.rhino.Node node40 = functionType37.getRootNode();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair41 = functionType22.getTypesUnderShallowInequality((com.google.javascript.rhino.jstype.JSType) functionType37);
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry43 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.ObjectType objectType47 = jSTypeRegistry46.createAnonymousObjectType();
        jSTypeRegistry43.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType47);
        com.google.javascript.rhino.jstype.JSType jSType49 = objectType47.autoboxesTo();
        com.google.javascript.rhino.jstype.UnionType unionType50 = objectType47.toMaybeUnionType();
        boolean boolean51 = objectType47.isUnknownType();
        com.google.javascript.rhino.jstype.JSType jSType52 = objectType47.autobox();
        com.google.javascript.rhino.jstype.JSType jSType54 = objectType47.getRestrictedTypeGivenToBooleanOutcome(false);
        boolean boolean55 = objectType47.isVoidType();
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue56 = functionType22.testForEquality((com.google.javascript.rhino.jstype.JSType) objectType47);
        com.google.javascript.rhino.jstype.JSType jSType61 = jSTypeRegistry1.getType((com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType47, "[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]", "Unknown", (int) (short) 1, 46);
        java.lang.String str62 = objectType47.toAnnotationString();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSType7);
        org.junit.Assert.assertNotNull(jSType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(functionType22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNotNull(objectType33);
        org.junit.Assert.assertNotNull(objectType34);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(functionType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(typePair41);
        org.junit.Assert.assertNotNull(objectType47);
        org.junit.Assert.assertNull(jSType49);
        org.junit.Assert.assertNull(unionType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(jSType52);
        org.junit.Assert.assertNotNull(jSType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(ternaryValue56);
        org.junit.Assert.assertNotNull(jSType61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{}" + "'", str62, "{}");
    }

    @Test
    public void test04050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04050");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        int int9 = functionType8.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable10 = functionType8.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot12 = functionType8.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.ObjectType objectType13 = com.google.javascript.rhino.jstype.ObjectType.cast((com.google.javascript.rhino.jstype.JSType) functionType8);
        boolean boolean14 = objectType13.matchesUint32Context();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable10);
        org.junit.Assert.assertNull(staticSlot12);
        org.junit.Assert.assertNotNull(objectType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test04051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04051");
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition0 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable3 = node2.siblings();
        namePosition0.setItem(node2);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString("");
        boolean boolean7 = node6.isComma();
        namePosition0.setItem(node6);
        int int9 = namePosition0.getPositionOnStartLine();
        com.google.javascript.rhino.Node node10 = namePosition0.getItem();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable13 = node12.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression15 = new com.google.javascript.rhino.JSTypeExpression(node12, "Not declared as a type name");
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable18 = node17.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression20 = new com.google.javascript.rhino.JSTypeExpression(node17, "Not declared as a type name");
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable23 = node22.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression25 = new com.google.javascript.rhino.JSTypeExpression(node22, "Not declared as a type name");
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable28 = node27.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression30 = new com.google.javascript.rhino.JSTypeExpression(node27, "Not declared as a type name");
        com.google.javascript.rhino.Node node32 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable33 = node32.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression35 = new com.google.javascript.rhino.JSTypeExpression(node32, "Not declared as a type name");
        com.google.javascript.rhino.Node node37 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable38 = node37.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression40 = new com.google.javascript.rhino.JSTypeExpression(node37, "Not declared as a type name");
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable43 = node42.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression45 = new com.google.javascript.rhino.JSTypeExpression(node42, "Not declared as a type name");
        com.google.javascript.rhino.Node node47 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable48 = node47.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression50 = new com.google.javascript.rhino.JSTypeExpression(node47, "Not declared as a type name");
        com.google.javascript.rhino.Node node52 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable53 = node52.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression55 = new com.google.javascript.rhino.JSTypeExpression(node52, "Not declared as a type name");
        com.google.javascript.rhino.Node node57 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable58 = node57.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression60 = new com.google.javascript.rhino.JSTypeExpression(node57, "Not declared as a type name");
        com.google.javascript.rhino.Node node62 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable63 = node62.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression65 = new com.google.javascript.rhino.JSTypeExpression(node62, "Not declared as a type name");
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList66 = com.google.common.collect.ImmutableList.of(jSTypeExpression15, jSTypeExpression20, jSTypeExpression25, jSTypeExpression30, jSTypeExpression35, jSTypeExpression40, jSTypeExpression45, jSTypeExpression50, jSTypeExpression55, jSTypeExpression60, jSTypeExpression65);
        com.google.javascript.rhino.Node node67 = jSTypeExpression45.getRoot();
        node10.addChildrenToFront(node67);
        com.google.javascript.rhino.Node node69 = node10.cloneTree();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNotNull(nodeIterable3);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(nodeIterable13);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(nodeIterable18);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(nodeIterable23);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(nodeIterable28);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(nodeIterable33);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(nodeIterable38);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(nodeIterable43);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(nodeIterable48);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(nodeIterable53);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(nodeIterable58);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(nodeIterable63);
        org.junit.Assert.assertNotNull(jSTypeExpressionList66);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(node69);
    }

    @Test
    public void test04052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04052");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        boolean boolean10 = functionType8.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType11 = functionType8.autoboxesTo();
        com.google.javascript.rhino.jstype.ObjectType objectType12 = functionType8.getTypeOfThis();
        com.google.javascript.rhino.jstype.FunctionType functionType13 = functionType8.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.JSType jSType15 = functionType8.getRestrictedTypeGivenToBooleanOutcome(true);
        boolean boolean16 = functionType8.canBeCalled();
        com.google.javascript.rhino.jstype.FunctionType functionType17 = functionType8.getOwnerFunction();
        java.lang.String str18 = functionType8.toAnnotationString();
        functionType8.clearCachedValues();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(jSType11);
        org.junit.Assert.assertNotNull(objectType12);
        org.junit.Assert.assertNotNull(functionType13);
        org.junit.Assert.assertNotNull(jSType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(functionType17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "function (): {}" + "'", str18, "function (): {}");
    }

    @Test
    public void test04053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04053");
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition0 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable3 = node2.siblings();
        namePosition0.setItem(node2);
        com.google.javascript.rhino.Node node5 = namePosition0.getItem();
        boolean boolean6 = node5.isDo();
        com.google.javascript.rhino.Node node7 = node5.cloneTree();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        node9.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean13 = node9.isSyntheticBlock();
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition14 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable17 = node16.siblings();
        namePosition14.setItem(node16);
        com.google.javascript.rhino.Node node19 = namePosition14.getItem();
        boolean boolean20 = node19.isNE();
        int int21 = node19.getCharno();
        com.google.javascript.rhino.Node node22 = node9.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean23 = node19.isQuotedString();
        com.google.javascript.rhino.Node node24 = node7.srcref(node19);
        boolean boolean25 = node7.isComma();
        int int27 = node7.getIntProp(4096);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNotNull(nodeIterable3);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(nodeIterable17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test04054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04054");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        boolean boolean3 = node1.isAdd();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        int int7 = node5.getSideEffectFlags();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable10 = node9.siblings();
        node5.addChildToBack(node9);
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable14 = node13.siblings();
        int int15 = node13.getSideEffectFlags();
        boolean boolean16 = node13.isLabelName();
        com.google.javascript.rhino.Node node17 = node5.copyInformationFromForTree(node13);
        boolean boolean18 = node1.isEquivalentTo(node13);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression20 = new com.google.javascript.rhino.JSTypeExpression(node13, "");
        boolean boolean21 = com.google.javascript.jscomp.NodeUtil.isRelationalOperation(node13);
        boolean boolean22 = node13.isLabelName();
        boolean boolean23 = node13.isCatch();
        node13.removeProp(35);
        com.google.javascript.rhino.Node node26 = node13.getLastChild();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeIterable10);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeIterable14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(node26);
    }

    @Test
    public void test04055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04055");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        boolean boolean89 = parameterizedType88.matchesObjectContext();
        boolean boolean91 = parameterizedType88.isPropertyInExterns("function (): {920092260}");
        com.google.javascript.rhino.jstype.JSType jSType93 = parameterizedType88.findPropertyType("true");
        boolean boolean94 = parameterizedType88.isCheckedUnknownType();
        com.google.javascript.rhino.jstype.EnumType enumType95 = parameterizedType88.toMaybeEnumType();
        com.google.javascript.rhino.jstype.JSType jSType96 = null;
        boolean boolean97 = parameterizedType88.isEquivalentTo(jSType96);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(jSType93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(enumType95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test04056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04056");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString("");
        node2.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        node2.setSourceEncodedPosition((-1));
        boolean boolean8 = node2.isFunction();
        com.google.javascript.rhino.Node node10 = node2.getAncestor((int) (byte) 0);
        boolean boolean11 = node10.isNumber();
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString("");
        node13.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        node13.setSourceEncodedPosition((-1));
        boolean boolean19 = node13.isFunction();
        com.google.javascript.rhino.Node node21 = node13.getAncestor((int) (byte) 0);
        boolean boolean22 = node21.isComma();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable25 = node24.siblings();
        int int26 = node24.getSideEffectFlags();
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable29 = node28.siblings();
        node24.addChildToBack(node28);
        com.google.javascript.rhino.Node node32 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable33 = node32.siblings();
        int int34 = node32.getSideEffectFlags();
        boolean boolean35 = node32.isLabelName();
        com.google.javascript.rhino.Node node36 = node24.copyInformationFromForTree(node32);
        com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node(41, node10, node21, node36);
        boolean boolean38 = node10.isNot();
        boolean boolean39 = node10.isGetProp();
        boolean boolean40 = node10.isNumber();
        boolean boolean41 = node10.isWhile();
        boolean boolean42 = node10.isDo();
        boolean boolean43 = node10.isGetterDef();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(nodeIterable25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(nodeIterable29);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(nodeIterable33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test04057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04057");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        boolean boolean9 = jSDocInfo0.isNoCompile();
        boolean boolean10 = jSDocInfo0.isConstructor();
        java.lang.String str11 = jSDocInfo0.getReturnDescription();
        java.util.List<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList12 = jSDocInfo0.getThrownTypes();
        boolean boolean13 = jSDocInfo0.isDeprecated();
        java.lang.String str14 = jSDocInfo0.getOriginalCommentString();
        jSDocInfo0.addSuppression("function (): {572156299}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(jSTypeExpressionList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test04058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04058");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        boolean boolean5 = objectType4.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType7 = objectType4.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType9 = jSTypeRegistry1.getGreatestSubtypeWithProperty(jSType7, "");
        jSTypeRegistry1.forwardDeclareType("");
        boolean boolean13 = jSTypeRegistry1.isForwardDeclaredType("STRING ");
        jSTypeRegistry1.incrementGeneration();
        boolean boolean16 = jSTypeRegistry1.isForwardDeclaredType("Unknown class name");
        jSTypeRegistry1.identifyNonNullableName("[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]");
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.ObjectType objectType21 = jSTypeRegistry20.createAnonymousObjectType();
        com.google.javascript.rhino.Node node23 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter25 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry26 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter25);
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.ObjectType objectType30 = jSTypeRegistry29.createAnonymousObjectType();
        jSTypeRegistry26.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType30);
        com.google.javascript.rhino.jstype.JSType jSType32 = jSTypeRegistry20.createFromTypeNodes(node23, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType30);
        com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode resolveMode33 = null;
        jSTypeRegistry20.setResolveMode(resolveMode33);
        com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35);
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.ObjectType objectType39 = jSTypeRegistry38.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType40 = objectType39.getParentScope();
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType43 = jSTypeRegistry36.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType39, node42);
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        functionType43.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo45);
        int int47 = functionType43.getMaxArguments();
        java.lang.String str48 = functionType43.getDisplayName();
        int int49 = functionType43.getMaxArguments();
        boolean boolean50 = functionType43.canBeCalled();
        boolean boolean51 = functionType43.isUnionType();
        jSTypeRegistry20.resolveTypesInScope((com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType43);
        java.util.Set<java.lang.String> strSet53 = functionType43.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.ObjectType objectType54 = jSTypeRegistry1.createObjectType((com.google.javascript.rhino.jstype.ObjectType) functionType43);
        boolean boolean55 = functionType43.isInstanceType();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSType7);
        org.junit.Assert.assertNotNull(jSType9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objectType21);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(objectType30);
        org.junit.Assert.assertNotNull(jSType32);
        org.junit.Assert.assertNotNull(objectType39);
        org.junit.Assert.assertNotNull(objectType40);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(functionType43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNotNull(objectType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test04059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04059");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        boolean boolean89 = parameterizedType88.matchesObjectContext();
        boolean boolean90 = parameterizedType88.isNoObjectType();
        com.google.javascript.rhino.jstype.FunctionType functionType91 = parameterizedType88.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> jSTypeStaticSlot93 = parameterizedType88.getSlot("false");
        com.google.javascript.rhino.jstype.FunctionType functionType94 = parameterizedType88.getConstructor();
        java.lang.Iterable iterable95 = parameterizedType88.getCtorImplementedInterfaces();
        com.google.javascript.rhino.jstype.TemplateType templateType96 = parameterizedType88.toMaybeTemplateType();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(functionType91);
        org.junit.Assert.assertNull(jSTypeStaticSlot93);
        org.junit.Assert.assertNull(functionType94);
        org.junit.Assert.assertNotNull(iterable95);
        org.junit.Assert.assertNull(templateType96);
    }

    @Test
    public void test04060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04060");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        boolean boolean5 = objectType4.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType7 = objectType4.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType9 = jSTypeRegistry1.getGreatestSubtypeWithProperty(jSType7, "");
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.ObjectType objectType14 = jSTypeRegistry13.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType15 = objectType14.getParentScope();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType18 = jSTypeRegistry11.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType14, node17);
        java.lang.String str19 = functionType18.getDisplayName();
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable22 = node21.siblings();
        int int23 = node21.getSideEffectFlags();
        boolean boolean24 = node21.isLabelName();
        boolean boolean25 = node21.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType26 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType18, node21);
        java.lang.String str27 = functionType26.getReferenceName();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.ObjectType objectType30 = jSTypeRegistry29.createAnonymousObjectType();
        boolean boolean31 = objectType30.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType33 = objectType30.getRestrictedTypeGivenToBooleanOutcome(true);
        boolean boolean34 = objectType30.hasDisplayName();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair35 = functionType26.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) objectType30);
        boolean boolean36 = functionType26.isInstanceType();
        boolean boolean38 = functionType26.hasProperty("Not declared as a type name");
        com.google.javascript.rhino.jstype.ObjectType.Property property40 = functionType26.getSlot("Node tree inequality:\nTree1:\nSTRING function (): {1509755181}\n\n\nTree2:\nSTRING \n\n\nSubtree1: STRING function (): {1509755181}\n\n\nSubtree2: STRING \n");
        com.google.javascript.rhino.jstype.EnumElementType enumElementType41 = functionType26.toMaybeEnumElementType();
        com.google.javascript.rhino.jstype.JSType jSType42 = functionType26.unboxesTo();
        boolean boolean43 = functionType26.matchesInt32Context();
        boolean boolean45 = functionType26.isPropertyTypeDeclared("function (): {197757076}");
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSType7);
        org.junit.Assert.assertNotNull(jSType9);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(functionType18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(nodeIterable22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(functionType26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objectType30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typePair35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(property40);
        org.junit.Assert.assertNull(enumElementType41);
        org.junit.Assert.assertNull(jSType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test04061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04061");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        int int89 = parameterizedType88.getPropertiesCount();
        boolean boolean90 = parameterizedType88.isCheckedUnknownType();
        boolean boolean92 = parameterizedType88.removeProperty("false");
        java.util.Set set93 = parameterizedType88.getOwnPropertyNames();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(set93);
    }

    @Test
    public void test04062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04062");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        boolean boolean5 = objectType4.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType7 = objectType4.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType9 = jSTypeRegistry1.getGreatestSubtypeWithProperty(jSType7, "");
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.ObjectType objectType14 = jSTypeRegistry13.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType15 = objectType14.getParentScope();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType18 = jSTypeRegistry11.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType14, node17);
        java.lang.String str19 = functionType18.getDisplayName();
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable22 = node21.siblings();
        int int23 = node21.getSideEffectFlags();
        boolean boolean24 = node21.isLabelName();
        boolean boolean25 = node21.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType26 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType18, node21);
        boolean boolean28 = jSTypeRegistry1.isForwardDeclaredType("true");
        jSTypeRegistry1.clearTemplateTypeNames();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30, false);
        boolean boolean34 = jSTypeRegistry32.hasNamespace("Not declared as a constructor");
        com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35);
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.ObjectType objectType39 = jSTypeRegistry38.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType40 = objectType39.getParentScope();
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType43 = jSTypeRegistry36.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType39, node42);
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        functionType43.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo45);
        int int47 = functionType43.getMaxArguments();
        java.lang.String str48 = functionType43.getDisplayName();
        int int49 = functionType43.getMaxArguments();
        boolean boolean50 = functionType43.isArrayType();
        boolean boolean51 = functionType43.isInstanceType();
        int int52 = functionType43.getMinArguments();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry54 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53);
        com.google.javascript.rhino.ErrorReporter errorReporter55 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry56 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter55);
        com.google.javascript.rhino.jstype.ObjectType objectType57 = jSTypeRegistry56.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType58 = objectType57.getParentScope();
        com.google.javascript.rhino.Node node60 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType61 = jSTypeRegistry54.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType57, node60);
        boolean boolean63 = functionType61.removeProperty("");
        com.google.javascript.rhino.ErrorReporter errorReporter64 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry65 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter64);
        com.google.javascript.rhino.jstype.ObjectType objectType66 = jSTypeRegistry65.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType67 = objectType66.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable68 = objectType67.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType69 = objectType67.collapseUnion();
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.jstype.ObjectType objectType72 = jSTypeRegistry71.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType73 = objectType72.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable74 = objectType73.getCtorExtendedInterfaces();
        boolean boolean76 = objectType73.removeProperty("hi!");
        com.google.javascript.rhino.jstype.JSType.TypePair typePair77 = jSType69.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) objectType73);
        boolean boolean78 = functionType61.isSubtype((com.google.javascript.rhino.jstype.JSType) objectType73);
        com.google.javascript.rhino.jstype.JSType jSType80 = functionType61.getPropertyType("hi!");
        com.google.javascript.rhino.jstype.JSType jSType81 = functionType61.unboxesTo();
        com.google.javascript.rhino.jstype.FunctionType[] functionTypeArray82 = new com.google.javascript.rhino.jstype.FunctionType[] { functionType43, functionType61 };
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.jstype.FunctionType> functionTypeList83 = com.google.common.collect.ImmutableList.copyOf(functionTypeArray82);
        com.google.javascript.rhino.Node node84 = jSTypeRegistry32.createOptionalParameters((com.google.javascript.rhino.jstype.JSType[]) functionTypeArray82);
        com.google.javascript.rhino.jstype.JSType jSType85 = jSTypeRegistry1.createUnionType((com.google.javascript.rhino.jstype.JSType[]) functionTypeArray82);
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSType7);
        org.junit.Assert.assertNotNull(jSType9);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(functionType18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(nodeIterable22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(functionType26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType39);
        org.junit.Assert.assertNotNull(objectType40);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(functionType43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(objectType57);
        org.junit.Assert.assertNotNull(objectType58);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(functionType61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(objectType67);
        org.junit.Assert.assertNotNull(objectTypeIterable68);
        org.junit.Assert.assertNotNull(jSType69);
        org.junit.Assert.assertNotNull(objectType72);
        org.junit.Assert.assertNotNull(objectType73);
        org.junit.Assert.assertNotNull(objectTypeIterable74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typePair77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(jSType80);
        org.junit.Assert.assertNull(jSType81);
        org.junit.Assert.assertNotNull(functionTypeArray82);
        org.junit.Assert.assertNotNull(functionTypeList83);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertNotNull(jSType85);
    }

    @Test
    public void test04063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04063");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        com.google.javascript.rhino.jstype.JSType jSType8 = node1.getJSType();
        node1.setLineno(36);
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable13 = node12.siblings();
        boolean boolean14 = node12.isAdd();
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable17 = node16.siblings();
        int int18 = node16.getSideEffectFlags();
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable21 = node20.siblings();
        node16.addChildToBack(node20);
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable25 = node24.siblings();
        int int26 = node24.getSideEffectFlags();
        boolean boolean27 = node24.isLabelName();
        com.google.javascript.rhino.Node node28 = node16.copyInformationFromForTree(node24);
        boolean boolean29 = node12.isEquivalentTo(node24);
        boolean boolean30 = node12.isOr();
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile31 = node12.getStaticSourceFile();
        com.google.javascript.rhino.Node node32 = node1.copyInformationFromForTree(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35);
        com.google.javascript.rhino.jstype.ObjectType objectType37 = jSTypeRegistry36.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType38 = objectType37.getParentScope();
        com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType41 = jSTypeRegistry34.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType37, node40);
        boolean boolean43 = functionType41.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType44 = functionType41.autoboxesTo();
        com.google.javascript.rhino.jstype.JSType jSType45 = functionType41.autoboxesTo();
        boolean boolean47 = functionType41.removeProperty("");
        java.lang.String str48 = functionType41.getDisplayName();
        com.google.javascript.rhino.jstype.TemplateType templateType49 = functionType41.toMaybeTemplateType();
        boolean boolean50 = functionType41.isDateType();
        com.google.javascript.rhino.jstype.JSType jSType52 = functionType41.getRestrictedTypeGivenToBooleanOutcome(true);
        java.lang.Iterable iterable53 = functionType41.getCtorExtendedInterfaces();
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString("{}");
        com.google.common.collect.ImmutableList<java.lang.Object> objList56 = com.google.common.collect.ImmutableList.of((java.lang.Object) node1, (java.lang.Object) functionType41, (java.lang.Object) node55);
        boolean boolean57 = node55.isHook();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertNull(jSType8);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(nodeIterable13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(nodeIterable17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(nodeIterable21);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(nodeIterable25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(staticSourceFile31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(objectType37);
        org.junit.Assert.assertNotNull(objectType38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(functionType41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(jSType44);
        org.junit.Assert.assertNull(jSType45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(templateType49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSType52);
        org.junit.Assert.assertNotNull(iterable53);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(objList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test04064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04064");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) (byte) 0, 1, 12);
        boolean boolean4 = node3.hasOneChild();
        boolean boolean5 = node3.isUnscopedQualifiedName();
        int int6 = node3.getSourceOffset();
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType7 = com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN;
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newString("");
        boolean boolean11 = node10.isComma();
        boolean boolean12 = node10.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString("");
        boolean boolean15 = node14.isComma();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        boolean boolean18 = node17.isComma();
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString("");
        node20.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean24 = node20.isSyntheticBlock();
        boolean boolean25 = node17.isEquivalentToTyped(node20);
        com.google.javascript.rhino.Node node26 = new com.google.javascript.rhino.Node((int) (short) 1, node10, node14, node17);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder27 = node14.new FileLevelJsDocBuilder();
        node14.setQuotedString();
        com.google.javascript.rhino.Node node30 = com.google.javascript.rhino.Node.newNumber((double) (short) 10);
        com.google.javascript.rhino.Node node31 = node14.copyInformationFrom(node30);
        com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newString("");
        boolean boolean34 = node33.isComma();
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship35 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType7, node30, node33);
        boolean boolean36 = node33.isFor();
        com.google.javascript.rhino.Node node37 = node3.useSourceInfoIfMissingFrom(node33);
        boolean boolean38 = node37.isLabel();
        boolean boolean39 = node37.isAssignAdd();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + subclassType7 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN + "'", subclassType7.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN));
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test04065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04065");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = objectType18.getCtorExtendedInterfaces();
        boolean boolean21 = objectType18.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo24.isConsistentIdGenerator();
        objectType18.setPropertyJSDocInfo("hi!", jSDocInfo24);
        boolean boolean34 = objectType18.isNullType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        jSTypeRegistry37.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean46 = jSDocInfo45.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean48 = jSDocInfo47.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList51 = com.google.common.collect.ImmutableList.of(jSDocInfo43, jSDocInfo44, jSDocInfo45, jSDocInfo47, jSDocInfo49);
        jSDocInfo45.addSuppression("");
        java.lang.String str55 = jSDocInfo45.getDescriptionForParameter("");
        objectType41.setJSDocInfo(jSDocInfo45);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        boolean boolean60 = node59.isComma();
        boolean boolean61 = node59.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        boolean boolean64 = node63.isComma();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        boolean boolean67 = node66.isComma();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        node69.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean73 = node69.isSyntheticBlock();
        boolean boolean74 = node66.isEquivalentToTyped(node69);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 1, node59, node63, node66);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node63.new FileLevelJsDocBuilder();
        boolean boolean77 = node63.isGetElem();
        boolean boolean78 = node63.isQualifiedName();
        boolean boolean79 = objectType18.defineSynthesizedProperty("{}", (com.google.javascript.rhino.jstype.JSType) objectType41, node63);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType83 = objectType82.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = objectType83.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType85 = objectType83.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType83.getImplicitPrototype();
        boolean boolean88 = objectType86.hasProperty("()");
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry1.createEnumType("?", node63, (com.google.javascript.rhino.jstype.JSType) objectType86);
        com.google.javascript.rhino.jstype.EnumType enumType90 = enumType89.toMaybeEnumType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType91 = enumType89.getElementsType();
        boolean boolean92 = enumElementType91.hasReferenceName();
        com.google.javascript.rhino.jstype.UnionType unionType93 = enumElementType91.toMaybeUnionType();
        com.google.javascript.rhino.jstype.ObjectType objectType94 = com.google.javascript.rhino.jstype.ObjectType.cast((com.google.javascript.rhino.jstype.JSType) enumElementType91);
        boolean boolean95 = objectType94.isRegexpType();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertNotNull(enumType90);
        org.junit.Assert.assertNotNull(enumElementType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(unionType93);
        org.junit.Assert.assertNotNull(objectType94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test04066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04066");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = objectType18.getCtorExtendedInterfaces();
        boolean boolean21 = objectType18.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo24.isConsistentIdGenerator();
        objectType18.setPropertyJSDocInfo("hi!", jSDocInfo24);
        boolean boolean34 = objectType18.isNullType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        jSTypeRegistry37.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean46 = jSDocInfo45.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean48 = jSDocInfo47.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList51 = com.google.common.collect.ImmutableList.of(jSDocInfo43, jSDocInfo44, jSDocInfo45, jSDocInfo47, jSDocInfo49);
        jSDocInfo45.addSuppression("");
        java.lang.String str55 = jSDocInfo45.getDescriptionForParameter("");
        objectType41.setJSDocInfo(jSDocInfo45);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        boolean boolean60 = node59.isComma();
        boolean boolean61 = node59.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        boolean boolean64 = node63.isComma();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        boolean boolean67 = node66.isComma();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        node69.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean73 = node69.isSyntheticBlock();
        boolean boolean74 = node66.isEquivalentToTyped(node69);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 1, node59, node63, node66);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node63.new FileLevelJsDocBuilder();
        boolean boolean77 = node63.isGetElem();
        boolean boolean78 = node63.isQualifiedName();
        boolean boolean79 = objectType18.defineSynthesizedProperty("{}", (com.google.javascript.rhino.jstype.JSType) objectType41, node63);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType83 = objectType82.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = objectType83.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType85 = objectType83.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType83.getImplicitPrototype();
        boolean boolean88 = objectType86.hasProperty("()");
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry1.createEnumType("?", node63, (com.google.javascript.rhino.jstype.JSType) objectType86);
        com.google.javascript.rhino.jstype.EnumType enumType90 = enumType89.toMaybeEnumType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType91 = enumType89.getElementsType();
        boolean boolean92 = enumElementType91.hasReferenceName();
        boolean boolean93 = enumElementType91.matchesNumberContext();
        com.google.javascript.rhino.jstype.ObjectType objectType94 = enumElementType91.getImplicitPrototype();
        boolean boolean95 = enumElementType91.isObject();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertNotNull(enumType90);
        org.junit.Assert.assertNotNull(enumElementType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(objectType94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test04067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04067");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node2 = com.google.javascript.jscomp.NodeUtil.newExpr(node1);
        boolean boolean3 = node1.isComma();
        boolean boolean4 = node1.isDelProp();
        boolean boolean5 = node1.isThrow();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test04068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04068");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        boolean boolean5 = objectType4.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType7 = objectType4.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType9 = jSTypeRegistry1.getGreatestSubtypeWithProperty(jSType7, "");
        jSTypeRegistry1.forwardDeclareType("");
        boolean boolean12 = jSTypeRegistry1.shouldTolerateUndefinedValues();
        jSTypeRegistry1.incrementGeneration();
        boolean boolean14 = jSTypeRegistry1.shouldTolerateUndefinedValues();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSType7);
        org.junit.Assert.assertNotNull(jSType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test04069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04069");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable3 = jSTypeRegistry1.getEachReferenceTypeWithProperty("function (): {1183181076}");
        com.google.javascript.rhino.ErrorReporter errorReporter4 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry5 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter4);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.ObjectType objectType8 = jSTypeRegistry7.createAnonymousObjectType();
        boolean boolean9 = objectType8.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType11 = objectType8.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry5.getGreatestSubtypeWithProperty(jSType11, "");
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.ObjectType objectType16 = jSTypeRegistry15.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType17 = objectType16.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable18 = objectType17.getCtorExtendedInterfaces();
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.ObjectType objectType21 = jSTypeRegistry20.createAnonymousObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.ObjectType objectType24 = jSTypeRegistry23.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType25 = objectType24.getParentScope();
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.ObjectType objectType28 = jSTypeRegistry27.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType29 = objectType28.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable30 = objectType29.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType31 = objectType29.collapseUnion();
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32);
        com.google.javascript.rhino.ErrorReporter errorReporter34 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry35 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter34);
        com.google.javascript.rhino.jstype.ObjectType objectType36 = jSTypeRegistry35.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType37 = objectType36.getParentScope();
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType40 = jSTypeRegistry33.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType36, node39);
        com.google.javascript.rhino.JSDocInfo jSDocInfo42 = new com.google.javascript.rhino.JSDocInfo();
        functionType40.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo42);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray44 = new com.google.javascript.rhino.jstype.JSType[] { objectType25, objectType29, functionType40 };
        com.google.javascript.rhino.Node node45 = jSTypeRegistry20.createParameters(jSTypeArray44);
        com.google.javascript.rhino.jstype.FunctionType functionType46 = jSTypeRegistry5.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType17, jSTypeArray44);
        com.google.javascript.rhino.Node node47 = jSTypeRegistry1.createParametersWithVarArgs(jSTypeArray44);
        org.junit.Assert.assertNotNull(objectTypeIterable3);
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(jSType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType16);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectTypeIterable18);
        org.junit.Assert.assertNotNull(objectType21);
        org.junit.Assert.assertNotNull(objectType24);
        org.junit.Assert.assertNotNull(objectType25);
        org.junit.Assert.assertNotNull(objectType28);
        org.junit.Assert.assertNotNull(objectType29);
        org.junit.Assert.assertNotNull(objectTypeIterable30);
        org.junit.Assert.assertNotNull(jSType31);
        org.junit.Assert.assertNotNull(objectType36);
        org.junit.Assert.assertNotNull(objectType37);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(functionType40);
        org.junit.Assert.assertNotNull(jSTypeArray44);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(functionType46);
        org.junit.Assert.assertNotNull(node47);
    }

    @Test
    public void test04070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04070");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = objectType18.getCtorExtendedInterfaces();
        boolean boolean21 = objectType18.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo24.isConsistentIdGenerator();
        objectType18.setPropertyJSDocInfo("hi!", jSDocInfo24);
        boolean boolean34 = objectType18.isNullType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        jSTypeRegistry37.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean46 = jSDocInfo45.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean48 = jSDocInfo47.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList51 = com.google.common.collect.ImmutableList.of(jSDocInfo43, jSDocInfo44, jSDocInfo45, jSDocInfo47, jSDocInfo49);
        jSDocInfo45.addSuppression("");
        java.lang.String str55 = jSDocInfo45.getDescriptionForParameter("");
        objectType41.setJSDocInfo(jSDocInfo45);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        boolean boolean60 = node59.isComma();
        boolean boolean61 = node59.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        boolean boolean64 = node63.isComma();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        boolean boolean67 = node66.isComma();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        node69.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean73 = node69.isSyntheticBlock();
        boolean boolean74 = node66.isEquivalentToTyped(node69);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 1, node59, node63, node66);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node63.new FileLevelJsDocBuilder();
        boolean boolean77 = node63.isGetElem();
        boolean boolean78 = node63.isQualifiedName();
        boolean boolean79 = objectType18.defineSynthesizedProperty("{}", (com.google.javascript.rhino.jstype.JSType) objectType41, node63);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType83 = objectType82.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = objectType83.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType85 = objectType83.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType83.getImplicitPrototype();
        boolean boolean88 = objectType86.hasProperty("()");
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry1.createEnumType("?", node63, (com.google.javascript.rhino.jstype.JSType) objectType86);
        com.google.javascript.rhino.jstype.EnumType enumType90 = enumType89.toMaybeEnumType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType91 = enumType89.getElementsType();
        com.google.javascript.rhino.jstype.JSType jSType92 = enumElementType91.getPrimitiveType();
        boolean boolean93 = enumElementType91.canBeCalled();
        java.lang.String str94 = enumElementType91.getReferenceName();
        boolean boolean95 = enumElementType91.canBeCalled();
        boolean boolean97 = enumElementType91.hasProperty("function (): {1434844343}");
        boolean boolean98 = enumElementType91.matchesObjectContext();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertNotNull(enumType90);
        org.junit.Assert.assertNotNull(enumElementType91);
        org.junit.Assert.assertNotNull(jSType92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "?" + "'", str94, "?");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test04071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04071");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        boolean boolean3 = node1.isAdd();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        int int7 = node5.getSideEffectFlags();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable10 = node9.siblings();
        node5.addChildToBack(node9);
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable14 = node13.siblings();
        int int15 = node13.getSideEffectFlags();
        boolean boolean16 = node13.isLabelName();
        com.google.javascript.rhino.Node node17 = node5.copyInformationFromForTree(node13);
        boolean boolean18 = node1.isEquivalentTo(node13);
        boolean boolean19 = node1.isOr();
        boolean boolean20 = node1.isGetterDef();
        boolean boolean21 = node1.isTypeOf();
        node1.setOptionalArg(false);
        node1.detachChildren();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeIterable10);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeIterable14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test04072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04072");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        boolean boolean5 = objectType4.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType7 = objectType4.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType9 = jSTypeRegistry1.getGreatestSubtypeWithProperty(jSType7, "");
        jSTypeRegistry1.forwardDeclareType("");
        boolean boolean12 = jSTypeRegistry1.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType21 = jSTypeRegistry14.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType17, node20);
        boolean boolean23 = functionType21.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType24 = functionType21.autoboxesTo();
        com.google.javascript.rhino.jstype.ObjectType objectType25 = functionType21.getTypeOfThis();
        com.google.javascript.rhino.jstype.FunctionType functionType26 = functionType21.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.FunctionType functionType27 = functionType21.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.JSType jSType28 = jSTypeRegistry1.createOptionalType((com.google.javascript.rhino.jstype.JSType) functionType21);
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.ObjectType objectType31 = jSTypeRegistry30.createAnonymousObjectType();
        boolean boolean32 = objectType31.isUnknownType();
        com.google.javascript.rhino.jstype.JSType jSType34 = objectType31.findPropertyType("true");
        com.google.javascript.rhino.jstype.JSType jSType35 = objectType31.autobox();
        com.google.javascript.rhino.jstype.JSType jSType37 = jSTypeRegistry1.getGreatestSubtypeWithProperty(jSType35, "function (): {118726035}");
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        boolean boolean42 = objectType41.isUnknownType();
        boolean boolean43 = objectType41.isNullType();
        boolean boolean44 = objectType41.isNominalConstructor();
        boolean boolean45 = objectType41.matchesNumberContext();
        com.google.javascript.rhino.jstype.ObjectType.Property property47 = objectType41.getSlot("function (): {1730992086}");
        jSTypeRegistry1.unregisterPropertyOnType("(function (): {1029927725})", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.jstype.JSType jSType49 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.JSType jSType50 = jSTypeRegistry1.createOptionalNullableType(jSType49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSType7);
        org.junit.Assert.assertNotNull(jSType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(functionType21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(jSType24);
        org.junit.Assert.assertNotNull(objectType25);
        org.junit.Assert.assertNotNull(functionType26);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertNotNull(jSType28);
        org.junit.Assert.assertNotNull(objectType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(jSType34);
        org.junit.Assert.assertNotNull(jSType35);
        org.junit.Assert.assertNotNull(jSType37);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(property47);
    }

    @Test
    public void test04073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04073");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        boolean boolean5 = objectType4.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType7 = objectType4.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType9 = jSTypeRegistry1.getGreatestSubtypeWithProperty(jSType7, "");
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.ObjectType objectType14 = jSTypeRegistry13.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType15 = objectType14.getParentScope();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType18 = jSTypeRegistry11.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType14, node17);
        java.lang.String str19 = functionType18.getDisplayName();
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable22 = node21.siblings();
        int int23 = node21.getSideEffectFlags();
        boolean boolean24 = node21.isLabelName();
        boolean boolean25 = node21.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType26 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType18, node21);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable28 = jSTypeRegistry1.getTypesWithProperty("function (): {1081395467}");
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32);
        com.google.javascript.rhino.jstype.ObjectType objectType34 = jSTypeRegistry33.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType35 = objectType34.getParentScope();
        com.google.javascript.rhino.Node node37 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType38 = jSTypeRegistry31.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType34, node37);
        boolean boolean40 = functionType38.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType41 = functionType38.autoboxesTo();
        com.google.javascript.rhino.jstype.JSType jSType42 = functionType38.autoboxesTo();
        boolean boolean44 = functionType38.removeProperty("");
        java.lang.String str45 = functionType38.getDisplayName();
        com.google.javascript.rhino.jstype.TemplateType templateType46 = functionType38.toMaybeTemplateType();
        boolean boolean47 = functionType38.isDateType();
        com.google.javascript.rhino.jstype.JSType jSType49 = functionType38.getRestrictedTypeGivenToBooleanOutcome(true);
        boolean boolean51 = functionType38.hasOwnProperty("unknown");
        jSTypeRegistry1.registerPropertyOnType("java.io.IOException: function (): {1183181076}", (com.google.javascript.rhino.jstype.JSType) functionType38);
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative53 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.JSType jSType54 = jSTypeRegistry1.getNativeType(jSTypeNative53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSType7);
        org.junit.Assert.assertNotNull(jSType9);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(functionType18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(nodeIterable22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(functionType26);
        org.junit.Assert.assertNotNull(jSTypeIterable28);
        org.junit.Assert.assertNotNull(objectType34);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(functionType38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(jSType41);
        org.junit.Assert.assertNull(jSType42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(templateType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jSType49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test04074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04074");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        jSDocInfo2.addSuppression("");
        java.lang.String str12 = jSDocInfo2.getDescriptionForParameter("");
        boolean boolean13 = jSDocInfo2.isExport();
        boolean boolean15 = jSDocInfo2.hasDescriptionForParameter("hi!");
        boolean boolean16 = jSDocInfo2.isNoShadow();
        boolean boolean17 = jSDocInfo2.isIdGenerator();
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString("");
        boolean boolean20 = node19.isComma();
        node19.setType(1);
        com.google.javascript.rhino.Node node24 = node19.getAncestor((int) (short) 100);
        boolean boolean25 = node19.isNoSideEffectsCall();
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable28 = node27.siblings();
        int int29 = node27.getSideEffectFlags();
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable32 = node31.siblings();
        node27.addChildToBack(node31);
        boolean boolean34 = node31.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder35 = node31.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node37 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node38 = com.google.javascript.jscomp.NodeUtil.newExpr(node37);
        com.google.javascript.jscomp.CodingConvention.Bind bind39 = new com.google.javascript.jscomp.CodingConvention.Bind(node19, node31, node38);
        node38.setLength((int) 'a');
        jSDocInfo2.setAssociatedNode(node38);
        boolean boolean43 = jSDocInfo2.isInterface();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(nodeIterable28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(nodeIterable32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder35);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test04075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04075");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable3 = node2.siblings();
        boolean boolean4 = node2.isAdd();
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable7 = node6.siblings();
        int int8 = node6.getSideEffectFlags();
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable11 = node10.siblings();
        node6.addChildToBack(node10);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable15 = node14.siblings();
        int int16 = node14.getSideEffectFlags();
        boolean boolean17 = node14.isLabelName();
        com.google.javascript.rhino.Node node18 = node6.copyInformationFromForTree(node14);
        boolean boolean19 = node2.isEquivalentTo(node14);
        boolean boolean20 = node2.isReturn();
        boolean boolean21 = node2.isNull();
        com.google.javascript.rhino.Node node23 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable24 = node23.siblings();
        int int25 = node23.getSideEffectFlags();
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable28 = node27.siblings();
        node23.addChildToBack(node27);
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable32 = node31.siblings();
        int int33 = node31.getSideEffectFlags();
        boolean boolean34 = node31.isLabelName();
        com.google.javascript.rhino.Node node35 = node23.copyInformationFromForTree(node31);
        boolean boolean36 = node35.isQuotedString();
        com.google.javascript.rhino.Node node39 = new com.google.javascript.rhino.Node(2, node2, node35, (-1), 0);
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition40 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable43 = node42.siblings();
        namePosition40.setItem(node42);
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        boolean boolean47 = node46.isComma();
        namePosition40.setItem(node46);
        com.google.javascript.rhino.Node node49 = node39.srcrefTree(node46);
        boolean boolean51 = node46.getBooleanProp((int) (byte) -1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder52 = node46.new FileLevelJsDocBuilder();
        boolean boolean53 = node46.isCall();
        node46.setLength((int) (short) -1);
        boolean boolean56 = node46.isOr();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNotNull(nodeIterable3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(nodeIterable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeIterable11);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(nodeIterable15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(nodeIterable24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(nodeIterable28);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(nodeIterable32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(nodeIterable43);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test04076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04076");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        java.lang.String str9 = functionType8.getDisplayName();
        com.google.javascript.rhino.jstype.FunctionType functionType10 = functionType8.getOwnerFunction();
        com.google.javascript.rhino.JSDocInfo jSDocInfo11 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo12 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo13 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean14 = jSDocInfo13.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo15 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean16 = jSDocInfo15.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo17 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean18 = jSDocInfo17.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList19 = com.google.common.collect.ImmutableList.of(jSDocInfo11, jSDocInfo12, jSDocInfo13, jSDocInfo15, jSDocInfo17);
        boolean boolean20 = jSDocInfo11.isNoCompile();
        java.lang.String str21 = jSDocInfo11.getVersion();
        functionType8.setJSDocInfo(jSDocInfo11);
        boolean boolean23 = jSDocInfo11.hasFileOverview();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression24 = jSDocInfo11.getEnumParameterType();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression25 = jSDocInfo11.getEnumParameterType();
        boolean boolean26 = jSDocInfo11.isOverride();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(jSTypeExpression24);
        org.junit.Assert.assertNull(jSTypeExpression25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test04077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04077");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        com.google.javascript.rhino.jstype.JSType jSType8 = node1.getJSType();
        node1.setLineno(36);
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable13 = node12.siblings();
        boolean boolean14 = node12.isAdd();
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable17 = node16.siblings();
        int int18 = node16.getSideEffectFlags();
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable21 = node20.siblings();
        node16.addChildToBack(node20);
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable25 = node24.siblings();
        int int26 = node24.getSideEffectFlags();
        boolean boolean27 = node24.isLabelName();
        com.google.javascript.rhino.Node node28 = node16.copyInformationFromForTree(node24);
        boolean boolean29 = node12.isEquivalentTo(node24);
        boolean boolean30 = node12.isOr();
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile31 = node12.getStaticSourceFile();
        com.google.javascript.rhino.Node node32 = node1.copyInformationFromForTree(node12);
        boolean boolean33 = com.google.javascript.jscomp.NodeUtil.isRelationalOperation(node1);
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertNull(jSType8);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(nodeIterable13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(nodeIterable17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(nodeIterable21);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(nodeIterable25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(staticSourceFile31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test04078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04078");
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition0 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable3 = node2.siblings();
        namePosition0.setItem(node2);
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition5 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable8 = node7.siblings();
        namePosition5.setItem(node7);
        com.google.javascript.rhino.Node node10 = namePosition5.getItem();
        boolean boolean11 = node2.isEquivalentToTyped(node10);
        boolean boolean12 = node10.wasEmptyNode();
        node10.setLength(4095);
        boolean boolean15 = node10.isTrue();
        java.lang.String str16 = com.google.javascript.jscomp.NodeUtil.getSourceName(node10);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNotNull(nodeIterable3);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(nodeIterable8);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test04079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04079");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newNumber((double) (short) 10);
        node1.setLength(43);
        boolean boolean4 = node1.isSwitch();
        boolean boolean5 = node1.isIn();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test04080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04080");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        boolean boolean10 = node9.isComma();
        boolean boolean11 = node9.isOnlyModifiesThisCall();
        boolean boolean12 = node9.isSetterDef();
        com.google.javascript.rhino.Node node13 = node5.useSourceInfoFrom(node9);
        boolean boolean14 = node9.isInc();
        int int15 = node9.getSideEffectFlags();
        java.lang.String str16 = node9.toString();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable19 = node18.siblings();
        int int20 = node18.getSideEffectFlags();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable23 = node22.siblings();
        node18.addChildToBack(node22);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable27 = node26.siblings();
        int int28 = node26.getSideEffectFlags();
        boolean boolean29 = node26.isLabelName();
        com.google.javascript.rhino.Node node30 = node18.copyInformationFromForTree(node26);
        java.lang.String str31 = node30.getSourceFileName();
        boolean boolean32 = node30.isDo();
        boolean boolean33 = node30.isSwitch();
        boolean boolean34 = node30.isNumber();
        com.google.javascript.rhino.Node node35 = node9.srcref(node30);
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "STRING " + "'", str16, "STRING ");
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(nodeIterable19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(nodeIterable23);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(nodeIterable27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
    }

    @Test
    public void test04081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04081");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = objectType18.getCtorExtendedInterfaces();
        boolean boolean21 = objectType18.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo24.isConsistentIdGenerator();
        objectType18.setPropertyJSDocInfo("hi!", jSDocInfo24);
        boolean boolean34 = objectType18.isNullType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        jSTypeRegistry37.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean46 = jSDocInfo45.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean48 = jSDocInfo47.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList51 = com.google.common.collect.ImmutableList.of(jSDocInfo43, jSDocInfo44, jSDocInfo45, jSDocInfo47, jSDocInfo49);
        jSDocInfo45.addSuppression("");
        java.lang.String str55 = jSDocInfo45.getDescriptionForParameter("");
        objectType41.setJSDocInfo(jSDocInfo45);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        boolean boolean60 = node59.isComma();
        boolean boolean61 = node59.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        boolean boolean64 = node63.isComma();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        boolean boolean67 = node66.isComma();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        node69.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean73 = node69.isSyntheticBlock();
        boolean boolean74 = node66.isEquivalentToTyped(node69);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 1, node59, node63, node66);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node63.new FileLevelJsDocBuilder();
        boolean boolean77 = node63.isGetElem();
        boolean boolean78 = node63.isQualifiedName();
        boolean boolean79 = objectType18.defineSynthesizedProperty("{}", (com.google.javascript.rhino.jstype.JSType) objectType41, node63);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType83 = objectType82.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = objectType83.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType85 = objectType83.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType83.getImplicitPrototype();
        boolean boolean88 = objectType86.hasProperty("()");
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry1.createEnumType("?", node63, (com.google.javascript.rhino.jstype.JSType) objectType86);
        com.google.javascript.rhino.jstype.EnumType enumType90 = enumType89.toMaybeEnumType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType91 = enumType89.getElementsType();
        com.google.javascript.rhino.jstype.JSType jSType93 = enumElementType91.getPropertyType("Not declared as a constructor");
        boolean boolean94 = enumElementType91.matchesNumberContext();
        boolean boolean95 = enumElementType91.hasReferenceName();
        boolean boolean96 = enumElementType91.matchesNumberContext();
        java.lang.String str97 = enumElementType91.getReferenceName();
        com.google.javascript.rhino.jstype.FunctionType functionType98 = enumElementType91.getConstructor();
        boolean boolean99 = enumElementType91.hasReferenceName();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertNotNull(enumType90);
        org.junit.Assert.assertNotNull(enumElementType91);
        org.junit.Assert.assertNotNull(jSType93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "?" + "'", str97, "?");
        org.junit.Assert.assertNull(functionType98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test04082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04082");
        com.google.javascript.jscomp.CodingConvention codingConvention0 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node2 = com.google.javascript.jscomp.NodeUtil.newQualifiedNameNode(codingConvention0, "STRING  [directives: [function (): {1559136837}, NAME, hi!, function (): {1517638406}]]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test04083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04083");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newNumber((double) '#');
        boolean boolean2 = node1.isNumber();
        boolean boolean3 = node1.isDec();
        int int4 = node1.getLength();
        boolean boolean5 = node1.isDec();
        node1.addSuppression("function (): {1183181076}");
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition8 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable11 = node10.siblings();
        namePosition8.setItem(node10);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString("");
        boolean boolean15 = node14.isComma();
        namePosition8.setItem(node14);
        int int17 = namePosition8.getPositionOnStartLine();
        com.google.javascript.rhino.Node node18 = namePosition8.getItem();
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable21 = node20.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression23 = new com.google.javascript.rhino.JSTypeExpression(node20, "Not declared as a type name");
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable26 = node25.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression28 = new com.google.javascript.rhino.JSTypeExpression(node25, "Not declared as a type name");
        com.google.javascript.rhino.Node node30 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable31 = node30.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression33 = new com.google.javascript.rhino.JSTypeExpression(node30, "Not declared as a type name");
        com.google.javascript.rhino.Node node35 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable36 = node35.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression38 = new com.google.javascript.rhino.JSTypeExpression(node35, "Not declared as a type name");
        com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable41 = node40.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression43 = new com.google.javascript.rhino.JSTypeExpression(node40, "Not declared as a type name");
        com.google.javascript.rhino.Node node45 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable46 = node45.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression48 = new com.google.javascript.rhino.JSTypeExpression(node45, "Not declared as a type name");
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression53 = new com.google.javascript.rhino.JSTypeExpression(node50, "Not declared as a type name");
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable56 = node55.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression58 = new com.google.javascript.rhino.JSTypeExpression(node55, "Not declared as a type name");
        com.google.javascript.rhino.Node node60 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable61 = node60.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression63 = new com.google.javascript.rhino.JSTypeExpression(node60, "Not declared as a type name");
        com.google.javascript.rhino.Node node65 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable66 = node65.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression68 = new com.google.javascript.rhino.JSTypeExpression(node65, "Not declared as a type name");
        com.google.javascript.rhino.Node node70 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable71 = node70.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression73 = new com.google.javascript.rhino.JSTypeExpression(node70, "Not declared as a type name");
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList74 = com.google.common.collect.ImmutableList.of(jSTypeExpression23, jSTypeExpression28, jSTypeExpression33, jSTypeExpression38, jSTypeExpression43, jSTypeExpression48, jSTypeExpression53, jSTypeExpression58, jSTypeExpression63, jSTypeExpression68, jSTypeExpression73);
        com.google.javascript.rhino.Node node75 = jSTypeExpression53.getRoot();
        node18.addChildrenToFront(node75);
        com.google.javascript.rhino.Node node77 = node1.useSourceInfoIfMissingFrom(node18);
        boolean boolean78 = node77.isAdd();
        boolean boolean79 = node77.isDec();
        com.google.javascript.rhino.Node node81 = com.google.javascript.rhino.Node.newNumber((double) 1L);
        com.google.javascript.rhino.Node node82 = node77.copyInformationFrom(node81);
        boolean boolean83 = node81.isSetterDef();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeIterable11);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(nodeIterable21);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(nodeIterable26);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(nodeIterable31);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(nodeIterable36);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(nodeIterable41);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(nodeIterable46);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(nodeIterable56);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(nodeIterable61);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(nodeIterable66);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(nodeIterable71);
        org.junit.Assert.assertNotNull(jSTypeExpressionList74);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test04084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04084");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        boolean boolean10 = node9.isComma();
        boolean boolean11 = node9.isOnlyModifiesThisCall();
        boolean boolean12 = node9.isSetterDef();
        com.google.javascript.rhino.Node node13 = node5.useSourceInfoFrom(node9);
        com.google.javascript.rhino.Node node14 = node9.getLastChild();
        boolean boolean15 = node9.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable18 = node17.siblings();
        int int19 = node17.getSideEffectFlags();
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable22 = node21.siblings();
        node17.addChildToBack(node21);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable26 = node25.siblings();
        int int27 = node25.getSideEffectFlags();
        boolean boolean28 = node25.isLabelName();
        com.google.javascript.rhino.Node node29 = node17.copyInformationFromForTree(node25);
        boolean boolean30 = node29.isNoSideEffectsCall();
        boolean boolean31 = node29.isDo();
        com.google.javascript.rhino.Node node32 = node9.srcrefTree(node29);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node33 = com.google.javascript.jscomp.NodeUtil.getFunctionParameters(node29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(nodeIterable18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(nodeIterable22);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(nodeIterable26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(node32);
    }

    @Test
    public void test04085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04085");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = objectType18.getCtorExtendedInterfaces();
        boolean boolean21 = objectType18.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo24.isConsistentIdGenerator();
        objectType18.setPropertyJSDocInfo("hi!", jSDocInfo24);
        boolean boolean34 = objectType18.isNullType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        jSTypeRegistry37.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean46 = jSDocInfo45.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean48 = jSDocInfo47.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList51 = com.google.common.collect.ImmutableList.of(jSDocInfo43, jSDocInfo44, jSDocInfo45, jSDocInfo47, jSDocInfo49);
        jSDocInfo45.addSuppression("");
        java.lang.String str55 = jSDocInfo45.getDescriptionForParameter("");
        objectType41.setJSDocInfo(jSDocInfo45);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        boolean boolean60 = node59.isComma();
        boolean boolean61 = node59.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        boolean boolean64 = node63.isComma();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        boolean boolean67 = node66.isComma();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        node69.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean73 = node69.isSyntheticBlock();
        boolean boolean74 = node66.isEquivalentToTyped(node69);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 1, node59, node63, node66);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node63.new FileLevelJsDocBuilder();
        boolean boolean77 = node63.isGetElem();
        boolean boolean78 = node63.isQualifiedName();
        boolean boolean79 = objectType18.defineSynthesizedProperty("{}", (com.google.javascript.rhino.jstype.JSType) objectType41, node63);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType83 = objectType82.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = objectType83.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType85 = objectType83.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType83.getImplicitPrototype();
        boolean boolean88 = objectType86.hasProperty("()");
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry1.createEnumType("?", node63, (com.google.javascript.rhino.jstype.JSType) objectType86);
        java.lang.String str90 = enumType89.getReferenceName();
        boolean boolean91 = enumType89.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType93 = enumType89.getPropertyType("?");
        com.google.javascript.rhino.jstype.EnumType enumType94 = enumType89.toMaybeEnumType();
        com.google.javascript.rhino.jstype.FunctionType functionType95 = enumType89.getConstructor();
        java.lang.String str96 = enumType89.getDisplayName();
        java.lang.String str97 = enumType89.getDisplayName();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "enum{?}" + "'", str90, "enum{?}");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(jSType93);
        org.junit.Assert.assertNotNull(enumType94);
        org.junit.Assert.assertNull(functionType95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "?" + "'", str96, "?");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "?" + "'", str97, "?");
    }

    @Test
    public void test04086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04086");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression4 = new com.google.javascript.rhino.JSTypeExpression(node1, "Not declared as a type name");
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable7 = node6.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression9 = new com.google.javascript.rhino.JSTypeExpression(node6, "Not declared as a type name");
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable12 = node11.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression14 = new com.google.javascript.rhino.JSTypeExpression(node11, "Not declared as a type name");
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable17 = node16.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression19 = new com.google.javascript.rhino.JSTypeExpression(node16, "Not declared as a type name");
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable22 = node21.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression24 = new com.google.javascript.rhino.JSTypeExpression(node21, "Not declared as a type name");
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable27 = node26.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression29 = new com.google.javascript.rhino.JSTypeExpression(node26, "Not declared as a type name");
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable32 = node31.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression34 = new com.google.javascript.rhino.JSTypeExpression(node31, "Not declared as a type name");
        com.google.javascript.rhino.Node node36 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable37 = node36.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression39 = new com.google.javascript.rhino.JSTypeExpression(node36, "Not declared as a type name");
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable42 = node41.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression44 = new com.google.javascript.rhino.JSTypeExpression(node41, "Not declared as a type name");
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression49 = new com.google.javascript.rhino.JSTypeExpression(node46, "Not declared as a type name");
        com.google.javascript.rhino.Node node51 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable52 = node51.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression54 = new com.google.javascript.rhino.JSTypeExpression(node51, "Not declared as a type name");
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList55 = com.google.common.collect.ImmutableList.of(jSTypeExpression4, jSTypeExpression9, jSTypeExpression14, jSTypeExpression19, jSTypeExpression24, jSTypeExpression29, jSTypeExpression34, jSTypeExpression39, jSTypeExpression44, jSTypeExpression49, jSTypeExpression54);
        com.google.javascript.rhino.Node node56 = jSTypeExpression34.getRoot();
        com.google.javascript.rhino.Node node57 = jSTypeExpression34.getRoot();
        java.lang.Object obj59 = node57.getProp(30);
        boolean boolean61 = node57.getBooleanProp(15);
        boolean boolean62 = node57.isFunction();
        boolean boolean63 = node57.isInstanceOf();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(nodeIterable7);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(nodeIterable12);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(nodeIterable17);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(nodeIterable22);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(nodeIterable27);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(nodeIterable32);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(nodeIterable37);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(nodeIterable42);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(nodeIterable52);
        org.junit.Assert.assertNotNull(jSTypeExpressionList55);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test04087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04087");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, false);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry6 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5);
        com.google.javascript.rhino.jstype.ObjectType objectType7 = jSTypeRegistry6.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType8 = objectType7.getParentScope();
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType11 = jSTypeRegistry4.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType7, node10);
        boolean boolean13 = functionType11.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType14 = functionType11.autoboxesTo();
        com.google.javascript.rhino.jstype.ObjectType objectType15 = functionType11.getTypeOfThis();
        com.google.javascript.rhino.jstype.FunctionType functionType16 = functionType11.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.FunctionType functionType17 = functionType11.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = functionType11.getPrototype();
        com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> jSTypeStaticSlot20 = functionType11.getSlot("Unknown class name");
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.ObjectType objectType25 = jSTypeRegistry24.createAnonymousObjectType();
        boolean boolean26 = objectType25.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = objectType25.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType30 = jSTypeRegistry22.getGreatestSubtypeWithProperty(jSType28, "");
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.jstype.ObjectType objectType33 = jSTypeRegistry32.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType34 = objectType33.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable35 = objectType34.getCtorExtendedInterfaces();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.jstype.ObjectType objectType38 = jSTypeRegistry37.createAnonymousObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType42 = objectType41.getParentScope();
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.ObjectType objectType45 = jSTypeRegistry44.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType46 = objectType45.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable47 = objectType46.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType48 = objectType46.collapseUnion();
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry50 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.ObjectType objectType53 = jSTypeRegistry52.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType54 = objectType53.getParentScope();
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType57 = jSTypeRegistry50.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType53, node56);
        com.google.javascript.rhino.JSDocInfo jSDocInfo59 = new com.google.javascript.rhino.JSDocInfo();
        functionType57.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo59);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] { objectType42, objectType46, functionType57 };
        com.google.javascript.rhino.Node node62 = jSTypeRegistry37.createParameters(jSTypeArray61);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry22.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType34, jSTypeArray61);
        com.google.javascript.rhino.jstype.FunctionType functionType64 = jSTypeRegistry2.createConstructorTypeWithVarArgs((com.google.javascript.rhino.jstype.JSType) functionType11, jSTypeArray61);
        java.util.Set<java.lang.String> strSet65 = functionType64.getOwnPropertyNames();
        java.util.Iterator<java.lang.String> strItor66 = strSet65.iterator();
        boolean boolean67 = strSet65.isEmpty();
        boolean boolean68 = strSet65.isEmpty();
        org.junit.Assert.assertNotNull(objectType7);
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(functionType11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(jSType14);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(functionType16);
        org.junit.Assert.assertNotNull(functionType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNull(jSTypeStaticSlot20);
        org.junit.Assert.assertNotNull(objectType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(jSType28);
        org.junit.Assert.assertNotNull(jSType30);
        org.junit.Assert.assertNotNull(objectType33);
        org.junit.Assert.assertNotNull(objectType34);
        org.junit.Assert.assertNotNull(objectTypeIterable35);
        org.junit.Assert.assertNotNull(objectType38);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertNotNull(objectType42);
        org.junit.Assert.assertNotNull(objectType45);
        org.junit.Assert.assertNotNull(objectType46);
        org.junit.Assert.assertNotNull(objectTypeIterable47);
        org.junit.Assert.assertNotNull(jSType48);
        org.junit.Assert.assertNotNull(objectType53);
        org.junit.Assert.assertNotNull(objectType54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(functionType57);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertNotNull(functionType64);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test04088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04088");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType3 = objectType2.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable4 = objectType3.getCtorExtendedInterfaces();
        boolean boolean6 = objectType3.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo8 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean11 = jSDocInfo10.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo12 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean13 = jSDocInfo12.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo14 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean15 = jSDocInfo14.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList16 = com.google.common.collect.ImmutableList.of(jSDocInfo8, jSDocInfo9, jSDocInfo10, jSDocInfo12, jSDocInfo14);
        boolean boolean17 = jSDocInfo9.isConsistentIdGenerator();
        objectType3.setPropertyJSDocInfo("hi!", jSDocInfo9);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression19 = jSDocInfo9.getEnumParameterType();
        java.lang.String str20 = jSDocInfo9.getLendsName();
        int int21 = jSDocInfo9.getImplementedInterfaceCount();
        java.lang.String str22 = jSDocInfo9.getSourceName();
        java.util.Set<java.lang.String> strSet23 = jSDocInfo9.getSuppressions();
        boolean boolean24 = strSet23.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator25 = strSet23.spliterator();
        java.lang.Object[] objArray26 = strSet23.toArray();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = strSet23.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(objectType3);
        org.junit.Assert.assertNotNull(objectTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(jSTypeExpression19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strSpliterator25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
    }

    @Test
    public void test04089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04089");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        boolean boolean10 = node9.isComma();
        boolean boolean11 = node9.isOnlyModifiesThisCall();
        boolean boolean12 = node9.isSetterDef();
        com.google.javascript.rhino.Node node13 = node5.useSourceInfoFrom(node9);
        com.google.javascript.rhino.Node node14 = node9.getLastChild();
        boolean boolean15 = node9.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable18 = node17.siblings();
        int int19 = node17.getSideEffectFlags();
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable22 = node21.siblings();
        node17.addChildToBack(node21);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable26 = node25.siblings();
        int int27 = node25.getSideEffectFlags();
        boolean boolean28 = node25.isLabelName();
        com.google.javascript.rhino.Node node29 = node17.copyInformationFromForTree(node25);
        boolean boolean30 = node29.isNoSideEffectsCall();
        boolean boolean31 = node29.isDo();
        com.google.javascript.rhino.Node node32 = node9.srcrefTree(node29);
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo34 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo35 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean36 = jSDocInfo35.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo37 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean38 = jSDocInfo37.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo39 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean40 = jSDocInfo39.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList41 = com.google.common.collect.ImmutableList.of(jSDocInfo33, jSDocInfo34, jSDocInfo35, jSDocInfo37, jSDocInfo39);
        boolean boolean42 = jSDocInfo33.isNoCompile();
        java.util.Collection<java.lang.String> strCollection43 = jSDocInfo33.getAuthors();
        java.lang.String str44 = jSDocInfo33.getLicense();
        node9.setJSDocInfo(jSDocInfo33);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder46 = node9.new FileLevelJsDocBuilder();
        node9.setString("Unknown");
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile49 = node9.getStaticSourceFile();
        boolean boolean50 = node9.isTrue();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(nodeIterable18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(nodeIterable22);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(nodeIterable26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(strCollection43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(staticSourceFile49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test04090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04090");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        boolean boolean5 = objectType4.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType7 = objectType4.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType9 = jSTypeRegistry1.getGreatestSubtypeWithProperty(jSType7, "");
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.ObjectType objectType14 = jSTypeRegistry13.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType15 = objectType14.getParentScope();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType18 = jSTypeRegistry11.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType14, node17);
        java.lang.String str19 = functionType18.getDisplayName();
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable22 = node21.siblings();
        int int23 = node21.getSideEffectFlags();
        boolean boolean24 = node21.isLabelName();
        boolean boolean25 = node21.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType26 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType18, node21);
        boolean boolean28 = functionType18.isPropertyTypeInferred("(true)");
        boolean boolean29 = functionType18.hasReferenceName();
        boolean boolean30 = functionType18.isObject();
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet31 = functionType18.getPossibleToBooleanOutcomes();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSType7);
        org.junit.Assert.assertNotNull(jSType9);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(functionType18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(nodeIterable22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(functionType26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + booleanLiteralSet31 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE + "'", booleanLiteralSet31.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE));
    }

    @Test
    public void test04091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04091");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        boolean boolean10 = functionType8.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType11 = functionType8.autoboxesTo();
        com.google.javascript.rhino.jstype.JSType jSType12 = functionType8.autoboxesTo();
        boolean boolean14 = functionType8.removeProperty("");
        java.lang.String str15 = functionType8.getDisplayName();
        com.google.javascript.rhino.jstype.TemplateType templateType16 = functionType8.toMaybeTemplateType();
        boolean boolean17 = functionType8.isDateType();
        com.google.javascript.rhino.jstype.JSType jSType19 = functionType8.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.ErrorReporter errorReporter20 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter20);
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.ObjectType objectType24 = jSTypeRegistry23.createAnonymousObjectType();
        boolean boolean25 = objectType24.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType27 = objectType24.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType29 = jSTypeRegistry21.getGreatestSubtypeWithProperty(jSType27, "");
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32);
        com.google.javascript.rhino.jstype.ObjectType objectType34 = jSTypeRegistry33.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType35 = objectType34.getParentScope();
        com.google.javascript.rhino.Node node37 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType38 = jSTypeRegistry31.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType34, node37);
        java.lang.String str39 = functionType38.getDisplayName();
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable42 = node41.siblings();
        int int43 = node41.getSideEffectFlags();
        boolean boolean44 = node41.isLabelName();
        boolean boolean45 = node41.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType46 = jSTypeRegistry21.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType38, node41);
        boolean boolean48 = functionType38.isPropertyTypeInferred("(true)");
        com.google.javascript.rhino.jstype.EnumType enumType49 = functionType38.toMaybeEnumType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.jstype.FunctionType> functionTypeList50 = com.google.common.collect.ImmutableList.of(functionType8, functionType38);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry54 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53);
        com.google.javascript.rhino.jstype.ObjectType objectType55 = jSTypeRegistry54.createAnonymousObjectType();
        boolean boolean56 = objectType55.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType58 = objectType55.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType60 = jSTypeRegistry52.getGreatestSubtypeWithProperty(jSType58, "");
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        java.lang.String str70 = functionType69.getDisplayName();
        com.google.javascript.rhino.Node node72 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable73 = node72.siblings();
        int int74 = node72.getSideEffectFlags();
        boolean boolean75 = node72.isLabelName();
        boolean boolean76 = node72.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType77 = jSTypeRegistry52.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType69, node72);
        boolean boolean79 = functionType69.isPropertyTypeInferred("(true)");
        java.lang.Iterable iterable80 = functionType69.getCtorImplementedInterfaces();
        boolean boolean81 = functionType69.hasInstanceType();
        com.google.javascript.rhino.jstype.FunctionType functionType82 = functionType69.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.JSType jSType84 = functionType69.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType.TypePair typePair85 = functionType38.getTypesUnderEquality((com.google.javascript.rhino.jstype.JSType) functionType69);
        boolean boolean86 = functionType69.isNominalType();
        functionType69.clearCachedValues();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(jSType11);
        org.junit.Assert.assertNull(jSType12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(templateType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(jSType19);
        org.junit.Assert.assertNotNull(objectType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(jSType27);
        org.junit.Assert.assertNotNull(jSType29);
        org.junit.Assert.assertNotNull(objectType34);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(functionType38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(nodeIterable42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(functionType46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(enumType49);
        org.junit.Assert.assertNotNull(functionTypeList50);
        org.junit.Assert.assertNotNull(objectType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(jSType58);
        org.junit.Assert.assertNotNull(jSType60);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertNotNull(nodeIterable73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(functionType77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(iterable80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(functionType82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(typePair85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test04092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04092");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        boolean boolean2 = node1.isComma();
        boolean boolean3 = node1.isOnlyModifiesThisCall();
        boolean boolean4 = node1.isVarArgs();
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString("");
        boolean boolean7 = node6.isComma();
        int int8 = node6.getType();
        java.util.Set<java.lang.String> strSet9 = node6.getDirectives();
        com.google.javascript.rhino.Node node10 = node1.useSourceInfoFrom(node6);
        node1.putIntProp(37, 44);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile14 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node1);
        boolean boolean15 = node1.isReturn();
        boolean boolean16 = node1.isNE();
        java.lang.String str20 = node1.toString(false, false, true);
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 40 + "'", int8 == 40);
        org.junit.Assert.assertNull(strSet9);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNull(staticSourceFile14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "STRING " + "'", str20, "STRING ");
    }

    @Test
    public void test04093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04093");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        boolean boolean3 = objectType2.isUnknownType();
        com.google.javascript.rhino.jstype.JSType jSType5 = objectType2.findPropertyType("true");
        com.google.javascript.rhino.jstype.JSType jSType6 = objectType2.autobox();
        boolean boolean7 = jSType6.isTemplateType();
        boolean boolean8 = jSType6.isObject();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(jSType5);
        org.junit.Assert.assertNotNull(jSType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test04094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04094");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable9 = functionType8.getImplementedInterfaces();
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.ObjectType objectType14 = jSTypeRegistry13.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType15 = objectType14.getParentScope();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType18 = jSTypeRegistry11.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType14, node17);
        boolean boolean20 = functionType18.removeProperty("");
        boolean boolean21 = functionType18.isNativeObjectType();
        com.google.javascript.rhino.jstype.FunctionType functionType22 = functionType18.getConstructor();
        boolean boolean23 = functionType18.matchesUint32Context();
        boolean boolean24 = functionType18.isInstanceType();
        boolean boolean26 = functionType18.isPropertyInExterns("Not declared as a type name");
        com.google.javascript.rhino.jstype.JSType jSType27 = functionType18.getParameterType();
        boolean boolean28 = com.google.javascript.rhino.jstype.JSType.isEquivalent((com.google.javascript.rhino.jstype.JSType) functionType8, (com.google.javascript.rhino.jstype.JSType) functionType18);
        boolean boolean30 = functionType18.hasProperty("function (): {1872164935}");
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertNotNull(objectTypeIterable9);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(functionType18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(functionType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(jSType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test04095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04095");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags1 = new com.google.javascript.rhino.Node.SideEffectFlags(15);
        sideEffectFlags1.setReturnsTainted();
        sideEffectFlags1.clearSideEffectFlags();
        sideEffectFlags1.clearAllFlags();
        sideEffectFlags1.setReturnsTainted();
        sideEffectFlags1.clearSideEffectFlags();
        sideEffectFlags1.setMutatesArguments();
        sideEffectFlags1.setMutatesArguments();
        sideEffectFlags1.setMutatesThis();
        sideEffectFlags1.setMutatesArguments();
    }

    @Test
    public void test04096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04096");
        boolean boolean1 = com.google.javascript.jscomp.NodeUtil.isValidQualifiedName("function (): {}.<(|null)>");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test04097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04097");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        boolean boolean89 = parameterizedType88.matchesObjectContext();
        boolean boolean90 = parameterizedType88.isNoObjectType();
        com.google.javascript.rhino.jstype.FunctionType functionType91 = parameterizedType88.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> jSTypeStaticSlot93 = parameterizedType88.getSlot("false");
        com.google.javascript.rhino.jstype.FunctionType functionType94 = parameterizedType88.getConstructor();
        com.google.javascript.rhino.jstype.FunctionType functionType95 = parameterizedType88.getConstructor();
        boolean boolean97 = parameterizedType88.hasProperty("function (): {588760971}");
        com.google.javascript.rhino.jstype.ObjectType objectType98 = parameterizedType88.getTypeOfThis();
        boolean boolean99 = parameterizedType88.isInterface();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(functionType91);
        org.junit.Assert.assertNull(jSTypeStaticSlot93);
        org.junit.Assert.assertNull(functionType94);
        org.junit.Assert.assertNull(functionType95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(objectType98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test04098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04098");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        int int9 = functionType8.getPropertiesCount();
        boolean boolean10 = functionType8.isNativeObjectType();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable13 = node12.siblings();
        int int14 = node12.getSideEffectFlags();
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable17 = node16.siblings();
        node12.addChildToBack(node16);
        com.google.javascript.rhino.jstype.JSType jSType19 = node12.getJSType();
        boolean boolean20 = node12.isInstanceOf();
        functionType8.setSource(node12);
        com.google.javascript.rhino.jstype.ObjectType objectType22 = functionType8.getTypeOfThis();
        java.util.List<com.google.javascript.rhino.jstype.FunctionType> functionTypeList23 = functionType8.getSubTypes();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(nodeIterable13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(nodeIterable17);
        org.junit.Assert.assertNull(jSType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objectType22);
        org.junit.Assert.assertNull(functionTypeList23);
    }

    @Test
    public void test04099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04099");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        java.lang.String str9 = functionType8.getDisplayName();
        com.google.javascript.rhino.jstype.FunctionType functionType10 = functionType8.getOwnerFunction();
        com.google.javascript.rhino.JSDocInfo jSDocInfo11 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo12 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo13 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean14 = jSDocInfo13.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo15 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean16 = jSDocInfo15.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo17 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean18 = jSDocInfo17.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList19 = com.google.common.collect.ImmutableList.of(jSDocInfo11, jSDocInfo12, jSDocInfo13, jSDocInfo15, jSDocInfo17);
        boolean boolean20 = jSDocInfo11.isNoCompile();
        java.lang.String str21 = jSDocInfo11.getVersion();
        functionType8.setJSDocInfo(jSDocInfo11);
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo23.isNoCompile();
        boolean boolean33 = jSDocInfo23.isConstructor();
        java.lang.String str34 = jSDocInfo23.getReturnDescription();
        functionType8.setJSDocInfo(jSDocInfo23);
        java.lang.String str36 = jSDocInfo23.getOriginalCommentString();
        boolean boolean37 = jSDocInfo23.isOverride();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test04100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04100");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags1 = new com.google.javascript.rhino.Node.SideEffectFlags(38);
        sideEffectFlags1.clearSideEffectFlags();
        sideEffectFlags1.setMutatesArguments();
    }

    @Test
    public void test04101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04101");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        functionType8.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo10);
        boolean boolean12 = functionType8.isNominalType();
        boolean boolean13 = functionType8.matchesNumberContext();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString("hi!");
        node15.detachChildren();
        boolean boolean17 = node15.isVarArgs();
        boolean boolean18 = node15.isFunction();
        functionType8.setSource(node15);
        java.lang.String str20 = functionType8.getDisplayName();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.ObjectType objectType25 = jSTypeRegistry24.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType26 = objectType25.getParentScope();
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType29 = jSTypeRegistry22.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType25, node28);
        com.google.javascript.rhino.JSDocInfo jSDocInfo31 = new com.google.javascript.rhino.JSDocInfo();
        functionType29.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo31);
        boolean boolean33 = functionType29.isNominalType();
        com.google.javascript.rhino.Node node35 = functionType29.getPropertyNode("");
        com.google.javascript.rhino.jstype.ObjectType objectType36 = functionType29.getImplicitPrototype();
        functionType8.setPrototypeBasedOn((com.google.javascript.rhino.jstype.ObjectType) functionType29);
        boolean boolean38 = functionType29.isConstructor();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(objectType25);
        org.junit.Assert.assertNotNull(objectType26);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(functionType29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(objectType36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test04102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04102");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        boolean boolean5 = objectType4.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType7 = objectType4.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType9 = jSTypeRegistry1.getGreatestSubtypeWithProperty(jSType7, "");
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.ObjectType objectType14 = jSTypeRegistry13.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType15 = objectType14.getParentScope();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType18 = jSTypeRegistry11.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType14, node17);
        java.lang.String str19 = functionType18.getDisplayName();
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable22 = node21.siblings();
        int int23 = node21.getSideEffectFlags();
        boolean boolean24 = node21.isLabelName();
        boolean boolean25 = node21.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType26 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType18, node21);
        boolean boolean28 = jSTypeRegistry1.isForwardDeclaredType("true");
        jSTypeRegistry1.clearTemplateTypeNames();
        jSTypeRegistry1.resetForTypeCheck();
        com.google.javascript.rhino.jstype.JSType jSType32 = jSTypeRegistry1.getType("function (): {404053079}");
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        com.google.javascript.rhino.Node node37 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry43 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42);
        com.google.javascript.rhino.jstype.ObjectType objectType44 = jSTypeRegistry43.createAnonymousObjectType();
        jSTypeRegistry40.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType44);
        com.google.javascript.rhino.jstype.JSType jSType46 = jSTypeRegistry34.createFromTypeNodes(node37, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType44);
        com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode resolveMode47 = null;
        jSTypeRegistry34.setResolveMode(resolveMode47);
        com.google.javascript.rhino.Node node52 = com.google.javascript.rhino.Node.newString("");
        boolean boolean53 = node52.isComma();
        node52.setType(1);
        com.google.javascript.rhino.Node node56 = new com.google.javascript.rhino.Node(15, node52);
        com.google.javascript.rhino.ErrorReporter errorReporter57 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry58 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter57);
        com.google.javascript.rhino.jstype.ObjectType objectType59 = jSTypeRegistry58.createAnonymousObjectType();
        boolean boolean60 = objectType59.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType62 = objectType59.getRestrictedTypeGivenToBooleanOutcome(true);
        boolean boolean63 = objectType59.canBeCalled();
        com.google.javascript.rhino.jstype.ObjectType objectType64 = jSTypeRegistry34.createObjectType("Not declared as a type name", node52, objectType59);
        com.google.javascript.rhino.jstype.JSType jSType69 = jSTypeRegistry34.createNamedType("Not declared as a constructor", "{}", 48, (int) ' ');
        jSTypeRegistry34.incrementGeneration();
        com.google.javascript.rhino.jstype.EnumType[] enumTypeArray71 = new com.google.javascript.rhino.jstype.EnumType[] {};
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.jstype.EnumType> enumTypeList72 = com.google.common.collect.ImmutableList.of(enumTypeArray71);
        com.google.javascript.rhino.Node node73 = jSTypeRegistry34.createOptionalParameters((com.google.javascript.rhino.jstype.JSType[]) enumTypeArray71);
        com.google.javascript.rhino.Node node74 = jSTypeRegistry1.createParameters((com.google.javascript.rhino.jstype.JSType[]) enumTypeArray71);
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.jstype.JSType> jSTypeList75 = com.google.common.collect.ImmutableList.of();
        com.google.javascript.rhino.Node node76 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList75);
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSType7);
        org.junit.Assert.assertNotNull(jSType9);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(functionType18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(nodeIterable22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(functionType26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType32);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(objectType44);
        org.junit.Assert.assertNotNull(jSType46);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objectType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(jSType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objectType64);
        org.junit.Assert.assertNotNull(jSType69);
        org.junit.Assert.assertNotNull(enumTypeArray71);
        org.junit.Assert.assertNotNull(enumTypeList72);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNotNull(jSTypeList75);
        org.junit.Assert.assertNotNull(node76);
    }

    @Test
    public void test04103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04103");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        boolean boolean3 = objectType2.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType5 = objectType2.getRestrictedTypeGivenToBooleanOutcome(true);
        boolean boolean6 = objectType2.hasDisplayName();
        boolean boolean7 = objectType2.isUnknownType();
        boolean boolean9 = objectType2.isPropertyInExterns("STRING \n    STRING \n");
        java.util.Set<java.lang.String> strSet10 = objectType2.getPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter11 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry12 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11);
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.ObjectType objectType15 = jSTypeRegistry14.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType16 = objectType15.getParentScope();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType19 = jSTypeRegistry12.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType15, node18);
        com.google.javascript.rhino.JSDocInfo jSDocInfo21 = new com.google.javascript.rhino.JSDocInfo();
        functionType19.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo21);
        int int23 = functionType19.getMaxArguments();
        boolean boolean24 = functionType19.canBeCalled();
        com.google.javascript.rhino.ErrorReporter errorReporter25 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry26 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter25);
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27);
        com.google.javascript.rhino.jstype.ObjectType objectType29 = jSTypeRegistry28.createAnonymousObjectType();
        boolean boolean30 = objectType29.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType32 = objectType29.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType34 = jSTypeRegistry26.getGreatestSubtypeWithProperty(jSType32, "");
        com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35);
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.ObjectType objectType39 = jSTypeRegistry38.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType40 = objectType39.getParentScope();
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType43 = jSTypeRegistry36.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType39, node42);
        java.lang.String str44 = functionType43.getDisplayName();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        boolean boolean49 = node46.isLabelName();
        boolean boolean50 = node46.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType51 = jSTypeRegistry26.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType43, node46);
        functionType19.setPrototypeBasedOn((com.google.javascript.rhino.jstype.ObjectType) functionType43);
        com.google.javascript.rhino.jstype.ObjectType.Property property54 = functionType43.getSlot("Not declared as a type name");
        com.google.javascript.rhino.ErrorReporter errorReporter55 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry56 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter55);
        com.google.javascript.rhino.ErrorReporter errorReporter57 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry58 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter57);
        com.google.javascript.rhino.jstype.ObjectType objectType59 = jSTypeRegistry58.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType60 = objectType59.getParentScope();
        com.google.javascript.rhino.Node node62 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry56.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType59, node62);
        com.google.javascript.rhino.JSDocInfo jSDocInfo65 = new com.google.javascript.rhino.JSDocInfo();
        functionType63.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo65);
        int int67 = functionType63.getMaxArguments();
        java.lang.String str68 = functionType63.toAnnotationString();
        com.google.javascript.rhino.JSDocInfo jSDocInfo70 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo71 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo72 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean73 = jSDocInfo72.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo74 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean75 = jSDocInfo74.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo76 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean77 = jSDocInfo76.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList78 = com.google.common.collect.ImmutableList.of(jSDocInfo70, jSDocInfo71, jSDocInfo72, jSDocInfo74, jSDocInfo76);
        jSDocInfo72.addSuppression("");
        java.lang.String str82 = jSDocInfo72.getDescriptionForParameter("");
        boolean boolean83 = jSDocInfo72.isExport();
        functionType63.setPropertyJSDocInfo("(true)", jSDocInfo72);
        com.google.javascript.rhino.jstype.JSType.TypePair typePair85 = functionType43.getTypesUnderEquality((com.google.javascript.rhino.jstype.JSType) functionType63);
        boolean boolean86 = strSet10.equals((java.lang.Object) functionType43);
        strSet10.clear();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(jSType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(objectType16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(functionType19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objectType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSType32);
        org.junit.Assert.assertNotNull(jSType34);
        org.junit.Assert.assertNotNull(objectType39);
        org.junit.Assert.assertNotNull(objectType40);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(functionType43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(functionType51);
        org.junit.Assert.assertNull(property54);
        org.junit.Assert.assertNotNull(objectType59);
        org.junit.Assert.assertNotNull(objectType60);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "function (): {}" + "'", str68, "function (): {}");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList78);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(typePair85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test04104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04104");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = objectType18.getCtorExtendedInterfaces();
        boolean boolean21 = objectType18.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo24.isConsistentIdGenerator();
        objectType18.setPropertyJSDocInfo("hi!", jSDocInfo24);
        boolean boolean34 = objectType18.isNullType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        jSTypeRegistry37.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean46 = jSDocInfo45.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean48 = jSDocInfo47.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList51 = com.google.common.collect.ImmutableList.of(jSDocInfo43, jSDocInfo44, jSDocInfo45, jSDocInfo47, jSDocInfo49);
        jSDocInfo45.addSuppression("");
        java.lang.String str55 = jSDocInfo45.getDescriptionForParameter("");
        objectType41.setJSDocInfo(jSDocInfo45);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        boolean boolean60 = node59.isComma();
        boolean boolean61 = node59.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        boolean boolean64 = node63.isComma();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        boolean boolean67 = node66.isComma();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        node69.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean73 = node69.isSyntheticBlock();
        boolean boolean74 = node66.isEquivalentToTyped(node69);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 1, node59, node63, node66);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node63.new FileLevelJsDocBuilder();
        boolean boolean77 = node63.isGetElem();
        boolean boolean78 = node63.isQualifiedName();
        boolean boolean79 = objectType18.defineSynthesizedProperty("{}", (com.google.javascript.rhino.jstype.JSType) objectType41, node63);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType83 = objectType82.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = objectType83.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType85 = objectType83.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType83.getImplicitPrototype();
        boolean boolean88 = objectType86.hasProperty("()");
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry1.createEnumType("?", node63, (com.google.javascript.rhino.jstype.JSType) objectType86);
        com.google.javascript.rhino.jstype.EnumType enumType90 = enumType89.toMaybeEnumType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType91 = enumType89.getElementsType();
        com.google.javascript.rhino.jstype.JSType jSType92 = enumElementType91.getPrimitiveType();
        boolean boolean93 = enumElementType91.canBeCalled();
        boolean boolean95 = enumElementType91.hasProperty("true");
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertNotNull(enumType90);
        org.junit.Assert.assertNotNull(enumElementType91);
        org.junit.Assert.assertNotNull(jSType92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test04105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04105");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        functionType8.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo10);
        java.lang.String str12 = functionType8.getDisplayName();
        java.lang.String str13 = functionType8.toDebugHashCodeString();
        boolean boolean14 = functionType8.hasReferenceName();
        functionType8.clearResolved();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertNull(str12);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "function (): {789422237}" + "'", str13, "function (): {789422237}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test04106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04106");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        boolean boolean10 = functionType8.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType11 = functionType8.autoboxesTo();
        com.google.javascript.rhino.jstype.JSType jSType12 = functionType8.autoboxesTo();
        boolean boolean14 = functionType8.removeProperty("");
        boolean boolean15 = functionType8.hasAnyTemplateInternal();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable16 = functionType8.getParameters();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.ObjectType objectType21 = jSTypeRegistry20.createAnonymousObjectType();
        boolean boolean22 = objectType21.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType24 = objectType21.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType26 = jSTypeRegistry18.getGreatestSubtypeWithProperty(jSType24, "");
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27);
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.ObjectType objectType31 = jSTypeRegistry30.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType32 = objectType31.getParentScope();
        com.google.javascript.rhino.Node node34 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType35 = jSTypeRegistry28.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType31, node34);
        java.lang.String str36 = functionType35.getDisplayName();
        com.google.javascript.rhino.Node node38 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable39 = node38.siblings();
        int int40 = node38.getSideEffectFlags();
        boolean boolean41 = node38.isLabelName();
        boolean boolean42 = node38.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType43 = jSTypeRegistry18.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType35, node38);
        java.lang.String str44 = functionType43.getReferenceName();
        com.google.javascript.rhino.jstype.UnionType unionType45 = functionType43.toMaybeUnionType();
        boolean boolean46 = functionType43.isFunctionPrototypeType();
        boolean boolean47 = functionType8.hasEqualCallType(functionType43);
        com.google.javascript.rhino.ErrorReporter errorReporter48 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry49 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter48);
        com.google.javascript.rhino.ErrorReporter errorReporter50 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry51 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter50);
        com.google.javascript.rhino.jstype.ObjectType objectType52 = jSTypeRegistry51.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType53 = objectType52.getParentScope();
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType56 = jSTypeRegistry49.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType52, node55);
        boolean boolean58 = functionType56.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType59 = functionType56.autoboxesTo();
        com.google.javascript.rhino.jstype.ObjectType objectType60 = functionType56.getTypeOfThis();
        com.google.javascript.rhino.jstype.FunctionType functionType61 = functionType56.toMaybeFunctionType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo62 = functionType61.getJSDocInfo();
        java.lang.String str63 = functionType61.toDebugHashCodeString();
        functionType43.matchConstraint((com.google.javascript.rhino.jstype.ObjectType) functionType61);
        boolean boolean65 = functionType61.hasImplementedInterfaces();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(jSType11);
        org.junit.Assert.assertNull(jSType12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(nodeIterable16);
        org.junit.Assert.assertNotNull(objectType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSType24);
        org.junit.Assert.assertNotNull(jSType26);
        org.junit.Assert.assertNotNull(objectType31);
        org.junit.Assert.assertNotNull(objectType32);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(functionType35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(nodeIterable39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(functionType43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(unionType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objectType52);
        org.junit.Assert.assertNotNull(objectType53);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(functionType56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(jSType59);
        org.junit.Assert.assertNotNull(objectType60);
        org.junit.Assert.assertNotNull(functionType61);
        org.junit.Assert.assertNull(jSDocInfo62);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "function (): {1271118960}" + "'", str63, "function (): {1271118960}");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test04107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04107");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        functionType8.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo10);
        int int12 = functionType8.getMaxArguments();
        boolean boolean13 = functionType8.canBeCalled();
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.ObjectType objectType18 = jSTypeRegistry17.createAnonymousObjectType();
        boolean boolean19 = objectType18.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType21 = objectType18.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType23 = jSTypeRegistry15.getGreatestSubtypeWithProperty(jSType21, "");
        com.google.javascript.rhino.ErrorReporter errorReporter24 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry25 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter24);
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.ObjectType objectType28 = jSTypeRegistry27.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType29 = objectType28.getParentScope();
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry25.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType28, node31);
        java.lang.String str33 = functionType32.getDisplayName();
        com.google.javascript.rhino.Node node35 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable36 = node35.siblings();
        int int37 = node35.getSideEffectFlags();
        boolean boolean38 = node35.isLabelName();
        boolean boolean39 = node35.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType40 = jSTypeRegistry15.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType32, node35);
        functionType8.setPrototypeBasedOn((com.google.javascript.rhino.jstype.ObjectType) functionType32);
        com.google.javascript.rhino.JSDocInfo.Visibility visibility42 = com.google.javascript.rhino.JSDocInfo.Visibility.PROTECTED;
        boolean boolean43 = functionType8.equals((java.lang.Object) visibility42);
        com.google.javascript.rhino.jstype.JSType jSType44 = functionType8.getTypeOfThis();
        boolean boolean45 = functionType8.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType47 = functionType8.getRestrictedTypeGivenToBooleanOutcome(false);
        boolean boolean48 = jSType47.isNumberObjectType();
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet49 = jSType47.getPossibleToBooleanOutcomes();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(jSType21);
        org.junit.Assert.assertNotNull(jSType23);
        org.junit.Assert.assertNotNull(objectType28);
        org.junit.Assert.assertNotNull(objectType29);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(nodeIterable36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(functionType40);
        org.junit.Assert.assertTrue("'" + visibility42 + "' != '" + com.google.javascript.rhino.JSDocInfo.Visibility.PROTECTED + "'", visibility42.equals(com.google.javascript.rhino.JSDocInfo.Visibility.PROTECTED));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(jSType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jSType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + booleanLiteralSet49 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.EMPTY + "'", booleanLiteralSet49.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.EMPTY));
    }

    @Test
    public void test04108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04108");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        boolean boolean10 = jSDocInfo4.hasParameter("hi!");
        boolean boolean11 = jSDocInfo4.isOverride();
        boolean boolean12 = jSDocInfo4.isExpose();
        boolean boolean13 = jSDocInfo4.isExpose();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression14 = jSDocInfo4.getType();
        java.util.List<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList15 = jSDocInfo4.getImplementedInterfaces();
        boolean boolean16 = jSDocInfo4.isExport();
        jSDocInfo4.setDeprecated(true);
        boolean boolean19 = jSDocInfo4.isExport();
        boolean boolean20 = jSDocInfo4.hasFileOverview();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(jSTypeExpression14);
        org.junit.Assert.assertNotNull(jSTypeExpressionList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test04109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04109");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        int int89 = parameterizedType88.getPropertiesCount();
        boolean boolean90 = parameterizedType88.isInterface();
        boolean boolean91 = parameterizedType88.isInterface();
        com.google.javascript.rhino.Node node93 = parameterizedType88.getPropertyNode("{proxy:function (): {958162840}}");
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(node93);
    }

    @Test
    public void test04110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04110");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        boolean boolean10 = functionType8.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType11 = functionType8.autoboxesTo();
        com.google.javascript.rhino.jstype.ObjectType objectType12 = functionType8.getTypeOfThis();
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet13 = objectType12.getPossibleToBooleanOutcomes();
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.ObjectType objectType18 = jSTypeRegistry17.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType19 = objectType18.getParentScope();
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType22 = jSTypeRegistry15.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType18, node21);
        java.lang.String str23 = functionType22.getDisplayName();
        boolean boolean24 = objectType12.canTestForEqualityWith((com.google.javascript.rhino.jstype.JSType) functionType22);
        boolean boolean25 = functionType22.hasCachedValues();
        int int26 = functionType22.getPropertiesCount();
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27);
        com.google.javascript.rhino.jstype.ObjectType objectType29 = jSTypeRegistry28.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType30 = objectType29.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable31 = objectType30.getCtorExtendedInterfaces();
        boolean boolean32 = objectType30.isStringValueType();
        functionType22.setPrototypeBasedOn(objectType30);
        functionType22.clearCachedValues();
        java.lang.String str35 = functionType22.toDebugHashCodeString();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.ObjectType objectType39 = jSTypeRegistry38.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType40 = objectType39.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable41 = objectType40.getCtorExtendedInterfaces();
        boolean boolean42 = objectType40.isNativeObjectType();
        com.google.javascript.rhino.jstype.JSType jSType43 = functionType22.forceResolve(errorReporter36, (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType40);
        boolean boolean45 = functionType22.hasProperty("java.io.IOException: function (): {1183181076}");
        boolean boolean46 = functionType22.isUnknownType();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(jSType11);
        org.junit.Assert.assertNotNull(objectType12);
        org.junit.Assert.assertTrue("'" + booleanLiteralSet13 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.BOTH + "'", booleanLiteralSet13.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.BOTH));
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(functionType22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(objectType29);
        org.junit.Assert.assertNotNull(objectType30);
        org.junit.Assert.assertNotNull(objectTypeIterable31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "function (): {158600846}" + "'", str35, "function (): {158600846}");
        org.junit.Assert.assertNotNull(objectType39);
        org.junit.Assert.assertNotNull(objectType40);
        org.junit.Assert.assertNotNull(objectTypeIterable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(jSType43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test04111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04111");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        boolean boolean89 = parameterizedType88.matchesStringContext();
        boolean boolean90 = parameterizedType88.isInstanceType();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test04112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04112");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        functionType8.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo10);
        boolean boolean12 = functionType8.isNominalType();
        com.google.javascript.rhino.jstype.JSType jSType13 = functionType8.autobox();
        com.google.javascript.rhino.jstype.ObjectType objectType15 = com.google.javascript.rhino.jstype.FunctionType.getTopDefiningInterface((com.google.javascript.rhino.jstype.ObjectType) functionType8, "function (): {862909605}");
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.ErrorReporter errorReporter18 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter18);
        com.google.javascript.rhino.jstype.ObjectType objectType20 = jSTypeRegistry19.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType21 = objectType20.getParentScope();
        com.google.javascript.rhino.Node node23 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType24 = jSTypeRegistry17.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType20, node23);
        int int25 = functionType24.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable26 = functionType24.getOwnImplementedInterfaces();
        com.google.javascript.rhino.Node node27 = functionType24.getRootNode();
        boolean boolean28 = functionType24.matchesObjectContext();
        java.lang.Iterable iterable29 = functionType24.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair30 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType8, (com.google.javascript.rhino.jstype.JSType) functionType24);
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType36 = objectType35.getParentScope();
        com.google.javascript.rhino.Node node38 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType39 = jSTypeRegistry32.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType35, node38);
        com.google.javascript.rhino.JSDocInfo jSDocInfo41 = new com.google.javascript.rhino.JSDocInfo();
        functionType39.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo41);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable43 = functionType39.getAllImplementedInterfaces();
        boolean boolean44 = functionType8.canTestForEqualityWith((com.google.javascript.rhino.jstype.JSType) functionType39);
        boolean boolean45 = functionType39.hasReferenceName();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNull(objectType15);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(objectType21);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(functionType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(iterable29);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertNotNull(objectType36);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(functionType39);
        org.junit.Assert.assertNotNull(objectTypeIterable43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test04113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04113");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        boolean boolean89 = parameterizedType88.matchesObjectContext();
        boolean boolean90 = parameterizedType88.isNoObjectType();
        com.google.javascript.rhino.jstype.FunctionType functionType91 = parameterizedType88.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.JSType jSType92 = parameterizedType88.getParameterType();
        java.lang.String str93 = parameterizedType88.getReferenceName();
        com.google.javascript.rhino.jstype.FunctionType functionType94 = parameterizedType88.toMaybeFunctionType();
        boolean boolean95 = parameterizedType88.isNullable();
        boolean boolean96 = parameterizedType88.hasAnyTemplateInternal();
        int int97 = parameterizedType88.getPropertiesCount();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(functionType91);
        org.junit.Assert.assertNotNull(jSType92);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNotNull(functionType94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 1 + "'", int97 == 1);
    }

    @Test
    public void test04114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04114");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.jstype.ObjectType objectType12 = jSTypeRegistry11.createAnonymousObjectType();
        jSTypeRegistry8.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType12);
        boolean boolean14 = objectType12.isNativeObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        boolean boolean18 = objectType17.isUnknownType();
        com.google.javascript.rhino.jstype.JSType jSType20 = objectType17.findPropertyType("true");
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.ObjectType objectType23 = jSTypeRegistry22.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType24 = objectType23.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable25 = objectType24.getCtorExtendedInterfaces();
        boolean boolean26 = objectType24.isStringValueType();
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27);
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.ObjectType objectType31 = jSTypeRegistry30.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType32 = objectType31.getParentScope();
        com.google.javascript.rhino.Node node34 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType35 = jSTypeRegistry28.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType31, node34);
        com.google.javascript.rhino.JSDocInfo jSDocInfo37 = new com.google.javascript.rhino.JSDocInfo();
        functionType35.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo37);
        int int39 = functionType35.getMaxArguments();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.ObjectType objectType42 = jSTypeRegistry41.createAnonymousObjectType();
        boolean boolean43 = objectType42.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType45 = objectType42.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46);
        com.google.javascript.rhino.jstype.ObjectType objectType48 = jSTypeRegistry47.createAnonymousObjectType();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.ErrorReporter errorReporter55 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry56 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter55);
        com.google.javascript.rhino.jstype.ObjectType objectType57 = jSTypeRegistry56.createAnonymousObjectType();
        jSTypeRegistry53.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType57);
        com.google.javascript.rhino.jstype.JSType jSType59 = jSTypeRegistry47.createFromTypeNodes(node50, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType57);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] { objectType12, objectType17, objectType24, functionType35, objectType42, objectType57 };
        com.google.javascript.rhino.Node node61 = jSTypeRegistry1.createParametersWithVarArgs(jSTypeArray60);
        com.google.javascript.rhino.Node node64 = com.google.javascript.rhino.Node.newString("");
        boolean boolean65 = node64.isComma();
        node64.setType(1);
        com.google.javascript.rhino.Node node69 = node64.getAncestor((int) (short) 100);
        boolean boolean70 = node64.isNoSideEffectsCall();
        com.google.javascript.rhino.Node node72 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable73 = node72.siblings();
        int int74 = node72.getSideEffectFlags();
        com.google.javascript.rhino.Node node76 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable77 = node76.siblings();
        node72.addChildToBack(node76);
        boolean boolean79 = node76.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder80 = node76.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node82 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node83 = com.google.javascript.jscomp.NodeUtil.newExpr(node82);
        com.google.javascript.jscomp.CodingConvention.Bind bind84 = new com.google.javascript.jscomp.CodingConvention.Bind(node64, node76, node83);
        com.google.javascript.rhino.ErrorReporter errorReporter85 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry86 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter85);
        com.google.javascript.rhino.jstype.ObjectType objectType87 = jSTypeRegistry86.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType88 = objectType87.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable89 = objectType88.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType90 = objectType88.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType91 = objectType88.getImplicitPrototype();
        boolean boolean92 = objectType88.isTemplateType();
        boolean boolean93 = objectType88.isString();
        com.google.javascript.rhino.jstype.EnumType enumType94 = jSTypeRegistry1.createEnumType("function (): {805710031}", node64, (com.google.javascript.rhino.jstype.JSType) objectType88);
        boolean boolean95 = objectType88.isBooleanValueType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType96 = objectType88.toMaybeEnumElementType();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(objectType12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(jSType20);
        org.junit.Assert.assertNotNull(objectType23);
        org.junit.Assert.assertNotNull(objectType24);
        org.junit.Assert.assertNotNull(objectTypeIterable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objectType31);
        org.junit.Assert.assertNotNull(objectType32);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(functionType35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(objectType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(jSType45);
        org.junit.Assert.assertNotNull(objectType48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(objectType57);
        org.junit.Assert.assertNotNull(jSType59);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertNotNull(nodeIterable73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNotNull(nodeIterable77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder80);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertNotNull(objectType87);
        org.junit.Assert.assertNotNull(objectType88);
        org.junit.Assert.assertNotNull(objectTypeIterable89);
        org.junit.Assert.assertNotNull(jSType90);
        org.junit.Assert.assertNotNull(objectType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(enumType94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(enumElementType96);
    }

    @Test
    public void test04115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04115");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable10 = node9.siblings();
        int int11 = node9.getSideEffectFlags();
        boolean boolean12 = node9.isLabelName();
        com.google.javascript.rhino.Node node13 = node1.copyInformationFromForTree(node9);
        java.lang.String str14 = node13.getSourceFileName();
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition15 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable18 = node17.siblings();
        namePosition15.setItem(node17);
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        boolean boolean22 = node21.isComma();
        namePosition15.setItem(node21);
        int int24 = namePosition15.getPositionOnStartLine();
        com.google.javascript.rhino.Node node25 = namePosition15.getItem();
        com.google.javascript.rhino.Node node26 = node13.useSourceInfoIfMissingFrom(node25);
        java.lang.String str30 = node26.toString(false, true, false);
        java.lang.Appendable appendable31 = null;
        // The following exception was thrown during execution in test generation
        try {
            node26.appendStringTree(appendable31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeIterable10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(nodeIterable18);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "STRING " + "'", str30, "STRING ");
    }

    @Test
    public void test04116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04116");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo11 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean12 = jSDocInfo11.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo13 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean14 = jSDocInfo13.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo15 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean16 = jSDocInfo15.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList17 = com.google.common.collect.ImmutableList.of(jSDocInfo9, jSDocInfo10, jSDocInfo11, jSDocInfo13, jSDocInfo15);
        com.google.javascript.rhino.JSDocInfo jSDocInfo18 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo19 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo20 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean21 = jSDocInfo20.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo22 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean23 = jSDocInfo22.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean25 = jSDocInfo24.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList26 = com.google.common.collect.ImmutableList.of(jSDocInfo18, jSDocInfo19, jSDocInfo20, jSDocInfo22, jSDocInfo24);
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo28 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo31 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean32 = jSDocInfo31.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean34 = jSDocInfo33.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList35 = com.google.common.collect.ImmutableList.of(jSDocInfo27, jSDocInfo28, jSDocInfo29, jSDocInfo31, jSDocInfo33);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo>> jSDocInfoListList36 = com.google.common.collect.ImmutableList.of(jSDocInfoList8, jSDocInfoList17, jSDocInfoList26, jSDocInfoList35);
        java.lang.String str37 = jSDocInfoList26.toString();
        java.lang.Object[] objArray38 = jSDocInfoList26.toArray();
        com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newString("");
        node40.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        node40.setSourceEncodedPosition((-1));
        com.google.javascript.rhino.Node node47 = node40.getAncestor(2);
        boolean boolean48 = node40.isLabel();
        boolean boolean49 = jSDocInfoList26.equals((java.lang.Object) boolean48);
        java.util.Iterator<com.google.javascript.rhino.JSDocInfo> jSDocInfoItor50 = jSDocInfoList26.iterator();
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newNumber((double) (short) 100, (int) (short) 1, 1);
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable57 = node56.siblings();
        int int58 = node56.getSideEffectFlags();
        com.google.javascript.rhino.Node node60 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable61 = node60.siblings();
        node56.addChildToBack(node60);
        com.google.javascript.rhino.Node node64 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable65 = node64.siblings();
        int int66 = node64.getSideEffectFlags();
        boolean boolean67 = node64.isLabelName();
        com.google.javascript.rhino.Node node68 = node56.copyInformationFromForTree(node64);
        java.lang.Object obj70 = node68.getProp(51);
        com.google.javascript.rhino.Node node71 = node54.useSourceInfoIfMissingFromForTree(node68);
        boolean boolean72 = node71.isAdd();
        int int73 = jSDocInfoList26.indexOf((java.lang.Object) node71);
        java.util.Iterator<com.google.javascript.rhino.JSDocInfo> jSDocInfoItor74 = jSDocInfoList26.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList35);
        org.junit.Assert.assertNotNull(jSDocInfoListList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]" + "'", str37, "[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]");
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(jSDocInfoItor50);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(nodeIterable57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(nodeIterable61);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNotNull(nodeIterable65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(jSDocInfoItor74);
    }

    @Test
    public void test04117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04117");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString("");
        boolean boolean3 = node2.isComma();
        boolean boolean4 = node2.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString("");
        boolean boolean7 = node6.isComma();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        boolean boolean10 = node9.isComma();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString("");
        node12.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean16 = node12.isSyntheticBlock();
        boolean boolean17 = node9.isEquivalentToTyped(node12);
        com.google.javascript.rhino.Node node18 = new com.google.javascript.rhino.Node((int) (short) 1, node2, node6, node9);
        boolean boolean19 = node2.isSyntheticBlock();
        node2.setQuotedString();
        com.google.javascript.rhino.Node node21 = node2.detachFromParent();
        boolean boolean22 = node2.isWith();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test04118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04118");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable10 = node9.siblings();
        int int11 = node9.getSideEffectFlags();
        boolean boolean12 = node9.isLabelName();
        com.google.javascript.rhino.Node node13 = node1.copyInformationFromForTree(node9);
        java.lang.String str14 = node13.getSourceFileName();
        boolean boolean15 = node13.isDo();
        boolean boolean16 = node13.isSwitch();
        boolean boolean17 = node13.isNumber();
        java.lang.String str18 = node13.getSourceFileName();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeIterable10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test04119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04119");
        com.google.javascript.rhino.Node[] nodeArray2 = new com.google.javascript.rhino.Node[] {};
        com.google.javascript.rhino.Node node5 = new com.google.javascript.rhino.Node((int) (short) 1, nodeArray2, 43, 50);
        int int6 = node5.getCharno();
        boolean boolean7 = node5.isGetterDef();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable8 = node5.siblings();
        node5.setWasEmptyNode(false);
        boolean boolean11 = node5.isVar();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder12 = node5.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node13 = new com.google.javascript.rhino.Node(30, node5);
        boolean boolean14 = node5.isNE();
        org.junit.Assert.assertNotNull(nodeArray2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(nodeIterable8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test04120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04120");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        boolean boolean10 = node9.isComma();
        boolean boolean11 = node9.isOnlyModifiesThisCall();
        boolean boolean12 = node9.isSetterDef();
        com.google.javascript.rhino.Node node13 = node5.useSourceInfoFrom(node9);
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString("");
        boolean boolean16 = node15.isComma();
        boolean boolean17 = node15.isOnlyModifiesThisCall();
        boolean boolean18 = node15.isVarArgs();
        boolean boolean19 = node13.hasChild(node15);
        node13.setCharno(83);
        com.google.javascript.rhino.Node node23 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable24 = node23.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression26 = new com.google.javascript.rhino.JSTypeExpression(node23, "Not declared as a type name");
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable29 = node28.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression31 = new com.google.javascript.rhino.JSTypeExpression(node28, "Not declared as a type name");
        com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable34 = node33.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression36 = new com.google.javascript.rhino.JSTypeExpression(node33, "Not declared as a type name");
        com.google.javascript.rhino.Node node38 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable39 = node38.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression41 = new com.google.javascript.rhino.JSTypeExpression(node38, "Not declared as a type name");
        com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable44 = node43.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression46 = new com.google.javascript.rhino.JSTypeExpression(node43, "Not declared as a type name");
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable49 = node48.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression51 = new com.google.javascript.rhino.JSTypeExpression(node48, "Not declared as a type name");
        com.google.javascript.rhino.Node node53 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable54 = node53.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression56 = new com.google.javascript.rhino.JSTypeExpression(node53, "Not declared as a type name");
        com.google.javascript.rhino.Node node58 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable59 = node58.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression61 = new com.google.javascript.rhino.JSTypeExpression(node58, "Not declared as a type name");
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable64 = node63.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression66 = new com.google.javascript.rhino.JSTypeExpression(node63, "Not declared as a type name");
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable69 = node68.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression71 = new com.google.javascript.rhino.JSTypeExpression(node68, "Not declared as a type name");
        com.google.javascript.rhino.Node node73 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable74 = node73.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression76 = new com.google.javascript.rhino.JSTypeExpression(node73, "Not declared as a type name");
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList77 = com.google.common.collect.ImmutableList.of(jSTypeExpression26, jSTypeExpression31, jSTypeExpression36, jSTypeExpression41, jSTypeExpression46, jSTypeExpression51, jSTypeExpression56, jSTypeExpression61, jSTypeExpression66, jSTypeExpression71, jSTypeExpression76);
        boolean boolean78 = jSTypeExpression41.isVarArgs();
        com.google.javascript.rhino.Node node80 = com.google.javascript.rhino.Node.newNumber((double) '#');
        boolean boolean81 = node80.isNumber();
        boolean boolean82 = node80.isDec();
        com.google.javascript.rhino.JSDocInfo jSDocInfo83 = node80.getJSDocInfo();
        boolean boolean84 = jSTypeExpression41.equals((java.lang.Object) jSDocInfo83);
        com.google.javascript.rhino.Node node85 = jSTypeExpression41.getRoot();
        node13.addChildToBack(node85);
        boolean boolean87 = node13.isVarArgs();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(nodeIterable24);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(nodeIterable29);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(nodeIterable34);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(nodeIterable39);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(nodeIterable44);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(nodeIterable49);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(nodeIterable54);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(nodeIterable59);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(nodeIterable64);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(nodeIterable69);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertNotNull(nodeIterable74);
        org.junit.Assert.assertNotNull(jSTypeExpressionList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(jSDocInfo83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test04121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04121");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        boolean boolean5 = objectType4.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType7 = objectType4.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType9 = jSTypeRegistry1.getGreatestSubtypeWithProperty(jSType7, "");
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.ObjectType objectType14 = jSTypeRegistry13.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType15 = objectType14.getParentScope();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType18 = jSTypeRegistry11.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType14, node17);
        java.lang.String str19 = functionType18.getDisplayName();
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable22 = node21.siblings();
        int int23 = node21.getSideEffectFlags();
        boolean boolean24 = node21.isLabelName();
        boolean boolean25 = node21.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType26 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType18, node21);
        boolean boolean28 = functionType18.isPropertyTypeInferred("(true)");
        boolean boolean29 = functionType18.isNativeObjectType();
        com.google.javascript.rhino.jstype.JSType jSType30 = functionType18.autobox();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType36 = objectType35.getParentScope();
        com.google.javascript.rhino.Node node38 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType39 = jSTypeRegistry32.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType35, node38);
        java.lang.String str40 = functionType39.getDisplayName();
        com.google.javascript.rhino.jstype.FunctionType functionType41 = functionType39.getOwnerFunction();
        com.google.javascript.rhino.JSDocInfo jSDocInfo42 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean45 = jSDocInfo44.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo46 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean47 = jSDocInfo46.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo48 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean49 = jSDocInfo48.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList50 = com.google.common.collect.ImmutableList.of(jSDocInfo42, jSDocInfo43, jSDocInfo44, jSDocInfo46, jSDocInfo48);
        boolean boolean51 = jSDocInfo42.isNoCompile();
        java.lang.String str52 = jSDocInfo42.getVersion();
        functionType39.setJSDocInfo(jSDocInfo42);
        com.google.javascript.rhino.jstype.ObjectType.Property property55 = functionType39.getSlot("Unknown class name");
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable56 = functionType39.getOwnImplementedInterfaces();
        boolean boolean57 = functionType39.isConstructor();
        com.google.javascript.rhino.JSDocInfo jSDocInfo59 = functionType39.getOwnPropertyJSDocInfo("function (): {1559136837}");
        com.google.javascript.rhino.jstype.JSType.TypePair typePair60 = jSType30.getTypesUnderEquality((com.google.javascript.rhino.jstype.JSType) functionType39);
        com.google.javascript.rhino.Node node62 = functionType39.getPropertyNode("JSDocInfo");
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSType7);
        org.junit.Assert.assertNotNull(jSType9);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(functionType18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(nodeIterable22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(functionType26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSType30);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertNotNull(objectType36);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(functionType39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(functionType41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(property55);
        org.junit.Assert.assertNotNull(objectTypeIterable56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(jSDocInfo59);
        org.junit.Assert.assertNotNull(typePair60);
        org.junit.Assert.assertNull(node62);
    }

    @Test
    public void test04122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04122");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable9 = functionType8.getImplementedInterfaces();
        boolean boolean10 = functionType8.isNominalType();
        boolean boolean12 = functionType8.hasProperty("function (): {1870371472}");
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertNotNull(objectTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test04123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04123");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString((int) ' ', "", 49, 53);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression6 = new com.google.javascript.rhino.JSTypeExpression(node4, "");
        com.google.javascript.rhino.Node node7 = jSTypeExpression6.getRoot();
        com.google.javascript.rhino.Node[] nodeArray10 = new com.google.javascript.rhino.Node[] {};
        com.google.javascript.rhino.Node node13 = new com.google.javascript.rhino.Node((int) (short) 1, nodeArray10, 43, 50);
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString("");
        node15.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean19 = node15.isSyntheticBlock();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder20 = node15.new FileLevelJsDocBuilder();
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile21 = null;
        node15.setStaticSourceFile(staticSourceFile21);
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable25 = node24.siblings();
        int int26 = node24.getSideEffectFlags();
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable29 = node28.siblings();
        node24.addChildToBack(node28);
        com.google.javascript.rhino.Node node32 = com.google.javascript.rhino.Node.newString("");
        boolean boolean33 = node32.isComma();
        boolean boolean34 = node32.isOnlyModifiesThisCall();
        boolean boolean35 = node32.isSetterDef();
        com.google.javascript.rhino.Node node36 = node28.useSourceInfoFrom(node32);
        com.google.javascript.rhino.Node node39 = new com.google.javascript.rhino.Node(0, node13, node15, node32, (int) (short) 100, 15);
        boolean boolean40 = node32.isHook();
        com.google.javascript.rhino.Node node41 = node32.cloneTree();
        boolean boolean42 = jSTypeExpression6.equals((java.lang.Object) node41);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression43 = com.google.javascript.rhino.JSTypeExpression.makeOptionalArg(jSTypeExpression6);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(nodeIterable25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(nodeIterable29);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(jSTypeExpression43);
    }

    @Test
    public void test04124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04124");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        java.lang.String str9 = functionType8.getDisplayName();
        com.google.javascript.rhino.jstype.FunctionType functionType10 = functionType8.getOwnerFunction();
        com.google.javascript.rhino.JSDocInfo jSDocInfo11 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo12 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo13 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean14 = jSDocInfo13.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo15 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean16 = jSDocInfo15.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo17 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean18 = jSDocInfo17.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList19 = com.google.common.collect.ImmutableList.of(jSDocInfo11, jSDocInfo12, jSDocInfo13, jSDocInfo15, jSDocInfo17);
        boolean boolean20 = jSDocInfo11.isNoCompile();
        java.lang.String str21 = jSDocInfo11.getVersion();
        functionType8.setJSDocInfo(jSDocInfo11);
        com.google.javascript.rhino.jstype.FunctionType functionType23 = functionType8.getOwnerFunction();
        com.google.common.collect.ImmutableList<java.lang.String> strList24 = functionType8.getTemplateTypeNames();
        boolean boolean26 = functionType8.hasProperty("function (): {1177818798}");
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType27 = functionType8.toMaybeParameterizedType();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.ObjectType objectType32 = jSTypeRegistry31.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType33 = objectType32.getParentScope();
        com.google.javascript.rhino.Node node35 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType36 = jSTypeRegistry29.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType32, node35);
        com.google.javascript.rhino.JSDocInfo jSDocInfo38 = new com.google.javascript.rhino.JSDocInfo();
        functionType36.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo38);
        boolean boolean40 = functionType36.isNominalType();
        com.google.javascript.rhino.jstype.JSType jSType41 = functionType36.autobox();
        boolean boolean42 = functionType36.hasAnyTemplate();
        com.google.javascript.rhino.jstype.JSType jSType44 = functionType36.findPropertyType("(Unknown class name)");
        boolean boolean45 = functionType8.isEquivalentTo((com.google.javascript.rhino.jstype.JSType) functionType36);
        boolean boolean47 = functionType8.hasOwnProperty("function (): {1881413141}");
        int int48 = functionType8.getMinArguments();
        boolean boolean50 = functionType8.hasProperty("function (): {1870371472}");
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(functionType23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(parameterizedType27);
        org.junit.Assert.assertNotNull(objectType32);
        org.junit.Assert.assertNotNull(objectType33);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(functionType36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(jSType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(jSType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test04125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04125");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        boolean boolean3 = objectType2.hasCachedValues();
        boolean boolean4 = objectType2.isOrdinaryFunction();
        com.google.javascript.rhino.Node node5 = objectType2.getRootNode();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(node5);
    }

    @Test
    public void test04126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04126");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec1 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec3 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("true");
        java.lang.String str4 = assertionFunctionSpec3.getFunctionName();
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec6 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("true");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec8 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("true");
        java.lang.String str9 = assertionFunctionSpec8.getFunctionName();
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec11 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("PARAM_LIST");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec13 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("");
        com.google.common.collect.ImmutableList<com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec> assertionFunctionSpecList14 = com.google.common.collect.ImmutableList.of(assertionFunctionSpec1, assertionFunctionSpec3, assertionFunctionSpec6, assertionFunctionSpec8, assertionFunctionSpec11, assertionFunctionSpec13);
        com.google.javascript.rhino.JSDocInfo jSDocInfo15 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo16 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo17 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean18 = jSDocInfo17.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo19 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean20 = jSDocInfo19.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo21 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean22 = jSDocInfo21.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList23 = com.google.common.collect.ImmutableList.of(jSDocInfo15, jSDocInfo16, jSDocInfo17, jSDocInfo19, jSDocInfo21);
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo26 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean27 = jSDocInfo26.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo28 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean29 = jSDocInfo28.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo30 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean31 = jSDocInfo30.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList32 = com.google.common.collect.ImmutableList.of(jSDocInfo24, jSDocInfo25, jSDocInfo26, jSDocInfo28, jSDocInfo30);
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo34 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo35 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean36 = jSDocInfo35.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo37 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean38 = jSDocInfo37.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo39 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean40 = jSDocInfo39.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList41 = com.google.common.collect.ImmutableList.of(jSDocInfo33, jSDocInfo34, jSDocInfo35, jSDocInfo37, jSDocInfo39);
        com.google.javascript.rhino.JSDocInfo jSDocInfo42 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean45 = jSDocInfo44.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo46 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean47 = jSDocInfo46.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo48 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean49 = jSDocInfo48.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList50 = com.google.common.collect.ImmutableList.of(jSDocInfo42, jSDocInfo43, jSDocInfo44, jSDocInfo46, jSDocInfo48);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo>> jSDocInfoListList51 = com.google.common.collect.ImmutableList.of(jSDocInfoList23, jSDocInfoList32, jSDocInfoList41, jSDocInfoList50);
        java.lang.Object[] objArray52 = jSDocInfoList41.toArray();
        boolean boolean54 = jSDocInfoList41.equals((java.lang.Object) 'a');
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newString("{}");
        com.google.javascript.rhino.Node node58 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable59 = node58.siblings();
        boolean boolean60 = node58.isAdd();
        com.google.javascript.rhino.Node node62 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable63 = node62.siblings();
        int int64 = node62.getSideEffectFlags();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable67 = node66.siblings();
        node62.addChildToBack(node66);
        com.google.javascript.rhino.Node node70 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable71 = node70.siblings();
        int int72 = node70.getSideEffectFlags();
        boolean boolean73 = node70.isLabelName();
        com.google.javascript.rhino.Node node74 = node62.copyInformationFromForTree(node70);
        boolean boolean75 = node58.isEquivalentTo(node70);
        boolean boolean76 = node58.isOnlyModifiesThisCall();
        boolean boolean77 = node58.hasOneChild();
        node56.addChildToFront(node58);
        boolean boolean79 = jSDocInfoList41.equals((java.lang.Object) node58);
        com.google.javascript.rhino.Node node80 = assertionFunctionSpec1.getAssertedParam(node58);
        boolean boolean81 = node80.isOnlyModifiesThisCall();
        boolean boolean83 = node80.getBooleanProp(41);
        com.google.javascript.rhino.Node node84 = node80.detachFromParent();
        java.lang.String str85 = com.google.javascript.jscomp.NodeUtil.getNearestFunctionName(node80);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "true" + "'", str4, "true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true" + "'", str9, "true");
        org.junit.Assert.assertNotNull(assertionFunctionSpecList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList50);
        org.junit.Assert.assertNotNull(jSDocInfoListList51);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(nodeIterable59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(nodeIterable63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertNotNull(nodeIterable67);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(nodeIterable71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test04127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04127");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        boolean boolean3 = node1.isAdd();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        int int7 = node5.getSideEffectFlags();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable10 = node9.siblings();
        node5.addChildToBack(node9);
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable14 = node13.siblings();
        int int15 = node13.getSideEffectFlags();
        boolean boolean16 = node13.isLabelName();
        com.google.javascript.rhino.Node node17 = node5.copyInformationFromForTree(node13);
        boolean boolean18 = node1.isEquivalentTo(node13);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression20 = new com.google.javascript.rhino.JSTypeExpression(node13, "");
        boolean boolean21 = com.google.javascript.jscomp.NodeUtil.isRelationalOperation(node13);
        boolean boolean22 = node13.isLabelName();
        boolean boolean23 = node13.isNumber();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeIterable10);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeIterable14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test04128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04128");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        boolean boolean8 = node5.isVoid();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression10 = new com.google.javascript.rhino.JSTypeExpression(node5, "true");
        boolean boolean11 = node5.isHook();
        com.google.javascript.rhino.Node node15 = new com.google.javascript.rhino.Node(54, 2, 0);
        boolean boolean16 = node15.isInstanceOf();
        boolean boolean17 = node15.isSwitch();
        boolean boolean18 = node5.isEquivalentToTyped(node15);
        boolean boolean19 = node15.hasOneChild();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test04129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04129");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        boolean boolean3 = node1.isAdd();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        int int7 = node5.getSideEffectFlags();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable10 = node9.siblings();
        node5.addChildToBack(node9);
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable14 = node13.siblings();
        int int15 = node13.getSideEffectFlags();
        boolean boolean16 = node13.isLabelName();
        com.google.javascript.rhino.Node node17 = node5.copyInformationFromForTree(node13);
        boolean boolean18 = node1.isEquivalentTo(node13);
        boolean boolean19 = node1.isOr();
        boolean boolean20 = node1.isGetterDef();
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile21 = null;
        node1.setStaticSourceFile(staticSourceFile21);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile23 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node1);
        boolean boolean24 = node1.isOnlyModifiesThisCall();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeIterable10);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeIterable14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(staticSourceFile23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test04130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04130");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        node1.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean5 = com.google.javascript.jscomp.NodeUtil.isRelationalOperation(node1);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable8 = node7.siblings();
        int int9 = node7.getSideEffectFlags();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable12 = node11.siblings();
        node7.addChildToBack(node11);
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString("");
        boolean boolean16 = node15.isComma();
        boolean boolean17 = node15.isOnlyModifiesThisCall();
        boolean boolean18 = node15.isSetterDef();
        com.google.javascript.rhino.Node node19 = node11.useSourceInfoFrom(node15);
        com.google.javascript.rhino.Node node20 = node19.getParent();
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable21 = node20.getAncestors();
        boolean boolean22 = node20.isExprResult();
        node20.setSourceEncodedPosition((int) (short) 100);
        com.google.javascript.rhino.Node node25 = node1.useSourceInfoFrom(node20);
        boolean boolean26 = node25.hasChildren();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(nodeIterable8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(nodeIterable12);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(ancestorIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test04131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04131");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = objectType18.getCtorExtendedInterfaces();
        boolean boolean21 = objectType18.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo24.isConsistentIdGenerator();
        objectType18.setPropertyJSDocInfo("hi!", jSDocInfo24);
        boolean boolean34 = objectType18.isNullType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        jSTypeRegistry37.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean46 = jSDocInfo45.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean48 = jSDocInfo47.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList51 = com.google.common.collect.ImmutableList.of(jSDocInfo43, jSDocInfo44, jSDocInfo45, jSDocInfo47, jSDocInfo49);
        jSDocInfo45.addSuppression("");
        java.lang.String str55 = jSDocInfo45.getDescriptionForParameter("");
        objectType41.setJSDocInfo(jSDocInfo45);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        boolean boolean60 = node59.isComma();
        boolean boolean61 = node59.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        boolean boolean64 = node63.isComma();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        boolean boolean67 = node66.isComma();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        node69.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean73 = node69.isSyntheticBlock();
        boolean boolean74 = node66.isEquivalentToTyped(node69);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 1, node59, node63, node66);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node63.new FileLevelJsDocBuilder();
        boolean boolean77 = node63.isGetElem();
        boolean boolean78 = node63.isQualifiedName();
        boolean boolean79 = objectType18.defineSynthesizedProperty("{}", (com.google.javascript.rhino.jstype.JSType) objectType41, node63);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType83 = objectType82.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = objectType83.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType85 = objectType83.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType83.getImplicitPrototype();
        boolean boolean88 = objectType86.hasProperty("()");
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry1.createEnumType("?", node63, (com.google.javascript.rhino.jstype.JSType) objectType86);
        java.util.Set set90 = enumType89.getOwnPropertyNames();
        com.google.javascript.rhino.Node node91 = enumType89.getSource();
        java.lang.String str92 = enumType89.getReferenceName();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertNotNull(set90);
        org.junit.Assert.assertNotNull(node91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "enum{?}" + "'", str92, "enum{?}");
    }

    @Test
    public void test04132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04132");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        boolean boolean10 = functionType8.removeProperty("");
        com.google.javascript.rhino.ErrorReporter errorReporter11 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry12 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11);
        com.google.javascript.rhino.jstype.ObjectType objectType13 = jSTypeRegistry12.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType14 = objectType13.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable15 = objectType14.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType16 = objectType14.collapseUnion();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable21 = objectType20.getCtorExtendedInterfaces();
        boolean boolean23 = objectType20.removeProperty("hi!");
        com.google.javascript.rhino.jstype.JSType.TypePair typePair24 = jSType16.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) objectType20);
        boolean boolean25 = functionType8.isSubtype((com.google.javascript.rhino.jstype.JSType) objectType20);
        com.google.javascript.rhino.jstype.JSType jSType27 = functionType8.getPropertyType("hi!");
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.jstype.ObjectType objectType33 = jSTypeRegistry32.createAnonymousObjectType();
        jSTypeRegistry29.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType33);
        com.google.javascript.rhino.jstype.JSType jSType35 = objectType33.autoboxesTo();
        com.google.javascript.rhino.jstype.UnionType unionType36 = objectType33.toMaybeUnionType();
        boolean boolean37 = objectType33.isUnknownType();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType33.autobox();
        com.google.javascript.rhino.jstype.JSType jSType40 = objectType33.getRestrictedTypeGivenToBooleanOutcome(false);
        boolean boolean41 = objectType33.isVoidType();
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46);
        com.google.javascript.rhino.jstype.ObjectType objectType48 = jSTypeRegistry47.createAnonymousObjectType();
        jSTypeRegistry44.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType48);
        com.google.javascript.rhino.jstype.JSType jSType50 = objectType48.autoboxesTo();
        com.google.javascript.rhino.jstype.UnionType unionType51 = objectType48.toMaybeUnionType();
        boolean boolean52 = objectType48.isUnknownType();
        com.google.javascript.rhino.jstype.JSType jSType53 = objectType48.autobox();
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString("");
        node55.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        node55.setSourceEncodedPosition((-1));
        com.google.javascript.rhino.Node node62 = node55.getAncestor(2);
        boolean boolean63 = objectType33.defineDeclaredProperty("function (): {}", (com.google.javascript.rhino.jstype.JSType) objectType48, node62);
        com.google.javascript.rhino.jstype.JSType.TypePair typePair64 = functionType8.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) objectType48);
        com.google.javascript.rhino.jstype.ObjectType.Property property66 = objectType48.getOwnSlot("hi!");
        java.lang.String str67 = objectType48.toDebugHashCodeString();
        java.lang.String str68 = objectType48.toString();
        boolean boolean69 = objectType48.isRecordType();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable70 = objectType48.getCtorImplementedInterfaces();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objectType13);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(objectTypeIterable15);
        org.junit.Assert.assertNotNull(jSType16);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(objectTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typePair24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(jSType27);
        org.junit.Assert.assertNotNull(objectType33);
        org.junit.Assert.assertNull(jSType35);
        org.junit.Assert.assertNull(unionType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objectType48);
        org.junit.Assert.assertNull(jSType50);
        org.junit.Assert.assertNull(unionType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSType53);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(typePair64);
        org.junit.Assert.assertNull(property66);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "{1064119120}" + "'", str67, "{1064119120}");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "{}" + "'", str68, "{}");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objectTypeIterable70);
    }

    @Test
    public void test04133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04133");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        boolean boolean10 = functionType8.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType11 = functionType8.autoboxesTo();
        com.google.javascript.rhino.jstype.ObjectType objectType12 = functionType8.getTypeOfThis();
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet13 = objectType12.getPossibleToBooleanOutcomes();
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.ObjectType objectType18 = jSTypeRegistry17.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType19 = objectType18.getParentScope();
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType22 = jSTypeRegistry15.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType18, node21);
        java.lang.String str23 = functionType22.getDisplayName();
        boolean boolean24 = objectType12.canTestForEqualityWith((com.google.javascript.rhino.jstype.JSType) functionType22);
        boolean boolean25 = functionType22.hasCachedValues();
        int int26 = functionType22.getPropertiesCount();
        boolean boolean27 = functionType22.matchesStringContext();
        com.google.javascript.rhino.jstype.ObjectType objectType28 = functionType22.getTypeOfThis();
        boolean boolean29 = functionType22.isInstanceType();
        boolean boolean30 = functionType22.hasCachedValues();
        com.google.javascript.rhino.jstype.FunctionType functionType31 = functionType22.toMaybeFunctionType();
        boolean boolean33 = functionType31.isPropertyInExterns("function (): {553727591}");
        boolean boolean34 = functionType31.canBeCalled();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(jSType11);
        org.junit.Assert.assertNotNull(objectType12);
        org.junit.Assert.assertTrue("'" + booleanLiteralSet13 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.BOTH + "'", booleanLiteralSet13.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.BOTH));
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(functionType22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objectType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(functionType31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test04134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04134");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        boolean boolean10 = functionType8.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType11 = functionType8.autoboxesTo();
        com.google.javascript.rhino.jstype.JSType jSType12 = functionType8.autoboxesTo();
        functionType8.clearCachedValues();
        boolean boolean14 = functionType8.isVoidType();
        boolean boolean15 = functionType8.hasCachedValues();
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet16 = functionType8.getPossibleToBooleanOutcomes();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(jSType11);
        org.junit.Assert.assertNull(jSType12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + booleanLiteralSet16 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE + "'", booleanLiteralSet16.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE));
    }

    @Test
    public void test04135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04135");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        boolean boolean89 = parameterizedType88.matchesObjectContext();
        boolean boolean90 = parameterizedType88.isNoObjectType();
        com.google.javascript.rhino.jstype.JSType jSType91 = parameterizedType88.getParameterType();
        boolean boolean92 = parameterizedType88.isInstanceType();
        com.google.javascript.rhino.jstype.FunctionType functionType93 = parameterizedType88.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.ObjectType objectType94 = parameterizedType88.getTypeOfThis();
        boolean boolean96 = parameterizedType88.removeProperty("NUMBER 0.0\n");
        boolean boolean98 = parameterizedType88.hasOwnProperty("function (): {211169613}");
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(jSType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(functionType93);
        org.junit.Assert.assertNotNull(objectType94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test04136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04136");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newNumber((double) '#');
        com.google.javascript.rhino.jstype.JSType jSType2 = node1.getJSType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        node4.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        node4.setSourceEncodedPosition((-1));
        node4.addSuppression("{}");
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable14 = node13.siblings();
        int int15 = node13.getSideEffectFlags();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable18 = node17.siblings();
        node13.addChildToBack(node17);
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        boolean boolean22 = node21.isComma();
        boolean boolean23 = node21.isOnlyModifiesThisCall();
        boolean boolean24 = node21.isSetterDef();
        com.google.javascript.rhino.Node node25 = node17.useSourceInfoFrom(node21);
        com.google.javascript.rhino.Node node26 = node25.getParent();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression28 = new com.google.javascript.rhino.JSTypeExpression(node26, "(true)");
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newString("");
        node31.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        node31.setSourceEncodedPosition((-1));
        boolean boolean37 = node31.isFunction();
        com.google.javascript.rhino.Node node39 = node31.getAncestor((int) (byte) 0);
        boolean boolean40 = node39.isNumber();
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newString("");
        node42.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        node42.setSourceEncodedPosition((-1));
        boolean boolean48 = node42.isFunction();
        com.google.javascript.rhino.Node node50 = node42.getAncestor((int) (byte) 0);
        boolean boolean51 = node50.isComma();
        com.google.javascript.rhino.Node node53 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable54 = node53.siblings();
        int int55 = node53.getSideEffectFlags();
        com.google.javascript.rhino.Node node57 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable58 = node57.siblings();
        node53.addChildToBack(node57);
        com.google.javascript.rhino.Node node61 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable62 = node61.siblings();
        int int63 = node61.getSideEffectFlags();
        boolean boolean64 = node61.isLabelName();
        com.google.javascript.rhino.Node node65 = node53.copyInformationFromForTree(node61);
        com.google.javascript.rhino.Node node66 = new com.google.javascript.rhino.Node(41, node39, node50, node65);
        node39.addSuppression("function (): {1726748681}");
        boolean boolean69 = node26.isEquivalentToTyped(node39);
        node26.setType((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            node1.addChildAfter(node4, node26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNull(jSType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeIterable14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(nodeIterable18);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(nodeIterable54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(nodeIterable58);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(nodeIterable62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test04137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04137");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable3 = jSTypeRegistry1.getEachReferenceTypeWithProperty("function (): {1183181076}");
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable7 = node6.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression9 = new com.google.javascript.rhino.JSTypeExpression(node6, "Not declared as a type name");
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable12 = node11.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression14 = new com.google.javascript.rhino.JSTypeExpression(node11, "Not declared as a type name");
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable17 = node16.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression19 = new com.google.javascript.rhino.JSTypeExpression(node16, "Not declared as a type name");
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable22 = node21.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression24 = new com.google.javascript.rhino.JSTypeExpression(node21, "Not declared as a type name");
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable27 = node26.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression29 = new com.google.javascript.rhino.JSTypeExpression(node26, "Not declared as a type name");
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable32 = node31.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression34 = new com.google.javascript.rhino.JSTypeExpression(node31, "Not declared as a type name");
        com.google.javascript.rhino.Node node36 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable37 = node36.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression39 = new com.google.javascript.rhino.JSTypeExpression(node36, "Not declared as a type name");
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable42 = node41.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression44 = new com.google.javascript.rhino.JSTypeExpression(node41, "Not declared as a type name");
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression49 = new com.google.javascript.rhino.JSTypeExpression(node46, "Not declared as a type name");
        com.google.javascript.rhino.Node node51 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable52 = node51.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression54 = new com.google.javascript.rhino.JSTypeExpression(node51, "Not declared as a type name");
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable57 = node56.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression59 = new com.google.javascript.rhino.JSTypeExpression(node56, "Not declared as a type name");
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList60 = com.google.common.collect.ImmutableList.of(jSTypeExpression9, jSTypeExpression14, jSTypeExpression19, jSTypeExpression24, jSTypeExpression29, jSTypeExpression34, jSTypeExpression39, jSTypeExpression44, jSTypeExpression49, jSTypeExpression54, jSTypeExpression59);
        com.google.javascript.rhino.Node node61 = jSTypeExpression39.getRoot();
        int int62 = node61.getCharno();
        node61.setCharno(32);
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.ErrorReporter errorReporter67 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry68 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter67);
        com.google.javascript.rhino.jstype.ObjectType objectType69 = jSTypeRegistry68.createAnonymousObjectType();
        boolean boolean70 = objectType69.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType72 = objectType69.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType74 = jSTypeRegistry66.getGreatestSubtypeWithProperty(jSType72, "");
        com.google.javascript.rhino.ErrorReporter errorReporter75 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry76 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter75);
        com.google.javascript.rhino.ErrorReporter errorReporter77 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry78 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter77);
        com.google.javascript.rhino.jstype.ObjectType objectType79 = jSTypeRegistry78.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType80 = objectType79.getParentScope();
        com.google.javascript.rhino.Node node82 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType83 = jSTypeRegistry76.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType79, node82);
        java.lang.String str84 = functionType83.getDisplayName();
        com.google.javascript.rhino.Node node86 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable87 = node86.siblings();
        int int88 = node86.getSideEffectFlags();
        boolean boolean89 = node86.isLabelName();
        boolean boolean90 = node86.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType91 = jSTypeRegistry66.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType83, node86);
        boolean boolean93 = functionType83.isPropertyTypeInferred("(true)");
        com.google.javascript.rhino.jstype.EnumType enumType94 = functionType83.toMaybeEnumType();
        boolean boolean95 = functionType83.isNoObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType96 = jSTypeRegistry1.createObjectType("{proxy:function (): function (): {192135467}}", node61, (com.google.javascript.rhino.jstype.ObjectType) functionType83);
        jSTypeRegistry1.setLastGeneration(false);
        jSTypeRegistry1.incrementGeneration();
        org.junit.Assert.assertNotNull(objectTypeIterable3);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(nodeIterable7);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(nodeIterable12);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(nodeIterable17);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(nodeIterable22);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(nodeIterable27);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(nodeIterable32);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(nodeIterable37);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(nodeIterable42);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(nodeIterable52);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(nodeIterable57);
        org.junit.Assert.assertNotNull(jSTypeExpressionList60);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(objectType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(jSType72);
        org.junit.Assert.assertNotNull(jSType74);
        org.junit.Assert.assertNotNull(objectType79);
        org.junit.Assert.assertNotNull(objectType80);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNotNull(functionType83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(node86);
        org.junit.Assert.assertNotNull(nodeIterable87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(functionType91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(enumType94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(objectType96);
    }

    @Test
    public void test04138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04138");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        boolean boolean8 = node1.isFor();
        boolean boolean9 = node1.isIf();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test04139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04139");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        boolean boolean9 = jSDocInfo0.isNoCompile();
        java.util.Collection<java.lang.String> strCollection10 = jSDocInfo0.getAuthors();
        com.google.javascript.rhino.ErrorReporter errorReporter11 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry12 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11);
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.ObjectType objectType15 = jSTypeRegistry14.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType16 = objectType15.getParentScope();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType19 = jSTypeRegistry12.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType15, node18);
        com.google.javascript.rhino.JSDocInfo jSDocInfo21 = new com.google.javascript.rhino.JSDocInfo();
        functionType19.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo21);
        int int23 = functionType19.getMaxArguments();
        boolean boolean24 = functionType19.canBeCalled();
        com.google.javascript.rhino.ErrorReporter errorReporter25 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry26 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter25);
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27);
        com.google.javascript.rhino.jstype.ObjectType objectType29 = jSTypeRegistry28.createAnonymousObjectType();
        boolean boolean30 = objectType29.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType32 = objectType29.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType34 = jSTypeRegistry26.getGreatestSubtypeWithProperty(jSType32, "");
        com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35);
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.ObjectType objectType39 = jSTypeRegistry38.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType40 = objectType39.getParentScope();
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType43 = jSTypeRegistry36.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType39, node42);
        java.lang.String str44 = functionType43.getDisplayName();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        boolean boolean49 = node46.isLabelName();
        boolean boolean50 = node46.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType51 = jSTypeRegistry26.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType43, node46);
        functionType19.setPrototypeBasedOn((com.google.javascript.rhino.jstype.ObjectType) functionType43);
        com.google.javascript.rhino.JSDocInfo.Visibility visibility53 = com.google.javascript.rhino.JSDocInfo.Visibility.PROTECTED;
        boolean boolean54 = functionType19.equals((java.lang.Object) visibility53);
        jSDocInfo0.setVisibility(visibility53);
        boolean boolean56 = jSDocInfo0.isImplicitCast();
        boolean boolean57 = jSDocInfo0.isJavaDispatch();
        boolean boolean58 = jSDocInfo0.isDefine();
        java.util.Set<java.lang.String> strSet59 = jSDocInfo0.getParameterNames();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(strCollection10);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(objectType16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(functionType19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objectType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSType32);
        org.junit.Assert.assertNotNull(jSType34);
        org.junit.Assert.assertNotNull(objectType39);
        org.junit.Assert.assertNotNull(objectType40);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(functionType43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(functionType51);
        org.junit.Assert.assertTrue("'" + visibility53 + "' != '" + com.google.javascript.rhino.JSDocInfo.Visibility.PROTECTED + "'", visibility53.equals(com.google.javascript.rhino.JSDocInfo.Visibility.PROTECTED));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strSet59);
    }

    @Test
    public void test04140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04140");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo11 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean12 = jSDocInfo11.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo13 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean14 = jSDocInfo13.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo15 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean16 = jSDocInfo15.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList17 = com.google.common.collect.ImmutableList.of(jSDocInfo9, jSDocInfo10, jSDocInfo11, jSDocInfo13, jSDocInfo15);
        com.google.javascript.rhino.JSDocInfo jSDocInfo18 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo19 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo20 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean21 = jSDocInfo20.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo22 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean23 = jSDocInfo22.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean25 = jSDocInfo24.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList26 = com.google.common.collect.ImmutableList.of(jSDocInfo18, jSDocInfo19, jSDocInfo20, jSDocInfo22, jSDocInfo24);
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo28 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo31 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean32 = jSDocInfo31.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean34 = jSDocInfo33.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList35 = com.google.common.collect.ImmutableList.of(jSDocInfo27, jSDocInfo28, jSDocInfo29, jSDocInfo31, jSDocInfo33);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo>> jSDocInfoListList36 = com.google.common.collect.ImmutableList.of(jSDocInfoList8, jSDocInfoList17, jSDocInfoList26, jSDocInfoList35);
        java.lang.String str37 = jSDocInfoList26.toString();
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.ObjectType objectType40 = jSTypeRegistry39.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType41 = objectType40.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable42 = objectType41.getCtorExtendedInterfaces();
        boolean boolean44 = objectType41.removeProperty("hi!");
        boolean boolean45 = jSDocInfoList26.contains((java.lang.Object) objectType41);
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46);
        com.google.javascript.rhino.jstype.ObjectType objectType48 = jSTypeRegistry47.createAnonymousObjectType();
        boolean boolean49 = objectType48.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType51 = objectType48.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType.TypePair typePair52 = objectType41.getTypesUnderShallowInequality((com.google.javascript.rhino.jstype.JSType) objectType48);
        com.google.javascript.rhino.jstype.JSType jSType53 = typePair52.typeA;
        com.google.javascript.rhino.jstype.JSType jSType54 = typePair52.typeB;
        com.google.javascript.rhino.jstype.JSType jSType55 = typePair52.typeA;
        java.lang.Class<?> wildcardClass56 = jSType55.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList35);
        org.junit.Assert.assertNotNull(jSDocInfoListList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]" + "'", str37, "[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]");
        org.junit.Assert.assertNotNull(objectType40);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertNotNull(objectTypeIterable42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objectType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(jSType51);
        org.junit.Assert.assertNotNull(typePair52);
        org.junit.Assert.assertNotNull(jSType53);
        org.junit.Assert.assertNotNull(jSType54);
        org.junit.Assert.assertNotNull(jSType55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test04141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04141");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        boolean boolean89 = parameterizedType88.matchesObjectContext();
        boolean boolean90 = parameterizedType88.isNoObjectType();
        com.google.javascript.rhino.jstype.FunctionType functionType91 = parameterizedType88.toMaybeFunctionType();
        boolean boolean93 = parameterizedType88.hasOwnProperty("true");
        com.google.javascript.rhino.jstype.EnumElementType enumElementType94 = parameterizedType88.toMaybeEnumElementType();
        int int95 = parameterizedType88.getPropertiesCount();
        boolean boolean97 = parameterizedType88.isPropertyInExterns("function (): {2030099919}");
        java.lang.String str98 = parameterizedType88.toDebugHashCodeString();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(functionType91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(enumElementType94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str98 + "' != '" + "{proxy:function (): {578968375}}" + "'", str98, "{proxy:function (): {578968375}}");
    }

    @Test
    public void test04142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04142");
        com.google.javascript.rhino.Node[] nodeArray1 = new com.google.javascript.rhino.Node[] {};
        com.google.javascript.rhino.Node node4 = new com.google.javascript.rhino.Node((int) (short) 1, nodeArray1, 43, 50);
        int int5 = node4.getCharno();
        boolean boolean6 = node4.isGetterDef();
        node4.setVarArgs(false);
        org.junit.Assert.assertNotNull(nodeArray1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 50 + "'", int5 == 50);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test04143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04143");
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition0 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable3 = node2.siblings();
        namePosition0.setItem(node2);
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition5 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable8 = node7.siblings();
        namePosition5.setItem(node7);
        com.google.javascript.rhino.Node node10 = namePosition5.getItem();
        boolean boolean11 = node2.isEquivalentToTyped(node10);
        java.lang.String str12 = node10.toString();
        boolean boolean13 = node10.isWith();
        com.google.javascript.rhino.InputId inputId15 = new com.google.javascript.rhino.InputId("hi!");
        com.google.javascript.rhino.InputId inputId17 = new com.google.javascript.rhino.InputId("hi!");
        com.google.javascript.rhino.InputId inputId19 = new com.google.javascript.rhino.InputId("hi!");
        com.google.javascript.rhino.InputId inputId21 = new com.google.javascript.rhino.InputId("hi!");
        com.google.javascript.rhino.InputId inputId23 = new com.google.javascript.rhino.InputId("hi!");
        com.google.javascript.rhino.InputId inputId25 = new com.google.javascript.rhino.InputId("hi!");
        com.google.javascript.rhino.InputId inputId27 = new com.google.javascript.rhino.InputId("hi!");
        com.google.javascript.rhino.InputId inputId29 = new com.google.javascript.rhino.InputId("hi!");
        com.google.javascript.rhino.InputId inputId31 = new com.google.javascript.rhino.InputId("hi!");
        com.google.javascript.rhino.InputId inputId33 = new com.google.javascript.rhino.InputId("hi!");
        com.google.javascript.rhino.InputId inputId35 = new com.google.javascript.rhino.InputId("hi!");
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.InputId> inputIdList36 = com.google.common.collect.ImmutableList.of(inputId15, inputId17, inputId19, inputId21, inputId23, inputId25, inputId27, inputId29, inputId31, inputId33, inputId35);
        node10.setInputId(inputId31);
        java.lang.String str38 = inputId31.toString();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNotNull(nodeIterable3);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(nodeIterable8);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "STRING " + "'", str12, "STRING ");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(inputIdList36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "InputId: hi!" + "'", str38, "InputId: hi!");
    }

    @Test
    public void test04144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04144");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable3 = node2.siblings();
        int int4 = node2.getSideEffectFlags();
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable7 = node6.siblings();
        node2.addChildToBack(node6);
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newString("");
        boolean boolean11 = node10.isComma();
        boolean boolean12 = node10.isOnlyModifiesThisCall();
        boolean boolean13 = node10.isSetterDef();
        com.google.javascript.rhino.Node node14 = node6.useSourceInfoFrom(node10);
        boolean boolean15 = node10.isInc();
        com.google.javascript.rhino.jstype.JSType jSType16 = null;
        node10.setJSType(jSType16);
        boolean boolean18 = node10.isVarArgs();
        boolean boolean19 = node10.isParamList();
        boolean boolean20 = node10.isExprResult();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable23 = node22.siblings();
        boolean boolean24 = node22.isAdd();
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable27 = node26.siblings();
        int int28 = node26.getSideEffectFlags();
        com.google.javascript.rhino.Node node30 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable31 = node30.siblings();
        node26.addChildToBack(node30);
        com.google.javascript.rhino.Node node34 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable35 = node34.siblings();
        int int36 = node34.getSideEffectFlags();
        boolean boolean37 = node34.isLabelName();
        com.google.javascript.rhino.Node node38 = node26.copyInformationFromForTree(node34);
        boolean boolean39 = node22.isEquivalentTo(node34);
        boolean boolean40 = node22.isOnlyModifiesThisCall();
        boolean boolean41 = node22.isVar();
        com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable44 = node43.siblings();
        int int45 = node43.getSideEffectFlags();
        com.google.javascript.rhino.Node node47 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable48 = node47.siblings();
        node43.addChildToBack(node47);
        com.google.javascript.rhino.jstype.JSType jSType50 = node43.getJSType();
        boolean boolean51 = node43.isCase();
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54);
        com.google.javascript.rhino.jstype.ObjectType objectType56 = jSTypeRegistry55.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType57 = objectType56.getParentScope();
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType60 = jSTypeRegistry53.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType56, node59);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable61 = functionType60.getImplementedInterfaces();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable64 = node63.siblings();
        boolean boolean65 = node63.isAdd();
        com.google.javascript.rhino.Node node67 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable68 = node67.siblings();
        int int69 = node67.getSideEffectFlags();
        com.google.javascript.rhino.Node node71 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable72 = node71.siblings();
        node67.addChildToBack(node71);
        com.google.javascript.rhino.Node node75 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable76 = node75.siblings();
        int int77 = node75.getSideEffectFlags();
        boolean boolean78 = node75.isLabelName();
        com.google.javascript.rhino.Node node79 = node67.copyInformationFromForTree(node75);
        boolean boolean80 = node63.isEquivalentTo(node75);
        boolean boolean81 = node63.isSetterDef();
        functionType60.setSource(node63);
        com.google.javascript.rhino.Node node83 = node43.useSourceInfoIfMissingFrom(node63);
        com.google.javascript.rhino.Node node84 = new com.google.javascript.rhino.Node(51, node10, node22, node83);
        boolean boolean85 = node10.hasChildren();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNotNull(nodeIterable3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(nodeIterable7);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(nodeIterable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(nodeIterable27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(nodeIterable31);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(nodeIterable35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(nodeIterable44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(nodeIterable48);
        org.junit.Assert.assertNull(jSType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objectType56);
        org.junit.Assert.assertNotNull(objectType57);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(functionType60);
        org.junit.Assert.assertNotNull(objectTypeIterable61);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(nodeIterable64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(nodeIterable68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(nodeIterable72);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(nodeIterable76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test04145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04145");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        boolean boolean5 = objectType4.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType7 = objectType4.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType9 = jSTypeRegistry1.getGreatestSubtypeWithProperty(jSType7, "");
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.ObjectType objectType14 = jSTypeRegistry13.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType15 = objectType14.getParentScope();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType18 = jSTypeRegistry11.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType14, node17);
        java.lang.String str19 = functionType18.getDisplayName();
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable22 = node21.siblings();
        int int23 = node21.getSideEffectFlags();
        boolean boolean24 = node21.isLabelName();
        boolean boolean25 = node21.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType26 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType18, node21);
        java.lang.String str27 = functionType26.getReferenceName();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.ObjectType objectType30 = jSTypeRegistry29.createAnonymousObjectType();
        boolean boolean31 = objectType30.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType33 = objectType30.getRestrictedTypeGivenToBooleanOutcome(true);
        boolean boolean34 = objectType30.hasDisplayName();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair35 = functionType26.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) objectType30);
        boolean boolean36 = functionType26.isInstanceType();
        boolean boolean38 = functionType26.hasProperty("Not declared as a type name");
        com.google.javascript.rhino.jstype.ObjectType.Property property40 = functionType26.getSlot("Node tree inequality:\nTree1:\nSTRING function (): {1509755181}\n\n\nTree2:\nSTRING \n\n\nSubtree1: STRING function (): {1509755181}\n\n\nSubtree2: STRING \n");
        com.google.javascript.rhino.jstype.EnumElementType enumElementType41 = functionType26.toMaybeEnumElementType();
        com.google.javascript.rhino.jstype.JSType jSType42 = functionType26.unboxesTo();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = jSType42.isNumberValueType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSType7);
        org.junit.Assert.assertNotNull(jSType9);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(functionType18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(nodeIterable22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(functionType26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objectType30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typePair35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(property40);
        org.junit.Assert.assertNull(enumElementType41);
        org.junit.Assert.assertNull(jSType42);
    }

    @Test
    public void test04146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04146");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newString("");
        boolean boolean11 = node10.isComma();
        boolean boolean12 = node10.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString("");
        boolean boolean15 = node14.isComma();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        boolean boolean18 = node17.isComma();
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString("");
        node20.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean24 = node20.isSyntheticBlock();
        boolean boolean25 = node17.isEquivalentToTyped(node20);
        com.google.javascript.rhino.Node node26 = new com.google.javascript.rhino.Node((int) (short) 1, node10, node14, node17);
        boolean boolean27 = node10.isDefaultCase();
        boolean boolean28 = node5.isEquivalentTo(node10);
        boolean boolean29 = node10.isObjectLit();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test04147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04147");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        java.lang.String str9 = functionType8.getDisplayName();
        com.google.javascript.rhino.jstype.FunctionType functionType10 = functionType8.getOwnerFunction();
        com.google.javascript.rhino.JSDocInfo jSDocInfo11 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo12 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo13 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean14 = jSDocInfo13.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo15 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean16 = jSDocInfo15.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo17 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean18 = jSDocInfo17.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList19 = com.google.common.collect.ImmutableList.of(jSDocInfo11, jSDocInfo12, jSDocInfo13, jSDocInfo15, jSDocInfo17);
        boolean boolean20 = jSDocInfo11.isNoCompile();
        java.lang.String str21 = jSDocInfo11.getVersion();
        functionType8.setJSDocInfo(jSDocInfo11);
        com.google.javascript.rhino.jstype.ObjectType.Property property24 = functionType8.getSlot("Unknown class name");
        boolean boolean25 = functionType8.isStringObjectType();
        com.google.javascript.rhino.jstype.JSType jSType26 = functionType8.unboxesTo();
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable30 = node29.siblings();
        boolean boolean31 = node29.isAdd();
        com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable34 = node33.siblings();
        int int35 = node33.getSideEffectFlags();
        com.google.javascript.rhino.Node node37 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable38 = node37.siblings();
        node33.addChildToBack(node37);
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable42 = node41.siblings();
        int int43 = node41.getSideEffectFlags();
        boolean boolean44 = node41.isLabelName();
        com.google.javascript.rhino.Node node45 = node33.copyInformationFromForTree(node41);
        boolean boolean46 = node29.isEquivalentTo(node41);
        boolean boolean47 = node29.isReturn();
        boolean boolean48 = node29.isNull();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        int int52 = node50.getSideEffectFlags();
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable55 = node54.siblings();
        node50.addChildToBack(node54);
        com.google.javascript.rhino.Node node58 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable59 = node58.siblings();
        int int60 = node58.getSideEffectFlags();
        boolean boolean61 = node58.isLabelName();
        com.google.javascript.rhino.Node node62 = node50.copyInformationFromForTree(node58);
        boolean boolean63 = node62.isQuotedString();
        com.google.javascript.rhino.Node node66 = new com.google.javascript.rhino.Node(2, node29, node62, (-1), 0);
        boolean boolean67 = node62.isNoSideEffectsCall();
        boolean boolean68 = node62.isAssignAdd();
        boolean boolean69 = node62.isFalse();
        boolean boolean70 = node62.isIn();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder71 = node62.new FileLevelJsDocBuilder();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean72 = jSType26.equals((java.lang.Object) fileLevelJsDocBuilder71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(property24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(jSType26);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(nodeIterable30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(nodeIterable34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(nodeIterable38);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(nodeIterable42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(nodeIterable55);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(nodeIterable59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test04148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04148");
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType0 = com.google.javascript.jscomp.CodingConvention.SubclassType.INHERITS;
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable3 = node2.siblings();
        int int4 = node2.getSideEffectFlags();
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable7 = node6.siblings();
        node2.addChildToBack(node6);
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newString("");
        boolean boolean11 = node10.isComma();
        boolean boolean12 = node10.isOnlyModifiesThisCall();
        boolean boolean13 = node10.isSetterDef();
        com.google.javascript.rhino.Node node14 = node6.useSourceInfoFrom(node10);
        com.google.javascript.rhino.Node node15 = node10.getLastChild();
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition16 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable19 = node18.siblings();
        namePosition16.setItem(node18);
        com.google.javascript.rhino.Node node21 = namePosition16.getItem();
        boolean boolean22 = node21.isNE();
        int int23 = node21.getCharno();
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString("hi!");
        node25.detachChildren();
        boolean boolean27 = node25.isVarArgs();
        com.google.javascript.rhino.Node node28 = node21.useSourceInfoFromForTree(node25);
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newString((int) (byte) 1, "");
        com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newString("");
        node33.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable40 = node39.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression42 = new com.google.javascript.rhino.JSTypeExpression(node39, "Not declared as a type name");
        com.google.javascript.rhino.Node node44 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable45 = node44.siblings();
        int int46 = node44.getSideEffectFlags();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable49 = node48.siblings();
        node44.addChildToBack(node48);
        com.google.javascript.rhino.Node node52 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable53 = node52.siblings();
        int int54 = node52.getSideEffectFlags();
        boolean boolean55 = node52.isLabelName();
        com.google.javascript.rhino.Node node56 = node44.copyInformationFromForTree(node52);
        boolean boolean57 = node52.isExprResult();
        com.google.javascript.rhino.Node node58 = node39.clonePropsFrom(node52);
        com.google.javascript.rhino.Node node60 = com.google.javascript.rhino.Node.newString("");
        boolean boolean61 = node60.isComma();
        node60.setType(1);
        com.google.javascript.rhino.Node node66 = new com.google.javascript.rhino.Node((int) (byte) 1, node39, node60, 40, 1);
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable69 = node68.siblings();
        int int70 = node68.getSideEffectFlags();
        com.google.javascript.rhino.Node node72 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable73 = node72.siblings();
        node68.addChildToBack(node72);
        boolean boolean75 = node72.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node72.getJsDocBuilderForNode();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.Node> nodeList77 = com.google.common.collect.ImmutableList.of(node10, node28, node31, node33, node66, node72);
        java.lang.String str81 = node28.toString(false, false, false);
        com.google.javascript.rhino.Node node85 = new com.google.javascript.rhino.Node(54, 2, 0);
        boolean boolean86 = node85.isInstanceOf();
        boolean boolean87 = node85.isSwitch();
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship88 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType0, node28, node85);
        org.junit.Assert.assertTrue("'" + subclassType0 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.INHERITS + "'", subclassType0.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.INHERITS));
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNotNull(nodeIterable3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(nodeIterable7);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(nodeIterable19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(nodeIterable40);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(nodeIterable45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(nodeIterable49);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(nodeIterable53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(nodeIterable69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertNotNull(nodeIterable73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder76);
        org.junit.Assert.assertNotNull(nodeList77);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "STRING " + "'", str81, "STRING ");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test04149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04149");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        boolean boolean10 = functionType8.removeProperty("");
        boolean boolean11 = functionType8.isNativeObjectType();
        com.google.javascript.rhino.jstype.FunctionType functionType12 = functionType8.getConstructor();
        boolean boolean13 = functionType8.matchesUint32Context();
        boolean boolean14 = functionType8.matchesNumberContext();
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet15 = functionType8.getPossibleToBooleanOutcomes();
        boolean boolean17 = functionType8.removeProperty("java.io.IOException: function (): {1183181076}");
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(functionType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + booleanLiteralSet15 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE + "'", booleanLiteralSet15.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test04150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04150");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression9 = jSDocInfo2.getThisType();
        boolean boolean10 = jSDocInfo2.hasEnumParameterType();
        java.util.List<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList11 = jSDocInfo2.getImplementedInterfaces();
        java.lang.String str12 = jSDocInfo2.getDeprecationReason();
        boolean boolean13 = jSDocInfo2.hasType();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression14 = jSDocInfo2.getBaseType();
        java.util.Set<java.lang.String> strSet15 = jSDocInfo2.getParameterNames();
        java.util.Set<java.lang.String> strSet16 = jSDocInfo2.getModifies();
        boolean boolean17 = jSDocInfo2.isConsistentIdGenerator();
        boolean boolean18 = jSDocInfo2.shouldPreserveTry();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertNull(jSTypeExpression9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(jSTypeExpressionList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(jSTypeExpression14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test04151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04151");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        boolean boolean9 = jSDocInfo4.isNoTypeCheck();
        boolean boolean10 = jSDocInfo4.isConstant();
        java.lang.String str11 = jSDocInfo4.getLicense();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test04152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04152");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        java.lang.String str9 = functionType8.getDisplayName();
        com.google.javascript.rhino.jstype.FunctionType functionType10 = functionType8.getOwnerFunction();
        com.google.javascript.rhino.JSDocInfo jSDocInfo11 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo12 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo13 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean14 = jSDocInfo13.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo15 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean16 = jSDocInfo15.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo17 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean18 = jSDocInfo17.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList19 = com.google.common.collect.ImmutableList.of(jSDocInfo11, jSDocInfo12, jSDocInfo13, jSDocInfo15, jSDocInfo17);
        boolean boolean20 = jSDocInfo11.isNoCompile();
        java.lang.String str21 = jSDocInfo11.getVersion();
        functionType8.setJSDocInfo(jSDocInfo11);
        com.google.javascript.rhino.jstype.ObjectType.Property property24 = functionType8.getSlot("Unknown class name");
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable25 = functionType8.getOwnImplementedInterfaces();
        boolean boolean26 = functionType8.isConstructor();
        java.lang.Iterable iterable27 = functionType8.getCtorImplementedInterfaces();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32);
        com.google.javascript.rhino.jstype.ObjectType objectType34 = jSTypeRegistry33.createAnonymousObjectType();
        jSTypeRegistry30.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType34);
        objectType34.clearResolved();
        com.google.javascript.rhino.jstype.JSType jSType37 = functionType8.forceResolve(errorReporter28, (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType34);
        com.google.javascript.rhino.jstype.JSType jSType38 = functionType8.autobox();
        boolean boolean39 = functionType8.matchesNumberContext();
        boolean boolean40 = functionType8.canBeCalled();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry43 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42);
        com.google.javascript.rhino.jstype.ObjectType objectType44 = jSTypeRegistry43.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType45 = objectType44.getParentScope();
        boolean boolean47 = objectType45.hasOwnProperty("[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]");
        java.lang.String str48 = objectType45.toDebugHashCodeString();
        com.google.javascript.rhino.Node node51 = com.google.javascript.rhino.Node.newString(38, "function (): {2018380832}");
        boolean boolean52 = functionType8.defineSynthesizedProperty("STRING  [jsdoc_info: JSDocInfo]\n", (com.google.javascript.rhino.jstype.JSType) objectType45, node51);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable53 = functionType8.getImplementedInterfaces();
        com.google.javascript.rhino.jstype.ObjectType objectType54 = functionType8.getPrototype();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(property24);
        org.junit.Assert.assertNotNull(objectTypeIterable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(iterable27);
        org.junit.Assert.assertNotNull(objectType34);
        org.junit.Assert.assertNotNull(jSType37);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objectType44);
        org.junit.Assert.assertNotNull(objectType45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "{-1939501217}" + "'", str48, "{-1939501217}");
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objectTypeIterable53);
        org.junit.Assert.assertNotNull(objectType54);
    }

    @Test
    public void test04153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04153");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        int int89 = parameterizedType88.getPropertiesCount();
        boolean boolean90 = parameterizedType88.isCheckedUnknownType();
        java.lang.String str91 = parameterizedType88.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.UnionType unionType92 = parameterizedType88.toMaybeUnionType();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.EnumType enumType93 = unionType92.toMaybeEnumType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str91 + "' != '" + "{proxy:function (): {2124184629}}" + "'", str91, "{proxy:function (): {2124184629}}");
        org.junit.Assert.assertNull(unionType92);
    }

    @Test
    public void test04154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04154");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        boolean boolean10 = functionType8.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType11 = functionType8.autoboxesTo();
        com.google.javascript.rhino.jstype.ObjectType objectType12 = functionType8.getTypeOfThis();
        com.google.javascript.rhino.jstype.FunctionType functionType13 = functionType8.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.FunctionType functionType14 = functionType8.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.ObjectType objectType15 = functionType8.getPrototype();
        com.google.javascript.rhino.Node node16 = functionType8.getSource();
        java.util.Set<java.lang.String> strSet17 = functionType8.getPropertyNames();
        boolean boolean18 = strSet17.isEmpty();
        com.google.javascript.rhino.Node[] nodeArray21 = new com.google.javascript.rhino.Node[] {};
        com.google.javascript.rhino.Node node24 = new com.google.javascript.rhino.Node((int) (short) 1, nodeArray21, 43, 50);
        com.google.javascript.rhino.Node node25 = new com.google.javascript.rhino.Node(4096, nodeArray21);
        com.google.javascript.rhino.Node[] nodeArray26 = strSet17.toArray(nodeArray21);
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(jSType11);
        org.junit.Assert.assertNotNull(objectType12);
        org.junit.Assert.assertNotNull(functionType13);
        org.junit.Assert.assertNotNull(functionType14);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertNotNull(nodeArray26);
    }

    @Test
    public void test04155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04155");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        boolean boolean10 = node9.isComma();
        boolean boolean11 = node9.isOnlyModifiesThisCall();
        boolean boolean12 = node9.isSetterDef();
        com.google.javascript.rhino.Node node13 = node5.useSourceInfoFrom(node9);
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString("");
        boolean boolean16 = node15.isComma();
        boolean boolean17 = node15.isOnlyModifiesThisCall();
        boolean boolean18 = node15.isVarArgs();
        boolean boolean19 = node13.hasChild(node15);
        int int21 = node13.getIntProp(32);
        boolean boolean22 = node13.isWhile();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression24 = new com.google.javascript.rhino.JSTypeExpression(node13, "function (): {1138227803}");
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test04156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04156");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        boolean boolean10 = jSDocInfo4.hasParameter("hi!");
        boolean boolean11 = jSDocInfo4.containsDeclaration();
        java.util.Collection<java.lang.String> strCollection12 = jSDocInfo4.getAuthors();
        java.util.Set<java.lang.String> strSet13 = jSDocInfo4.getSuppressions();
        boolean boolean15 = jSDocInfo4.hasParameter("");
        java.util.Set<java.lang.String> strSet16 = jSDocInfo4.getModifies();
        boolean boolean17 = jSDocInfo4.hasThisType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strCollection12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test04157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04157");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = objectType18.getCtorExtendedInterfaces();
        boolean boolean21 = objectType18.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo24.isConsistentIdGenerator();
        objectType18.setPropertyJSDocInfo("hi!", jSDocInfo24);
        boolean boolean34 = objectType18.isNullType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        jSTypeRegistry37.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean46 = jSDocInfo45.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean48 = jSDocInfo47.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList51 = com.google.common.collect.ImmutableList.of(jSDocInfo43, jSDocInfo44, jSDocInfo45, jSDocInfo47, jSDocInfo49);
        jSDocInfo45.addSuppression("");
        java.lang.String str55 = jSDocInfo45.getDescriptionForParameter("");
        objectType41.setJSDocInfo(jSDocInfo45);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        boolean boolean60 = node59.isComma();
        boolean boolean61 = node59.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        boolean boolean64 = node63.isComma();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        boolean boolean67 = node66.isComma();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        node69.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean73 = node69.isSyntheticBlock();
        boolean boolean74 = node66.isEquivalentToTyped(node69);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 1, node59, node63, node66);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node63.new FileLevelJsDocBuilder();
        boolean boolean77 = node63.isGetElem();
        boolean boolean78 = node63.isQualifiedName();
        boolean boolean79 = objectType18.defineSynthesizedProperty("{}", (com.google.javascript.rhino.jstype.JSType) objectType41, node63);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType83 = objectType82.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = objectType83.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType85 = objectType83.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType83.getImplicitPrototype();
        boolean boolean88 = objectType86.hasProperty("()");
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry1.createEnumType("?", node63, (com.google.javascript.rhino.jstype.JSType) objectType86);
        java.lang.Iterable iterable90 = enumType89.getCtorExtendedInterfaces();
        boolean boolean91 = enumType89.hasReferenceName();
        com.google.javascript.rhino.jstype.UnionType unionType92 = enumType89.toMaybeUnionType();
        boolean boolean94 = enumType89.isPropertyTypeInferred("java.io.IOException: true");
        java.lang.String str95 = enumType89.getReferenceName();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType96 = enumType89.toMaybeEnumElementType();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertNotNull(iterable90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(unionType92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "enum{?}" + "'", str95, "enum{?}");
        org.junit.Assert.assertNull(enumElementType96);
    }

    @Test
    public void test04158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04158");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        boolean boolean10 = node9.isComma();
        boolean boolean11 = node9.isOnlyModifiesThisCall();
        boolean boolean12 = node9.isSetterDef();
        com.google.javascript.rhino.Node node13 = node5.useSourceInfoFrom(node9);
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString("");
        boolean boolean16 = node15.isComma();
        boolean boolean17 = node15.isOnlyModifiesThisCall();
        boolean boolean18 = node15.isVarArgs();
        boolean boolean19 = node13.hasChild(node15);
        node13.setCharno(83);
        com.google.javascript.rhino.Node node23 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable24 = node23.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression26 = new com.google.javascript.rhino.JSTypeExpression(node23, "Not declared as a type name");
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable29 = node28.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression31 = new com.google.javascript.rhino.JSTypeExpression(node28, "Not declared as a type name");
        com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable34 = node33.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression36 = new com.google.javascript.rhino.JSTypeExpression(node33, "Not declared as a type name");
        com.google.javascript.rhino.Node node38 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable39 = node38.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression41 = new com.google.javascript.rhino.JSTypeExpression(node38, "Not declared as a type name");
        com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable44 = node43.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression46 = new com.google.javascript.rhino.JSTypeExpression(node43, "Not declared as a type name");
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable49 = node48.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression51 = new com.google.javascript.rhino.JSTypeExpression(node48, "Not declared as a type name");
        com.google.javascript.rhino.Node node53 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable54 = node53.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression56 = new com.google.javascript.rhino.JSTypeExpression(node53, "Not declared as a type name");
        com.google.javascript.rhino.Node node58 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable59 = node58.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression61 = new com.google.javascript.rhino.JSTypeExpression(node58, "Not declared as a type name");
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable64 = node63.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression66 = new com.google.javascript.rhino.JSTypeExpression(node63, "Not declared as a type name");
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable69 = node68.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression71 = new com.google.javascript.rhino.JSTypeExpression(node68, "Not declared as a type name");
        com.google.javascript.rhino.Node node73 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable74 = node73.siblings();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression76 = new com.google.javascript.rhino.JSTypeExpression(node73, "Not declared as a type name");
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList77 = com.google.common.collect.ImmutableList.of(jSTypeExpression26, jSTypeExpression31, jSTypeExpression36, jSTypeExpression41, jSTypeExpression46, jSTypeExpression51, jSTypeExpression56, jSTypeExpression61, jSTypeExpression66, jSTypeExpression71, jSTypeExpression76);
        boolean boolean78 = jSTypeExpression41.isVarArgs();
        com.google.javascript.rhino.Node node80 = com.google.javascript.rhino.Node.newNumber((double) '#');
        boolean boolean81 = node80.isNumber();
        boolean boolean82 = node80.isDec();
        com.google.javascript.rhino.JSDocInfo jSDocInfo83 = node80.getJSDocInfo();
        boolean boolean84 = jSTypeExpression41.equals((java.lang.Object) jSDocInfo83);
        com.google.javascript.rhino.Node node85 = jSTypeExpression41.getRoot();
        node13.addChildToBack(node85);
        boolean boolean87 = node85.isAdd();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(nodeIterable24);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(nodeIterable29);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(nodeIterable34);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(nodeIterable39);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(nodeIterable44);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(nodeIterable49);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(nodeIterable54);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(nodeIterable59);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(nodeIterable64);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(nodeIterable69);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertNotNull(nodeIterable74);
        org.junit.Assert.assertNotNull(jSTypeExpressionList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(jSDocInfo83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test04159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04159");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry6 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5);
        com.google.javascript.rhino.jstype.ObjectType objectType7 = jSTypeRegistry6.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType8 = objectType7.getParentScope();
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType11 = jSTypeRegistry4.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType7, node10);
        com.google.javascript.rhino.JSDocInfo jSDocInfo13 = new com.google.javascript.rhino.JSDocInfo();
        functionType11.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo13);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable15 = functionType11.getAllImplementedInterfaces();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable16 = functionType11.getCtorImplementedInterfaces();
        boolean boolean18 = functionType11.hasProperty("{proxy:function (): function (): {192135467}}");
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.ObjectType objectType21 = jSTypeRegistry20.createAnonymousObjectType();
        boolean boolean22 = objectType21.isUnknownType();
        com.google.javascript.rhino.jstype.JSType jSType24 = objectType21.findPropertyType("true");
        boolean boolean26 = objectType21.removeProperty("[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]");
        com.google.javascript.rhino.jstype.JSType jSType28 = objectType21.findPropertyType("true");
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.jstype.ObjectType objectType33 = jSTypeRegistry32.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType34 = objectType33.getParentScope();
        com.google.javascript.rhino.Node node36 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType37 = jSTypeRegistry30.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType33, node36);
        boolean boolean39 = functionType37.removeProperty("");
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.ObjectType objectType42 = jSTypeRegistry41.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType43 = objectType42.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable44 = objectType43.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType45 = objectType43.collapseUnion();
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46);
        com.google.javascript.rhino.jstype.ObjectType objectType48 = jSTypeRegistry47.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType49 = objectType48.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable50 = objectType49.getCtorExtendedInterfaces();
        boolean boolean52 = objectType49.removeProperty("hi!");
        com.google.javascript.rhino.jstype.JSType.TypePair typePair53 = jSType45.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) objectType49);
        boolean boolean54 = functionType37.isSubtype((com.google.javascript.rhino.jstype.JSType) objectType49);
        com.google.javascript.rhino.jstype.JSType jSType56 = functionType37.getPropertyType("hi!");
        com.google.javascript.rhino.jstype.ObjectType objectType57 = functionType37.getImplicitPrototype();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair58 = objectType21.getTypesUnderShallowInequality((com.google.javascript.rhino.jstype.JSType) functionType37);
        com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> jSTypeStaticSlot60 = functionType37.getOwnSlot("{}");
        com.google.javascript.rhino.jstype.JSType jSType62 = functionType37.getPropertyType("{}");
        boolean boolean63 = functionType37.isAllType();
        boolean boolean64 = functionType37.isEnumType();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType65 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType11, (com.google.javascript.rhino.jstype.JSType) functionType37);
        boolean boolean66 = parameterizedType65.isNoType();
        com.google.javascript.rhino.jstype.FunctionType functionType67 = parameterizedType65.getOwnerFunction();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(objectType7);
        org.junit.Assert.assertNotNull(objectType8);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(functionType11);
        org.junit.Assert.assertNotNull(objectTypeIterable15);
        org.junit.Assert.assertNotNull(objectTypeIterable16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objectType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(jSType24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(jSType28);
        org.junit.Assert.assertNotNull(objectType33);
        org.junit.Assert.assertNotNull(objectType34);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(functionType37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objectType42);
        org.junit.Assert.assertNotNull(objectType43);
        org.junit.Assert.assertNotNull(objectTypeIterable44);
        org.junit.Assert.assertNotNull(jSType45);
        org.junit.Assert.assertNotNull(objectType48);
        org.junit.Assert.assertNotNull(objectType49);
        org.junit.Assert.assertNotNull(objectTypeIterable50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typePair53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(jSType56);
        org.junit.Assert.assertNotNull(objectType57);
        org.junit.Assert.assertNotNull(typePair58);
        org.junit.Assert.assertNull(jSTypeStaticSlot60);
        org.junit.Assert.assertNotNull(jSType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterizedType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(functionType67);
    }

    @Test
    public void test04160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04160");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        int int9 = functionType8.getPropertiesCount();
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.ObjectType objectType14 = jSTypeRegistry13.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType15 = objectType14.getParentScope();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType18 = jSTypeRegistry11.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType14, node17);
        com.google.javascript.rhino.JSDocInfo jSDocInfo20 = new com.google.javascript.rhino.JSDocInfo();
        functionType18.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo20);
        int int22 = functionType18.getMaxArguments();
        java.lang.String str23 = functionType18.getDisplayName();
        int int24 = functionType18.getMaxArguments();
        boolean boolean25 = functionType18.isArrayType();
        boolean boolean26 = functionType18.isConstructor();
        boolean boolean27 = functionType8.canTestForEqualityWith((com.google.javascript.rhino.jstype.JSType) functionType18);
        boolean boolean28 = functionType8.matchesUint32Context();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.jstype.ObjectType objectType33 = jSTypeRegistry32.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType34 = objectType33.getParentScope();
        com.google.javascript.rhino.Node node36 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType37 = jSTypeRegistry30.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType33, node36);
        boolean boolean39 = functionType37.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType40 = functionType37.autoboxesTo();
        com.google.javascript.rhino.jstype.JSType jSType41 = functionType37.autoboxesTo();
        boolean boolean43 = functionType37.removeProperty("");
        java.lang.String str44 = functionType37.getDisplayName();
        com.google.javascript.rhino.jstype.TemplateType templateType45 = functionType37.toMaybeTemplateType();
        boolean boolean46 = functionType37.isDateType();
        com.google.javascript.rhino.jstype.JSType jSType48 = functionType37.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType.TypePair typePair49 = functionType8.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) functionType37);
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(functionType18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objectType33);
        org.junit.Assert.assertNotNull(objectType34);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(functionType37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(jSType40);
        org.junit.Assert.assertNull(jSType41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(templateType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(jSType48);
        org.junit.Assert.assertNotNull(typePair49);
    }

    @Test
    public void test04161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04161");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = objectType18.getCtorExtendedInterfaces();
        boolean boolean21 = objectType18.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo24.isConsistentIdGenerator();
        objectType18.setPropertyJSDocInfo("hi!", jSDocInfo24);
        boolean boolean34 = objectType18.isNullType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        jSTypeRegistry37.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean46 = jSDocInfo45.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean48 = jSDocInfo47.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList51 = com.google.common.collect.ImmutableList.of(jSDocInfo43, jSDocInfo44, jSDocInfo45, jSDocInfo47, jSDocInfo49);
        jSDocInfo45.addSuppression("");
        java.lang.String str55 = jSDocInfo45.getDescriptionForParameter("");
        objectType41.setJSDocInfo(jSDocInfo45);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        boolean boolean60 = node59.isComma();
        boolean boolean61 = node59.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        boolean boolean64 = node63.isComma();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        boolean boolean67 = node66.isComma();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        node69.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean73 = node69.isSyntheticBlock();
        boolean boolean74 = node66.isEquivalentToTyped(node69);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 1, node59, node63, node66);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node63.new FileLevelJsDocBuilder();
        boolean boolean77 = node63.isGetElem();
        boolean boolean78 = node63.isQualifiedName();
        boolean boolean79 = objectType18.defineSynthesizedProperty("{}", (com.google.javascript.rhino.jstype.JSType) objectType41, node63);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType83 = objectType82.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = objectType83.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType85 = objectType83.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType83.getImplicitPrototype();
        boolean boolean88 = objectType86.hasProperty("()");
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry1.createEnumType("?", node63, (com.google.javascript.rhino.jstype.JSType) objectType86);
        java.lang.String str90 = enumType89.getReferenceName();
        java.util.Set set91 = enumType89.getOwnPropertyNames();
        boolean boolean93 = enumType89.hasOwnProperty("function (): {1919344021}");
        boolean boolean94 = enumType89.isParameterizedType();
        java.lang.String str95 = enumType89.getReferenceName();
        boolean boolean96 = enumType89.matchesObjectContext();
        boolean boolean97 = enumType89.hasReferenceName();
        java.lang.String str98 = enumType89.getDisplayName();
        java.lang.Iterable iterable99 = enumType89.getCtorImplementedInterfaces();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "enum{?}" + "'", str90, "enum{?}");
        org.junit.Assert.assertNotNull(set91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "enum{?}" + "'", str95, "enum{?}");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "?" + "'", str98, "?");
        org.junit.Assert.assertNotNull(iterable99);
    }

    @Test
    public void test04162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04162");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        boolean boolean89 = parameterizedType88.matchesObjectContext();
        boolean boolean90 = parameterizedType88.isNoObjectType();
        com.google.javascript.rhino.jstype.FunctionType functionType91 = parameterizedType88.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.ObjectType objectType92 = parameterizedType88.getTypeOfThis();
        com.google.javascript.rhino.jstype.EnumType enumType93 = parameterizedType88.toMaybeEnumType();
        boolean boolean95 = parameterizedType88.isPropertyTypeDeclared("java.io.IOException: function (): {1183181076}");
        com.google.javascript.rhino.jstype.FunctionType functionType96 = parameterizedType88.getOwnerFunction();
        boolean boolean97 = parameterizedType88.isNativeObjectType();
        boolean boolean99 = parameterizedType88.isPropertyTypeDeclared("{proxy:function (): {1839630207}}");
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(functionType91);
        org.junit.Assert.assertNotNull(objectType92);
        org.junit.Assert.assertNull(enumType93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(functionType96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test04163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04163");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo11 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean12 = jSDocInfo11.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo13 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean14 = jSDocInfo13.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo15 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean16 = jSDocInfo15.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList17 = com.google.common.collect.ImmutableList.of(jSDocInfo9, jSDocInfo10, jSDocInfo11, jSDocInfo13, jSDocInfo15);
        com.google.javascript.rhino.JSDocInfo jSDocInfo18 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo19 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo20 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean21 = jSDocInfo20.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo22 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean23 = jSDocInfo22.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean25 = jSDocInfo24.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList26 = com.google.common.collect.ImmutableList.of(jSDocInfo18, jSDocInfo19, jSDocInfo20, jSDocInfo22, jSDocInfo24);
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo28 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo31 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean32 = jSDocInfo31.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean34 = jSDocInfo33.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList35 = com.google.common.collect.ImmutableList.of(jSDocInfo27, jSDocInfo28, jSDocInfo29, jSDocInfo31, jSDocInfo33);
        com.google.javascript.rhino.JSDocInfo jSDocInfo36 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo37 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo38 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean39 = jSDocInfo38.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo40 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean41 = jSDocInfo40.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo42 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean43 = jSDocInfo42.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList44 = com.google.common.collect.ImmutableList.of(jSDocInfo36, jSDocInfo37, jSDocInfo38, jSDocInfo40, jSDocInfo42);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo>> jSDocInfoListList45 = com.google.common.collect.ImmutableList.of(jSDocInfoList17, jSDocInfoList26, jSDocInfoList35, jSDocInfoList44);
        java.lang.Object[] objArray46 = jSDocInfoList35.toArray();
        boolean boolean47 = jSDocInfoList8.equals((java.lang.Object) objArray46);
        com.google.common.collect.UnmodifiableIterator<com.google.javascript.rhino.JSDocInfo> jSDocInfoItor48 = jSDocInfoList8.iterator();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList49 = jSDocInfoList8.asList();
        java.util.stream.Stream<com.google.javascript.rhino.JSDocInfo> jSDocInfoStream50 = jSDocInfoList49.stream();
        com.google.common.collect.UnmodifiableIterator<com.google.javascript.rhino.JSDocInfo> jSDocInfoItor51 = jSDocInfoList49.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList44);
        org.junit.Assert.assertNotNull(jSDocInfoListList45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jSDocInfoItor48);
        org.junit.Assert.assertNotNull(jSDocInfoList49);
        org.junit.Assert.assertNotNull(jSDocInfoStream50);
        org.junit.Assert.assertNotNull(jSDocInfoItor51);
    }

    @Test
    public void test04164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04164");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node2 = com.google.javascript.jscomp.NodeUtil.newExpr(node1);
        com.google.javascript.rhino.JSDocInfo jSDocInfo3 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo5 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean6 = jSDocInfo5.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo7 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean8 = jSDocInfo7.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList11 = com.google.common.collect.ImmutableList.of(jSDocInfo3, jSDocInfo4, jSDocInfo5, jSDocInfo7, jSDocInfo9);
        boolean boolean12 = jSDocInfo3.isNoCompile();
        java.lang.String str13 = jSDocInfo3.getVersion();
        node2.setJSDocInfo(jSDocInfo3);
        boolean boolean15 = node2.isBlock();
        com.google.javascript.rhino.jstype.JSType jSType16 = node2.getJSType();
        boolean boolean17 = node2.isFor();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(jSType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test04165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04165");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        boolean boolean3 = node1.isAdd();
        boolean boolean4 = node1.isReturn();
        boolean boolean5 = node1.isOptionalArg();
        java.lang.String str6 = com.google.javascript.jscomp.NodeUtil.getNearestFunctionName(node1);
        node1.setLength(130);
        node1.setWasEmptyNode(true);
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test04166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04166");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        boolean boolean12 = objectType11.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType14 = objectType11.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType16 = jSTypeRegistry8.getGreatestSubtypeWithProperty(jSType14, "");
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.ObjectType objectType21 = jSTypeRegistry20.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType22 = objectType21.getParentScope();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType25 = jSTypeRegistry18.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType21, node24);
        java.lang.String str26 = functionType25.getDisplayName();
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable29 = node28.siblings();
        int int30 = node28.getSideEffectFlags();
        boolean boolean31 = node28.isLabelName();
        boolean boolean32 = node28.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType33 = jSTypeRegistry8.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType25, node28);
        java.lang.String str34 = functionType33.getReferenceName();
        com.google.javascript.rhino.jstype.UnionType unionType35 = functionType33.toMaybeUnionType();
        com.google.javascript.rhino.jstype.JSType jSType37 = jSTypeRegistry1.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) unionType35, "{}");
        com.google.javascript.rhino.ErrorReporter errorReporter38 = jSTypeRegistry1.getErrorReporter();
        jSTypeRegistry1.incrementGeneration();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry43 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42);
        com.google.javascript.rhino.jstype.ObjectType objectType44 = jSTypeRegistry43.createAnonymousObjectType();
        boolean boolean45 = objectType44.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType47 = objectType44.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType49 = jSTypeRegistry41.getGreatestSubtypeWithProperty(jSType47, "");
        jSTypeRegistry41.forwardDeclareType("");
        boolean boolean52 = jSTypeRegistry41.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node54 = jSTypeRegistry41.createParametersWithVarArgs(jSTypeArray53);
        com.google.javascript.rhino.Node node55 = jSTypeRegistry1.createOptionalParameters(jSTypeArray53);
        jSTypeRegistry1.setLastGeneration(true);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(jSType14);
        org.junit.Assert.assertNotNull(jSType16);
        org.junit.Assert.assertNotNull(objectType21);
        org.junit.Assert.assertNotNull(objectType22);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(functionType25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(nodeIterable29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(functionType33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(unionType35);
        org.junit.Assert.assertNotNull(jSType37);
        org.junit.Assert.assertNull(errorReporter38);
        org.junit.Assert.assertNotNull(objectType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jSType47);
        org.junit.Assert.assertNotNull(jSType49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node55);
    }

    @Test
    public void test04167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04167");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        boolean boolean10 = functionType8.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType11 = functionType8.autoboxesTo();
        com.google.javascript.rhino.jstype.JSType jSType12 = functionType8.autoboxesTo();
        boolean boolean14 = functionType8.removeProperty("");
        java.lang.String str15 = functionType8.getDisplayName();
        com.google.javascript.rhino.jstype.TemplateType templateType16 = functionType8.toMaybeTemplateType();
        boolean boolean17 = functionType8.isDateType();
        boolean boolean19 = functionType8.hasOwnProperty("PARAM_LIST");
        com.google.javascript.rhino.JSDocInfo jSDocInfo20 = functionType8.getJSDocInfo();
        boolean boolean21 = functionType8.isNominalConstructor();
        com.google.javascript.rhino.jstype.FunctionType functionType22 = functionType8.getConstructor();
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.ObjectType objectType28 = jSTypeRegistry27.createAnonymousObjectType();
        jSTypeRegistry24.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType28);
        com.google.javascript.rhino.JSDocInfo jSDocInfo31 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo32 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean34 = jSDocInfo33.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo35 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean36 = jSDocInfo35.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo37 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean38 = jSDocInfo37.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList39 = com.google.common.collect.ImmutableList.of(jSDocInfo31, jSDocInfo32, jSDocInfo33, jSDocInfo35, jSDocInfo37);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression40 = jSDocInfo33.getThisType();
        objectType28.setPropertyJSDocInfo("", jSDocInfo33);
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry43 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42);
        com.google.javascript.rhino.jstype.ObjectType objectType44 = jSTypeRegistry43.createAnonymousObjectType();
        boolean boolean45 = objectType44.hasCachedValues();
        boolean boolean46 = objectType28.isSubtype((com.google.javascript.rhino.jstype.JSType) objectType44);
        com.google.javascript.rhino.ErrorReporter errorReporter47 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry48 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter47);
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry50 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49);
        com.google.javascript.rhino.jstype.ObjectType objectType51 = jSTypeRegistry50.createAnonymousObjectType();
        boolean boolean52 = objectType51.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType54 = objectType51.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType56 = jSTypeRegistry48.getGreatestSubtypeWithProperty(jSType54, "");
        com.google.javascript.rhino.ErrorReporter errorReporter57 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry58 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter57);
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry60 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59);
        com.google.javascript.rhino.jstype.ObjectType objectType61 = jSTypeRegistry60.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType62 = objectType61.getParentScope();
        com.google.javascript.rhino.Node node64 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType65 = jSTypeRegistry58.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType61, node64);
        java.lang.String str66 = functionType65.getDisplayName();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable69 = node68.siblings();
        int int70 = node68.getSideEffectFlags();
        boolean boolean71 = node68.isLabelName();
        boolean boolean72 = node68.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType73 = jSTypeRegistry48.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType65, node68);
        java.lang.String str74 = functionType73.getReferenceName();
        com.google.javascript.rhino.ErrorReporter errorReporter75 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry76 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter75);
        com.google.javascript.rhino.jstype.ObjectType objectType77 = jSTypeRegistry76.createAnonymousObjectType();
        boolean boolean78 = objectType77.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType80 = objectType77.getRestrictedTypeGivenToBooleanOutcome(true);
        boolean boolean81 = objectType77.hasDisplayName();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair82 = functionType73.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) objectType77);
        com.google.javascript.rhino.jstype.ObjectType objectType83 = functionType73.getTypeOfThis();
        boolean boolean84 = functionType73.isNumberValueType();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair85 = objectType28.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) functionType73);
        boolean boolean86 = functionType8.canTestForShallowEqualityWith((com.google.javascript.rhino.jstype.JSType) objectType28);
        functionType8.clearResolved();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(jSType11);
        org.junit.Assert.assertNull(jSType12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(templateType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jSDocInfo20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(functionType22);
        org.junit.Assert.assertNotNull(objectType28);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList39);
        org.junit.Assert.assertNull(jSTypeExpression40);
        org.junit.Assert.assertNotNull(objectType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objectType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSType54);
        org.junit.Assert.assertNotNull(jSType56);
        org.junit.Assert.assertNotNull(objectType61);
        org.junit.Assert.assertNotNull(objectType62);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNotNull(functionType65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(nodeIterable69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(functionType73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(objectType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(jSType80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(typePair82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(typePair85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test04168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04168");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo11 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean12 = jSDocInfo11.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo13 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean14 = jSDocInfo13.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo15 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean16 = jSDocInfo15.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList17 = com.google.common.collect.ImmutableList.of(jSDocInfo9, jSDocInfo10, jSDocInfo11, jSDocInfo13, jSDocInfo15);
        com.google.javascript.rhino.JSDocInfo jSDocInfo18 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo19 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo20 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean21 = jSDocInfo20.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo22 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean23 = jSDocInfo22.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean25 = jSDocInfo24.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList26 = com.google.common.collect.ImmutableList.of(jSDocInfo18, jSDocInfo19, jSDocInfo20, jSDocInfo22, jSDocInfo24);
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo28 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo31 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean32 = jSDocInfo31.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean34 = jSDocInfo33.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList35 = com.google.common.collect.ImmutableList.of(jSDocInfo27, jSDocInfo28, jSDocInfo29, jSDocInfo31, jSDocInfo33);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo>> jSDocInfoListList36 = com.google.common.collect.ImmutableList.of(jSDocInfoList8, jSDocInfoList17, jSDocInfoList26, jSDocInfoList35);
        java.lang.String str37 = jSDocInfoList26.toString();
        java.lang.Object[] objArray38 = jSDocInfoList26.toArray();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.JSDocInfo jSDocInfo40 = jSDocInfoList26.remove(1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList35);
        org.junit.Assert.assertNotNull(jSDocInfoListList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]" + "'", str37, "[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo, JSDocInfo]");
    }

    @Test
    public void test04169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04169");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        boolean boolean3 = objectType2.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType5 = objectType2.getRestrictedTypeGivenToBooleanOutcome(true);
        boolean boolean6 = objectType2.isRegexpType();
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType12 = objectType11.getParentScope();
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType15 = jSTypeRegistry8.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType11, node14);
        boolean boolean17 = functionType15.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType18 = functionType15.autoboxesTo();
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.JSDocInfo jSDocInfo20 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo21 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo22 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean23 = jSDocInfo22.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean25 = jSDocInfo24.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo26 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean27 = jSDocInfo26.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList28 = com.google.common.collect.ImmutableList.of(jSDocInfo20, jSDocInfo21, jSDocInfo22, jSDocInfo24, jSDocInfo26);
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo30 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo31 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean32 = jSDocInfo31.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean34 = jSDocInfo33.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo35 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean36 = jSDocInfo35.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList37 = com.google.common.collect.ImmutableList.of(jSDocInfo29, jSDocInfo30, jSDocInfo31, jSDocInfo33, jSDocInfo35);
        com.google.javascript.rhino.JSDocInfo jSDocInfo38 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo39 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo40 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean41 = jSDocInfo40.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo42 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean43 = jSDocInfo42.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean45 = jSDocInfo44.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList46 = com.google.common.collect.ImmutableList.of(jSDocInfo38, jSDocInfo39, jSDocInfo40, jSDocInfo42, jSDocInfo44);
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo48 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo51 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean52 = jSDocInfo51.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo53 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean54 = jSDocInfo53.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList55 = com.google.common.collect.ImmutableList.of(jSDocInfo47, jSDocInfo48, jSDocInfo49, jSDocInfo51, jSDocInfo53);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo>> jSDocInfoListList56 = com.google.common.collect.ImmutableList.of(jSDocInfoList28, jSDocInfoList37, jSDocInfoList46, jSDocInfoList55);
        java.util.Spliterator<com.google.javascript.rhino.JSDocInfo> jSDocInfoSpliterator57 = jSDocInfoList37.spliterator();
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        node59.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean63 = node59.isSyntheticBlock();
        node59.putIntProp(51, (int) (byte) 0);
        boolean boolean67 = jSDocInfoList37.contains((java.lang.Object) node59);
        com.google.javascript.rhino.ErrorReporter errorReporter68 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry69 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.jstype.ObjectType objectType72 = jSTypeRegistry71.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType73 = objectType72.getParentScope();
        com.google.javascript.rhino.Node node75 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType76 = jSTypeRegistry69.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType72, node75);
        com.google.javascript.rhino.JSDocInfo jSDocInfo78 = new com.google.javascript.rhino.JSDocInfo();
        functionType76.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo78);
        boolean boolean80 = functionType76.isNativeObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter81 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry82 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter81);
        com.google.javascript.rhino.ErrorReporter errorReporter83 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry84 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter83);
        com.google.javascript.rhino.jstype.ObjectType objectType85 = jSTypeRegistry84.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType85.getParentScope();
        com.google.javascript.rhino.Node node88 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType89 = jSTypeRegistry82.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType85, node88);
        com.google.javascript.rhino.JSDocInfo jSDocInfo91 = new com.google.javascript.rhino.JSDocInfo();
        functionType89.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo91);
        java.lang.String str93 = functionType89.getDisplayName();
        boolean boolean94 = functionType76.hasEqualCallType(functionType89);
        boolean boolean95 = jSDocInfoList37.equals((java.lang.Object) functionType89);
        java.lang.String str96 = functionType89.getReferenceName();
        com.google.javascript.rhino.jstype.JSType jSType97 = functionType15.resolve(errorReporter19, (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType89);
        java.lang.Iterable iterable98 = functionType89.getCtorExtendedInterfaces();
        boolean boolean99 = objectType2.canAssignTo((com.google.javascript.rhino.jstype.JSType) functionType89);
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(jSType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(objectType12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(functionType15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(jSType18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList55);
        org.junit.Assert.assertNotNull(jSDocInfoListList56);
        org.junit.Assert.assertNotNull(jSDocInfoSpliterator57);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objectType72);
        org.junit.Assert.assertNotNull(objectType73);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(functionType76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objectType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertNotNull(functionType89);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(str96);
        org.junit.Assert.assertNotNull(jSType97);
        org.junit.Assert.assertNotNull(iterable98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test04170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04170");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        com.google.javascript.rhino.JSDocInfo jSDocInfo8 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean11 = jSDocInfo10.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo12 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean13 = jSDocInfo12.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo14 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean15 = jSDocInfo14.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList16 = com.google.common.collect.ImmutableList.of(jSDocInfo8, jSDocInfo9, jSDocInfo10, jSDocInfo12, jSDocInfo14);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression17 = jSDocInfo10.getThisType();
        objectType5.setPropertyJSDocInfo("", jSDocInfo10);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.ObjectType objectType21 = jSTypeRegistry20.createAnonymousObjectType();
        boolean boolean22 = objectType21.hasCachedValues();
        boolean boolean23 = objectType5.isSubtype((com.google.javascript.rhino.jstype.JSType) objectType21);
        com.google.javascript.rhino.ErrorReporter errorReporter24 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry25 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter24);
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.ObjectType objectType28 = jSTypeRegistry27.createAnonymousObjectType();
        boolean boolean29 = objectType28.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType31 = objectType28.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType33 = jSTypeRegistry25.getGreatestSubtypeWithProperty(jSType31, "");
        com.google.javascript.rhino.ErrorReporter errorReporter34 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry35 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter34);
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.jstype.ObjectType objectType38 = jSTypeRegistry37.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType39 = objectType38.getParentScope();
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType42 = jSTypeRegistry35.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType38, node41);
        java.lang.String str43 = functionType42.getDisplayName();
        com.google.javascript.rhino.Node node45 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable46 = node45.siblings();
        int int47 = node45.getSideEffectFlags();
        boolean boolean48 = node45.isLabelName();
        boolean boolean49 = node45.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType50 = jSTypeRegistry25.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType42, node45);
        java.lang.String str51 = functionType50.getReferenceName();
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.jstype.ObjectType objectType54 = jSTypeRegistry53.createAnonymousObjectType();
        boolean boolean55 = objectType54.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType57 = objectType54.getRestrictedTypeGivenToBooleanOutcome(true);
        boolean boolean58 = objectType54.hasDisplayName();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair59 = functionType50.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) objectType54);
        com.google.javascript.rhino.jstype.ObjectType objectType60 = functionType50.getTypeOfThis();
        boolean boolean61 = functionType50.isNumberValueType();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair62 = objectType5.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) functionType50);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable63 = functionType50.getAllImplementedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType64 = functionType50.unboxesTo();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList16);
        org.junit.Assert.assertNull(jSTypeExpression17);
        org.junit.Assert.assertNotNull(objectType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objectType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSType31);
        org.junit.Assert.assertNotNull(jSType33);
        org.junit.Assert.assertNotNull(objectType38);
        org.junit.Assert.assertNotNull(objectType39);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(functionType42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(nodeIterable46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(functionType50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(objectType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(jSType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typePair59);
        org.junit.Assert.assertNotNull(objectType60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typePair62);
        org.junit.Assert.assertNotNull(objectTypeIterable63);
        org.junit.Assert.assertNull(jSType64);
    }

    @Test
    public void test04171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04171");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        java.lang.String str9 = jSDocInfo6.getMeaning();
        java.lang.String str10 = jSDocInfo6.getDescription();
        boolean boolean12 = jSDocInfo6.hasParameterType("");
        java.util.Collection<java.lang.String> strCollection13 = jSDocInfo6.getAuthors();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression15 = jSDocInfo6.getParameterType("(Unknown class name)");
        boolean boolean16 = jSDocInfo6.isNoShadow();
        boolean boolean17 = jSDocInfo6.isExterns();
        boolean boolean18 = jSDocInfo6.hasReturnType();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression19 = jSDocInfo6.getTypedefType();
        boolean boolean20 = jSDocInfo6.hasFileOverview();
        boolean boolean21 = jSDocInfo6.isConsistentIdGenerator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(strCollection13);
        org.junit.Assert.assertNull(jSTypeExpression15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(jSTypeExpression19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test04172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04172");
        com.google.javascript.rhino.JSDocInfo.Marker marker0 = new com.google.javascript.rhino.JSDocInfo.Marker();
        com.google.javascript.rhino.JSDocInfo.StringPosition stringPosition1 = marker0.getDescription();
        com.google.javascript.rhino.JSDocInfo.StringPosition stringPosition2 = marker0.getName();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo.Marker> markerList3 = com.google.common.collect.ImmutableList.of(marker0);
        com.google.javascript.rhino.JSDocInfo.StringPosition stringPosition4 = marker0.getDescription();
        com.google.javascript.rhino.JSDocInfo.StringPosition stringPosition5 = marker0.getAnnotation();
        com.google.javascript.rhino.JSDocInfo.TypePosition typePosition6 = marker0.getType();
        org.junit.Assert.assertNull(stringPosition1);
        org.junit.Assert.assertNull(stringPosition2);
        org.junit.Assert.assertNotNull(markerList3);
        org.junit.Assert.assertNull(stringPosition4);
        org.junit.Assert.assertNull(stringPosition5);
        org.junit.Assert.assertNull(typePosition6);
    }

    @Test
    public void test04173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04173");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        boolean boolean3 = node1.isAdd();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        int int7 = node5.getSideEffectFlags();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable10 = node9.siblings();
        node5.addChildToBack(node9);
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable14 = node13.siblings();
        int int15 = node13.getSideEffectFlags();
        boolean boolean16 = node13.isLabelName();
        com.google.javascript.rhino.Node node17 = node5.copyInformationFromForTree(node13);
        boolean boolean18 = node1.isEquivalentTo(node13);
        boolean boolean19 = node1.isOr();
        boolean boolean20 = node1.isGetterDef();
        boolean boolean21 = node1.isDebugger();
        boolean boolean22 = node1.isBreak();
        boolean boolean23 = node1.isScript();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeIterable10);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeIterable14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test04174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04174");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        boolean boolean10 = functionType8.removeProperty("");
        com.google.javascript.rhino.ErrorReporter errorReporter11 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry12 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11);
        com.google.javascript.rhino.jstype.ObjectType objectType13 = jSTypeRegistry12.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType14 = objectType13.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable15 = objectType14.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType16 = objectType14.collapseUnion();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable21 = objectType20.getCtorExtendedInterfaces();
        boolean boolean23 = objectType20.removeProperty("hi!");
        com.google.javascript.rhino.jstype.JSType.TypePair typePair24 = jSType16.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) objectType20);
        boolean boolean25 = functionType8.isSubtype((com.google.javascript.rhino.jstype.JSType) objectType20);
        com.google.javascript.rhino.jstype.JSType jSType27 = functionType8.getPropertyType("hi!");
        com.google.javascript.rhino.jstype.JSType jSType28 = functionType8.unboxesTo();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objectType13);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(objectTypeIterable15);
        org.junit.Assert.assertNotNull(jSType16);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(objectTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typePair24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(jSType27);
        org.junit.Assert.assertNull(jSType28);
    }

    @Test
    public void test04175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04175");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = objectType18.getCtorExtendedInterfaces();
        boolean boolean21 = objectType18.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo24.isConsistentIdGenerator();
        objectType18.setPropertyJSDocInfo("hi!", jSDocInfo24);
        boolean boolean34 = objectType18.isNullType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        jSTypeRegistry37.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean46 = jSDocInfo45.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean48 = jSDocInfo47.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList51 = com.google.common.collect.ImmutableList.of(jSDocInfo43, jSDocInfo44, jSDocInfo45, jSDocInfo47, jSDocInfo49);
        jSDocInfo45.addSuppression("");
        java.lang.String str55 = jSDocInfo45.getDescriptionForParameter("");
        objectType41.setJSDocInfo(jSDocInfo45);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        boolean boolean60 = node59.isComma();
        boolean boolean61 = node59.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        boolean boolean64 = node63.isComma();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        boolean boolean67 = node66.isComma();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        node69.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean73 = node69.isSyntheticBlock();
        boolean boolean74 = node66.isEquivalentToTyped(node69);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 1, node59, node63, node66);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node63.new FileLevelJsDocBuilder();
        boolean boolean77 = node63.isGetElem();
        boolean boolean78 = node63.isQualifiedName();
        boolean boolean79 = objectType18.defineSynthesizedProperty("{}", (com.google.javascript.rhino.jstype.JSType) objectType41, node63);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType83 = objectType82.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = objectType83.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType85 = objectType83.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType83.getImplicitPrototype();
        boolean boolean88 = objectType86.hasProperty("()");
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry1.createEnumType("?", node63, (com.google.javascript.rhino.jstype.JSType) objectType86);
        java.lang.String str90 = enumType89.getReferenceName();
        java.util.Set set91 = enumType89.getOwnPropertyNames();
        boolean boolean93 = enumType89.hasOwnProperty("function (): {1919344021}");
        boolean boolean94 = enumType89.isParameterizedType();
        java.lang.String str95 = enumType89.getReferenceName();
        java.lang.String str96 = enumType89.getDisplayName();
        boolean boolean97 = enumType89.hasReferenceName();
        com.google.javascript.rhino.jstype.UnionType unionType98 = enumType89.toMaybeUnionType();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "enum{?}" + "'", str90, "enum{?}");
        org.junit.Assert.assertNotNull(set91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "enum{?}" + "'", str95, "enum{?}");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "?" + "'", str96, "?");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNull(unionType98);
    }

    @Test
    public void test04176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04176");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        boolean boolean5 = objectType4.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType7 = objectType4.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType9 = jSTypeRegistry1.getGreatestSubtypeWithProperty(jSType7, "");
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.ObjectType objectType14 = jSTypeRegistry13.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType15 = objectType14.getParentScope();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType18 = jSTypeRegistry11.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType14, node17);
        java.lang.String str19 = functionType18.getDisplayName();
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable22 = node21.siblings();
        int int23 = node21.getSideEffectFlags();
        boolean boolean24 = node21.isLabelName();
        boolean boolean25 = node21.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType26 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType18, node21);
        boolean boolean28 = jSTypeRegistry1.isForwardDeclaredType("true");
        jSTypeRegistry1.clearTemplateTypeNames();
        jSTypeRegistry1.resetForTypeCheck();
        jSTypeRegistry1.clearTemplateTypeNames();
        com.google.javascript.rhino.jstype.ObjectType objectType32 = null;
        com.google.javascript.rhino.jstype.ObjectType objectType33 = jSTypeRegistry1.createObjectType(objectType32);
        boolean boolean34 = objectType33.hasDisplayName();
        com.google.javascript.rhino.jstype.ObjectType objectType35 = objectType33.getTypeOfThis();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSType7);
        org.junit.Assert.assertNotNull(jSType9);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(functionType18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(nodeIterable22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(functionType26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objectType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(objectType35);
    }

    @Test
    public void test04177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04177");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType12 = objectType11.getParentScope();
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType15 = jSTypeRegistry8.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType11, node14);
        com.google.javascript.rhino.JSDocInfo jSDocInfo17 = new com.google.javascript.rhino.JSDocInfo();
        functionType15.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo17);
        int int19 = functionType15.getMaxArguments();
        boolean boolean20 = functionType15.canBeCalled();
        com.google.javascript.rhino.jstype.JSType jSType25 = jSTypeRegistry1.getType((com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType15, "Unknown class name", "Not declared as a type name", 44, (int) '4');
        int int26 = functionType15.getMinArguments();
        com.google.javascript.rhino.jstype.ObjectType objectType28 = com.google.javascript.rhino.jstype.FunctionType.getTopDefiningInterface((com.google.javascript.rhino.jstype.ObjectType) functionType15, "function (): {404053079}");
        com.google.javascript.rhino.jstype.ObjectType.Property property30 = functionType15.getSlot("Not declared as a type name");
        boolean boolean31 = property30.isTypeInferred();
        com.google.javascript.rhino.jstype.ObjectType.Property property32 = property30.getDeclaration();
        boolean boolean33 = property30.isTypeInferred();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(objectType12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(functionType15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(jSType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(objectType28);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(property32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test04178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04178");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        boolean boolean89 = parameterizedType88.matchesObjectContext();
        boolean boolean90 = parameterizedType88.isNoObjectType();
        com.google.javascript.rhino.jstype.JSType jSType91 = parameterizedType88.getParameterType();
        boolean boolean92 = parameterizedType88.isInstanceType();
        com.google.javascript.rhino.jstype.FunctionType functionType93 = parameterizedType88.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.ObjectType objectType94 = parameterizedType88.getTypeOfThis();
        boolean boolean96 = parameterizedType88.removeProperty("NUMBER 0.0\n");
        boolean boolean98 = parameterizedType88.isPropertyTypeDeclared("function (): {2030099919}");
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(jSType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(functionType93);
        org.junit.Assert.assertNotNull(objectType94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test04179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04179");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        boolean boolean5 = objectType4.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType7 = objectType4.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType9 = jSTypeRegistry1.getGreatestSubtypeWithProperty(jSType7, "");
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.ObjectType objectType14 = jSTypeRegistry13.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType15 = objectType14.getParentScope();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType18 = jSTypeRegistry11.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType14, node17);
        java.lang.String str19 = functionType18.getDisplayName();
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable22 = node21.siblings();
        int int23 = node21.getSideEffectFlags();
        boolean boolean24 = node21.isLabelName();
        boolean boolean25 = node21.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType26 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType18, node21);
        boolean boolean28 = jSTypeRegistry1.isForwardDeclaredType("true");
        com.google.javascript.rhino.jstype.JSType jSType33 = jSTypeRegistry1.createNamedType("true", "function (): {862909605}", 36, 29);
        boolean boolean34 = jSTypeRegistry1.shouldTolerateUndefinedValues();
        boolean boolean35 = jSTypeRegistry1.shouldTolerateUndefinedValues();
        com.google.common.collect.ImmutableList<java.lang.String> strList43 = com.google.common.collect.ImmutableList.of("Object", "function (): {198393862}", "", "function (): {572156299}", "function (): {404053079}", "function (): {1434844343}", "function (): {1804297139}");
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList43);
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSType7);
        org.junit.Assert.assertNotNull(jSType9);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(functionType18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(nodeIterable22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(functionType26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strList43);
    }

    @Test
    public void test04180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04180");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean1 = jSDocInfo0.hasThisType();
        boolean boolean3 = jSDocInfo0.hasDescriptionForParameter("hi!");
        boolean boolean4 = jSDocInfo0.shouldPreserveTry();
        java.lang.String str5 = jSDocInfo0.getBlockDescription();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression6 = jSDocInfo0.getEnumParameterType();
        com.google.javascript.rhino.JSDocInfo.Visibility visibility7 = jSDocInfo0.getVisibility();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(jSTypeExpression6);
        org.junit.Assert.assertNull(visibility7);
    }

    @Test
    public void test04181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04181");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("function (): {588760971}");
        boolean boolean2 = node1.isInc();
        boolean boolean3 = node1.isNull();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test04182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04182");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo9 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean10 = jSDocInfo9.hasThisType();
        boolean boolean12 = jSDocInfo9.hasDescriptionForParameter("hi!");
        com.google.common.collect.ImmutableList<java.lang.String> strList13 = jSDocInfo9.getTemplateTypeNames();
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.ObjectType objectType19 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType20 = objectType19.getParentScope();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry16.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType19, node22);
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        functionType23.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo25);
        boolean boolean27 = functionType23.isNominalType();
        boolean boolean28 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType29 = functionType23.unboxesTo();
        boolean boolean30 = functionType23.matchesNumberContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry34.createAnonymousObjectType();
        boolean boolean36 = objectType35.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = objectType35.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry32.getGreatestSubtypeWithProperty(jSType38, "");
        jSTypeRegistry32.forwardDeclareType("");
        boolean boolean43 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        jSTypeRegistry32.incrementGeneration();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable47 = node46.siblings();
        int int48 = node46.getSideEffectFlags();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable51 = node50.siblings();
        node46.addChildToBack(node50);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        boolean boolean55 = node54.isComma();
        boolean boolean56 = node54.isOnlyModifiesThisCall();
        boolean boolean57 = node54.isSetterDef();
        com.google.javascript.rhino.Node node58 = node50.useSourceInfoFrom(node54);
        boolean boolean59 = node58.isString();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry64.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = objectType65.getParentScope();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry62.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType65, node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.ObjectType objectType74 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType75 = objectType74.getParentScope();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry71.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType74, node77);
        int int79 = functionType78.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable80 = functionType78.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot82 = functionType78.getSlot("PARAM_LIST");
        com.google.javascript.rhino.jstype.JSType jSType84 = jSTypeRegistry62.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType78, "");
        com.google.javascript.rhino.jstype.FunctionType functionType85 = functionType78.toMaybeFunctionType();
        boolean boolean86 = functionType78.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType87 = jSTypeRegistry32.createFromTypeNodes(node58, "{}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType78);
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry1.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType23, jSType87);
        boolean boolean89 = parameterizedType88.matchesObjectContext();
        boolean boolean90 = parameterizedType88.isNoObjectType();
        com.google.javascript.rhino.jstype.FunctionType functionType91 = parameterizedType88.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.JSType jSType92 = parameterizedType88.getParameterType();
        java.lang.String str93 = parameterizedType88.getReferenceName();
        boolean boolean94 = parameterizedType88.hasReferenceName();
        boolean boolean95 = parameterizedType88.isAllType();
        com.google.javascript.rhino.jstype.JSType jSType96 = parameterizedType88.getParameterType();
        boolean boolean97 = parameterizedType88.isNoType();
        boolean boolean98 = parameterizedType88.isNullable();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(objectType20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jSType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objectType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(nodeIterable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeIterable51);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNotNull(objectType75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable80);
        org.junit.Assert.assertNull(staticSlot82);
        org.junit.Assert.assertNotNull(jSType84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(functionType91);
        org.junit.Assert.assertNotNull(jSType92);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(jSType96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test04183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04183");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString(10, "function (): {540786050}");
        java.lang.String str6 = node2.toString(true, false, true);
        boolean boolean7 = node2.isLocalResultCall();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "BITXOR function (): {540786050}" + "'", str6, "BITXOR function (): {540786050}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test04184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04184");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        int int9 = functionType8.getPropertiesCount();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable10 = functionType8.getOwnImplementedInterfaces();
        com.google.javascript.rhino.Node node11 = functionType8.getRootNode();
        int int12 = functionType8.getPropertiesCount();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType21 = jSTypeRegistry14.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType17, node20);
        boolean boolean23 = functionType21.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType24 = functionType21.autoboxesTo();
        com.google.javascript.rhino.jstype.ObjectType objectType25 = functionType21.getTypeOfThis();
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet26 = objectType25.getPossibleToBooleanOutcomes();
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27);
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.ObjectType objectType31 = jSTypeRegistry30.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType32 = objectType31.getParentScope();
        com.google.javascript.rhino.Node node34 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType35 = jSTypeRegistry28.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType31, node34);
        java.lang.String str36 = functionType35.getDisplayName();
        boolean boolean37 = objectType25.canTestForEqualityWith((com.google.javascript.rhino.jstype.JSType) functionType35);
        boolean boolean38 = functionType35.hasCachedValues();
        int int39 = functionType35.getPropertiesCount();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.ObjectType objectType42 = jSTypeRegistry41.createAnonymousObjectType();
        boolean boolean43 = objectType42.hasCachedValues();
        boolean boolean44 = objectType42.isOrdinaryFunction();
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.ObjectType objectType47 = jSTypeRegistry46.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType48 = objectType47.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable49 = objectType48.getCtorExtendedInterfaces();
        boolean boolean51 = objectType48.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo53 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo54 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo55 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean56 = jSDocInfo55.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo57 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean58 = jSDocInfo57.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo59 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean60 = jSDocInfo59.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList61 = com.google.common.collect.ImmutableList.of(jSDocInfo53, jSDocInfo54, jSDocInfo55, jSDocInfo57, jSDocInfo59);
        boolean boolean62 = jSDocInfo54.isConsistentIdGenerator();
        objectType48.setPropertyJSDocInfo("hi!", jSDocInfo54);
        com.google.javascript.rhino.jstype.JSType.TypePair typePair64 = objectType42.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) objectType48);
        com.google.javascript.rhino.jstype.JSType.TypePair typePair65 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType35, (com.google.javascript.rhino.jstype.JSType) objectType48);
        com.google.javascript.rhino.jstype.JSType jSType66 = functionType8.getGreatestSubtype((com.google.javascript.rhino.jstype.JSType) functionType35);
        boolean boolean67 = functionType35.hasImplementedInterfaces();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objectTypeIterable10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(functionType21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(jSType24);
        org.junit.Assert.assertNotNull(objectType25);
        org.junit.Assert.assertTrue("'" + booleanLiteralSet26 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.BOTH + "'", booleanLiteralSet26.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.BOTH));
        org.junit.Assert.assertNotNull(objectType31);
        org.junit.Assert.assertNotNull(objectType32);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(functionType35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(objectType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objectType47);
        org.junit.Assert.assertNotNull(objectType48);
        org.junit.Assert.assertNotNull(objectTypeIterable49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(typePair64);
        org.junit.Assert.assertNotNull(jSType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test04185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04185");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression9 = jSDocInfo2.getThisType();
        boolean boolean10 = jSDocInfo2.hasEnumParameterType();
        java.util.List<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList11 = jSDocInfo2.getImplementedInterfaces();
        java.lang.String str12 = jSDocInfo2.getDeprecationReason();
        boolean boolean13 = jSDocInfo2.hasType();
        java.util.List<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList14 = jSDocInfo2.getExtendedInterfaces();
        com.google.javascript.rhino.Node node15 = jSDocInfo2.getAssociatedNode();
        jSDocInfo2.setDeprecated(true);
        com.google.javascript.rhino.JSDocInfo.Visibility visibility18 = jSDocInfo2.getVisibility();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertNull(jSTypeExpression9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(jSTypeExpressionList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(jSTypeExpressionList14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(visibility18);
    }

    @Test
    public void test04186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04186");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo1 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean3 = jSDocInfo2.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo4 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean5 = jSDocInfo4.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean7 = jSDocInfo6.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList8 = com.google.common.collect.ImmutableList.of(jSDocInfo0, jSDocInfo1, jSDocInfo2, jSDocInfo4, jSDocInfo6);
        jSDocInfo2.addSuppression("");
        java.util.Collection<com.google.javascript.rhino.JSDocInfo.Marker> markerCollection11 = jSDocInfo2.getMarkers();
        boolean boolean12 = jSDocInfo2.containsDeclaration();
        java.util.List<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList13 = jSDocInfo2.getImplementedInterfaces();
        com.google.javascript.rhino.JSDocInfo jSDocInfo14 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo15 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo16 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean17 = jSDocInfo16.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo18 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean19 = jSDocInfo18.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo20 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean21 = jSDocInfo20.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList22 = com.google.common.collect.ImmutableList.of(jSDocInfo14, jSDocInfo15, jSDocInfo16, jSDocInfo18, jSDocInfo20);
        java.lang.String str23 = jSDocInfo20.getMeaning();
        java.lang.String str24 = jSDocInfo20.getDescription();
        boolean boolean26 = jSDocInfo20.hasParameterType("");
        boolean boolean27 = jSDocInfo20.hasEnumParameterType();
        com.google.common.collect.ImmutableList<java.lang.String> strList28 = jSDocInfo20.getTemplateTypeNames();
        com.google.javascript.rhino.JSDocInfo.Visibility visibility29 = com.google.javascript.rhino.JSDocInfo.Visibility.INHERITED;
        jSDocInfo20.setVisibility(visibility29);
        jSDocInfo2.setVisibility(visibility29);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList8);
        org.junit.Assert.assertNotNull(markerCollection11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(jSTypeExpressionList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + visibility29 + "' != '" + com.google.javascript.rhino.JSDocInfo.Visibility.INHERITED + "'", visibility29.equals(com.google.javascript.rhino.JSDocInfo.Visibility.INHERITED));
    }

    @Test
    public void test04187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04187");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        boolean boolean10 = node9.isComma();
        boolean boolean11 = node9.isOnlyModifiesThisCall();
        boolean boolean12 = node9.isSetterDef();
        com.google.javascript.rhino.Node node13 = node5.useSourceInfoFrom(node9);
        com.google.javascript.rhino.Node node14 = node9.getLastChild();
        boolean boolean15 = node9.isOnlyModifiesThisCall();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.ObjectType objectType21 = jSTypeRegistry20.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType22 = objectType21.getParentScope();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType25 = jSTypeRegistry18.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType21, node24);
        boolean boolean27 = functionType25.removeProperty("");
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.ObjectType objectType30 = jSTypeRegistry29.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType31 = objectType30.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable32 = objectType31.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType33 = objectType31.collapseUnion();
        com.google.javascript.rhino.ErrorReporter errorReporter34 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry35 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter34);
        com.google.javascript.rhino.jstype.ObjectType objectType36 = jSTypeRegistry35.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType37 = objectType36.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable38 = objectType37.getCtorExtendedInterfaces();
        boolean boolean40 = objectType37.removeProperty("hi!");
        com.google.javascript.rhino.jstype.JSType.TypePair typePair41 = jSType33.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) objectType37);
        boolean boolean42 = functionType25.isSubtype((com.google.javascript.rhino.jstype.JSType) objectType37);
        com.google.javascript.rhino.jstype.JSType jSType44 = functionType25.getPropertyType("hi!");
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.ErrorReporter errorReporter47 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry48 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter47);
        com.google.javascript.rhino.jstype.ObjectType objectType49 = jSTypeRegistry48.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType50 = objectType49.getParentScope();
        com.google.javascript.rhino.Node node52 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType53 = jSTypeRegistry46.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType49, node52);
        boolean boolean55 = functionType53.removeProperty("");
        com.google.javascript.rhino.jstype.JSType jSType56 = functionType53.autoboxesTo();
        com.google.javascript.rhino.jstype.JSType jSType57 = functionType53.autoboxesTo();
        boolean boolean59 = functionType53.removeProperty("");
        boolean boolean60 = functionType25.differsFrom((com.google.javascript.rhino.jstype.JSType) functionType53);
        node9.putProp((int) (short) 0, (java.lang.Object) functionType25);
        int int63 = node9.getIntProp(54);
        com.google.javascript.rhino.ErrorReporter errorReporter64 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry65 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter64);
        com.google.javascript.rhino.ErrorReporter errorReporter66 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry67 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter66);
        com.google.javascript.rhino.jstype.ObjectType objectType68 = jSTypeRegistry67.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType69 = objectType68.getParentScope();
        com.google.javascript.rhino.Node node71 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType72 = jSTypeRegistry65.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType68, node71);
        com.google.javascript.rhino.JSDocInfo jSDocInfo74 = new com.google.javascript.rhino.JSDocInfo();
        functionType72.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo74);
        int int76 = functionType72.getMaxArguments();
        java.lang.String str77 = functionType72.getDisplayName();
        com.google.javascript.rhino.jstype.JSType jSType78 = functionType72.collapseUnion();
        com.google.javascript.rhino.Node node79 = functionType72.getParametersNode();
        boolean boolean80 = node9.hasChild(node79);
        boolean boolean81 = node79.isVar();
        com.google.javascript.rhino.Node[] nodeArray86 = new com.google.javascript.rhino.Node[] {};
        com.google.javascript.rhino.Node node89 = new com.google.javascript.rhino.Node((int) (short) 1, nodeArray86, 43, 50);
        com.google.javascript.rhino.Node node90 = new com.google.javascript.rhino.Node(4096, nodeArray86);
        com.google.javascript.rhino.Node node91 = new com.google.javascript.rhino.Node((int) (byte) 0, nodeArray86);
        com.google.javascript.rhino.Node node92 = node91.removeFirstChild();
        node79.putProp(49, (java.lang.Object) node92);
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objectType21);
        org.junit.Assert.assertNotNull(objectType22);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(functionType25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objectType30);
        org.junit.Assert.assertNotNull(objectType31);
        org.junit.Assert.assertNotNull(objectTypeIterable32);
        org.junit.Assert.assertNotNull(jSType33);
        org.junit.Assert.assertNotNull(objectType36);
        org.junit.Assert.assertNotNull(objectType37);
        org.junit.Assert.assertNotNull(objectTypeIterable38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typePair41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(jSType44);
        org.junit.Assert.assertNotNull(objectType49);
        org.junit.Assert.assertNotNull(objectType50);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(functionType53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(jSType56);
        org.junit.Assert.assertNull(jSType57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(objectType68);
        org.junit.Assert.assertNotNull(objectType69);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(functionType72);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(jSType78);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(nodeArray86);
        org.junit.Assert.assertNull(node92);
    }

    @Test
    public void test04188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04188");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags1 = new com.google.javascript.rhino.Node.SideEffectFlags(44);
        sideEffectFlags1.clearAllFlags();
        sideEffectFlags1.setAllFlags();
        sideEffectFlags1.setMutatesArguments();
        sideEffectFlags1.setReturnsTainted();
    }

    @Test
    public void test04189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04189");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.ObjectType objectType11 = jSTypeRegistry10.createAnonymousObjectType();
        jSTypeRegistry7.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType11);
        com.google.javascript.rhino.jstype.JSType jSType13 = jSTypeRegistry1.createFromTypeNodes(node4, "", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType11);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry16.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType18 = objectType17.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = objectType18.getCtorExtendedInterfaces();
        boolean boolean21 = objectType18.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo23 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean26 = jSDocInfo25.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo27 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean28 = jSDocInfo27.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo29 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean30 = jSDocInfo29.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList31 = com.google.common.collect.ImmutableList.of(jSDocInfo23, jSDocInfo24, jSDocInfo25, jSDocInfo27, jSDocInfo29);
        boolean boolean32 = jSDocInfo24.isConsistentIdGenerator();
        objectType18.setPropertyJSDocInfo("hi!", jSDocInfo24);
        boolean boolean34 = objectType18.isNullType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        jSTypeRegistry37.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType41);
        com.google.javascript.rhino.JSDocInfo jSDocInfo43 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo45 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean46 = jSDocInfo45.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean48 = jSDocInfo47.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo49 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean50 = jSDocInfo49.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList51 = com.google.common.collect.ImmutableList.of(jSDocInfo43, jSDocInfo44, jSDocInfo45, jSDocInfo47, jSDocInfo49);
        jSDocInfo45.addSuppression("");
        java.lang.String str55 = jSDocInfo45.getDescriptionForParameter("");
        objectType41.setJSDocInfo(jSDocInfo45);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString("");
        boolean boolean60 = node59.isComma();
        boolean boolean61 = node59.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("");
        boolean boolean64 = node63.isComma();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString("");
        boolean boolean67 = node66.isComma();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("");
        node69.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean73 = node69.isSyntheticBlock();
        boolean boolean74 = node66.isEquivalentToTyped(node69);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 1, node59, node63, node66);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder76 = node63.new FileLevelJsDocBuilder();
        boolean boolean77 = node63.isGetElem();
        boolean boolean78 = node63.isQualifiedName();
        boolean boolean79 = objectType18.defineSynthesizedProperty("{}", (com.google.javascript.rhino.jstype.JSType) objectType41, node63);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.ObjectType objectType82 = jSTypeRegistry81.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType83 = objectType82.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = objectType83.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType85 = objectType83.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType86 = objectType83.getImplicitPrototype();
        boolean boolean88 = objectType86.hasProperty("()");
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry1.createEnumType("?", node63, (com.google.javascript.rhino.jstype.JSType) objectType86);
        com.google.javascript.rhino.jstype.EnumType enumType90 = enumType89.toMaybeEnumType();
        com.google.javascript.rhino.jstype.ObjectType objectType91 = enumType90.getImplicitPrototype();
        com.google.javascript.rhino.jstype.FunctionType functionType92 = enumType90.getOwnerFunction();
        boolean boolean94 = enumType90.hasOwnProperty("function (): {813408778}");
        com.google.javascript.rhino.jstype.ObjectType objectType95 = enumType90.getImplicitPrototype();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(objectType11);
        org.junit.Assert.assertNotNull(jSType13);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(objectType18);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objectType82);
        org.junit.Assert.assertNotNull(objectType83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(objectType86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertNotNull(enumType90);
        org.junit.Assert.assertNotNull(objectType91);
        org.junit.Assert.assertNull(functionType92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(objectType95);
    }

    @Test
    public void test04190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04190");
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition2 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable5 = node4.siblings();
        namePosition2.setItem(node4);
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable7 = node4.getAncestors();
        boolean boolean8 = node4.isVarArgs();
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newString("");
        node10.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean14 = node10.isSyntheticBlock();
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition15 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable18 = node17.siblings();
        namePosition15.setItem(node17);
        com.google.javascript.rhino.Node node20 = namePosition15.getItem();
        boolean boolean21 = node20.isNE();
        int int22 = node20.getCharno();
        com.google.javascript.rhino.Node node23 = node10.useSourceInfoIfMissingFromForTree(node20);
        boolean boolean24 = node20.isQuotedString();
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newString("");
        node26.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean30 = node26.isSyntheticBlock();
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition31 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable34 = node33.siblings();
        namePosition31.setItem(node33);
        com.google.javascript.rhino.Node node36 = namePosition31.getItem();
        boolean boolean37 = node36.isNE();
        int int38 = node36.getCharno();
        com.google.javascript.rhino.Node node39 = node26.useSourceInfoIfMissingFromForTree(node36);
        java.lang.String str40 = node20.checkTreeEquals(node26);
        boolean boolean41 = node20.isName();
        com.google.javascript.rhino.Node node44 = new com.google.javascript.rhino.Node(40, node4, node20, 35, 0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node47 = new com.google.javascript.rhino.Node(37, node4, (int) (byte) -1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: new child has existing parent");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(nodeIterable5);
        org.junit.Assert.assertNotNull(ancestorIterable7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(nodeIterable18);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(nodeIterable34);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test04191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04191");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        functionType8.setPropertyJSDocInfo("Not declared as a type name", jSDocInfo10);
        boolean boolean12 = functionType8.isNominalType();
        boolean boolean13 = functionType8.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType14 = functionType8.unboxesTo();
        boolean boolean15 = functionType8.matchesNumberContext();
        int int16 = functionType8.getMaxArguments();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(jSType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test04192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04192");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        boolean boolean10 = node9.isComma();
        boolean boolean11 = node9.isOnlyModifiesThisCall();
        boolean boolean12 = node9.isSetterDef();
        com.google.javascript.rhino.Node node13 = node5.useSourceInfoFrom(node9);
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString("");
        boolean boolean16 = node15.isComma();
        boolean boolean17 = node15.isOnlyModifiesThisCall();
        boolean boolean18 = node15.isVarArgs();
        boolean boolean19 = node13.hasChild(node15);
        node13.setLength((int) (short) 1);
        boolean boolean22 = node13.isIn();
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable26 = node25.siblings();
        int int27 = node25.getSideEffectFlags();
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable30 = node29.siblings();
        node25.addChildToBack(node29);
        com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable34 = node33.siblings();
        int int35 = node33.getSideEffectFlags();
        boolean boolean36 = node33.isLabelName();
        com.google.javascript.rhino.Node node37 = node25.copyInformationFromForTree(node33);
        com.google.javascript.rhino.Node node38 = new com.google.javascript.rhino.Node(38, node25);
        boolean boolean39 = node38.isScript();
        boolean boolean40 = node38.isCase();
        node13.addChildrenToBack(node38);
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(nodeIterable26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(nodeIterable30);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(nodeIterable34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test04193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04193");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.siblings();
        int int3 = node1.getSideEffectFlags();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable6 = node5.siblings();
        node1.addChildToBack(node5);
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        boolean boolean10 = node9.isComma();
        boolean boolean11 = node9.isOnlyModifiesThisCall();
        boolean boolean12 = node9.isSetterDef();
        com.google.javascript.rhino.Node node13 = node5.useSourceInfoFrom(node9);
        com.google.javascript.rhino.Node node14 = node13.getParent();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression16 = new com.google.javascript.rhino.JSTypeExpression(node14, "(true)");
        com.google.javascript.rhino.Node node17 = jSTypeExpression16.getRoot();
        boolean boolean18 = jSTypeExpression16.isVarArgs();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeIterable6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test04194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04194");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType3 = objectType2.getParentScope();
        com.google.javascript.rhino.jstype.JSType jSType4 = objectType2.getIndexType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo7 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo8 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean9 = jSDocInfo8.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo10 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean11 = jSDocInfo10.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo12 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean13 = jSDocInfo12.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList14 = com.google.common.collect.ImmutableList.of(jSDocInfo6, jSDocInfo7, jSDocInfo8, jSDocInfo10, jSDocInfo12);
        jSDocInfo8.addSuppression("");
        objectType2.setPropertyJSDocInfo("true", jSDocInfo8);
        boolean boolean18 = jSDocInfo8.isNoShadow();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression19 = jSDocInfo8.getTypedefType();
        java.util.List<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList20 = jSDocInfo8.getThrownTypes();
        boolean boolean21 = jSDocInfo8.isExpose();
        boolean boolean22 = jSDocInfo8.isDeprecated();
        boolean boolean23 = jSDocInfo8.isJavaDispatch();
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(objectType3);
        org.junit.Assert.assertNull(jSType4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(jSTypeExpression19);
        org.junit.Assert.assertNotNull(jSTypeExpressionList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test04195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04195");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString("");
        boolean boolean3 = node2.isComma();
        boolean boolean4 = node2.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString("");
        boolean boolean7 = node6.isComma();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        boolean boolean10 = node9.isComma();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString("");
        node12.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean16 = node12.isSyntheticBlock();
        boolean boolean17 = node9.isEquivalentToTyped(node12);
        com.google.javascript.rhino.Node node18 = new com.google.javascript.rhino.Node((int) (short) 1, node2, node6, node9);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder19 = node6.new FileLevelJsDocBuilder();
        boolean boolean20 = node6.isGetElem();
        node6.removeProp((int) '#');
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable25 = node24.siblings();
        int int26 = node24.getSideEffectFlags();
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable29 = node28.siblings();
        node24.addChildToBack(node28);
        com.google.javascript.rhino.Node node32 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable33 = node32.siblings();
        int int34 = node32.getSideEffectFlags();
        boolean boolean35 = node32.isLabelName();
        com.google.javascript.rhino.Node node36 = node24.copyInformationFromForTree(node32);
        java.lang.Object obj38 = node36.getProp(51);
        com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable41 = node40.siblings();
        boolean boolean42 = node40.isAdd();
        com.google.javascript.rhino.Node node44 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable45 = node44.siblings();
        int int46 = node44.getSideEffectFlags();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable49 = node48.siblings();
        node44.addChildToBack(node48);
        com.google.javascript.rhino.Node node52 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable53 = node52.siblings();
        int int54 = node52.getSideEffectFlags();
        boolean boolean55 = node52.isLabelName();
        com.google.javascript.rhino.Node node56 = node44.copyInformationFromForTree(node52);
        boolean boolean57 = node40.isEquivalentTo(node52);
        boolean boolean58 = node40.isReturn();
        boolean boolean59 = node40.isNull();
        int int60 = node36.getIndexOfChild(node40);
        node6.addChildToBack(node36);
        boolean boolean62 = node36.isFalse();
        com.google.javascript.rhino.Node node64 = com.google.javascript.rhino.Node.newNumber((double) (short) 10);
        node64.setLength(43);
        node36.addChildrenToFront(node64);
        int int69 = node36.getIntProp(44);
        com.google.javascript.rhino.Node node71 = com.google.javascript.rhino.Node.newString("");
        boolean boolean72 = node71.isComma();
        boolean boolean73 = node71.isOnlyModifiesThisCall();
        boolean boolean74 = node71.isVarArgs();
        com.google.javascript.rhino.Node node76 = com.google.javascript.rhino.Node.newString("");
        boolean boolean77 = node76.isComma();
        int int78 = node76.getType();
        java.util.Set<java.lang.String> strSet79 = node76.getDirectives();
        com.google.javascript.rhino.Node node80 = node71.useSourceInfoFrom(node76);
        boolean boolean81 = node71.isGetElem();
        com.google.javascript.rhino.JSDocInfo jSDocInfo82 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo83 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo84 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean85 = jSDocInfo84.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo86 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean87 = jSDocInfo86.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo88 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean89 = jSDocInfo88.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList90 = com.google.common.collect.ImmutableList.of(jSDocInfo82, jSDocInfo83, jSDocInfo84, jSDocInfo86, jSDocInfo88);
        boolean boolean91 = jSDocInfo82.isNoCompile();
        java.lang.String str92 = jSDocInfo82.getVersion();
        java.lang.String str94 = jSDocInfo82.getDescriptionForParameter("InputId: hi!");
        node71.setJSDocInfo(jSDocInfo82);
        java.lang.String str96 = node71.getSourceFileName();
        com.google.javascript.rhino.Node node97 = node36.copyInformationFromForTree(node71);
        int int98 = node97.getSourceOffset();
        boolean boolean99 = node97.isFunction();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(nodeIterable25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(nodeIterable29);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(nodeIterable33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(nodeIterable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(nodeIterable45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(nodeIterable49);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(nodeIterable53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 40 + "'", int78 == 40);
        org.junit.Assert.assertNull(strSet79);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNull(str96);
        org.junit.Assert.assertNotNull(node97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test04196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04196");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString("");
        boolean boolean3 = node2.isComma();
        boolean boolean4 = node2.isOnlyModifiesThisCall();
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString("");
        boolean boolean7 = node6.isComma();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("");
        boolean boolean10 = node9.isComma();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString("");
        node12.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        boolean boolean16 = node12.isSyntheticBlock();
        boolean boolean17 = node9.isEquivalentToTyped(node12);
        com.google.javascript.rhino.Node node18 = new com.google.javascript.rhino.Node((int) (short) 1, node2, node6, node9);
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString("");
        node20.putProp((int) (short) 1, (java.lang.Object) (short) -1);
        node20.setSourceEncodedPosition((-1));
        com.google.javascript.rhino.Node node26 = node6.clonePropsFrom(node20);
        boolean boolean27 = node20.isGetterDef();
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable30 = node29.siblings();
        node29.setVarArgs(false);
        int int33 = node20.getIndexOfChild(node29);
        boolean boolean34 = node20.isLocalResultCall();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node35 = node20.detachFromParent();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(nodeIterable30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test04197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04197");
        java.lang.reflect.Type type0 = null;
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.ObjectType objectType3 = jSTypeRegistry2.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType4 = objectType3.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable5 = objectType4.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType6 = objectType4.collapseUnion();
        com.google.javascript.rhino.jstype.ObjectType objectType7 = objectType4.getImplicitPrototype();
        java.lang.Class<?> wildcardClass8 = objectType4.getClass();
        // The following exception was thrown during execution in test generation
        try {
            com.google.common.collect.ImmutableList<java.lang.reflect.Type> typeList9 = com.google.common.collect.ImmutableList.of(type0, (java.lang.reflect.Type) wildcardClass8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: at index 0");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectType3);
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectTypeIterable5);
        org.junit.Assert.assertNotNull(jSType6);
        org.junit.Assert.assertNotNull(objectType7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test04198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04198");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry4.createAnonymousObjectType();
        jSTypeRegistry1.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType5);
        com.google.javascript.rhino.jstype.JSType jSType7 = objectType5.autoboxesTo();
        com.google.javascript.rhino.jstype.UnionType unionType8 = objectType5.toMaybeUnionType();
        boolean boolean9 = objectType5.isUnknownType();
        com.google.javascript.rhino.jstype.JSType jSType10 = objectType5.autobox();
        com.google.javascript.rhino.ErrorReporter errorReporter11 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry12 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.ObjectType objectType16 = jSTypeRegistry15.createAnonymousObjectType();
        jSTypeRegistry12.unregisterPropertyOnType("hi!", (com.google.javascript.rhino.jstype.JSType) objectType16);
        com.google.javascript.rhino.jstype.JSType jSType18 = objectType16.autoboxesTo();
        com.google.javascript.rhino.jstype.UnionType unionType19 = objectType16.toMaybeUnionType();
        boolean boolean20 = objectType16.isUnknownType();
        com.google.javascript.rhino.jstype.JSType jSType21 = objectType16.autobox();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.ObjectType objectType24 = jSTypeRegistry23.createAnonymousObjectType();
        boolean boolean25 = objectType24.hasCachedValues();
        boolean boolean26 = objectType24.isOrdinaryFunction();
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27);
        com.google.javascript.rhino.jstype.ObjectType objectType29 = jSTypeRegistry28.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType30 = objectType29.getParentScope();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable31 = objectType30.getCtorExtendedInterfaces();
        boolean boolean33 = objectType30.removeProperty("hi!");
        com.google.javascript.rhino.JSDocInfo jSDocInfo35 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo36 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo37 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean38 = jSDocInfo37.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo39 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean40 = jSDocInfo39.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo41 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean42 = jSDocInfo41.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList43 = com.google.common.collect.ImmutableList.of(jSDocInfo35, jSDocInfo36, jSDocInfo37, jSDocInfo39, jSDocInfo41);
        boolean boolean44 = jSDocInfo36.isConsistentIdGenerator();
        objectType30.setPropertyJSDocInfo("hi!", jSDocInfo36);
        com.google.javascript.rhino.jstype.JSType.TypePair typePair46 = objectType24.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) objectType30);
        com.google.javascript.rhino.jstype.JSType.TypePair typePair47 = jSType21.getTypesUnderShallowInequality((com.google.javascript.rhino.jstype.JSType) objectType30);
        com.google.javascript.rhino.jstype.JSType jSType48 = jSType10.getGreatestSubtype(jSType21);
        boolean boolean49 = jSType21.isResolved();
        java.lang.String str50 = jSType21.toAnnotationString();
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNull(jSType7);
        org.junit.Assert.assertNull(unionType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(jSType10);
        org.junit.Assert.assertNotNull(objectType16);
        org.junit.Assert.assertNull(jSType18);
        org.junit.Assert.assertNull(unionType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSType21);
        org.junit.Assert.assertNotNull(objectType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objectType29);
        org.junit.Assert.assertNotNull(objectType30);
        org.junit.Assert.assertNotNull(objectTypeIterable31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(typePair46);
        org.junit.Assert.assertNotNull(typePair47);
        org.junit.Assert.assertNotNull(jSType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{}" + "'", str50, "{}");
    }

    @Test
    public void test04199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04199");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType5 = objectType4.getParentScope();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType4, node7);
        java.lang.String str9 = functionType8.getDisplayName();
        com.google.javascript.rhino.jstype.FunctionType functionType10 = functionType8.getOwnerFunction();
        com.google.javascript.rhino.JSDocInfo jSDocInfo11 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo12 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo13 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean14 = jSDocInfo13.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo15 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean16 = jSDocInfo15.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo17 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean18 = jSDocInfo17.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList19 = com.google.common.collect.ImmutableList.of(jSDocInfo11, jSDocInfo12, jSDocInfo13, jSDocInfo15, jSDocInfo17);
        boolean boolean20 = jSDocInfo11.isNoCompile();
        java.lang.String str21 = jSDocInfo11.getVersion();
        functionType8.setJSDocInfo(jSDocInfo11);
        com.google.javascript.rhino.jstype.ObjectType.Property property24 = functionType8.getSlot("Unknown class name");
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable25 = functionType8.getOwnImplementedInterfaces();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable26 = functionType8.getImplementedInterfaces();
        java.lang.String str27 = functionType8.getReferenceName();
        boolean boolean28 = functionType8.isFunctionType();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.jstype.ObjectType objectType33 = jSTypeRegistry32.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType34 = objectType33.getParentScope();
        com.google.javascript.rhino.Node node36 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType37 = jSTypeRegistry30.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType33, node36);
        java.lang.String str38 = functionType37.getDisplayName();
        com.google.javascript.rhino.jstype.FunctionType functionType39 = functionType37.getOwnerFunction();
        com.google.javascript.rhino.JSDocInfo jSDocInfo40 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo41 = new com.google.javascript.rhino.JSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo42 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean43 = jSDocInfo42.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean45 = jSDocInfo44.hasReturnType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo46 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean47 = jSDocInfo46.hasReturnType();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo> jSDocInfoList48 = com.google.common.collect.ImmutableList.of(jSDocInfo40, jSDocInfo41, jSDocInfo42, jSDocInfo44, jSDocInfo46);
        boolean boolean49 = jSDocInfo40.isNoCompile();
        java.lang.String str50 = jSDocInfo40.getVersion();
        functionType37.setJSDocInfo(jSDocInfo40);
        com.google.javascript.rhino.jstype.ObjectType objectType52 = functionType37.getParentScope();
        com.google.javascript.rhino.Node node53 = functionType37.getSource();
        boolean boolean54 = functionType37.isOrdinaryFunction();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair55 = functionType8.getTypesUnderShallowInequality((com.google.javascript.rhino.jstype.JSType) functionType37);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable56 = functionType8.getCtorImplementedInterfaces();
        boolean boolean57 = functionType8.isInterface();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(functionType8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(property24);
        org.junit.Assert.assertNotNull(objectTypeIterable25);
        org.junit.Assert.assertNotNull(objectTypeIterable26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objectType33);
        org.junit.Assert.assertNotNull(objectType34);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(functionType37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(functionType39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jSDocInfoList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(objectType52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(typePair55);
        org.junit.Assert.assertNotNull(objectTypeIterable56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test04200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test04200");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.ObjectType objectType4 = jSTypeRegistry3.createAnonymousObjectType();
        boolean boolean5 = objectType4.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType7 = objectType4.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType9 = jSTypeRegistry1.getGreatestSubtypeWithProperty(jSType7, "");
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.ObjectType objectType14 = jSTypeRegistry13.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType15 = objectType14.getParentScope();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType18 = jSTypeRegistry11.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType14, node17);
        java.lang.String str19 = functionType18.getDisplayName();
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable22 = node21.siblings();
        int int23 = node21.getSideEffectFlags();
        boolean boolean24 = node21.isLabelName();
        boolean boolean25 = node21.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType26 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType18, node21);
        java.lang.String str27 = functionType26.getReferenceName();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.ObjectType objectType30 = jSTypeRegistry29.createAnonymousObjectType();
        boolean boolean31 = objectType30.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType33 = objectType30.getRestrictedTypeGivenToBooleanOutcome(true);
        boolean boolean34 = objectType30.hasDisplayName();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair35 = functionType26.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) objectType30);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable36 = functionType26.getOwnImplementedInterfaces();
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.ObjectType objectType41 = jSTypeRegistry40.createAnonymousObjectType();
        boolean boolean42 = objectType41.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType44 = objectType41.getRestrictedTypeGivenToBooleanOutcome(true);
        com.google.javascript.rhino.jstype.JSType jSType46 = jSTypeRegistry38.getGreatestSubtypeWithProperty(jSType44, "");
        com.google.javascript.rhino.ErrorReporter errorReporter47 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry48 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter47);
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry50 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49);
        com.google.javascript.rhino.jstype.ObjectType objectType51 = jSTypeRegistry50.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType52 = objectType51.getParentScope();
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.jstype.FunctionType functionType55 = jSTypeRegistry48.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType51, node54);
        java.lang.String str56 = functionType55.getDisplayName();
        com.google.javascript.rhino.Node node58 = com.google.javascript.rhino.Node.newString("");
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable59 = node58.siblings();
        int int60 = node58.getSideEffectFlags();
        boolean boolean61 = node58.isLabelName();
        boolean boolean62 = node58.hasChildren();
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry38.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType55, node58);
        java.lang.String str64 = functionType63.getReferenceName();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.ObjectType objectType67 = jSTypeRegistry66.createAnonymousObjectType();
        boolean boolean68 = objectType67.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType70 = objectType67.getRestrictedTypeGivenToBooleanOutcome(true);
        boolean boolean71 = objectType67.hasDisplayName();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair72 = functionType63.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) objectType67);
        com.google.javascript.rhino.jstype.ObjectType objectType73 = functionType63.getTypeOfThis();
        com.google.javascript.rhino.ErrorReporter errorReporter74 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry75 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter74);
        com.google.javascript.rhino.jstype.ObjectType objectType76 = jSTypeRegistry75.createAnonymousObjectType();
        boolean boolean77 = objectType76.isUnknownType();
        com.google.javascript.rhino.jstype.JSType jSType79 = objectType76.findPropertyType("true");
        java.util.Set<java.lang.String> strSet80 = objectType76.getPropertyNames();
        com.google.javascript.rhino.jstype.JSType jSType81 = functionType63.getGreatestSubtype((com.google.javascript.rhino.jstype.JSType) objectType76);
        boolean boolean82 = functionType26.hasEqualCallType(functionType63);
        boolean boolean83 = functionType26.hasImplementedInterfaces();
        org.junit.Assert.assertNotNull(objectType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSType7);
        org.junit.Assert.assertNotNull(jSType9);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNotNull(objectType15);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(functionType18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(nodeIterable22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(functionType26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objectType30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typePair35);
        org.junit.Assert.assertNotNull(objectTypeIterable36);
        org.junit.Assert.assertNotNull(objectType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(jSType44);
        org.junit.Assert.assertNotNull(jSType46);
        org.junit.Assert.assertNotNull(objectType51);
        org.junit.Assert.assertNotNull(objectType52);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(functionType55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(nodeIterable59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(objectType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(jSType70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typePair72);
        org.junit.Assert.assertNotNull(objectType73);
        org.junit.Assert.assertNotNull(objectType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(jSType79);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNotNull(jSType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }
}
