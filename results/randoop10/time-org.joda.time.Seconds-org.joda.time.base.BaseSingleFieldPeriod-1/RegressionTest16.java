import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest16 {

    public static boolean debug = false;

    @Test
    public void test08001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08001");
        org.joda.time.Period period1 = new org.joda.time.Period(1L);
        org.joda.time.Period period3 = period1.minusMonths((-101));
        org.joda.time.Period period5 = period1.plusMillis(3);
        org.joda.time.PeriodType periodType6 = period5.getPeriodType();
        org.joda.time.Weeks weeks7 = period5.toStandardWeeks();
        org.joda.time.Period period9 = period5.withMonths(443);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test08002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08002");
        org.joda.time.Period period0 = org.joda.time.Period.ZERO;
        java.lang.String str1 = period0.toString();
        org.joda.time.Period period3 = period0.withHours((int) (short) 10);
        org.joda.time.Period period5 = period0.plusMonths((-3));
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis((long) '4');
        long long8 = duration7.getMillis();
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType11);
        mutablePeriod12.setYears(0);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology17 = null;
        mutablePeriod12.setPeriod((org.joda.time.ReadableDuration) duration16, chronology17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        org.joda.time.Interval interval28 = interval27.toInterval();
        org.joda.time.DateTime dateTime29 = interval28.getEnd();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.DateTime dateTime40 = interval39.getEnd();
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime29, (org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, (org.joda.time.ReadableInstant) dateTime29);
        java.lang.String str43 = dateTime29.toString();
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime29);
        org.joda.time.Duration duration46 = new org.joda.time.Duration((long) (byte) 1);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType49 = periodType48.withMillisRemoved();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((long) (short) 1, periodType49, chronology50);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime29, (org.joda.time.ReadableDuration) duration46, periodType49);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant56 = null;
        java.lang.Object obj57 = null;
        org.joda.time.Duration duration58 = new org.joda.time.Duration(obj57);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant56, (org.joda.time.ReadableDuration) duration58);
        boolean boolean60 = duration55.isShorterThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Interval interval62 = duration58.toIntervalTo(readableInstant61);
        long long63 = interval62.getStartMillis();
        org.joda.time.Chronology chronology64 = interval62.getChronology();
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(0L, chronology64);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period66 = new org.joda.time.Period((java.lang.Object) (-3), periodType49, chronology64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "PT0S" + "'", str1, "PT0S");
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 52L + "'", long8 == 52L);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(dateTime29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(dateTime40);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "2022-02-11T09:41:04.605Z" + "'", str43, "2022-02-11T09:41:04.605Z");
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(interval62);
// flaky:         org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1644572464605L + "'", long63 == 1644572464605L);
        org.junit.Assert.assertNotNull(chronology64);
    }

    @Test
    public void test08003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08003");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        org.joda.time.Interval interval56 = interval55.toInterval();
        org.joda.time.DateTime dateTime57 = interval56.getEnd();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant60 = null;
        java.lang.Object obj61 = null;
        org.joda.time.Duration duration62 = new org.joda.time.Duration(obj61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant60, (org.joda.time.ReadableDuration) duration62);
        boolean boolean64 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Interval interval66 = duration62.toIntervalTo(readableInstant65);
        org.joda.time.Interval interval67 = interval66.toInterval();
        org.joda.time.DateTime dateTime68 = interval67.getEnd();
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime57, (org.joda.time.ReadableInstant) dateTime68);
        long long70 = dateTime68.getMillis();
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime44, (org.joda.time.ReadableInstant) dateTime68);
        mutablePeriod71.addYears(18);
        mutablePeriod71.setYears((-369700));
        mutablePeriod71.setMillis(54);
        mutablePeriod71.addMinutes(0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(interval67);
        org.junit.Assert.assertNotNull(dateTime68);
// flaky:         org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1644572464649L + "'", long70 == 1644572464649L);
    }

    @Test
    public void test08004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08004");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        org.joda.time.Days days4 = org.joda.time.Days.ONE;
        org.joda.time.Days days5 = days4.negated();
        boolean boolean6 = days3.isGreaterThan(days5);
        org.joda.time.Days days7 = days0.plus(days5);
        org.joda.time.Days days8 = null;
        boolean boolean9 = days0.isGreaterThan(days8);
        org.joda.time.Days days11 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.PeriodType periodType12 = days11.getPeriodType();
        boolean boolean13 = days0.isGreaterThan(days11);
        org.joda.time.Days days14 = days0.negated();
        org.joda.time.Duration duration15 = days14.toStandardDuration();
        org.joda.time.Duration duration17 = duration15.withMillis((long) (short) -1);
        org.joda.time.Duration duration20 = duration15.withDurationAdded(10L, (int) (short) 0);
        org.joda.time.Period period21 = new org.joda.time.Period((java.lang.Object) duration15);
        int int22 = period21.getHours();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test08005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08005");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        org.joda.time.Seconds seconds3 = seconds0.plus((-1));
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.TWO;
        java.lang.String str5 = seconds4.toString();
        org.joda.time.Seconds seconds6 = seconds3.plus(seconds4);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds7.multipliedBy((int) (byte) 1);
        java.lang.String str10 = seconds7.toString();
        org.joda.time.PeriodType periodType11 = seconds7.getPeriodType();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType13 = seconds12.getFieldType();
        org.joda.time.Seconds seconds15 = seconds12.plus((-1));
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.TWO;
        java.lang.String str17 = seconds16.toString();
        org.joda.time.Seconds seconds18 = seconds15.plus(seconds16);
        org.joda.time.Seconds seconds19 = seconds7.minus(seconds15);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.Seconds seconds21 = seconds3.minus(seconds20);
        org.joda.time.Seconds seconds23 = seconds3.dividedBy(97);
        int int24 = seconds3.size();
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.seconds(2147483647);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        org.joda.time.Seconds seconds31 = seconds28.plus((-1));
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.TWO;
        java.lang.String str33 = seconds32.toString();
        org.joda.time.Seconds seconds34 = seconds31.plus(seconds32);
        org.joda.time.Seconds seconds35 = seconds27.minus(seconds32);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy(3);
        org.joda.time.Seconds seconds39 = seconds37.plus((-97));
        boolean boolean40 = seconds26.isLessThan(seconds39);
        org.joda.time.Seconds seconds42 = seconds39.dividedBy((-3));
        org.joda.time.Seconds seconds43 = seconds3.plus(seconds39);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT2S" + "'", str5, "PT2S");
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT3S" + "'", str10, "PT3S");
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2S" + "'", str17, "PT2S");
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT2S" + "'", str33, "PT2S");
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
    }

    @Test
    public void test08006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08006");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration3 = duration1.minus(1644572107048L);
        org.joda.time.Duration duration4 = duration1.toDuration();
        org.joda.time.Duration duration6 = duration1.withMillis(0L);
        org.joda.time.Duration duration8 = duration6.withMillis(1644572248335L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration8);
    }

    @Test
    public void test08007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08007");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(4);
        int int2 = seconds1.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
    }

    @Test
    public void test08008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08008");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("2022-02-11T09:40:47.374Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:40:47.374Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08009");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(9L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.DateTime dateTime12 = interval11.getEnd();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        boolean boolean26 = dateTime12.isEqual(readableInstant25);
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod();
        mutablePeriod28.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod28, periodType32);
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, readableDuration27, periodType32);
        org.joda.time.Interval interval35 = duration1.toIntervalFrom((org.joda.time.ReadableInstant) dateTime12);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval35);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(dateTime12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
// flaky:         org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(seconds36);
    }

    @Test
    public void test08010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08010");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds2 = seconds0.dividedBy(37);
        org.joda.time.DurationFieldType durationFieldType3 = seconds0.getFieldType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(durationFieldType3);
    }

    @Test
    public void test08011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08011");
        org.joda.time.Period period1 = new org.joda.time.Period(1L);
        org.joda.time.Period period3 = period1.minusMonths((-101));
        org.joda.time.Period period5 = period1.plusMillis(3);
        org.joda.time.Period period7 = period5.minusDays((int) ' ');
        org.joda.time.Period period9 = period5.withMonths(0);
        org.joda.time.Period period11 = period9.minusWeeks((int) '#');
        int int12 = period9.size();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8 + "'", int12 == 8);
    }

    @Test
    public void test08012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08012");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType4 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType5 = periodType4.withSecondsRemoved();
        org.joda.time.PeriodType periodType6 = periodType4.withYearsRemoved();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        boolean boolean13 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.minutesIn(readableInterval15);
        java.lang.String str17 = minutes16.toString();
        org.joda.time.PeriodType periodType18 = minutes16.getPeriodType();
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant14, periodType18);
        org.joda.time.Duration duration21 = duration11.withMillis((long) 'a');
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.DateTime dateTime39 = interval38.getEnd();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Interval interval48 = duration44.toIntervalTo(readableInstant47);
        org.joda.time.Interval interval49 = interval48.toInterval();
        org.joda.time.DateTime dateTime50 = interval49.getEnd();
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableInstant) dateTime50);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant54 = null;
        java.lang.Object obj55 = null;
        org.joda.time.Duration duration56 = new org.joda.time.Duration(obj55);
        org.joda.time.Period period57 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        boolean boolean58 = duration53.isShorterThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableInterval readableInterval60 = null;
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.minutesIn(readableInterval60);
        java.lang.String str62 = minutes61.toString();
        org.joda.time.PeriodType periodType63 = minutes61.getPeriodType();
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant59, periodType63);
        org.joda.time.PeriodType periodType65 = periodType63.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration26, (org.joda.time.ReadableInstant) dateTime50, periodType65);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant69 = null;
        java.lang.Object obj70 = null;
        org.joda.time.Duration duration71 = new org.joda.time.Duration(obj70);
        org.joda.time.Period period72 = new org.joda.time.Period(readableInstant69, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = duration68.isShorterThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((java.lang.Object) duration68, periodType74, chronology75);
        org.joda.time.Duration duration78 = org.joda.time.Duration.millis((long) '4');
        long long79 = duration78.getStandardDays();
        boolean boolean80 = duration68.isLongerThan((org.joda.time.ReadableDuration) duration78);
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime50, (org.joda.time.ReadableDuration) duration78);
        org.joda.time.Interval interval82 = duration21.toIntervalTo((org.joda.time.ReadableInstant) dateTime50);
        org.joda.time.Chronology chronology83 = dateTime50.getChronology();
        org.joda.time.Period period84 = new org.joda.time.Period(1644572121496L, periodType6, chronology83);
        org.joda.time.Period period85 = new org.joda.time.Period(1644572297050L, (long) (byte) 0, chronology83);
        java.lang.String str86 = period85.toString();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT0M" + "'", str17, "PT0M");
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(dateTime50);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT0M" + "'", str62, "PT0M");
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(interval82);
        org.junit.Assert.assertNotNull(chronology83);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "P-52Y-1M-1W-3DT-9H-38M-17.050S" + "'", str86, "P-52Y-1M-1W-3DT-9H-38M-17.050S");
    }

    @Test
    public void test08013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08013");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(1644572421226L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test08014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08014");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("2022-02-11T09:37:10.004Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:37:10.004Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08015");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        java.lang.String str6 = mutablePeriod3.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = mutablePeriod3.getValue((-48));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -48");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0.001S" + "'", str6, "PT0.001S");
    }

    @Test
    public void test08016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08016");
        org.joda.time.Period period1 = new org.joda.time.Period(1L);
        org.joda.time.Period period3 = period1.withYears((int) ' ');
        java.lang.String str4 = period1.toString();
        org.joda.time.Period period6 = period1.withMonths(97);
        org.joda.time.MutablePeriod mutablePeriod7 = period6.toMutablePeriod();
        int int8 = period6.getWeeks();
        org.joda.time.Period period10 = period6.minusHours(19034);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT0.001S" + "'", str4, "PT0.001S");
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test08017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08017");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Duration duration1 = hours0.toStandardDuration();
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = duration4.toPeriodFrom(readableInstant5);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration4.toPeriod(chronology7);
        org.joda.time.Period period10 = period8.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Hours hours12 = org.joda.time.Hours.hoursIn(readableInterval11);
        org.joda.time.Period period13 = period10.minus((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours15 = hours12.minus((int) '4');
        org.joda.time.Hours hours17 = hours15.plus((int) '#');
        boolean boolean18 = hours0.isGreaterThan(hours17);
        org.joda.time.DurationFieldType durationFieldType20 = hours0.getFieldType(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(durationFieldType20);
    }

    @Test
    public void test08018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08018");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        org.joda.time.Hours hours3 = hours1.minus((int) (byte) 100);
        org.joda.time.Duration duration6 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = duration6.toPeriodFrom(readableInstant7);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration6.toPeriod(chronology9);
        org.joda.time.Period period12 = period10.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Hours hours14 = org.joda.time.Hours.hoursIn(readableInterval13);
        org.joda.time.Period period15 = period12.minus((org.joda.time.ReadablePeriod) hours14);
        org.joda.time.Hours hours17 = hours14.minus((int) '4');
        org.joda.time.Hours hours19 = hours17.plus((int) '#');
        org.joda.time.Hours hours20 = hours3.minus(hours17);
        org.joda.time.Hours hours21 = hours17.negated();
        org.joda.time.PeriodType periodType22 = hours21.getPeriodType();
        org.joda.time.PeriodType periodType23 = hours21.getPeriodType();
        org.joda.time.Hours hours24 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours21);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(hours24);
    }

    @Test
    public void test08019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08019");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(0, 0, (int) (byte) 1, 1, 1, (int) (short) 0, 0, 2147483647);
        mutablePeriod8.addDays((int) '4');
        org.joda.time.format.PeriodFormatter periodFormatter11 = null;
        java.lang.String str12 = mutablePeriod8.toString(periodFormatter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P1W53DT1H2147483.647S" + "'", str12, "P1W53DT1H2147483.647S");
    }

    @Test
    public void test08020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08020");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis((long) '4');
        long long8 = duration7.getStandardDays();
        boolean boolean9 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.DateTime dateTime27 = interval26.getEnd();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.DateTime dateTime38 = interval37.getEnd();
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.minutesIn(readableInterval48);
        java.lang.String str50 = minutes49.toString();
        org.joda.time.PeriodType periodType51 = minutes49.getPeriodType();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant47, periodType51);
        org.joda.time.PeriodType periodType53 = periodType51.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, (org.joda.time.ReadableInstant) dateTime38, periodType53);
        org.joda.time.Interval interval55 = duration2.toIntervalFrom((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration60 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration63 = duration60.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration65 = duration57.withDurationAdded((org.joda.time.ReadableDuration) duration60, (int) (short) 1);
        org.joda.time.Duration duration68 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration71 = duration68.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration73 = duration57.withDurationAdded((org.joda.time.ReadableDuration) duration71, (int) (short) 100);
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime38, (org.joda.time.ReadableDuration) duration73);
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod((java.lang.Object) period74);
        org.joda.time.Period period77 = period74.withHours(8);
        org.joda.time.MutablePeriod mutablePeriod78 = period77.toMutablePeriod();
        int int79 = mutablePeriod78.getWeeks();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT0M" + "'", str50, "PT0M");
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }

    @Test
    public void test08021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08021");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) -1);
        java.lang.String str2 = seconds1.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT-1S" + "'", str2, "PT-1S");
    }

    @Test
    public void test08022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08022");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572081298L, (long) (byte) 1);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        boolean boolean9 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Interval interval11 = duration7.toIntervalTo(readableInstant10);
        org.joda.time.Interval interval12 = interval11.toInterval();
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.millis((long) '4');
        long long21 = duration20.getStandardDays();
        boolean boolean22 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.DateTime dateTime40 = interval39.getEnd();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant43 = null;
        java.lang.Object obj44 = null;
        org.joda.time.Duration duration45 = new org.joda.time.Duration(obj44);
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration45);
        boolean boolean47 = duration42.isShorterThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Interval interval49 = duration45.toIntervalTo(readableInstant48);
        org.joda.time.Interval interval50 = interval49.toInterval();
        org.joda.time.DateTime dateTime51 = interval50.getEnd();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableInterval readableInterval61 = null;
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.minutesIn(readableInterval61);
        java.lang.String str63 = minutes62.toString();
        org.joda.time.PeriodType periodType64 = minutes62.getPeriodType();
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant60, periodType64);
        org.joda.time.PeriodType periodType66 = periodType64.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration27, (org.joda.time.ReadableInstant) dateTime51, periodType66);
        org.joda.time.Interval interval68 = duration15.toIntervalFrom((org.joda.time.ReadableInstant) dateTime51);
        boolean boolean69 = interval12.isBefore((org.joda.time.ReadableInterval) interval68);
        mutablePeriod2.setPeriod((org.joda.time.ReadableInterval) interval68);
        org.joda.time.DateTime dateTime71 = interval68.getEnd();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(dateTime51);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "PT0M" + "'", str63, "PT0M");
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(dateTime71);
    }

    @Test
    public void test08023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08023");
        org.joda.time.Period period4 = new org.joda.time.Period(0, 10, (int) (short) -1, (int) (byte) 1);
        int int5 = period4.getYears();
        org.joda.time.Period period6 = period4.negated();
        org.joda.time.Period period8 = period4.plusHours(601);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean21 = duration13.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes22 = duration13.toStandardMinutes();
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Duration duration26 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = duration26.toPeriodFrom(readableInstant27);
        org.joda.time.Period period30 = period28.minusSeconds((int) '4');
        org.joda.time.Minutes minutes31 = period28.toStandardMinutes();
        boolean boolean32 = minutes22.isLessThan(minutes31);
        org.joda.time.Minutes minutes34 = minutes22.minus((int) (short) 0);
        org.joda.time.Minutes minutes36 = minutes22.plus(100);
        org.joda.time.Duration duration39 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = duration39.toPeriodFrom(readableInstant40);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration39.toPeriod(chronology42);
        org.joda.time.Period period45 = period43.minusYears((int) (byte) -1);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType48 = minutes47.getFieldType();
        org.joda.time.Period period49 = period43.minus((org.joda.time.ReadablePeriod) minutes47);
        org.joda.time.Minutes minutes50 = minutes36.plus(minutes47);
        org.joda.time.Minutes minutes52 = minutes36.dividedBy(8);
        org.joda.time.Period period53 = period8.withFields((org.joda.time.ReadablePeriod) minutes52);
        org.joda.time.MutablePeriod mutablePeriod54 = period8.toMutablePeriod();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
    }

    @Test
    public void test08024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08024");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        mutablePeriod9.setWeeks((int) (short) 100);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        boolean boolean22 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration24 = duration17.plus(1644572076884L);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        org.joda.time.Interval interval34 = interval33.toInterval();
        org.joda.time.DateTime dateTime35 = interval34.getEnd();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration40.toIntervalTo(readableInstant43);
        org.joda.time.Interval interval45 = interval44.toInterval();
        org.joda.time.DateTime dateTime46 = interval45.getEnd();
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime35, (org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.Instant instant48 = dateTime46.toInstant();
        org.joda.time.Chronology chronology49 = instant48.getChronology();
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration17, (org.joda.time.ReadableInstant) instant48);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardSeconds((long) '#');
        org.joda.time.Duration duration55 = new org.joda.time.Duration(0L, (long) 100);
        org.joda.time.Period period56 = duration55.toPeriod();
        org.joda.time.Duration duration57 = duration52.plus((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration60 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = duration60.toPeriodFrom(readableInstant61);
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = duration60.toPeriod(chronology63);
        java.lang.String str65 = period64.toString();
        org.joda.time.MutablePeriod mutablePeriod66 = period64.toMutablePeriod();
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant69 = null;
        java.lang.Object obj70 = null;
        org.joda.time.Duration duration71 = new org.joda.time.Duration(obj70);
        org.joda.time.Period period72 = new org.joda.time.Period(readableInstant69, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = duration68.isShorterThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Interval interval75 = duration71.toIntervalTo(readableInstant74);
        long long76 = interval75.getStartMillis();
        mutablePeriod66.setPeriod((org.joda.time.ReadableInterval) interval75);
        org.joda.time.Minutes minutes78 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval75);
        org.joda.time.DateTime dateTime79 = interval75.getStart();
        org.joda.time.Period period80 = duration52.toPeriodTo((org.joda.time.ReadableInstant) dateTime79);
        mutablePeriod9.setPeriod((org.joda.time.ReadableInstant) instant48, (org.joda.time.ReadableInstant) dateTime79);
        java.lang.String str82 = instant48.toString();
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertNotNull(instant48);
        org.junit.Assert.assertNotNull(chronology49);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "PT0.097S" + "'", str65, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(interval75);
// flaky:         org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1644572465303L + "'", long76 == 1644572465303L);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(dateTime79);
        org.junit.Assert.assertNotNull(period80);
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "2022-02-11T09:41:05.303Z" + "'", str82, "2022-02-11T09:41:05.303Z");
    }

    @Test
    public void test08025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08025");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.PeriodType periodType1 = hours0.getPeriodType();
        org.joda.time.Hours hours2 = hours0.negated();
        org.joda.time.Hours hours3 = hours2.negated();
        org.joda.time.Hours hours5 = hours2.minus(0);
        int int7 = hours2.getValue((int) (byte) 0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-6) + "'", int7 == (-6));
    }

    @Test
    public void test08026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08026");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        boolean boolean13 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Interval interval15 = duration11.toIntervalTo(readableInstant14);
        org.joda.time.Interval interval16 = interval15.toInterval();
        org.joda.time.DateTime dateTime17 = interval16.getEnd();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        org.joda.time.Interval interval27 = interval26.toInterval();
        org.joda.time.DateTime dateTime28 = interval27.getEnd();
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime17, (org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.minutesIn(readableInterval38);
        java.lang.String str40 = minutes39.toString();
        org.joda.time.PeriodType periodType41 = minutes39.getPeriodType();
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant37, periodType41);
        org.joda.time.PeriodType periodType43 = periodType41.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, (org.joda.time.ReadableInstant) dateTime28, periodType43);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType48 = periodType47.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(periodType48);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(10L, periodType48);
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(10L, periodType48);
        int int52 = mutablePeriod51.getMonths();
        int int53 = mutablePeriod51.getHours();
        org.joda.time.Duration duration55 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration57 = duration55.plus(1644572076849L);
        long long58 = duration55.getMillis();
        mutablePeriod51.add((org.joda.time.ReadableDuration) duration55);
        long long60 = duration55.getMillis();
        boolean boolean61 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration63 = duration4.withMillis(1644572116854L);
        java.lang.Object obj64 = null;
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod();
        mutablePeriod66.setPeriod(100L, (long) (-1));
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant76 = null;
        java.lang.Object obj77 = null;
        org.joda.time.Duration duration78 = new org.joda.time.Duration(obj77);
        org.joda.time.Period period79 = new org.joda.time.Period(readableInstant76, (org.joda.time.ReadableDuration) duration78);
        boolean boolean80 = duration75.isShorterThan((org.joda.time.ReadableDuration) duration78);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Interval interval82 = duration78.toIntervalTo(readableInstant81);
        org.joda.time.Interval interval83 = interval82.toInterval();
        org.joda.time.Chronology chronology84 = interval83.getChronology();
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod((-1L), chronology84);
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology84);
        mutablePeriod66.setPeriod((long) 100, chronology84);
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod(obj64, periodType65, chronology84);
        org.joda.time.Period period89 = duration4.toPeriod(chronology84);
        int int90 = period89.size();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(dateTime28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT0M" + "'", str40, "PT0M");
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 52L + "'", long58 == 52L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 52L + "'", long60 == 52L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(interval82);
        org.junit.Assert.assertNotNull(interval83);
        org.junit.Assert.assertNotNull(chronology84);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 8 + "'", int90 == 8);
    }

    @Test
    public void test08027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08027");
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.dayTime();
        org.joda.time.PeriodType periodType9 = periodType8.withSecondsRemoved();
        org.joda.time.PeriodType periodType10 = periodType9.withDaysRemoved();
        org.joda.time.PeriodType periodType11 = periodType10.withMillisRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period12 = new org.joda.time.Period((-9551), 2719, (-963), 727, 97, (-53), (-68), (-3), periodType11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
    }

    @Test
    public void test08028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08028");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(1);
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period1.plusWeeks(0);
        org.joda.time.Period period6 = period1.minusHours((-68));
        org.joda.time.Period period8 = period1.withMinutes(52114);
        org.joda.time.Duration duration11 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = duration11.toPeriodFrom(readableInstant12);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration11.toPeriod(chronology14);
        java.lang.String str16 = period15.toString();
        org.joda.time.MutablePeriod mutablePeriod17 = period15.toMutablePeriod();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        long long27 = interval26.getStartMillis();
        mutablePeriod17.setPeriod((org.joda.time.ReadableInterval) interval26);
        mutablePeriod17.setDays((int) (short) 10);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Hours hours32 = org.joda.time.Hours.hoursIn(readableInterval31);
        org.joda.time.Hours hours34 = hours32.minus((int) (byte) 100);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.Hours hours45 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval44);
        org.joda.time.Hours hours47 = hours45.dividedBy(1);
        org.joda.time.Hours hours49 = hours45.minus((int) (short) 1);
        boolean boolean50 = hours32.isGreaterThan(hours49);
        org.joda.time.Hours hours51 = hours32.negated();
        mutablePeriod17.mergePeriod((org.joda.time.ReadablePeriod) hours51);
        org.joda.time.DurationFieldType durationFieldType53 = hours51.getFieldType();
        boolean boolean54 = period1.isSupported(durationFieldType53);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT0.097S" + "'", str16, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
// flaky:         org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1644572465406L + "'", long27 == 1644572465406L);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test08029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08029");
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.Duration duration17 = org.joda.time.Duration.millis((long) '4');
        long long18 = duration17.getStandardDays();
        boolean boolean19 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType21 = periodType20.withHoursRemoved();
        org.joda.time.Period period22 = duration17.toPeriod(periodType20);
        org.joda.time.PeriodType periodType23 = periodType20.withMinutesRemoved();
        org.joda.time.Period period24 = new org.joda.time.Period(1644572091852L, (long) 10, periodType20);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period25 = new org.joda.time.Period((-101), 456368756, 52, 19034, 0, 27409537, 284, (-11), periodType20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(periodType23);
    }

    @Test
    public void test08030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08030");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(36);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType5 = seconds4.getFieldType();
        org.joda.time.Seconds seconds7 = seconds4.plus((-1));
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.TWO;
        java.lang.String str9 = seconds8.toString();
        org.joda.time.Seconds seconds10 = seconds7.plus(seconds8);
        org.joda.time.Seconds seconds11 = seconds3.minus(seconds8);
        org.joda.time.Duration duration12 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType15 = seconds14.getFieldType();
        org.joda.time.Seconds seconds17 = seconds14.plus((-1));
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.TWO;
        java.lang.String str19 = seconds18.toString();
        org.joda.time.Seconds seconds20 = seconds17.plus(seconds18);
        org.joda.time.Seconds seconds21 = seconds13.minus(seconds18);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.secondsIn(readableInterval22);
        org.joda.time.Seconds seconds24 = seconds18.plus(seconds23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds23);
        org.joda.time.PeriodType periodType26 = seconds23.getPeriodType();
        org.joda.time.Duration duration29 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration32 = duration29.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration34 = org.joda.time.Duration.millis((long) '4');
        long long35 = duration34.getMillis();
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType38);
        mutablePeriod39.setYears(0);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology44 = null;
        mutablePeriod39.setPeriod((org.joda.time.ReadableDuration) duration43, chronology44);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        org.joda.time.Interval interval55 = interval54.toInterval();
        org.joda.time.DateTime dateTime56 = interval55.getEnd();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant59 = null;
        java.lang.Object obj60 = null;
        org.joda.time.Duration duration61 = new org.joda.time.Duration(obj60);
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant59, (org.joda.time.ReadableDuration) duration61);
        boolean boolean63 = duration58.isShorterThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration61.toIntervalTo(readableInstant64);
        org.joda.time.Interval interval66 = interval65.toInterval();
        org.joda.time.DateTime dateTime67 = interval66.getEnd();
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime56, (org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, (org.joda.time.ReadableInstant) dateTime56);
        java.lang.String str70 = dateTime56.toString();
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, (org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.Period period72 = duration32.toPeriodTo((org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType74 = seconds73.getFieldType();
        org.joda.time.Seconds seconds76 = seconds73.plus((-1));
        boolean boolean77 = duration32.equals((java.lang.Object) seconds73);
        org.joda.time.Seconds seconds78 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.PeriodType periodType79 = seconds78.getPeriodType();
        org.joda.time.Seconds seconds80 = seconds73.minus(seconds78);
        org.joda.time.Seconds seconds82 = seconds73.multipliedBy(35);
        org.joda.time.Seconds seconds83 = seconds23.minus(seconds73);
        boolean boolean84 = seconds8.isGreaterThan(seconds83);
        org.joda.time.Duration duration85 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds86 = seconds1.plus(seconds8);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT2S" + "'", str9, "PT2S");
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT2S" + "'", str19, "PT2S");
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 52L + "'", long35 == 52L);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(dateTime56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(dateTime67);
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "2022-02-11T09:41:05.436Z" + "'", str70, "2022-02-11T09:41:05.436Z");
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(seconds86);
    }

    @Test
    public void test08031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08031");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Period period5 = period3.withSeconds((int) '4');
        org.joda.time.Period period7 = period3.plusMonths(36);
        org.joda.time.Period period9 = period3.withMillis((-2147483648));
        org.joda.time.Period period11 = period3.multipliedBy(16);
        int int12 = period3.getMonths();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test08032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08032");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 1, (int) (byte) 0, (int) (short) 10, 36);
        mutablePeriod4.setWeeks((int) 'a');
        mutablePeriod4.add(601, 32, 456368756, 0, (-869), 218, 906, 3);
    }

    @Test
    public void test08033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08033");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572199717L);
    }

    @Test
    public void test08034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08034");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        mutablePeriod9.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod13);
        mutablePeriod9.addHours((int) (byte) 1);
        mutablePeriod9.addSeconds((-101));
        mutablePeriod9.addMillis((int) '#');
        org.joda.time.Period period24 = new org.joda.time.Period(1L);
        int int25 = period24.getWeeks();
        org.joda.time.Period period27 = period24.plusMonths((int) '#');
        org.joda.time.Period period29 = period27.minusDays(100);
        org.joda.time.Period period31 = period29.minusMinutes((int) '#');
        mutablePeriod9.add((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.Hours hours43 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval42);
        org.joda.time.Hours hours44 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval42);
        org.joda.time.DurationFieldType durationFieldType45 = hours44.getFieldType();
        org.joda.time.Hours hours47 = hours44.minus(1);
        org.joda.time.Duration duration50 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = duration50.toPeriodFrom(readableInstant51);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration50.toPeriod(chronology53);
        org.joda.time.Period period56 = period54.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval57 = null;
        org.joda.time.Hours hours58 = org.joda.time.Hours.hoursIn(readableInterval57);
        org.joda.time.Period period59 = period56.minus((org.joda.time.ReadablePeriod) hours58);
        org.joda.time.Hours hours60 = hours58.negated();
        org.joda.time.Hours hours61 = hours47.plus(hours60);
        org.joda.time.DurationFieldType durationFieldType62 = hours60.getFieldType();
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) hours60);
        org.joda.time.Hours hours64 = hours60.negated();
        org.joda.time.MutablePeriod mutablePeriod65 = hours60.toMutablePeriod();
        org.joda.time.Hours hours67 = org.joda.time.Hours.parseHours("PT0M");
        boolean boolean68 = hours60.isLessThan(hours67);
        org.joda.time.Hours hours70 = org.joda.time.Hours.hours((int) (byte) 0);
        org.joda.time.Duration duration71 = hours70.toStandardDuration();
        org.joda.time.Hours hours73 = hours70.multipliedBy((int) ' ');
        java.lang.String str74 = hours73.toString();
        org.joda.time.Hours hours76 = hours73.minus((-963));
        org.joda.time.Hours hours77 = hours67.minus(hours76);
        org.joda.time.Hours hours79 = hours67.dividedBy((int) '#');
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "PT0H" + "'", str74, "PT0H");
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours79);
    }

    @Test
    public void test08035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08035");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572375497L, 1644572094067L);
    }

    @Test
    public void test08036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08036");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Duration duration11 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean12 = duration4.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes13 = duration4.toStandardMinutes();
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = duration17.toPeriodFrom(readableInstant18);
        org.joda.time.Period period21 = period19.minusSeconds((int) '4');
        org.joda.time.Minutes minutes22 = period19.toStandardMinutes();
        boolean boolean23 = minutes13.isLessThan(minutes22);
        org.joda.time.Minutes minutes25 = minutes13.minus((int) (short) 0);
        org.joda.time.Minutes minutes27 = minutes13.plus(100);
        org.joda.time.Minutes minutes29 = minutes27.minus((int) (short) 0);
        org.joda.time.Minutes minutes31 = minutes27.dividedBy(727);
        org.joda.time.Minutes minutes33 = minutes27.plus((-617));
        org.joda.time.Minutes minutes34 = minutes33.negated();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
    }

    @Test
    public void test08037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08037");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours2 = hours0.minus(hours1);
        org.joda.time.DurationFieldType durationFieldType3 = hours1.getFieldType();
        int int4 = hours1.getHours();
        org.joda.time.Hours hours6 = hours1.minus((-369700));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(hours6);
    }

    @Test
    public void test08038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08038");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours(1644572078660L);
        long long2 = duration1.getStandardDays();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds3 = duration1.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Value cannot fit in an int: 5920459483176000");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 68523836610L + "'", long2 == 68523836610L);
    }

    @Test
    public void test08039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08039");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        int int3 = weeks1.getWeeks();
        org.joda.time.Weeks weeks5 = weeks1.minus(3);
        org.joda.time.Weeks weeks6 = null;
        boolean boolean7 = weeks1.isLessThan(weeks6);
        java.lang.String str8 = weeks1.toString();
        org.joda.time.Weeks weeks10 = weeks1.plus(107);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-1W" + "'", str8, "P-1W");
        org.junit.Assert.assertNotNull(weeks10);
    }

    @Test
    public void test08040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08040");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (byte) 0, (-101), 8, (int) (short) 10);
        java.lang.String str5 = mutablePeriod4.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT-101M8.010S" + "'", str5, "PT-101M8.010S");
    }

    @Test
    public void test08041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08041");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.minusYears((int) (byte) -1);
        org.joda.time.Period period10 = period6.plusMinutes((-1));
        org.joda.time.Duration duration13 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = duration13.toPeriodFrom(readableInstant14);
        org.joda.time.Period period17 = period15.withMinutes(0);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.minutesIn(readableInterval20);
        java.lang.String str22 = minutes21.toString();
        org.joda.time.PeriodType periodType23 = minutes21.getPeriodType();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) (short) 10, (long) (byte) -1, periodType23, chronology24);
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.eras();
        int int27 = period25.indexOf(durationFieldType26);
        int int28 = period17.get(durationFieldType26);
        java.lang.String str29 = durationFieldType26.toString();
        org.joda.time.Period period31 = period10.withFieldAdded(durationFieldType26, (int) (byte) 0);
        org.joda.time.Period period33 = period31.minusMinutes((int) '4');
        org.joda.time.Period period35 = period33.minusMonths((int) (short) 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT0M" + "'", str22, "PT0M");
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "eras" + "'", str29, "eras");
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
    }

    @Test
    public void test08042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08042");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.minutesIn(readableInterval8);
        java.lang.String str10 = minutes9.toString();
        org.joda.time.PeriodType periodType11 = minutes9.getPeriodType();
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant7, periodType11);
        org.joda.time.Duration duration14 = duration4.withMillis((long) 'a');
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.DateTime dateTime32 = interval31.getEnd();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.DateTime dateTime43 = interval42.getEnd();
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.minutesIn(readableInterval53);
        java.lang.String str55 = minutes54.toString();
        org.joda.time.PeriodType periodType56 = minutes54.getPeriodType();
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant52, periodType56);
        org.joda.time.PeriodType periodType58 = periodType56.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, (org.joda.time.ReadableInstant) dateTime43, periodType58);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((java.lang.Object) duration61, periodType67, chronology68);
        org.joda.time.Duration duration71 = org.joda.time.Duration.millis((long) '4');
        long long72 = duration71.getStandardDays();
        boolean boolean73 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime43, (org.joda.time.ReadableDuration) duration71);
        org.joda.time.Interval interval75 = duration14.toIntervalTo((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.seconds();
        boolean boolean77 = dateTime43.equals((java.lang.Object) periodType76);
        java.lang.String str78 = periodType76.getName();
        org.joda.time.PeriodType periodType79 = periodType76.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod(periodType76);
        java.lang.String str81 = periodType76.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0M" + "'", str10, "PT0M");
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT0M" + "'", str55, "PT0M");
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Seconds" + "'", str78, "Seconds");
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "PeriodType[Seconds]" + "'", str81, "PeriodType[Seconds]");
    }

    @Test
    public void test08043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08043");
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks2.plus((int) '4');
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean8 = weeks5.isGreaterThan(weeks7);
        org.joda.time.DurationFieldType durationFieldType9 = weeks7.getFieldType();
        boolean boolean10 = weeks2.isGreaterThan(weeks7);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean14 = weeks11.isGreaterThan(weeks13);
        java.lang.String str15 = weeks11.toString();
        org.joda.time.Weeks weeks16 = weeks2.plus(weeks11);
        org.joda.time.PeriodType periodType17 = weeks16.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1644572131521L, 1644572184071L, periodType17);
        int int19 = mutablePeriod18.size();
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1644572111064L);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod18.add((org.joda.time.ReadablePeriod) mutablePeriod21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-2147483648W" + "'", str15, "P-2147483648W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test08044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08044");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.Days days3 = days1.plus(36);
        org.joda.time.Days days5 = days3.dividedBy(35);
        org.joda.time.PeriodType periodType6 = days3.getPeriodType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test08045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08045");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 0);
        org.joda.time.Duration duration3 = org.joda.time.Duration.millis((long) '4');
        long long4 = duration3.getMillis();
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType7);
        mutablePeriod8.setYears(0);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology13 = null;
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration12, chronology13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.DateTime dateTime25 = interval24.getEnd();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime25);
        java.lang.String str39 = dateTime25.toString();
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, (org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType43 = periodType42.withMillisRemoved();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((long) (short) 1, periodType43, chronology44);
        org.joda.time.PeriodType periodType46 = periodType43.withYearsRemoved();
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.standard();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant52 = null;
        java.lang.Object obj53 = null;
        org.joda.time.Duration duration54 = new org.joda.time.Duration(obj53);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant52, (org.joda.time.ReadableDuration) duration54);
        boolean boolean56 = duration51.isShorterThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Interval interval58 = duration54.toIntervalTo(readableInstant57);
        org.joda.time.Interval interval59 = interval58.toInterval();
        org.joda.time.Chronology chronology60 = interval59.getChronology();
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((long) (byte) -1, 52L, periodType49, chronology60);
        org.joda.time.Period period62 = duration3.toPeriod(periodType46, chronology60);
        org.joda.time.Period period63 = period1.normalizedStandard(periodType46);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks66 = weeks65.negated();
        int int67 = weeks65.getWeeks();
        org.joda.time.Weeks weeks69 = weeks65.minus(3);
        org.joda.time.Weeks weeks71 = weeks69.minus(0);
        org.joda.time.DurationFieldType durationFieldType72 = weeks69.getFieldType();
        boolean boolean73 = period1.isSupported(durationFieldType72);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 52L + "'", long4 == 52L);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "2022-02-11T09:41:05.951Z" + "'", str39, "2022-02-11T09:41:05.951Z");
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(chronology60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test08046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08046");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) '4');
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (byte) 0);
        org.joda.time.Minutes minutes5 = minutes1.minus((-35));
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
    }

    @Test
    public void test08047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08047");
        org.joda.time.Period period8 = new org.joda.time.Period((-59), (-963), 37, 19034, 284, 2719, 0, (-3));
    }

    @Test
    public void test08048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08048");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration7, chronology8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.DateTime dateTime20 = interval19.getEnd();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.DateTime dateTime31 = interval30.getEnd();
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime20);
        int int34 = period33.getHours();
        org.joda.time.Period period36 = period33.minusMillis(32);
        org.joda.time.Period period38 = period36.withDays(456368756);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = period38.getValue((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period38);
    }

    @Test
    public void test08049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08049");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType4 = seconds3.getFieldType();
        org.joda.time.Seconds seconds6 = seconds3.plus((-1));
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.TWO;
        java.lang.String str8 = seconds7.toString();
        org.joda.time.Seconds seconds9 = seconds6.plus(seconds7);
        org.joda.time.Seconds seconds10 = seconds2.minus(seconds7);
        org.joda.time.PeriodType periodType11 = seconds2.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((-2L), 1644572187226L, periodType11);
        org.joda.time.DurationFieldType durationFieldType14 = periodType11.getFieldType((int) (short) 0);
        org.joda.time.PeriodType periodType15 = periodType11.withMonthsRemoved();
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT2S" + "'", str8, "PT2S");
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(periodType15);
    }

    @Test
    public void test08050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08050");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.minutesIn(readableInterval8);
        java.lang.String str10 = minutes9.toString();
        org.joda.time.PeriodType periodType11 = minutes9.getPeriodType();
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant7, periodType11);
        org.joda.time.Duration duration14 = duration4.withMillis((long) 'a');
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.DateTime dateTime32 = interval31.getEnd();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.DateTime dateTime43 = interval42.getEnd();
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.minutesIn(readableInterval53);
        java.lang.String str55 = minutes54.toString();
        org.joda.time.PeriodType periodType56 = minutes54.getPeriodType();
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant52, periodType56);
        org.joda.time.PeriodType periodType58 = periodType56.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, (org.joda.time.ReadableInstant) dateTime43, periodType58);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((java.lang.Object) duration61, periodType67, chronology68);
        org.joda.time.Duration duration71 = org.joda.time.Duration.millis((long) '4');
        long long72 = duration71.getStandardDays();
        boolean boolean73 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime43, (org.joda.time.ReadableDuration) duration71);
        org.joda.time.Interval interval75 = duration14.toIntervalTo((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Period period77 = new org.joda.time.Period(1L);
        org.joda.time.Period period79 = period77.withYears((int) ' ');
        org.joda.time.Period period81 = period79.plusDays(3);
        boolean boolean82 = dateTime43.equals((java.lang.Object) period79);
        org.joda.time.DateTimeFieldType dateTimeFieldType83 = null;
        boolean boolean84 = dateTime43.isSupported(dateTimeFieldType83);
        long long85 = dateTime43.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0M" + "'", str10, "PT0M");
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT0M" + "'", str55, "PT0M");
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long85 + "' != '" + 1644572466026L + "'", long85 == 1644572466026L);
    }

    @Test
    public void test08051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08051");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (short) 10, 1644572077926L, chronology2);
        org.joda.time.Period period5 = period3.withDays((int) (byte) 10);
        int int6 = period3.size();
        int[] intArray7 = period3.getValues();
        org.joda.time.Period period9 = period3.minusMillis((int) (short) 10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology18 = null;
        mutablePeriod13.setPeriod((org.joda.time.ReadableDuration) duration17, chronology18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        org.joda.time.Interval interval29 = interval28.toInterval();
        org.joda.time.DateTime dateTime30 = interval29.getEnd();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        boolean boolean37 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration35.toIntervalTo(readableInstant38);
        org.joda.time.Interval interval40 = interval39.toInterval();
        org.joda.time.DateTime dateTime41 = interval40.getEnd();
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime30, (org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, (org.joda.time.ReadableInstant) dateTime30);
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1644572081298L, (long) (byte) 1);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration51 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration54 = duration51.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration56 = duration48.withDurationAdded((org.joda.time.ReadableDuration) duration51, (int) (short) 1);
        org.joda.time.Days days57 = duration56.toStandardDays();
        mutablePeriod46.add((org.joda.time.ReadableDuration) duration56);
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime30, (org.joda.time.ReadableDuration) duration56);
        mutablePeriod59.setMillis((int) (byte) -1);
        mutablePeriod59.setWeeks(97);
        org.joda.time.Period period64 = period9.plus((org.joda.time.ReadablePeriod) mutablePeriod59);
        org.joda.time.Period period65 = period64.negated();
        org.joda.time.Period period67 = period65.withYears(0);
        org.joda.time.Period period69 = period65.plusYears((-2));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[52, 1, 1, 3, 9, 34, 37, 916]");
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(dateTime30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period69);
    }

    @Test
    public void test08052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08052");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        java.lang.String str7 = period6.toString();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        long long18 = interval17.getStartMillis();
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval17);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks24 = weeks22.dividedBy((-101));
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant40 = null;
        java.lang.Object obj41 = null;
        org.joda.time.Duration duration42 = new org.joda.time.Duration(obj41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean44 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Interval interval46 = duration42.toIntervalTo(readableInstant45);
        boolean boolean47 = interval37.isAfter((org.joda.time.ReadableInterval) interval46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval46);
        org.joda.time.Weeks weeks49 = weeks26.plus(weeks48);
        int int50 = weeks26.getWeeks();
        boolean boolean51 = weeks24.isLessThan(weeks26);
        org.joda.time.PeriodType periodType52 = weeks26.getPeriodType();
        int int53 = weeks26.getWeeks();
        org.joda.time.Weeks weeks54 = weeks20.minus(weeks26);
        org.joda.time.Weeks weeks56 = weeks54.minus(10);
        org.joda.time.Duration duration57 = weeks56.toStandardDuration();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0.097S" + "'", str7, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572466144L + "'", long18 == 1644572466144L);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(duration57);
    }

    @Test
    public void test08053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08053");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period1 = org.joda.time.Period.parse("2022-02-11T09:39:35.517Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:39:35.517Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08054");
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.hours();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Chronology chronology20 = interval19.getChronology();
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((long) 9, chronology20);
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(10L, 1644572107117L, periodType8, chronology20);
        org.joda.time.Period period23 = new org.joda.time.Period(36000L, chronology20);
        org.joda.time.Period period24 = new org.joda.time.Period(1644572213488L, 1644572225773L, chronology20);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1644572228298L, 1644572259065L, chronology20);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period26 = new org.joda.time.Period((java.lang.Object) 1644572456214L, chronology20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(chronology20);
    }

    @Test
    public void test08055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08055");
        org.joda.time.Period period1 = org.joda.time.Period.days((-34));
        org.joda.time.DurationFieldType[] durationFieldTypeArray2 = period1.getFieldTypes();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(durationFieldTypeArray2);
    }

    @Test
    public void test08056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08056");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.plusDays(1);
        org.joda.time.ReadableInstant readableInstant7 = null;
        java.lang.Object obj8 = null;
        org.joda.time.Duration duration9 = new org.joda.time.Duration(obj8);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.Days days11 = duration9.toStandardDays();
        org.joda.time.Days days12 = days11.negated();
        org.joda.time.Period period13 = period6.plus((org.joda.time.ReadablePeriod) days11);
        org.joda.time.Period period15 = period13.plusDays((-1));
        org.joda.time.Period period17 = period15.minusHours((int) '#');
        org.joda.time.Period period19 = period17.plusYears((int) 'a');
        org.joda.time.Period period21 = period17.plusMonths((int) (byte) 1);
        int[] intArray22 = period21.getValues();
        org.joda.time.Period period24 = period21.plusYears(0);
        org.joda.time.Period period26 = org.joda.time.Period.days(100);
        org.joda.time.Period period27 = period24.minus((org.joda.time.ReadablePeriod) period26);
        org.joda.time.Period period29 = org.joda.time.Period.hours((int) (short) 100);
        org.joda.time.Period period31 = period29.withMonths(0);
        org.joda.time.MutablePeriod mutablePeriod32 = period31.toMutablePeriod();
        org.joda.time.Period period33 = period24.minus((org.joda.time.ReadablePeriod) mutablePeriod32);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 1, 0, 0, -35, 10, 100, 100]");
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(period33);
    }

    @Test
    public void test08057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08057");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        org.joda.time.Duration duration14 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Period period15 = duration14.toPeriod();
        org.joda.time.Duration duration18 = duration14.withDurationAdded(100L, 10);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeks(13);
        org.joda.time.PeriodType periodType21 = weeks20.getPeriodType();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.Chronology chronology33 = interval32.getChronology();
        org.joda.time.Period period34 = new org.joda.time.Period(1644572086619L, chronology33);
        org.joda.time.Period period35 = duration18.toPeriod(periodType21, chronology33);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period36 = new org.joda.time.Period((java.lang.Object) durationFieldType12, chronology33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.DurationFieldType$StandardDurationFieldType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(chronology33);
        org.junit.Assert.assertNotNull(period35);
    }

    @Test
    public void test08058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08058");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.years();
        org.joda.time.PeriodType periodType2 = periodType1.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(periodType1);
        org.joda.time.PeriodType periodType4 = periodType1.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((int) (byte) -1, (int) (byte) -1, 10, 10, (int) ' ', (int) (byte) 1, 0, (int) 'a');
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        boolean boolean22 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.minutesIn(readableInterval54);
        java.lang.String str56 = minutes55.toString();
        org.joda.time.PeriodType periodType57 = minutes55.getPeriodType();
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant53, periodType57);
        org.joda.time.PeriodType periodType59 = periodType57.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration20, (org.joda.time.ReadableInstant) dateTime44, periodType59);
        org.joda.time.PeriodType periodType61 = periodType59.withSecondsRemoved();
        boolean boolean62 = mutablePeriod15.equals((java.lang.Object) periodType61);
        org.joda.time.PeriodType periodType63 = periodType61.withMonthsRemoved();
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.hours();
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant73 = null;
        java.lang.Object obj74 = null;
        org.joda.time.Duration duration75 = new org.joda.time.Duration(obj74);
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant73, (org.joda.time.ReadableDuration) duration75);
        boolean boolean77 = duration72.isShorterThan((org.joda.time.ReadableDuration) duration75);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Interval interval79 = duration75.toIntervalTo(readableInstant78);
        org.joda.time.Interval interval80 = interval79.toInterval();
        org.joda.time.Chronology chronology81 = interval80.getChronology();
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((long) 9, chronology81);
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(10L, 1644572107117L, periodType69, chronology81);
        org.joda.time.Period period84 = new org.joda.time.Period(36000L, chronology81);
        org.joda.time.Period period85 = new org.joda.time.Period(1644572213488L, 1644572225773L, chronology81);
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod(1644572206510L, periodType63, chronology81);
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod(1644572088216L, chronology81);
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod(1644572108933L, periodType1, chronology81);
        java.lang.String str89 = periodType1.toString();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PT0M" + "'", str56, "PT0M");
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(interval79);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(chronology81);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "PeriodType[Years]" + "'", str89, "PeriodType[Years]");
    }

    @Test
    public void test08059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08059");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572088907L, (long) 3);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        boolean boolean9 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Interval interval11 = duration7.toIntervalTo(readableInstant10);
        org.joda.time.Interval interval12 = interval11.toInterval();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        boolean boolean22 = interval12.isAfter((org.joda.time.ReadableInterval) interval21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval21);
        org.joda.time.DateTime dateTime24 = interval21.getEnd();
        long long25 = interval21.toDurationMillis();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration40.toIntervalTo(readableInstant43);
        org.joda.time.Interval interval45 = interval44.toInterval();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        boolean boolean55 = interval45.isAfter((org.joda.time.ReadableInterval) interval54);
        org.joda.time.Period period56 = interval54.toPeriod();
        boolean boolean57 = interval35.isBefore((org.joda.time.ReadableInterval) interval54);
        java.lang.String str58 = interval54.toString();
        org.joda.time.DateTime dateTime59 = interval54.getEnd();
        boolean boolean60 = interval21.isBefore((org.joda.time.ReadableInterval) interval54);
        mutablePeriod2.setPeriod((org.joda.time.ReadableInterval) interval21);
        mutablePeriod2.addWeeks((-348));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "2022-02-11T09:41:06.308Z/2022-02-11T09:41:06.308Z" + "'", str58, "2022-02-11T09:41:06.308Z/2022-02-11T09:41:06.308Z");
        org.junit.Assert.assertNotNull(dateTime59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test08060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08060");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        boolean boolean7 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Interval interval9 = duration5.toIntervalTo(readableInstant8);
        org.joda.time.Interval interval10 = interval9.toInterval();
        org.joda.time.Chronology chronology11 = interval9.getChronology();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1644572202702L, chronology11);
        mutablePeriod12.setYears(105);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(chronology11);
    }

    @Test
    public void test08061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08061");
        java.lang.Object obj1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.Duration duration9 = org.joda.time.Duration.millis((long) '4');
        long long10 = duration9.getStandardDays();
        boolean boolean11 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType13 = periodType12.withHoursRemoved();
        org.joda.time.Period period14 = duration9.toPeriod(periodType12);
        org.joda.time.PeriodType periodType15 = periodType12.withMinutesRemoved();
        org.joda.time.Period period16 = new org.joda.time.Period(obj1, periodType12);
        int int17 = periodType12.size();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType24 = minutes23.getFieldType();
        org.joda.time.Minutes minutes25 = minutes23.negated();
        org.joda.time.PeriodType periodType26 = minutes23.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1644572089958L, 360000L, periodType26);
        org.joda.time.PeriodType periodType28 = periodType26.withSecondsRemoved();
        java.lang.String str29 = periodType28.getName();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(0L);
        mutablePeriod33.addMinutes((int) (short) 1);
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes48 = minutes46.multipliedBy((int) (short) 1);
        mutablePeriod45.setPeriod((org.joda.time.ReadablePeriod) minutes48);
        boolean boolean50 = mutablePeriod33.equals((java.lang.Object) minutes48);
        org.joda.time.Period period51 = minutes48.toPeriod();
        org.joda.time.DurationFieldType durationFieldType52 = minutes48.getFieldType();
        java.lang.String str53 = durationFieldType52.toString();
        java.lang.String str54 = durationFieldType52.getName();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant57 = null;
        java.lang.Object obj58 = null;
        org.joda.time.Duration duration59 = new org.joda.time.Duration(obj58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant57, (org.joda.time.ReadableDuration) duration59);
        boolean boolean61 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration59.toIntervalTo(readableInstant62);
        org.joda.time.Duration duration66 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean67 = duration59.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes68 = duration59.toStandardMinutes();
        org.joda.time.Minutes minutes69 = minutes68.negated();
        org.joda.time.DurationFieldType durationFieldType71 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant74 = null;
        java.lang.Object obj75 = null;
        org.joda.time.Duration duration76 = new org.joda.time.Duration(obj75);
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant74, (org.joda.time.ReadableDuration) duration76);
        boolean boolean78 = duration73.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Interval interval80 = duration76.toIntervalTo(readableInstant79);
        org.joda.time.Interval interval81 = interval80.toInterval();
        org.joda.time.Chronology chronology82 = interval81.getChronology();
        org.joda.time.DurationField durationField83 = durationFieldType71.getField(chronology82);
        org.joda.time.Period period84 = new org.joda.time.Period(36000L, chronology82);
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod((java.lang.Object) minutes69, chronology82);
        org.joda.time.DurationField durationField86 = durationFieldType52.getField(chronology82);
        org.joda.time.Period period87 = new org.joda.time.Period(1644572122713L, 1644572118718L, chronology82);
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod(1644572295957L, 1644572250612L, periodType28, chronology82);
        org.joda.time.Period period89 = new org.joda.time.Period(1644572315030L, periodType12, chronology82);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Minutes" + "'", str29, "Minutes");
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "minutes" + "'", str53, "minutes");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "minutes" + "'", str54, "minutes");
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(interval81);
        org.junit.Assert.assertNotNull(chronology82);
        org.junit.Assert.assertNotNull(durationField83);
        org.junit.Assert.assertNotNull(durationField86);
    }

    @Test
    public void test08062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08062");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        mutablePeriod9.addMillis((-1));
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod9);
        mutablePeriod5.setDays((int) ' ');
        int int15 = mutablePeriod5.size();
        org.joda.time.MutablePeriod mutablePeriod16 = mutablePeriod5.copy();
        mutablePeriod16.setWeeks((int) (short) 0);
        mutablePeriod16.addMinutes(0);
        mutablePeriod16.addYears(36000000);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        long long32 = interval31.getStartMillis();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval31);
        org.joda.time.DateTime dateTime34 = interval31.getEnd();
        long long35 = interval31.getEndMillis();
        org.joda.time.DateTime dateTime36 = interval31.getEnd();
        mutablePeriod16.setPeriod((org.joda.time.ReadableInterval) interval31);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572466390L + "'", long32 == 1644572466390L);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(dateTime34);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1644572466390L + "'", long35 == 1644572466390L);
        org.junit.Assert.assertNotNull(dateTime36);
    }

    @Test
    public void test08063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08063");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        java.lang.String str2 = minutes0.toString();
        org.joda.time.Minutes minutes4 = minutes0.multipliedBy(0);
        int int5 = minutes4.size();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0M" + "'", str2, "PT0M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test08064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08064");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration7, chronology8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration15 = duration12.minus((long) '4');
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration15);
        long long17 = duration15.getStandardHours();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test08065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08065");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.FOUR;
        org.joda.time.Days days4 = days2.dividedBy((int) '#');
        org.joda.time.PeriodType periodType5 = days2.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withMillisRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period7 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test08066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08066");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) -1, (-101), (int) (byte) 100, (int) '4');
        mutablePeriod4.setDays(32);
    }

    @Test
    public void test08067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08067");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.minutesIn(readableInterval10);
        java.lang.String str12 = minutes11.toString();
        org.joda.time.PeriodType periodType13 = minutes11.getPeriodType();
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant9, periodType13);
        org.joda.time.Duration duration16 = duration6.withMillis((long) 'a');
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.DateTime dateTime45 = interval44.getEnd();
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.minutesIn(readableInterval55);
        java.lang.String str57 = minutes56.toString();
        org.joda.time.PeriodType periodType58 = minutes56.getPeriodType();
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant54, periodType58);
        org.joda.time.PeriodType periodType60 = periodType58.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration21, (org.joda.time.ReadableInstant) dateTime45, periodType60);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant64 = null;
        java.lang.Object obj65 = null;
        org.joda.time.Duration duration66 = new org.joda.time.Duration(obj65);
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant64, (org.joda.time.ReadableDuration) duration66);
        boolean boolean68 = duration63.isShorterThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((java.lang.Object) duration63, periodType69, chronology70);
        org.joda.time.Duration duration73 = org.joda.time.Duration.millis((long) '4');
        long long74 = duration73.getStandardDays();
        boolean boolean75 = duration63.isLongerThan((org.joda.time.ReadableDuration) duration73);
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime45, (org.joda.time.ReadableDuration) duration73);
        org.joda.time.Interval interval77 = duration16.toIntervalTo((org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.Chronology chronology78 = dateTime45.getChronology();
        org.joda.time.Period period79 = new org.joda.time.Period((long) (short) 100, chronology78);
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod(1644572092263L, chronology78);
        mutablePeriod80.setDays(35);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT0M" + "'", str12, "PT0M");
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT0M" + "'", str57, "PT0M");
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(chronology78);
    }

    @Test
    public void test08068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08068");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.plus((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = seconds4.plus(seconds5);
        org.joda.time.Seconds seconds8 = seconds0.minus(seconds5);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.secondsIn(readableInterval9);
        org.joda.time.Seconds seconds11 = seconds5.plus(seconds10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds10);
        int int13 = seconds10.getSeconds();
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = seconds15.plus((-1));
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.TWO;
        java.lang.String str20 = seconds19.toString();
        org.joda.time.Seconds seconds21 = seconds18.plus(seconds19);
        org.joda.time.Seconds seconds22 = seconds14.minus(seconds19);
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.secondsIn(readableInterval23);
        org.joda.time.Seconds seconds25 = seconds19.plus(seconds24);
        boolean boolean26 = seconds10.isGreaterThan(seconds25);
        org.joda.time.Seconds seconds28 = seconds10.dividedBy(601);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2S" + "'", str6, "PT2S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT2S" + "'", str20, "PT2S");
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(seconds28);
    }

    @Test
    public void test08069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08069");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572370819L);
    }

    @Test
    public void test08070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08070");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(601);
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test08071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08071");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (-101));
        boolean boolean9 = duration4.isEqual((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration10 = duration4.toDuration();
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType12 = periodType11.withDaysRemoved();
        org.joda.time.PeriodType periodType13 = periodType12.withMinutesRemoved();
        org.joda.time.Period period14 = duration4.toPeriod(periodType13);
        int int15 = period14.getMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test08072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08072");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(53, 33, 54, (int) '4', 3, 727, 0, 648);
        mutablePeriod8.addMillis((-12));
        mutablePeriod8.setWeeks(703);
    }

    @Test
    public void test08073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08073");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = duration2.toPeriod(chronology4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.ReadableInstant readableInstant7 = null;
        java.lang.Object obj8 = null;
        org.joda.time.Duration duration9 = new org.joda.time.Duration(obj8);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.Days days11 = duration9.toStandardDays();
        boolean boolean12 = periodType6.equals((java.lang.Object) duration9);
        boolean boolean13 = duration2.isEqual((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        org.joda.time.Period period19 = period17.withSeconds((int) '4');
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((long) ' ', chronology21);
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType25);
        mutablePeriod26.setYears(0);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology31 = null;
        mutablePeriod26.setPeriod((org.joda.time.ReadableDuration) duration30, chronology31);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.DateTime dateTime43 = interval42.getEnd();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant46 = null;
        java.lang.Object obj47 = null;
        org.joda.time.Duration duration48 = new org.joda.time.Duration(obj47);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant46, (org.joda.time.ReadableDuration) duration48);
        boolean boolean50 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Interval interval52 = duration48.toIntervalTo(readableInstant51);
        org.joda.time.Interval interval53 = interval52.toInterval();
        org.joda.time.DateTime dateTime54 = interval53.getEnd();
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime43, (org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, (org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant59 = null;
        java.lang.Object obj60 = null;
        org.joda.time.Duration duration61 = new org.joda.time.Duration(obj60);
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant59, (org.joda.time.ReadableDuration) duration61);
        boolean boolean63 = duration58.isShorterThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration61.toIntervalTo(readableInstant64);
        org.joda.time.Interval interval66 = interval65.toInterval();
        org.joda.time.DateTime dateTime67 = interval66.getEnd();
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType70 = periodType69.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(periodType70);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(10L, periodType70);
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime43, (org.joda.time.ReadableInstant) dateTime67, periodType70);
        org.joda.time.Duration duration74 = mutablePeriod22.toDurationFrom((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Duration duration75 = period19.toDurationFrom((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Interval interval76 = duration2.toIntervalTo((org.joda.time.ReadableInstant) dateTime43);
        long long77 = duration2.getStandardHours();
        long long78 = duration2.getStandardHours();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(dateTime67);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
    }

    @Test
    public void test08074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08074");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (short) 1, (long) (byte) -1);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant7 = null;
        java.lang.Object obj8 = null;
        org.joda.time.Duration duration9 = new org.joda.time.Duration(obj8);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration9);
        boolean boolean11 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Interval interval13 = duration9.toIntervalTo(readableInstant12);
        org.joda.time.Interval interval14 = interval13.toInterval();
        org.joda.time.Chronology chronology15 = interval14.getChronology();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((-1L), chronology15);
        mutablePeriod2.add(1644572099705L, chronology15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours19 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours20 = hours18.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = hours19.getFieldType();
        int int22 = mutablePeriod2.indexOf(durationFieldType21);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.years();
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.Chronology chronology43 = interval42.getChronology();
        org.joda.time.DurationField durationField44 = durationFieldType32.getField(chronology43);
        org.joda.time.Period period45 = new org.joda.time.Period(36000L, chronology43);
        org.joda.time.Period period46 = new org.joda.time.Period(1644572093963L, 0L, chronology43);
        org.joda.time.Period period47 = new org.joda.time.Period((-86400L), chronology43);
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((long) 1, (long) 2147483647, periodType27, chronology43);
        mutablePeriod2.setPeriod(1644572102429L, 1644572092997L, chronology43);
        mutablePeriod2.addMillis(5);
        mutablePeriod2.setSeconds((-28));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(chronology15);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(chronology43);
        org.junit.Assert.assertNotNull(durationField44);
    }

    @Test
    public void test08075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08075");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn(readableInterval9);
        org.joda.time.Period period11 = period8.minus((org.joda.time.ReadablePeriod) hours10);
        org.joda.time.Hours hours13 = hours10.minus((int) '4');
        org.joda.time.Hours hours15 = hours13.plus((int) (short) 10);
        org.joda.time.Duration duration18 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = duration18.toPeriodFrom(readableInstant19);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration18.toPeriod(chronology21);
        org.joda.time.Period period24 = period22.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Hours hours26 = org.joda.time.Hours.hoursIn(readableInterval25);
        org.joda.time.Period period27 = period24.minus((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.Hours hours28 = hours26.negated();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = duration31.toPeriodFrom(readableInstant32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration31.toPeriod(chronology34);
        org.joda.time.Period period37 = period35.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Hours hours39 = org.joda.time.Hours.hoursIn(readableInterval38);
        org.joda.time.Period period40 = period37.minus((org.joda.time.ReadablePeriod) hours39);
        org.joda.time.Hours hours41 = hours39.negated();
        org.joda.time.Hours hours42 = hours26.minus(hours39);
        org.joda.time.Hours hours43 = hours15.minus(hours39);
        org.joda.time.DurationFieldType durationFieldType44 = hours39.getFieldType();
        java.lang.String str45 = hours39.toString();
        org.joda.time.Hours hours46 = hours39.negated();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PT0H" + "'", str45, "PT0H");
        org.junit.Assert.assertNotNull(hours46);
    }

    @Test
    public void test08076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08076");
        org.joda.time.Period period2 = new org.joda.time.Period((long) (byte) 10, (long) (byte) 0);
        org.joda.time.Period period4 = period2.minusWeeks((int) ' ');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks10 = weeks7.plus((int) ' ');
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = weeks11.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks14.minus(weeks15);
        org.joda.time.Weeks weeks18 = weeks16.multipliedBy(100);
        org.joda.time.PeriodType periodType19 = weeks18.getPeriodType();
        org.joda.time.Period period21 = new org.joda.time.Period(1L);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Period period24 = period21.plus((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks23.minus((int) (short) -1);
        org.joda.time.Weeks weeks28 = weeks23.plus((int) (byte) 1);
        org.joda.time.Weeks weeks29 = weeks18.plus(weeks23);
        org.joda.time.Weeks weeks30 = weeks11.plus(weeks23);
        org.joda.time.Weeks weeks32 = weeks30.minus(100);
        org.joda.time.PeriodType periodType33 = weeks30.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period34 = period4.withPeriodType(periodType33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(periodType33);
    }

    @Test
    public void test08077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08077");
        org.joda.time.Period period2 = new org.joda.time.Period(1644572125739L, 1644572156881L);
        org.joda.time.Period period4 = period2.withMinutes(13);
        org.joda.time.ReadablePeriod readablePeriod5 = null;
        org.joda.time.Period period6 = period4.minus(readablePeriod5);
        org.joda.time.Period period8 = period6.withMonths((-869));
        org.joda.time.Period period10 = period6.withMonths((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = period6.getFieldType(97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 97");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test08078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08078");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (short) 10, 1644572077926L, chronology2);
        org.joda.time.Period period5 = period3.withDays((int) (byte) 10);
        int int6 = period3.size();
        int[] intArray7 = period3.getValues();
        org.joda.time.Period period9 = period3.minusMillis((int) (short) 10);
        org.joda.time.Period period11 = period3.plusMinutes(2719);
        int int12 = period11.getWeeks();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[52, 1, 1, 3, 9, 34, 37, 916]");
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test08079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08079");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Period period10 = interval9.toPeriod();
        java.lang.String str11 = interval9.toString();
        boolean boolean13 = interval9.equals((java.lang.Object) 1644572111064L);
        long long14 = interval9.toDurationMillis();
        org.joda.time.MutableInterval mutableInterval15 = interval9.toMutableInterval();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        boolean boolean22 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Interval interval24 = duration20.toIntervalTo(readableInstant23);
        org.joda.time.Interval interval25 = interval24.toInterval();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        boolean boolean35 = interval25.isAfter((org.joda.time.ReadableInterval) interval34);
        org.joda.time.DateTime dateTime36 = interval25.getStart();
        org.joda.time.ReadableInstant readableInstant37 = null;
        boolean boolean38 = interval25.isAfter(readableInstant37);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant41 = null;
        java.lang.Object obj42 = null;
        org.joda.time.Duration duration43 = new org.joda.time.Duration(obj42);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration43);
        boolean boolean45 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration43.toIntervalTo(readableInstant46);
        org.joda.time.Interval interval48 = interval47.toInterval();
        org.joda.time.Chronology chronology49 = interval48.getChronology();
        boolean boolean50 = interval25.isBefore((org.joda.time.ReadableInterval) interval48);
        boolean boolean51 = interval9.isBefore((org.joda.time.ReadableInterval) interval48);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(period10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "2022-02-11T09:41:06.810Z/2022-02-11T09:41:06.810Z" + "'", str11, "2022-02-11T09:41:06.810Z/2022-02-11T09:41:06.810Z");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(mutableInterval15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(chronology49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test08080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08080");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.Period period10 = period6.minusMonths(100);
        org.joda.time.Period period12 = period6.plusYears(100);
        org.joda.time.Period period14 = period12.minusMinutes((int) (byte) 100);
        org.joda.time.Period period16 = period14.minusSeconds(4);
        org.joda.time.Hours hours18 = org.joda.time.Hours.hours((-1));
        org.joda.time.Period period19 = hours18.toPeriod();
        org.joda.time.Hours hours21 = hours18.dividedBy((int) ' ');
        org.joda.time.Period period23 = org.joda.time.Period.millis(36);
        org.joda.time.Duration duration26 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = duration26.toPeriodFrom(readableInstant27);
        org.joda.time.Period period30 = period28.minusSeconds((int) '4');
        org.joda.time.format.PeriodFormatter periodFormatter31 = null;
        java.lang.String str32 = period28.toString(periodFormatter31);
        org.joda.time.Hours hours33 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours34 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours35 = hours33.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = hours34.getFieldType();
        org.joda.time.Period period38 = period28.withFieldAdded(durationFieldType36, 0);
        org.joda.time.Period period40 = period23.withField(durationFieldType36, (int) (byte) 100);
        int int41 = hours18.get(durationFieldType36);
        org.joda.time.Period period42 = period14.withFields((org.joda.time.ReadablePeriod) hours18);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours43 = period42.toStandardHours();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Hours as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT0.097S" + "'", str32, "PT0.097S");
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(period42);
    }

    @Test
    public void test08081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08081");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) -1);
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period3 = period2.toPeriod();
        int int4 = period2.getSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test08082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08082");
        org.joda.time.Period period1 = new org.joda.time.Period(1644572087663L);
        int int2 = period1.size();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
    }

    @Test
    public void test08083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08083");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        mutablePeriod9.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod13);
        mutablePeriod9.addHours((int) (byte) 1);
        mutablePeriod9.setPeriod((int) (short) 0, 0, 0, 36, (int) '4', (int) (short) -1, (-97), 32);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks28.minus(weeks29);
        org.joda.time.Period period31 = new org.joda.time.Period((java.lang.Object) weeks30);
        org.joda.time.Period period33 = period31.plusWeeks((int) '4');
        mutablePeriod9.mergePeriod((org.joda.time.ReadablePeriod) period33);
        mutablePeriod9.addSeconds((-242));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(period33);
    }

    @Test
    public void test08084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08084");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.standardHoursIn(readablePeriod0);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test08085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08085");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.Minutes minutes3 = duration1.toStandardMinutes();
        org.joda.time.PeriodType periodType4 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes6 = minutes3.dividedBy(727);
        org.joda.time.PeriodType periodType7 = minutes3.getPeriodType();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test08086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08086");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("P52Y1M1W3DT9H36M21.654S");
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks2.minus(weeks3);
        org.joda.time.Period period5 = new org.joda.time.Period((java.lang.Object) weeks4);
        org.joda.time.DurationFieldType durationFieldType6 = weeks4.getFieldType();
        mutablePeriod1.set(durationFieldType6, 2147483647);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType6);
    }

    @Test
    public void test08087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08087");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (short) 10, 1644572077926L, chronology2);
        org.joda.time.Period period5 = period3.withDays((int) (byte) 10);
        int int6 = period3.size();
        int[] intArray7 = period3.getValues();
        org.joda.time.Period period9 = period3.minusMillis((int) (short) 10);
        org.joda.time.format.PeriodFormatter periodFormatter10 = null;
        java.lang.String str11 = period9.toString(periodFormatter10);
        org.joda.time.Period period13 = period9.minusYears((-963));
        org.joda.time.Period period15 = period9.minusWeeks((-52));
        org.joda.time.Period period17 = period9.plusMonths((-9551));
        int int18 = period17.getMonths();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[52, 1, 1, 3, 9, 34, 37, 916]");
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P52Y1M1W3DT9H34M37.906S" + "'", str11, "P52Y1M1W3DT9H34M37.906S");
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-9550) + "'", int18 == (-9550));
    }

    @Test
    public void test08088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08088");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.time();
        org.joda.time.PeriodType periodType1 = periodType0.withYearsRemoved();
        org.joda.time.PeriodType periodType2 = periodType1.withMillisRemoved();
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test08089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08089");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds2 = seconds0.multipliedBy((int) (byte) 1);
        int int3 = seconds2.size();
        org.joda.time.Period period5 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period7 = period5.minusMillis((-1));
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period7);
        boolean boolean9 = seconds2.isGreaterThan(seconds8);
        org.joda.time.DurationFieldType durationFieldType10 = seconds8.getFieldType();
        org.joda.time.DurationFieldType durationFieldType11 = seconds8.getFieldType();
        org.joda.time.Seconds seconds12 = seconds8.negated();
        org.joda.time.Seconds seconds14 = seconds8.plus((int) (byte) 1);
        org.joda.time.Period period16 = org.joda.time.Period.weeks(18);
        org.joda.time.Seconds seconds17 = period16.toStandardSeconds();
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) (byte) -1);
        int int20 = seconds19.getSeconds();
        org.joda.time.Seconds seconds21 = seconds8.minus(seconds19);
        java.lang.String str22 = seconds21.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-10886400) + "'", int20 == (-10886400));
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT10886400S" + "'", str22, "PT10886400S");
    }

    @Test
    public void test08090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08090");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Period period10 = interval9.toPeriod();
        org.joda.time.Period period12 = period10.minusDays(0);
        java.lang.String str13 = period10.toString();
        int int14 = period10.getMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT0S" + "'", str13, "PT0S");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test08091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08091");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((-604800L));
        org.joda.time.Duration duration3 = new org.joda.time.Duration(1644572076849L);
        long long4 = duration3.getStandardSeconds();
        boolean boolean5 = duration1.isEqual((org.joda.time.ReadableDuration) duration3);
        org.joda.time.Days days6 = duration1.toStandardDays();
        org.joda.time.Days days8 = days6.multipliedBy(32);
        org.joda.time.DurationFieldType durationFieldType9 = days6.getFieldType();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1644572076L + "'", long4 == 1644572076L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(durationFieldType9);
    }

    @Test
    public void test08092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08092");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Instant instant23 = dateTime21.toInstant();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        boolean boolean43 = interval33.isAfter((org.joda.time.ReadableInterval) interval42);
        org.joda.time.DateTime dateTime44 = interval33.getStart();
        org.joda.time.Duration duration45 = interval33.toDuration();
        org.joda.time.Duration duration48 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = duration48.toPeriodFrom(readableInstant49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration48.toPeriod(chronology51);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType54 = periodType53.withMillisRemoved();
        org.joda.time.Period period55 = period52.withPeriodType(periodType53);
        org.joda.time.PeriodType periodType56 = periodType53.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) instant23, (org.joda.time.ReadableDuration) duration45, periodType56);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant60 = null;
        java.lang.Object obj61 = null;
        org.joda.time.Duration duration62 = new org.joda.time.Duration(obj61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant60, (org.joda.time.ReadableDuration) duration62);
        boolean boolean64 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Interval interval66 = duration62.toIntervalTo(readableInstant65);
        long long67 = interval66.getStartMillis();
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval66);
        org.joda.time.DateTime dateTime69 = interval66.getStart();
        java.lang.String str70 = dateTime69.toString();
        java.lang.String str71 = dateTime69.toString();
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) instant23, (org.joda.time.ReadableInstant) dateTime69);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(interval66);
// flaky:         org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1644572467196L + "'", long67 == 1644572467196L);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(dateTime69);
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "2022-02-11T09:41:07.196Z" + "'", str70, "2022-02-11T09:41:07.196Z");
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "2022-02-11T09:41:07.196Z" + "'", str71, "2022-02-11T09:41:07.196Z");
    }

    @Test
    public void test08093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08093");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 1, 246, 14, 9, (-100), 0, (-12), (-97));
    }

    @Test
    public void test08094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08094");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Seconds seconds4 = period3.toStandardSeconds();
        org.joda.time.Seconds seconds5 = period3.toStandardSeconds();
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        mutablePeriod9.setYears(0);
        mutablePeriod9.setWeeks((int) (short) -1);
        boolean boolean14 = period3.equals((java.lang.Object) mutablePeriod9);
        org.joda.time.Duration duration15 = period3.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.Duration duration23 = org.joda.time.Duration.millis((long) '4');
        long long24 = duration23.getStandardDays();
        boolean boolean25 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType27 = periodType26.withHoursRemoved();
        org.joda.time.Period period28 = duration23.toPeriod(periodType26);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.yearMonthDayTime();
        boolean boolean30 = periodType26.equals((java.lang.Object) periodType29);
        org.joda.time.Period period31 = duration15.toPeriod(periodType26);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType34 = seconds33.getFieldType();
        org.joda.time.Seconds seconds36 = seconds33.plus((-1));
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.TWO;
        java.lang.String str38 = seconds37.toString();
        org.joda.time.Seconds seconds39 = seconds36.plus(seconds37);
        org.joda.time.Seconds seconds40 = seconds32.minus(seconds37);
        org.joda.time.Seconds seconds42 = seconds40.multipliedBy((int) (byte) -1);
        org.joda.time.Seconds seconds44 = seconds40.plus((-2));
        org.joda.time.Seconds seconds46 = seconds44.plus(2);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.seconds((int) '#');
        org.joda.time.DurationFieldType durationFieldType49 = seconds48.getFieldType();
        org.joda.time.Seconds seconds51 = seconds48.plus(2);
        org.joda.time.Seconds seconds53 = seconds48.plus(2);
        boolean boolean54 = seconds46.isGreaterThan(seconds53);
        org.joda.time.Seconds seconds56 = seconds53.dividedBy(903);
        org.joda.time.PeriodType periodType57 = seconds56.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod((java.lang.Object) periodType26, periodType57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT2S" + "'", str38, "PT2S");
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(periodType57);
    }

    @Test
    public void test08095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08095");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Duration duration11 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean12 = duration4.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes13 = duration4.toStandardMinutes();
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) '4');
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) 100);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        org.joda.time.Duration duration29 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean30 = duration22.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes31 = duration22.toStandardMinutes();
        org.joda.time.Minutes minutes32 = minutes31.negated();
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration35.toPeriodFrom(readableInstant36);
        org.joda.time.Period period39 = period37.minusSeconds((int) '4');
        org.joda.time.Minutes minutes40 = period37.toStandardMinutes();
        boolean boolean41 = minutes31.isLessThan(minutes40);
        org.joda.time.Minutes minutes43 = minutes31.minus((int) (short) 0);
        org.joda.time.PeriodType periodType44 = minutes31.getPeriodType();
        org.joda.time.Minutes minutes45 = minutes15.minus(minutes31);
        int int46 = minutes31.getMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test08096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08096");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        java.lang.String str7 = period6.toString();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        long long18 = interval17.getStartMillis();
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval17);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval17);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval17);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval17);
        java.lang.String str23 = minutes22.toString();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0.097S" + "'", str7, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572467355L + "'", long18 == 1644572467355L);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT0M" + "'", str23, "PT0M");
    }

    @Test
    public void test08097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08097");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        mutablePeriod0.setPeriod(100L, (long) (-1));
        mutablePeriod0.setHours((int) (short) -1);
        int int6 = mutablePeriod0.getWeeks();
        mutablePeriod0.setValue(0, 369700);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test08098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08098");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        java.lang.String str1 = hours0.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "PT2H" + "'", str1, "PT2H");
    }

    @Test
    public void test08099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08099");
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardSeconds(1644572087663L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.Duration duration12 = org.joda.time.Duration.millis((long) '4');
        long long13 = duration12.getStandardDays();
        boolean boolean14 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType16 = periodType15.withHoursRemoved();
        org.joda.time.Period period17 = duration12.toPeriod(periodType15);
        org.joda.time.Period period18 = duration4.toPeriod(periodType15);
        org.joda.time.Period period19 = new org.joda.time.Period((long) (byte) 0, 1644572088216L, periodType15);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((java.lang.Object) duration23, periodType29, chronology30);
        org.joda.time.DurationFieldType[] durationFieldTypeArray32 = mutablePeriod31.getFieldTypes();
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.forFields(durationFieldTypeArray32);
        org.joda.time.Period period34 = new org.joda.time.Period((long) 32, periodType33);
        org.joda.time.PeriodType periodType35 = periodType33.withDaysRemoved();
        org.joda.time.PeriodType periodType36 = periodType33.withHoursRemoved();
        org.joda.time.PeriodType periodType45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType45);
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType49);
        mutablePeriod50.setYears(0);
        mutablePeriod46.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod50);
        mutablePeriod50.setWeeks((int) (byte) 10);
        mutablePeriod50.addWeeks((int) (short) 1);
        mutablePeriod50.addMinutes((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        mutablePeriod65.addWeeks((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray68 = mutablePeriod65.getFieldTypes();
        mutablePeriod65.addMillis((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod();
        mutablePeriod72.setPeriod(100L, (long) (-1));
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant82 = null;
        java.lang.Object obj83 = null;
        org.joda.time.Duration duration84 = new org.joda.time.Duration(obj83);
        org.joda.time.Period period85 = new org.joda.time.Period(readableInstant82, (org.joda.time.ReadableDuration) duration84);
        boolean boolean86 = duration81.isShorterThan((org.joda.time.ReadableDuration) duration84);
        org.joda.time.ReadableInstant readableInstant87 = null;
        org.joda.time.Interval interval88 = duration84.toIntervalTo(readableInstant87);
        org.joda.time.Interval interval89 = interval88.toInterval();
        org.joda.time.Chronology chronology90 = interval89.getChronology();
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod((-1L), chronology90);
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology90);
        mutablePeriod72.setPeriod((long) 100, chronology90);
        mutablePeriod65.setPeriod(1644572118718L, chronology90);
        org.joda.time.Period period95 = new org.joda.time.Period(1644572105679L, chronology90);
        mutablePeriod50.setPeriod(1644572166323L, 1644572131521L, chronology90);
        org.joda.time.Period period97 = new org.joda.time.Period((long) 2719, periodType36, chronology90);
        org.joda.time.Period period98 = new org.joda.time.Period(1644572117257L, periodType15, chronology90);
        org.joda.time.MutablePeriod mutablePeriod99 = new org.joda.time.MutablePeriod(periodType15);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(durationFieldTypeArray32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(durationFieldTypeArray68);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(interval88);
        org.junit.Assert.assertNotNull(interval89);
        org.junit.Assert.assertNotNull(chronology90);
    }

    @Test
    public void test08100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08100");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(52, 97, (int) (byte) 0, 9, 34, 0, 9, 8);
        mutablePeriod8.setPeriod(1644572076884L);
        int int11 = mutablePeriod8.getSeconds();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 36 + "'", int11 == 36);
    }

    @Test
    public void test08101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08101");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        boolean boolean37 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration35.toIntervalTo(readableInstant38);
        boolean boolean40 = interval30.isAfter((org.joda.time.ReadableInterval) interval39);
        org.joda.time.Period period41 = interval39.toPeriod();
        boolean boolean42 = interval18.isAfter((org.joda.time.ReadableInterval) interval39);
        org.joda.time.DateTime dateTime43 = interval18.getEnd();
        java.lang.Object obj44 = null;
        boolean boolean45 = interval18.equals(obj44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(period41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
    }

    @Test
    public void test08102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08102");
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType7 = minutes6.getPeriodType();
        org.joda.time.PeriodType periodType8 = periodType7.withYearsRemoved();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) '#', periodType7, chronology9);
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType7);
        org.joda.time.PeriodType periodType12 = mutablePeriod11.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((-1L), 1644572153335L, periodType12);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod13.addYears(539);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType12);
    }

    @Test
    public void test08103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08103");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        org.joda.time.Seconds seconds3 = seconds0.plus((-1));
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds4.multipliedBy((int) (byte) 1);
        int int7 = seconds6.size();
        org.joda.time.Period period9 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period11 = period9.minusMillis((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period11);
        boolean boolean13 = seconds6.isGreaterThan(seconds12);
        boolean boolean14 = seconds0.isGreaterThan(seconds6);
        org.joda.time.Seconds seconds16 = seconds0.multipliedBy(8);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        org.joda.time.Seconds seconds21 = seconds18.plus((-1));
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.TWO;
        java.lang.String str23 = seconds22.toString();
        org.joda.time.Seconds seconds24 = seconds21.plus(seconds22);
        org.joda.time.Seconds seconds25 = seconds17.minus(seconds22);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.Seconds seconds28 = seconds22.plus(seconds27);
        org.joda.time.Seconds seconds29 = seconds0.minus(seconds27);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        org.joda.time.Interval interval41 = interval40.toInterval();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        boolean boolean51 = interval41.isAfter((org.joda.time.ReadableInterval) interval50);
        org.joda.time.Period period52 = interval50.toPeriod();
        org.joda.time.Period period53 = interval50.toPeriod();
        org.joda.time.Duration duration56 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = duration56.toPeriodFrom(readableInstant57);
        org.joda.time.Period period60 = period58.minusSeconds((int) '4');
        org.joda.time.Period period62 = period58.minusSeconds(10);
        org.joda.time.Period period64 = period58.withWeeks((int) (byte) -1);
        org.joda.time.Period period65 = period53.plus((org.joda.time.ReadablePeriod) period64);
        org.joda.time.Period period67 = period65.withHours(9);
        org.joda.time.MutablePeriod mutablePeriod68 = period65.toMutablePeriod();
        org.joda.time.Seconds seconds69 = period65.toStandardSeconds();
        boolean boolean70 = seconds30.isGreaterThan(seconds69);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds72 = seconds69.multipliedBy(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -604800 * 2147483647");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2S" + "'", str23, "PT2S");
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test08104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08104");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration7, chronology8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration15 = duration12.minus((long) '4');
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.plus((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.TWO;
        java.lang.String str22 = seconds21.toString();
        org.joda.time.Seconds seconds23 = seconds20.plus(seconds21);
        mutablePeriod3.add((org.joda.time.ReadablePeriod) seconds23);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.hours();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.Chronology chronology40 = interval39.getChronology();
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((long) 9, chronology40);
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(10L, 1644572107117L, periodType28, chronology40);
        mutablePeriod3.add(1644572115073L, chronology40);
        mutablePeriod3.add(1644572359068L);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT2S" + "'", str22, "PT2S");
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(chronology40);
    }

    @Test
    public void test08105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08105");
        org.joda.time.Period period1 = org.joda.time.Period.days(34);
        org.joda.time.Hours hours2 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours3 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours4 = hours2.minus(hours3);
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType6 = hours4.getFieldType();
        org.joda.time.Period period8 = period1.withFieldAdded(durationFieldType6, 34);
        org.joda.time.Period period9 = period8.toPeriod();
        org.joda.time.Period period11 = period9.minusDays(32);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test08106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08106");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572403640L, 1644572136235L);
    }

    @Test
    public void test08107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08107");
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType4);
        mutablePeriod5.setYears(0);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration9, chronology10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.DateTime dateTime22 = interval21.getEnd();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, (org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration40.toIntervalTo(readableInstant43);
        org.joda.time.Interval interval45 = interval44.toInterval();
        org.joda.time.DateTime dateTime46 = interval45.getEnd();
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType49 = periodType48.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(periodType49);
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(10L, periodType49);
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime46, periodType49);
        java.lang.String str53 = periodType49.toString();
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(periodType49);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardSeconds(1644572096050L);
        org.joda.time.Duration duration58 = duration56.minus(1644572107117L);
        org.joda.time.Hours hours59 = duration58.toStandardHours();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Interval interval68 = duration64.toIntervalTo(readableInstant67);
        org.joda.time.Interval interval69 = interval68.toInterval();
        org.joda.time.Hours hours70 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval69);
        org.joda.time.Hours hours71 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval69);
        org.joda.time.Hours hours73 = hours71.minus(8);
        org.joda.time.Hours hours75 = hours73.plus(0);
        org.joda.time.Hours hours76 = hours73.negated();
        org.joda.time.DurationFieldType durationFieldType77 = hours76.getFieldType();
        int int78 = hours59.get(durationFieldType77);
        boolean boolean79 = periodType49.isSupported(durationFieldType77);
        org.joda.time.PeriodType periodType80 = periodType49.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(1644572271009L, 1644572271658L, periodType49);
        org.joda.time.PeriodType periodType82 = mutablePeriod81.getPeriodType();
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "PeriodType[MillisNoMillis]" + "'", str53, "PeriodType[MillisNoMillis]");
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 456368756 + "'", int78 == 456368756);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType82);
    }

    @Test
    public void test08108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08108");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572204007L, 1644572159216L);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutesIn(readableInterval4);
        java.lang.String str6 = minutes5.toString();
        org.joda.time.PeriodType periodType7 = minutes5.getPeriodType();
        java.lang.String str8 = periodType7.toString();
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.days();
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType12 = periodType11.withHoursRemoved();
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.millis((long) '4');
        long long21 = duration20.getStandardDays();
        boolean boolean22 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.DateTime dateTime40 = interval39.getEnd();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant43 = null;
        java.lang.Object obj44 = null;
        org.joda.time.Duration duration45 = new org.joda.time.Duration(obj44);
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration45);
        boolean boolean47 = duration42.isShorterThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Interval interval49 = duration45.toIntervalTo(readableInstant48);
        org.joda.time.Interval interval50 = interval49.toInterval();
        org.joda.time.DateTime dateTime51 = interval50.getEnd();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableInterval readableInterval61 = null;
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.minutesIn(readableInterval61);
        java.lang.String str63 = minutes62.toString();
        org.joda.time.PeriodType periodType64 = minutes62.getPeriodType();
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant60, periodType64);
        org.joda.time.PeriodType periodType66 = periodType64.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration27, (org.joda.time.ReadableInstant) dateTime51, periodType66);
        org.joda.time.Interval interval68 = duration15.toIntervalFrom((org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration73 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration76 = duration73.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration78 = duration70.withDurationAdded((org.joda.time.ReadableDuration) duration73, (int) (short) 1);
        org.joda.time.Duration duration81 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration84 = duration81.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration86 = duration70.withDurationAdded((org.joda.time.ReadableDuration) duration84, (int) (short) 100);
        org.joda.time.Period period87 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime51, (org.joda.time.ReadableDuration) duration86);
        org.joda.time.Chronology chronology88 = dateTime51.getChronology();
        org.joda.time.Period period89 = new org.joda.time.Period((long) (-4), periodType12, chronology88);
        org.joda.time.DurationField durationField90 = durationFieldType9.getField(chronology88);
        org.joda.time.Period period91 = new org.joda.time.Period((long) 35, periodType7, chronology88);
        int int92 = period91.getDays();
        mutablePeriod2.mergePeriod((org.joda.time.ReadablePeriod) period91);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period95 = period91.plusHours(9);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0M" + "'", str6, "PT0M");
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PeriodType[Minutes]" + "'", str8, "PeriodType[Minutes]");
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(dateTime51);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "PT0M" + "'", str63, "PT0M");
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertNotNull(chronology88);
        org.junit.Assert.assertNotNull(durationField90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
    }

    @Test
    public void test08109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08109");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.minus(weeks1);
        org.joda.time.Weeks weeks4 = weeks2.multipliedBy(100);
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) -1);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks8 = weeks6.plus(weeks7);
        org.joda.time.MutablePeriod mutablePeriod9 = weeks8.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType11 = weeks8.getFieldType(0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType13 = weeks8.getFieldType(903);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 903");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(durationFieldType11);
    }

    @Test
    public void test08110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08110");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType5 = minutes4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withYearsRemoved();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((long) '#', periodType5, chronology7);
        org.joda.time.PeriodType periodType9 = periodType5.withHoursRemoved();
        org.joda.time.PeriodType periodType10 = periodType9.withWeeksRemoved();
        org.joda.time.Period period12 = new org.joda.time.Period(1L);
        int int13 = period12.getWeeks();
        org.joda.time.Period period15 = period12.plusMonths((int) '#');
        org.joda.time.Period period17 = period15.minusDays(100);
        org.joda.time.Period period19 = period17.plusSeconds((int) (short) -1);
        boolean boolean20 = periodType10.equals((java.lang.Object) (short) -1);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((java.lang.Object) duration22, periodType28, chronology29);
        org.joda.time.DurationFieldType[] durationFieldTypeArray31 = mutablePeriod30.getFieldTypes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((java.lang.Object) duration37, periodType43, chronology44);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        org.joda.time.Interval interval55 = interval54.toInterval();
        org.joda.time.Chronology chronology56 = interval55.getChronology();
        org.joda.time.Period period57 = new org.joda.time.Period((long) 1, (long) '#', periodType43, chronology56);
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod(0L, chronology56);
        mutablePeriod30.setPeriod(97L, chronology56);
        org.joda.time.Period period60 = new org.joda.time.Period(1644572399785L, periodType10, chronology56);
        org.joda.time.PeriodType periodType61 = periodType10.withMonthsRemoved();
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(durationFieldTypeArray31);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(chronology56);
        org.junit.Assert.assertNotNull(periodType61);
    }

    @Test
    public void test08111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08111");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((-68));
        org.joda.time.DurationFieldType[] durationFieldTypeArray2 = period1.getFieldTypes();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(durationFieldTypeArray2);
    }

    @Test
    public void test08112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08112");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Chronology chronology10 = interval9.getChronology();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        boolean boolean41 = interval31.isAfter((org.joda.time.ReadableInterval) interval40);
        boolean boolean42 = interval20.contains((org.joda.time.ReadableInterval) interval31);
        org.joda.time.PeriodType periodType45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType45);
        mutablePeriod46.setYears(0);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology51 = null;
        mutablePeriod46.setPeriod((org.joda.time.ReadableDuration) duration50, chronology51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        org.joda.time.Interval interval62 = interval61.toInterval();
        org.joda.time.DateTime dateTime63 = interval62.getEnd();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant66 = null;
        java.lang.Object obj67 = null;
        org.joda.time.Duration duration68 = new org.joda.time.Duration(obj67);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant66, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = duration65.isShorterThan((org.joda.time.ReadableDuration) duration68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Interval interval72 = duration68.toIntervalTo(readableInstant71);
        org.joda.time.Interval interval73 = interval72.toInterval();
        org.joda.time.DateTime dateTime74 = interval73.getEnd();
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableInstant) dateTime74);
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, (org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant79 = null;
        java.lang.Object obj80 = null;
        org.joda.time.Duration duration81 = new org.joda.time.Duration(obj80);
        org.joda.time.Period period82 = new org.joda.time.Period(readableInstant79, (org.joda.time.ReadableDuration) duration81);
        boolean boolean83 = duration78.isShorterThan((org.joda.time.ReadableDuration) duration81);
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Interval interval85 = duration81.toIntervalTo(readableInstant84);
        org.joda.time.Interval interval86 = interval85.toInterval();
        org.joda.time.DateTime dateTime87 = interval86.getEnd();
        org.joda.time.PeriodType periodType89 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType90 = periodType89.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod(periodType90);
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod(10L, periodType90);
        org.joda.time.Period period93 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableInstant) dateTime87, periodType90);
        boolean boolean94 = interval31.isAfter((org.joda.time.ReadableInstant) dateTime63);
        boolean boolean95 = interval9.isBefore((org.joda.time.ReadableInterval) interval31);
        org.joda.time.Interval interval96 = interval31.toInterval();
        org.joda.time.Chronology chronology97 = interval96.getChronology();
        org.joda.time.Duration duration98 = interval96.toDuration();
        org.joda.time.Seconds seconds99 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval96);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(chronology10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(dateTime63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(interval85);
        org.junit.Assert.assertNotNull(interval86);
        org.junit.Assert.assertNotNull(dateTime87);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(periodType90);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(interval96);
        org.junit.Assert.assertNotNull(chronology97);
        org.junit.Assert.assertNotNull(duration98);
        org.junit.Assert.assertNotNull(seconds99);
    }

    @Test
    public void test08113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08113");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        int int12 = hours10.getHours();
        java.lang.String str13 = hours10.toString();
        org.joda.time.Hours hours15 = hours10.minus(36);
        org.joda.time.Hours hours16 = null;
        org.joda.time.Hours hours17 = hours10.minus(hours16);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT0H" + "'", str13, "PT0H");
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
    }

    @Test
    public void test08114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08114");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) '4');
        org.joda.time.Period period3 = period1.withYears((int) (byte) 0);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period1);
        // The following exception was thrown during execution in test generation
        try {
            int int6 = weeks4.getValue(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 16");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(weeks4);
    }

    @Test
    public void test08115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08115");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("2022-02-11T09:36:52.305Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:36:52.305Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08116");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        org.joda.time.PeriodType periodType14 = minutes12.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(periodType14);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(periodType14);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod16.setDays((-369700));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(periodType14);
    }

    @Test
    public void test08117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08117");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) ' ', chronology11);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType15);
        mutablePeriod16.setYears(0);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology21 = null;
        mutablePeriod16.setPeriod((org.joda.time.ReadableDuration) duration20, chronology21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        org.joda.time.Interval interval56 = interval55.toInterval();
        org.joda.time.DateTime dateTime57 = interval56.getEnd();
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType60 = periodType59.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(periodType60);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(10L, periodType60);
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime57, periodType60);
        org.joda.time.Duration duration64 = mutablePeriod12.toDurationFrom((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant67 = null;
        java.lang.Object obj68 = null;
        org.joda.time.Duration duration69 = new org.joda.time.Duration(obj68);
        org.joda.time.Period period70 = new org.joda.time.Period(readableInstant67, (org.joda.time.ReadableDuration) duration69);
        boolean boolean71 = duration66.isShorterThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Interval interval73 = duration69.toIntervalTo(readableInstant72);
        org.joda.time.Interval interval74 = interval73.toInterval();
        org.joda.time.DateTime dateTime75 = interval74.getEnd();
        boolean boolean76 = dateTime33.isBefore((org.joda.time.ReadableInstant) dateTime75);
        boolean boolean77 = interval8.isBefore((org.joda.time.ReadableInstant) dateTime75);
        org.joda.time.Duration duration79 = org.joda.time.Duration.millis((long) 3);
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime75, (org.joda.time.ReadableDuration) duration79);
        mutablePeriod80.setMinutes((-800));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(interval74);
        org.junit.Assert.assertNotNull(dateTime75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(duration79);
    }

    @Test
    public void test08118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08118");
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant7 = null;
        java.lang.Object obj8 = null;
        org.joda.time.Duration duration9 = new org.joda.time.Duration(obj8);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration9);
        boolean boolean11 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Interval interval13 = duration9.toIntervalTo(readableInstant12);
        org.joda.time.Interval interval14 = interval13.toInterval();
        org.joda.time.Chronology chronology15 = interval14.getChronology();
        org.joda.time.DurationField durationField16 = durationFieldType4.getField(chronology15);
        org.joda.time.Period period17 = new org.joda.time.Period(36000L, chronology15);
        org.joda.time.Period period18 = new org.joda.time.Period(1644572093963L, 0L, chronology15);
        org.joda.time.Period period19 = new org.joda.time.Period((-86400L), chronology15);
        org.joda.time.Period period20 = period19.negated();
        org.joda.time.Period period22 = period19.minusWeeks(0);
        org.joda.time.Period period24 = period22.withHours(298);
        org.joda.time.Period period29 = new org.joda.time.Period((-9700), 6, 5, 2);
        java.lang.String str30 = period29.toString();
        boolean boolean31 = period24.equals((java.lang.Object) period29);
        int int32 = period24.getMillis();
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(chronology15);
        org.junit.Assert.assertNotNull(durationField16);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT-9700H6M5.002S" + "'", str30, "PT-9700H6M5.002S");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-400) + "'", int32 == (-400));
    }

    @Test
    public void test08119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08119");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType1 = periodType0.withMillisRemoved();
        java.lang.String str2 = periodType0.toString();
        org.joda.time.PeriodType periodType3 = periodType0.withMonthsRemoved();
        org.joda.time.Days days4 = org.joda.time.Days.ONE;
        org.joda.time.Days days5 = days4.negated();
        org.joda.time.Days days6 = org.joda.time.Days.ONE;
        org.joda.time.Days days7 = days6.negated();
        org.joda.time.Days days8 = org.joda.time.Days.ONE;
        org.joda.time.Days days9 = days8.negated();
        boolean boolean10 = days7.isGreaterThan(days9);
        org.joda.time.Days days11 = days4.plus(days9);
        int int12 = days4.getDays();
        org.joda.time.Days days14 = days4.minus(2147483647);
        org.joda.time.Days days16 = days14.dividedBy((-101));
        org.joda.time.Days days17 = org.joda.time.Days.ONE;
        org.joda.time.Days days18 = days17.negated();
        org.joda.time.Days days19 = org.joda.time.Days.ONE;
        org.joda.time.Days days20 = days19.negated();
        org.joda.time.Days days21 = org.joda.time.Days.ONE;
        org.joda.time.Days days22 = days21.negated();
        boolean boolean23 = days20.isGreaterThan(days22);
        org.joda.time.Days days24 = days17.plus(days22);
        org.joda.time.PeriodType periodType25 = days24.getPeriodType();
        boolean boolean26 = days14.isLessThan(days24);
        org.joda.time.DurationFieldType durationFieldType27 = days24.getFieldType();
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((java.lang.Object) days24, periodType28);
        boolean boolean30 = periodType3.equals((java.lang.Object) mutablePeriod29);
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PeriodType[Millis]" + "'", str2, "PeriodType[Millis]");
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test08120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08120");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Period period10 = interval9.toPeriod();
        java.lang.String str11 = interval9.toString();
        boolean boolean13 = interval9.equals((java.lang.Object) 1644572111064L);
        org.joda.time.Hours hours14 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.DateTime dateTime15 = interval9.getStart();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(period10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "2022-02-11T09:41:08.222Z/2022-02-11T09:41:08.222Z" + "'", str11, "2022-02-11T09:41:08.222Z/2022-02-11T09:41:08.222Z");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(dateTime15);
    }

    @Test
    public void test08121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08121");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType5 = periodType4.withMillisRemoved();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) (short) 1, periodType5, chronology6);
        org.joda.time.Period period9 = period7.minusDays(0);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType14);
        mutablePeriod15.setYears(0);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod15.setPeriod((org.joda.time.ReadableDuration) duration19, chronology20);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.DateTime dateTime32 = interval31.getEnd();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.DateTime dateTime43 = interval42.getEnd();
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, (org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period47 = duration11.toPeriodTo((org.joda.time.ReadableInstant) dateTime32, periodType46);
        java.lang.String str48 = periodType46.toString();
        org.joda.time.Period period49 = period9.withPeriodType(periodType46);
        org.joda.time.Period period50 = new org.joda.time.Period(1644572314253L, periodType46);
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(1644572379571L, 1644572087663L, periodType46);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "PeriodType[YearWeekDay]" + "'", str48, "PeriodType[YearWeekDay]");
        org.junit.Assert.assertNotNull(period49);
    }

    @Test
    public void test08122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08122");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) (byte) 0);
        java.lang.String str2 = duration1.toString();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Duration duration5 = weeks4.toStandardDuration();
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = duration5.plus(100L);
        org.joda.time.Duration duration10 = duration5.plus(1644572089958L);
        long long11 = duration5.getStandardSeconds();
        long long12 = duration5.getStandardMinutes();
        org.joda.time.Duration duration14 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration5, 53);
        long long15 = duration14.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0S" + "'", str2, "PT0S");
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-10080L) + "'", long6 == (-10080L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-604800L) + "'", long11 == (-604800L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-10080L) + "'", long12 == (-10080L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-32054400000L) + "'", long15 == (-32054400000L));
    }

    @Test
    public void test08123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08123");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(1644572106070L);
        org.joda.time.Duration duration3 = duration1.withMillis(1644572176411L);
        org.joda.time.Duration duration6 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration9 = duration6.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Period period10 = duration9.toPeriod();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Duration duration22 = period10.toDurationFrom((org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        org.joda.time.Interval interval55 = interval54.toInterval();
        org.joda.time.DateTime dateTime56 = interval55.getEnd();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant59 = null;
        java.lang.Object obj60 = null;
        org.joda.time.Duration duration61 = new org.joda.time.Duration(obj60);
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant59, (org.joda.time.ReadableDuration) duration61);
        boolean boolean63 = duration58.isShorterThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration61.toIntervalTo(readableInstant64);
        org.joda.time.Interval interval66 = interval65.toInterval();
        org.joda.time.DateTime dateTime67 = interval66.getEnd();
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime56, (org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime44, (org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.DurationFieldType durationFieldType70 = minutes69.getFieldType();
        org.joda.time.Duration duration73 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration76 = duration73.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes77 = duration76.toStandardMinutes();
        org.joda.time.Duration duration79 = org.joda.time.Duration.millis((long) '4');
        long long80 = duration79.getMillis();
        org.joda.time.Minutes minutes81 = duration79.toStandardMinutes();
        org.joda.time.Minutes minutes82 = minutes81.negated();
        boolean boolean83 = minutes77.isGreaterThan(minutes82);
        org.joda.time.Minutes minutes84 = minutes69.plus(minutes82);
        org.joda.time.PeriodType periodType85 = minutes84.getPeriodType();
        org.joda.time.PeriodType periodType86 = periodType85.withSecondsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period87 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime21, periodType86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Value cannot fit in an int: 27409535101");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(dateTime56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(dateTime67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 52L + "'", long80 == 52L);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(periodType86);
    }

    @Test
    public void test08124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08124");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT0.097S");
        mutablePeriod1.add((int) '#', (int) '#', (-101), 3, 32, 9, 2147483647, 3);
        org.joda.time.Duration duration12 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration14 = duration12.plus(1644572076849L);
        long long15 = duration12.getMillis();
        long long16 = duration12.getStandardHours();
        mutablePeriod1.add((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration19 = org.joda.time.Duration.millis(1644572088907L);
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.DateTime dateTime31 = interval30.getEnd();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        org.joda.time.Interval interval41 = interval40.toInterval();
        org.joda.time.DateTime dateTime42 = interval41.getEnd();
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableInstant) dateTime42);
        long long44 = dateTime42.getMillis();
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, (org.joda.time.ReadableInstant) dateTime42);
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration19);
        long long47 = duration19.getStandardDays();
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 52L + "'", long15 == 52L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(dateTime42);
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1644572468376L + "'", long44 == 1644572468376L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 19034L + "'", long47 == 19034L);
    }

    @Test
    public void test08125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08125");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Duration duration5 = duration2.plus((long) 'a');
        org.joda.time.Days days6 = duration5.toStandardDays();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours(1644572093756L);
        boolean boolean9 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableDuration readableDuration14 = null;
        boolean boolean15 = duration12.isShorterThan(readableDuration14);
        boolean boolean16 = duration5.isLongerThan(readableDuration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        org.joda.time.Interval interval36 = interval35.toInterval();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        boolean boolean46 = interval36.isAfter((org.joda.time.ReadableInterval) interval45);
        org.joda.time.Period period47 = interval45.toPeriod();
        boolean boolean48 = interval26.isBefore((org.joda.time.ReadableInterval) interval45);
        long long49 = interval26.getEndMillis();
        org.joda.time.PeriodType periodType52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType52);
        mutablePeriod53.setYears(0);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology58 = null;
        mutablePeriod53.setPeriod((org.joda.time.ReadableDuration) duration57, chronology58);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Interval interval68 = duration64.toIntervalTo(readableInstant67);
        org.joda.time.Interval interval69 = interval68.toInterval();
        org.joda.time.DateTime dateTime70 = interval69.getEnd();
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant73 = null;
        java.lang.Object obj74 = null;
        org.joda.time.Duration duration75 = new org.joda.time.Duration(obj74);
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant73, (org.joda.time.ReadableDuration) duration75);
        boolean boolean77 = duration72.isShorterThan((org.joda.time.ReadableDuration) duration75);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Interval interval79 = duration75.toIntervalTo(readableInstant78);
        org.joda.time.Interval interval80 = interval79.toInterval();
        org.joda.time.DateTime dateTime81 = interval80.getEnd();
        org.joda.time.Period period82 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime70, (org.joda.time.ReadableInstant) dateTime81);
        org.joda.time.Period period83 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, (org.joda.time.ReadableInstant) dateTime70);
        java.lang.String str84 = dateTime70.toString();
        org.joda.time.Duration duration86 = new org.joda.time.Duration((-86400L));
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime70, (org.joda.time.ReadableDuration) duration86);
        boolean boolean88 = interval26.isAfter((org.joda.time.ReadableInstant) dateTime70);
        org.joda.time.Interval interval89 = duration5.toIntervalFrom((org.joda.time.ReadableInstant) dateTime70);
        org.joda.time.Days days90 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval89);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long49 + "' != '" + 1644572468441L + "'", long49 == 1644572468441L);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(dateTime70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(interval79);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(dateTime81);
// flaky:         org.junit.Assert.assertEquals("'" + str84 + "' != '" + "2022-02-11T09:41:08.441Z" + "'", str84, "2022-02-11T09:41:08.441Z");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(interval89);
        org.junit.Assert.assertNotNull(days90);
    }

    @Test
    public void test08126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08126");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration7 = duration5.withMillis((long) (byte) 10);
        org.joda.time.Duration duration9 = org.joda.time.Duration.millis((long) '4');
        long long10 = duration9.getStandardDays();
        boolean boolean11 = duration7.isEqual((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        org.joda.time.Days days16 = duration14.toStandardDays();
        org.joda.time.Duration duration17 = duration9.minus((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration20 = duration14.withDurationAdded(1644572353452L, (-242));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration20);
    }

    @Test
    public void test08127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08127");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType4 = mutablePeriod2.getFieldType(1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod2);
        mutablePeriod2.addHours(2147483647);
        int int8 = mutablePeriod2.getDays();
        int int9 = mutablePeriod2.getMonths();
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test08128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08128");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.plus((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = seconds4.plus(seconds5);
        org.joda.time.Seconds seconds8 = seconds0.minus(seconds5);
        org.joda.time.Duration duration9 = seconds5.toStandardDuration();
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        org.joda.time.Seconds seconds14 = seconds11.plus((-1));
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.TWO;
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Seconds seconds17 = seconds14.plus(seconds15);
        org.joda.time.Seconds seconds18 = seconds10.minus(seconds15);
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.secondsIn(readableInterval19);
        org.joda.time.Seconds seconds21 = seconds15.plus(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds20);
        org.joda.time.PeriodType periodType23 = seconds20.getPeriodType();
        org.joda.time.Duration duration26 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration29 = duration26.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration31 = org.joda.time.Duration.millis((long) '4');
        long long32 = duration31.getMillis();
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType35);
        mutablePeriod36.setYears(0);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology41 = null;
        mutablePeriod36.setPeriod((org.joda.time.ReadableDuration) duration40, chronology41);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant45 = null;
        java.lang.Object obj46 = null;
        org.joda.time.Duration duration47 = new org.joda.time.Duration(obj46);
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration47);
        boolean boolean49 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Interval interval51 = duration47.toIntervalTo(readableInstant50);
        org.joda.time.Interval interval52 = interval51.toInterval();
        org.joda.time.DateTime dateTime53 = interval52.getEnd();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant56 = null;
        java.lang.Object obj57 = null;
        org.joda.time.Duration duration58 = new org.joda.time.Duration(obj57);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant56, (org.joda.time.ReadableDuration) duration58);
        boolean boolean60 = duration55.isShorterThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Interval interval62 = duration58.toIntervalTo(readableInstant61);
        org.joda.time.Interval interval63 = interval62.toInterval();
        org.joda.time.DateTime dateTime64 = interval63.getEnd();
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime53, (org.joda.time.ReadableInstant) dateTime64);
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, (org.joda.time.ReadableInstant) dateTime53);
        java.lang.String str67 = dateTime53.toString();
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, (org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.Period period69 = duration29.toPeriodTo((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType71 = seconds70.getFieldType();
        org.joda.time.Seconds seconds73 = seconds70.plus((-1));
        boolean boolean74 = duration29.equals((java.lang.Object) seconds70);
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.PeriodType periodType76 = seconds75.getPeriodType();
        org.joda.time.Seconds seconds77 = seconds70.minus(seconds75);
        org.joda.time.Seconds seconds79 = seconds70.multipliedBy(35);
        org.joda.time.Seconds seconds80 = seconds20.minus(seconds70);
        boolean boolean81 = seconds5.isGreaterThan(seconds80);
        org.joda.time.Period period83 = org.joda.time.Period.seconds(1);
        org.joda.time.Period period85 = period83.withSeconds((-9700));
        org.joda.time.Period period87 = period85.minusHours((int) (byte) 100);
        org.joda.time.Seconds seconds88 = period87.toStandardSeconds();
        boolean boolean89 = seconds5.isLessThan(seconds88);
        org.joda.time.Seconds seconds91 = seconds5.plus((-52));
        java.lang.String str92 = seconds91.toString();
        org.joda.time.PeriodType periodType93 = seconds91.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2S" + "'", str6, "PT2S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2S" + "'", str16, "PT2S");
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 52L + "'", long32 == 52L);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(dateTime53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(dateTime64);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "2022-02-11T09:41:08.597Z" + "'", str67, "2022-02-11T09:41:08.597Z");
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(seconds91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "PT-50S" + "'", str92, "PT-50S");
        org.junit.Assert.assertNotNull(periodType93);
    }

    @Test
    public void test08129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08129");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        boolean boolean10 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Interval interval12 = duration8.toIntervalTo(readableInstant11);
        org.joda.time.Interval interval13 = interval12.toInterval();
        org.joda.time.DateTime dateTime14 = interval13.getEnd();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.DateTime dateTime25 = interval24.getEnd();
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime14, (org.joda.time.ReadableInstant) dateTime25);
        long long27 = dateTime25.getMillis();
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration33 = duration30.minus((long) '4');
        org.joda.time.Duration duration35 = org.joda.time.Duration.millis((long) '4');
        long long36 = duration35.getMillis();
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType39);
        mutablePeriod40.setYears(0);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology45 = null;
        mutablePeriod40.setPeriod((org.joda.time.ReadableDuration) duration44, chronology45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        org.joda.time.Interval interval56 = interval55.toInterval();
        org.joda.time.DateTime dateTime57 = interval56.getEnd();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant60 = null;
        java.lang.Object obj61 = null;
        org.joda.time.Duration duration62 = new org.joda.time.Duration(obj61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant60, (org.joda.time.ReadableDuration) duration62);
        boolean boolean64 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Interval interval66 = duration62.toIntervalTo(readableInstant65);
        org.joda.time.Interval interval67 = interval66.toInterval();
        org.joda.time.DateTime dateTime68 = interval67.getEnd();
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime57, (org.joda.time.ReadableInstant) dateTime68);
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, (org.joda.time.ReadableInstant) dateTime57);
        java.lang.String str71 = dateTime57.toString();
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, (org.joda.time.ReadableInstant) dateTime57);
        org.joda.time.Duration duration74 = new org.joda.time.Duration((long) (byte) 1);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType77 = periodType76.withMillisRemoved();
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.Period period79 = new org.joda.time.Period((long) (short) 1, periodType77, chronology78);
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime57, (org.joda.time.ReadableDuration) duration74, periodType77);
        org.joda.time.Period period81 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableDuration) duration33, periodType77);
        org.joda.time.DateTimeZone dateTimeZone82 = dateTime25.getZone();
        org.joda.time.Chronology chronology83 = dateTime25.getChronology();
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod((long) 56, 1644572151412L, periodType3, chronology83);
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod(1644572421579L, periodType3);
        org.joda.time.Weeks weeks87 = org.joda.time.Weeks.weeks((-97));
        org.joda.time.Weeks weeks89 = weeks87.multipliedBy((-3));
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod85.setPeriod((org.joda.time.ReadablePeriod) weeks87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(dateTime25);
// flaky:         org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1644572468671L + "'", long27 == 1644572468671L);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 52L + "'", long36 == 52L);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(interval67);
        org.junit.Assert.assertNotNull(dateTime68);
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "2022-02-11T09:41:08.671Z" + "'", str71, "2022-02-11T09:41:08.671Z");
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(dateTimeZone82);
        org.junit.Assert.assertNotNull(chronology83);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks89);
    }

    @Test
    public void test08130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08130");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        org.joda.time.Days days4 = org.joda.time.Days.ONE;
        org.joda.time.Days days5 = days4.negated();
        boolean boolean6 = days3.isGreaterThan(days5);
        org.joda.time.Days days7 = days0.plus(days5);
        org.joda.time.Days days8 = null;
        boolean boolean9 = days0.isGreaterThan(days8);
        org.joda.time.PeriodType periodType10 = days0.getPeriodType();
        org.joda.time.PeriodType periodType11 = days0.getPeriodType();
        org.joda.time.Days days13 = days0.multipliedBy(30);
        org.joda.time.Days days15 = days13.dividedBy((int) (byte) -1);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
    }

    @Test
    public void test08131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08131");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        mutablePeriod3.setWeeks((int) (short) -1);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration12.toIntervalTo(readableInstant15);
        mutablePeriod3.setPeriod((org.joda.time.ReadableInterval) interval16);
        org.joda.time.Interval interval18 = interval16.toInterval();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        org.joda.time.Interval interval28 = interval27.toInterval();
        org.joda.time.DateTime dateTime29 = interval28.getEnd();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Interval interval48 = duration44.toIntervalTo(readableInstant47);
        boolean boolean49 = interval39.isAfter((org.joda.time.ReadableInterval) interval48);
        boolean boolean50 = interval28.contains((org.joda.time.ReadableInterval) interval39);
        org.joda.time.PeriodType periodType53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType53);
        mutablePeriod54.addMillis((-1));
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant59 = null;
        java.lang.Object obj60 = null;
        org.joda.time.Duration duration61 = new org.joda.time.Duration(obj60);
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant59, (org.joda.time.ReadableDuration) duration61);
        boolean boolean63 = duration58.isShorterThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration61.toIntervalTo(readableInstant64);
        org.joda.time.Interval interval66 = interval65.toInterval();
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant69 = null;
        java.lang.Object obj70 = null;
        org.joda.time.Duration duration71 = new org.joda.time.Duration(obj70);
        org.joda.time.Period period72 = new org.joda.time.Period(readableInstant69, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = duration68.isShorterThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Interval interval75 = duration71.toIntervalTo(readableInstant74);
        boolean boolean76 = interval66.isAfter((org.joda.time.ReadableInterval) interval75);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval75);
        org.joda.time.Period period78 = interval75.toPeriod();
        mutablePeriod54.add((org.joda.time.ReadableInterval) interval75);
        long long80 = interval75.getEndMillis();
        boolean boolean81 = interval39.isAfter((org.joda.time.ReadableInterval) interval75);
        long long82 = interval75.getEndMillis();
        boolean boolean83 = interval16.isAfter((org.joda.time.ReadableInterval) interval75);
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval75);
        org.joda.time.PeriodType periodType85 = weeks84.getPeriodType();
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(dateTime29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(period78);
// flaky:         org.junit.Assert.assertTrue("'" + long80 + "' != '" + 1644572468716L + "'", long80 == 1644572468716L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long82 + "' != '" + 1644572468716L + "'", long82 == 1644572468716L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(periodType85);
    }

    @Test
    public void test08132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08132");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        java.lang.String str7 = period6.toString();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        long long18 = interval17.getStartMillis();
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval17);
        mutablePeriod8.setDays((int) '4');
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        boolean boolean37 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration35.toIntervalTo(readableInstant38);
        org.joda.time.Interval interval40 = interval39.toInterval();
        org.joda.time.DateTime dateTime41 = interval40.getEnd();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        org.joda.time.Interval interval51 = interval50.toInterval();
        org.joda.time.DateTime dateTime52 = interval51.getEnd();
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime41, (org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant56 = null;
        java.lang.Object obj57 = null;
        org.joda.time.Duration duration58 = new org.joda.time.Duration(obj57);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant56, (org.joda.time.ReadableDuration) duration58);
        boolean boolean60 = duration55.isShorterThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.minutesIn(readableInterval62);
        java.lang.String str64 = minutes63.toString();
        org.joda.time.PeriodType periodType65 = minutes63.getPeriodType();
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration58, readableInstant61, periodType65);
        org.joda.time.PeriodType periodType67 = periodType65.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, (org.joda.time.ReadableInstant) dateTime52, periodType67);
        org.joda.time.PeriodType periodType69 = periodType67.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((long) 30, 1644572122681L, periodType67);
        org.joda.time.Duration duration73 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period75 = duration73.toPeriodFrom(readableInstant74);
        org.joda.time.Period period77 = period75.minusSeconds((int) '4');
        org.joda.time.Minutes minutes78 = period75.toStandardMinutes();
        org.joda.time.Period period80 = period75.multipliedBy((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType81 = org.joda.time.DurationFieldType.days();
        boolean boolean82 = period75.isSupported(durationFieldType81);
        java.lang.String str83 = durationFieldType81.getName();
        int int84 = periodType67.indexOf(durationFieldType81);
        mutablePeriod8.add(durationFieldType81, 13);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0.097S" + "'", str7, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572468761L + "'", long18 == 1644572468761L);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(dateTime52);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT0M" + "'", str64, "PT0M");
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "days" + "'", str83, "days");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test08133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08133");
        org.joda.time.Period period1 = org.joda.time.Period.months(456368756);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test08134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08134");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration7 = duration4.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration9 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration4, (int) (short) 1);
        org.joda.time.Days days10 = duration9.toStandardDays();
        org.joda.time.Days days11 = duration9.toStandardDays();
        org.joda.time.Period period12 = days11.toPeriod();
        org.joda.time.Period period14 = period12.plusMillis((-2));
        org.joda.time.Period period16 = period12.withMonths(284);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test08135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08135");
        org.joda.time.Period period2 = new org.joda.time.Period(1644572262174L, 1644572144086L);
        org.joda.time.Hours hours3 = period2.toStandardHours();
        org.junit.Assert.assertNotNull(hours3);
    }

    @Test
    public void test08136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08136");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType8 = periodType7.withMillisRemoved();
        org.joda.time.Period period9 = period6.withPeriodType(periodType7);
        org.joda.time.PeriodType periodType10 = periodType7.withMillisRemoved();
        org.joda.time.PeriodType periodType11 = periodType7.withDaysRemoved();
        int int12 = periodType7.size();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test08137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08137");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (long) 100);
        org.joda.time.Weeks weeks3 = period2.toStandardWeeks();
        org.joda.time.Weeks weeks5 = weeks3.multipliedBy((int) (byte) 1);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks8 = weeks7.negated();
        int int9 = weeks7.getWeeks();
        org.joda.time.Weeks weeks11 = weeks7.minus(3);
        org.joda.time.Period period13 = new org.joda.time.Period((long) (byte) 1);
        boolean boolean14 = weeks7.equals((java.lang.Object) (byte) 1);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks17 = weeks16.negated();
        int int18 = weeks16.getWeeks();
        org.joda.time.Weeks weeks20 = weeks16.minus(3);
        boolean boolean21 = weeks7.isGreaterThan(weeks20);
        boolean boolean22 = weeks3.isGreaterThan(weeks20);
        org.joda.time.Duration duration24 = org.joda.time.Duration.millis((long) '4');
        long long25 = duration24.getMillis();
        org.joda.time.Period period26 = new org.joda.time.Period((java.lang.Object) duration24);
        org.joda.time.Duration duration27 = period26.toStandardDuration();
        boolean boolean28 = weeks20.equals((java.lang.Object) period26);
        org.joda.time.Weeks weeks29 = weeks20.negated();
        org.joda.time.Weeks weeks31 = weeks29.dividedBy(30);
        java.lang.String str32 = weeks29.toString();
        java.lang.String str33 = weeks29.toString();
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 52L + "'", long25 == 52L);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P4W" + "'", str32, "P4W");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P4W" + "'", str33, "P4W");
    }

    @Test
    public void test08138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08138");
        org.joda.time.Period period1 = org.joda.time.Period.years(2719);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.Duration duration9 = org.joda.time.Duration.millis((long) '4');
        long long10 = duration9.getStandardDays();
        boolean boolean11 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        org.joda.time.Interval interval28 = interval27.toInterval();
        org.joda.time.DateTime dateTime29 = interval28.getEnd();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.DateTime dateTime40 = interval39.getEnd();
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime29, (org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.minutesIn(readableInterval50);
        java.lang.String str52 = minutes51.toString();
        org.joda.time.PeriodType periodType53 = minutes51.getPeriodType();
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant49, periodType53);
        org.joda.time.PeriodType periodType55 = periodType53.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration16, (org.joda.time.ReadableInstant) dateTime40, periodType55);
        org.joda.time.Interval interval57 = duration4.toIntervalFrom((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType60);
        mutablePeriod61.setYears(0);
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology66 = null;
        mutablePeriod61.setPeriod((org.joda.time.ReadableDuration) duration65, chronology66);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant70 = null;
        java.lang.Object obj71 = null;
        org.joda.time.Duration duration72 = new org.joda.time.Duration(obj71);
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant70, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = duration69.isShorterThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Interval interval76 = duration72.toIntervalTo(readableInstant75);
        org.joda.time.Interval interval77 = interval76.toInterval();
        org.joda.time.DateTime dateTime78 = interval77.getEnd();
        org.joda.time.Duration duration80 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant81 = null;
        java.lang.Object obj82 = null;
        org.joda.time.Duration duration83 = new org.joda.time.Duration(obj82);
        org.joda.time.Period period84 = new org.joda.time.Period(readableInstant81, (org.joda.time.ReadableDuration) duration83);
        boolean boolean85 = duration80.isShorterThan((org.joda.time.ReadableDuration) duration83);
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.Interval interval87 = duration83.toIntervalTo(readableInstant86);
        org.joda.time.Interval interval88 = interval87.toInterval();
        org.joda.time.DateTime dateTime89 = interval88.getEnd();
        org.joda.time.Period period90 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime78, (org.joda.time.ReadableInstant) dateTime89);
        org.joda.time.Period period91 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration65, (org.joda.time.ReadableInstant) dateTime78);
        int int92 = dateTime40.compareTo((org.joda.time.ReadableInstant) dateTime78);
        org.joda.time.Duration duration93 = period1.toDurationFrom((org.joda.time.ReadableInstant) dateTime78);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(dateTime29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT0M" + "'", str52, "PT0M");
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(dateTime78);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(interval87);
        org.junit.Assert.assertNotNull(interval88);
        org.junit.Assert.assertNotNull(dateTime89);
// flaky:         org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(duration93);
    }

    @Test
    public void test08139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08139");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes6 = duration5.toStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.millis((long) '4');
        long long9 = duration8.getMillis();
        org.joda.time.Minutes minutes10 = duration8.toStandardMinutes();
        org.joda.time.Minutes minutes11 = minutes10.negated();
        boolean boolean12 = minutes6.isGreaterThan(minutes11);
        org.joda.time.Minutes minutes13 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType14 = minutes13.getFieldType();
        org.joda.time.PeriodType periodType15 = minutes13.getPeriodType();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 52L + "'", long9 == 52L);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(periodType15);
    }

    @Test
    public void test08140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08140");
        org.joda.time.Period period1 = new org.joda.time.Period(1L);
        int int2 = period1.getWeeks();
        org.joda.time.Period period4 = period1.plusMonths((int) '#');
        org.joda.time.Period period6 = period4.minusDays(100);
        org.joda.time.Period period8 = period6.plusSeconds((int) (short) -1);
        org.joda.time.Period period9 = period6.toPeriod();
        org.joda.time.Period period10 = period9.toPeriod();
        int int11 = period9.getMillis();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test08141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08141");
        org.joda.time.Period period1 = new org.joda.time.Period(1L);
        org.joda.time.Period period3 = period1.minusMonths((-101));
        org.joda.time.Period period5 = period1.plusMillis(3);
        org.joda.time.Period period7 = period5.minusDays((int) ' ');
        org.joda.time.Hours hours8 = period7.toStandardHours();
        org.joda.time.Hours hours10 = hours8.plus(0);
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        java.lang.String str12 = duration11.toString();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.Hours hours32 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval31);
        org.joda.time.Hours hours33 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval31);
        boolean boolean34 = interval21.overlaps((org.joda.time.ReadableInterval) interval31);
        org.joda.time.DateTime dateTime35 = interval21.getStart();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration40.toIntervalTo(readableInstant43);
        org.joda.time.Interval interval45 = interval44.toInterval();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        boolean boolean55 = interval45.isAfter((org.joda.time.ReadableInterval) interval54);
        org.joda.time.DateTime dateTime56 = interval45.getStart();
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime35, (org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.DateTimeZone dateTimeZone58 = dateTime56.getZone();
        org.joda.time.Period period59 = duration11.toPeriodFrom((org.joda.time.ReadableInstant) dateTime56);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT-2764800S" + "'", str12, "PT-2764800S");
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(dateTime56);
        org.junit.Assert.assertNotNull(dateTimeZone58);
        org.junit.Assert.assertNotNull(period59);
    }

    @Test
    public void test08142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08142");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Hours hours13 = hours11.minus(8);
        org.joda.time.Hours hours15 = hours13.plus(0);
        org.joda.time.Hours hours16 = hours13.negated();
        java.lang.String str17 = hours16.toString();
        org.joda.time.Duration duration18 = hours16.toStandardDuration();
        long long19 = duration18.getStandardSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT8H" + "'", str17, "PT8H");
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 28800L + "'", long19 == 28800L);
    }

    @Test
    public void test08143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08143");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-2147483646), 246, (int) (short) 10, (int) 'a');
    }

    @Test
    public void test08144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08144");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.DateTime dateTime20 = interval9.getStart();
        org.joda.time.ReadableInstant readableInstant21 = null;
        boolean boolean22 = interval9.isAfter(readableInstant21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.Chronology chronology33 = interval32.getChronology();
        boolean boolean34 = interval9.isBefore((org.joda.time.ReadableInterval) interval32);
        org.joda.time.Interval interval35 = interval9.toInterval();
        org.joda.time.Chronology chronology36 = interval35.getChronology();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(chronology33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(chronology36);
    }

    @Test
    public void test08145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08145");
        org.joda.time.Period period8 = new org.joda.time.Period(218, 54, 2719, 601, 142, 9, (int) '#', (int) (short) -1);
        org.joda.time.Period period10 = org.joda.time.Period.years((-101));
        int int11 = period10.getYears();
        org.joda.time.Period period13 = period10.plusMinutes((int) (short) 0);
        org.joda.time.Period period14 = period8.withFields((org.joda.time.ReadablePeriod) period10);
        org.joda.time.Period period15 = period14.normalizedStandard();
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-101) + "'", int11 == (-101));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test08146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08146");
        org.joda.time.Period period4 = new org.joda.time.Period((-963), (int) 'a', (int) (short) 10, 298);
        int int5 = period4.getWeeks();
        org.joda.time.Minutes minutes6 = period4.toStandardMinutes();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test08147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08147");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Interval interval18 = interval17.toInterval();
        org.joda.time.Hours hours19 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Hours hours20 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval18);
        boolean boolean21 = interval8.overlaps((org.joda.time.ReadableInterval) interval18);
        long long22 = interval8.getEndMillis();
        boolean boolean24 = interval8.equals((java.lang.Object) 1644572390141L);
        long long25 = interval8.getEndMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572469242L + "'", long22 == 1644572469242L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1644572469242L + "'", long25 == 1644572469242L);
    }

    @Test
    public void test08148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08148");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.minutesIn(readableInterval2);
        java.lang.String str4 = minutes3.toString();
        org.joda.time.PeriodType periodType5 = minutes3.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withMillisRemoved();
        org.joda.time.Period period7 = new org.joda.time.Period(9L, 599L, periodType5);
        org.joda.time.DurationFieldType durationFieldType9 = periodType5.getFieldType((int) (byte) 0);
        java.lang.String str10 = periodType5.getName();
        org.joda.time.PeriodType periodType11 = periodType5.withMinutesRemoved();
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT0M" + "'", str4, "PT0M");
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Minutes" + "'", str10, "Minutes");
        org.junit.Assert.assertNotNull(periodType11);
    }

    @Test
    public void test08149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08149");
        org.joda.time.Period period1 = new org.joda.time.Period((-1L));
        org.joda.time.Seconds seconds2 = period1.toStandardSeconds();
        org.joda.time.Seconds seconds3 = seconds2.negated();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType5 = seconds4.getFieldType();
        org.joda.time.Seconds seconds7 = seconds4.plus((-1));
        org.joda.time.Seconds seconds8 = seconds3.plus(seconds7);
        org.joda.time.Duration duration9 = seconds3.toStandardDuration();
        int int10 = seconds3.size();
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test08150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08150");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        mutablePeriod9.addMillis((-1));
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod9);
        mutablePeriod5.setDays((int) ' ');
        int int15 = mutablePeriod5.size();
        org.joda.time.MutablePeriod mutablePeriod16 = mutablePeriod5.copy();
        mutablePeriod16.setMonths((int) (byte) 100);
        int int19 = mutablePeriod16.getMillis();
        java.lang.Class<?> wildcardClass20 = mutablePeriod16.getClass();
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test08151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08151");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572257575L, 1644572196139L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration5.toPeriod(chronology7);
        org.joda.time.Minutes minutes9 = duration5.toStandardMinutes();
        org.joda.time.Duration duration10 = duration5.toDuration();
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration10);
        mutablePeriod2.setWeeks((-48));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration10);
    }

    @Test
    public void test08152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08152");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("2022-02-11T09:36:25.128Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:36:25.128Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08153");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Period period9 = period4.multipliedBy((int) (byte) 100);
        org.joda.time.Period period11 = period9.withHours((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.months();
        org.joda.time.Period period14 = period9.withField(durationFieldType12, 0);
        org.joda.time.Period period16 = period9.plusHours((-97));
        int int17 = period9.getSeconds();
        org.joda.time.Period period19 = period9.withMinutes((-1));
        org.joda.time.Period period20 = period9.normalizedStandard();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test08154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08154");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("P100MT0.097S");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08155");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn(readableInterval9);
        org.joda.time.Period period11 = period8.minus((org.joda.time.ReadablePeriod) hours10);
        org.joda.time.Hours hours13 = hours10.minus((int) '4');
        org.joda.time.Hours hours15 = hours13.plus((int) '#');
        org.joda.time.Hours hours16 = hours13.negated();
        int int17 = hours16.size();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test08156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08156");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks5 = weeks2.plus((int) ' ');
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks11 = weeks8.plus((int) ' ');
        boolean boolean12 = weeks2.isGreaterThan(weeks8);
        org.joda.time.MutablePeriod mutablePeriod13 = weeks2.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks2.multipliedBy((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType16 = weeks2.getFieldType();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks17.minus(weeks18);
        org.joda.time.Weeks weeks21 = weeks19.multipliedBy(100);
        org.joda.time.Weeks weeks23 = weeks19.multipliedBy((int) (short) -1);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks25 = weeks23.plus(weeks24);
        org.joda.time.MutablePeriod mutablePeriod26 = weeks25.toMutablePeriod();
        org.joda.time.Weeks weeks28 = weeks25.minus(0);
        boolean boolean29 = weeks2.isLessThan(weeks25);
        org.joda.time.Weeks weeks31 = weeks2.dividedBy(56);
        org.joda.time.Period period34 = new org.joda.time.Period(0L, (long) 100);
        org.joda.time.Weeks weeks35 = period34.toStandardWeeks();
        org.joda.time.Weeks weeks37 = weeks35.multipliedBy((int) (byte) 1);
        int int38 = weeks35.getWeeks();
        org.joda.time.Weeks weeks39 = weeks2.minus(weeks35);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(weeks39);
    }

    @Test
    public void test08157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08157");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType1 = periodType0.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(periodType0);
        java.lang.String str3 = mutablePeriod2.toString();
        org.joda.time.PeriodType periodType4 = mutablePeriod2.getPeriodType();
        java.lang.String str5 = periodType4.toString();
        int int6 = periodType4.size();
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0S" + "'", str3, "PT0S");
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PeriodType[Seconds]" + "'", str5, "PeriodType[Seconds]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test08158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08158");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks3 = weeks1.dividedBy((-101));
        org.joda.time.Weeks weeks5 = weeks1.minus(35);
        org.joda.time.Weeks weeks7 = weeks1.minus((-9551));
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = weeks10.plus((int) ' ');
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks16 = weeks14.multipliedBy((int) (short) 0);
        boolean boolean17 = weeks1.isLessThan(weeks14);
        org.joda.time.Weeks weeks19 = weeks14.minus(18);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks19);
    }

    @Test
    public void test08159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08159");
        org.joda.time.Period period2 = new org.joda.time.Period(1644572159127L, 1644572113474L);
        org.joda.time.Period period4 = period2.minusYears(10);
        org.joda.time.Period period6 = period4.minusWeeks((-2));
        org.joda.time.Period period8 = period6.withHours((-52));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test08160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08160");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.Days days3 = days0.plus(days2);
        org.joda.time.Days days4 = org.joda.time.Days.FOUR;
        org.joda.time.Period period5 = days4.toPeriod();
        org.joda.time.Days days7 = org.joda.time.Days.days((int) ' ');
        org.joda.time.Days days9 = days7.minus((int) (byte) 0);
        org.joda.time.Days days10 = days4.minus(days7);
        boolean boolean11 = days0.isGreaterThan(days10);
        org.joda.time.Period period12 = days10.toPeriod();
        org.joda.time.Days days14 = days10.plus(5);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(days14);
    }

    @Test
    public void test08161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08161");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Period period5 = period3.withSeconds((int) '4');
        org.joda.time.Period period7 = period3.plusMonths(36);
        org.joda.time.Period period9 = period3.plusMillis(727);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test08162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08162");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType3 = minutes2.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod4 = minutes2.toMutablePeriod();
        org.joda.time.Period period5 = new org.joda.time.Period((java.lang.Object) minutes2);
        org.joda.time.Minutes minutes6 = minutes2.negated();
        int int7 = minutes6.size();
        org.joda.time.Minutes minutes9 = minutes6.minus(0);
        org.joda.time.Period period11 = new org.joda.time.Period(1644572102137L);
        org.joda.time.Period period13 = period11.withDays(100);
        org.joda.time.PeriodType periodType14 = period11.getPeriodType();
        boolean boolean15 = minutes9.equals((java.lang.Object) periodType14);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test08163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08163");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (short) 10, 1644572077926L, chronology2);
        org.joda.time.Period period5 = period3.plusHours((int) (short) 10);
        org.joda.time.Period period7 = period5.multipliedBy((int) (short) 1);
        org.joda.time.Period period9 = period5.withSeconds(298);
        org.joda.time.Period period11 = period9.withMonths(456368756);
        org.joda.time.PeriodType periodType12 = period9.getPeriodType();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(periodType12);
    }

    @Test
    public void test08164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08164");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days3 = days1.multipliedBy((-1));
        org.joda.time.Days days4 = days1.negated();
        org.joda.time.DurationFieldType durationFieldType5 = days4.getFieldType();
        org.joda.time.Days days6 = org.joda.time.Days.ONE;
        org.joda.time.Days days7 = days6.negated();
        org.joda.time.Days days8 = org.joda.time.Days.ONE;
        org.joda.time.Days days9 = days8.negated();
        org.joda.time.Days days10 = org.joda.time.Days.ONE;
        org.joda.time.Days days11 = days10.negated();
        boolean boolean12 = days9.isGreaterThan(days11);
        org.joda.time.Days days13 = days6.plus(days11);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        boolean boolean33 = interval23.isAfter((org.joda.time.ReadableInterval) interval32);
        org.joda.time.Days days34 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval23);
        boolean boolean35 = days13.isGreaterThan(days34);
        org.joda.time.Days days36 = days4.minus(days34);
        int int37 = days34.getDays();
        org.joda.time.Days days39 = days34.plus((int) (byte) 0);
        org.joda.time.Days days41 = days34.multipliedBy((int) (byte) 0);
        int int42 = days41.size();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
    }

    @Test
    public void test08165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08165");
        org.joda.time.Period period1 = new org.joda.time.Period(1L);
        org.joda.time.Period period3 = period1.withYears((int) ' ');
        org.joda.time.Period period5 = period3.plusDays(3);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.standardSecondsIn(readablePeriod6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.TWO;
        java.lang.String str9 = seconds8.toString();
        org.joda.time.Seconds seconds10 = seconds7.minus(seconds8);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds11.multipliedBy((int) (byte) 1);
        org.joda.time.Period period18 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period20 = period18.plusDays(1);
        org.joda.time.Period period22 = period20.minusYears((int) (short) -1);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period20);
        org.joda.time.DurationFieldType durationFieldType24 = seconds23.getFieldType();
        boolean boolean25 = seconds13.isLessThan(seconds23);
        boolean boolean26 = seconds8.isLessThan(seconds13);
        org.joda.time.Period period27 = period5.minus((org.joda.time.ReadablePeriod) seconds8);
        org.joda.time.DurationFieldType durationFieldType28 = org.joda.time.DurationFieldType.millis();
        java.lang.String str29 = durationFieldType28.toString();
        int int30 = seconds8.get(durationFieldType28);
        org.joda.time.Duration duration31 = seconds8.toStandardDuration();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT2S" + "'", str9, "PT2S");
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "millis" + "'", str29, "millis");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(duration31);
    }

    @Test
    public void test08166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08166");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Chronology chronology10 = interval9.getChronology();
        org.joda.time.Days days11 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((java.lang.Object) interval9);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(chronology10);
        org.junit.Assert.assertNotNull(days11);
    }

    @Test
    public void test08167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08167");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours(1644572132233L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration5 = duration3.plus(1644572076849L);
        long long6 = duration3.getMillis();
        long long7 = duration3.getStandardHours();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology18 = null;
        mutablePeriod13.setPeriod((org.joda.time.ReadableDuration) duration17, chronology18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        org.joda.time.Interval interval29 = interval28.toInterval();
        org.joda.time.DateTime dateTime30 = interval29.getEnd();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        boolean boolean37 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration35.toIntervalTo(readableInstant38);
        org.joda.time.Interval interval40 = interval39.toInterval();
        org.joda.time.DateTime dateTime41 = interval40.getEnd();
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime30, (org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, (org.joda.time.ReadableInstant) dateTime30);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period45 = duration9.toPeriodTo((org.joda.time.ReadableInstant) dateTime30, periodType44);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        org.joda.time.Interval interval55 = interval54.toInterval();
        org.joda.time.DateTime dateTime56 = interval55.getEnd();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant59 = null;
        java.lang.Object obj60 = null;
        org.joda.time.Duration duration61 = new org.joda.time.Duration(obj60);
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant59, (org.joda.time.ReadableDuration) duration61);
        boolean boolean63 = duration58.isShorterThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration61.toIntervalTo(readableInstant64);
        org.joda.time.Interval interval66 = interval65.toInterval();
        org.joda.time.DateTime dateTime67 = interval66.getEnd();
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime56, (org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant71 = null;
        java.lang.Object obj72 = null;
        org.joda.time.Duration duration73 = new org.joda.time.Duration(obj72);
        org.joda.time.Period period74 = new org.joda.time.Period(readableInstant71, (org.joda.time.ReadableDuration) duration73);
        boolean boolean75 = duration70.isShorterThan((org.joda.time.ReadableDuration) duration73);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Interval interval77 = duration73.toIntervalTo(readableInstant76);
        org.joda.time.Interval interval78 = interval77.toInterval();
        org.joda.time.DateTime dateTime79 = interval78.getEnd();
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant82 = null;
        java.lang.Object obj83 = null;
        org.joda.time.Duration duration84 = new org.joda.time.Duration(obj83);
        org.joda.time.Period period85 = new org.joda.time.Period(readableInstant82, (org.joda.time.ReadableDuration) duration84);
        boolean boolean86 = duration81.isShorterThan((org.joda.time.ReadableDuration) duration84);
        org.joda.time.ReadableInstant readableInstant87 = null;
        org.joda.time.Interval interval88 = duration84.toIntervalTo(readableInstant87);
        org.joda.time.Interval interval89 = interval88.toInterval();
        org.joda.time.DateTime dateTime90 = interval89.getEnd();
        org.joda.time.Period period91 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime79, (org.joda.time.ReadableInstant) dateTime90);
        org.joda.time.Minutes minutes92 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime67, (org.joda.time.ReadableInstant) dateTime90);
        org.joda.time.Duration duration93 = period45.toDurationFrom((org.joda.time.ReadableInstant) dateTime90);
        org.joda.time.Period period94 = duration3.toPeriodFrom((org.joda.time.ReadableInstant) dateTime90);
        org.joda.time.PeriodType periodType95 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.Period period96 = duration1.toPeriodTo((org.joda.time.ReadableInstant) dateTime90, periodType95);
        long long97 = duration1.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 52L + "'", long6 == 52L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(dateTime30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(dateTime56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(dateTime67);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(dateTime79);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(interval88);
        org.junit.Assert.assertNotNull(interval89);
        org.junit.Assert.assertNotNull(dateTime90);
        org.junit.Assert.assertNotNull(minutes92);
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertNotNull(period94);
        org.junit.Assert.assertNotNull(periodType95);
        org.junit.Assert.assertNotNull(period96);
        org.junit.Assert.assertTrue("'" + long97 + "' != '" + 5920459676038800000L + "'", long97 == 5920459676038800000L);
    }

    @Test
    public void test08168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08168");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Duration duration11 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean12 = duration4.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes13 = duration4.toStandardMinutes();
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        boolean boolean22 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Interval interval24 = duration20.toIntervalTo(readableInstant23);
        org.joda.time.Interval interval25 = interval24.toInterval();
        org.joda.time.Chronology chronology26 = interval25.getChronology();
        org.joda.time.Period period27 = new org.joda.time.Period(1644572086619L, chronology26);
        org.joda.time.Period period29 = period27.minusMonths(5);
        org.joda.time.Period period31 = period27.plusDays((int) ' ');
        org.joda.time.Duration duration32 = period27.toStandardDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Period period35 = period33.withMinutes(4);
        int int36 = period35.getDays();
        boolean boolean37 = minutes13.equals((java.lang.Object) period35);
        org.joda.time.DurationFieldType durationFieldType38 = minutes13.getFieldType();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(chronology26);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(durationFieldType38);
    }

    @Test
    public void test08169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08169");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(1644572258401L);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        boolean boolean9 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Interval interval11 = duration7.toIntervalTo(readableInstant10);
        org.joda.time.Interval interval12 = interval11.toInterval();
        org.joda.time.DateTime dateTime13 = interval12.getEnd();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        org.joda.time.DateTime dateTime24 = interval23.getEnd();
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime13, (org.joda.time.ReadableInstant) dateTime24);
        long long26 = dateTime24.getMillis();
        org.joda.time.Chronology chronology27 = dateTime24.getChronology();
        org.joda.time.Period period28 = duration2.toPeriod(chronology27);
        org.joda.time.Period period29 = new org.joda.time.Period(0L, chronology27);
        org.joda.time.Period period31 = period29.plusSeconds(55);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(dateTime13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(dateTime24);
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1644572469852L + "'", long26 == 1644572469852L);
        org.junit.Assert.assertNotNull(chronology27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period31);
    }

    @Test
    public void test08170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08170");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (short) 10, 1644572077926L, chronology2);
        org.joda.time.Period period5 = period3.withDays((int) (byte) 10);
        int int6 = period3.size();
        int[] intArray7 = period3.getValues();
        org.joda.time.Period period9 = period3.minusMillis((int) (short) 10);
        org.joda.time.format.PeriodFormatter periodFormatter10 = null;
        java.lang.String str11 = period9.toString(periodFormatter10);
        org.joda.time.Period period13 = period9.minusYears((-963));
        org.joda.time.Period period15 = period13.minusMonths((int) (byte) 1);
        org.joda.time.Period period17 = period13.withMinutes(601);
        org.joda.time.Period period19 = period13.minusHours((int) '#');
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[52, 1, 1, 3, 9, 34, 37, 916]");
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P52Y1M1W3DT9H34M37.906S" + "'", str11, "P52Y1M1W3DT9H34M37.906S");
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test08171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08171");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572081298L, (long) (byte) 1);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        boolean boolean9 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Interval interval11 = duration7.toIntervalTo(readableInstant10);
        org.joda.time.Interval interval12 = interval11.toInterval();
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.millis((long) '4');
        long long21 = duration20.getStandardDays();
        boolean boolean22 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.DateTime dateTime40 = interval39.getEnd();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant43 = null;
        java.lang.Object obj44 = null;
        org.joda.time.Duration duration45 = new org.joda.time.Duration(obj44);
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration45);
        boolean boolean47 = duration42.isShorterThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Interval interval49 = duration45.toIntervalTo(readableInstant48);
        org.joda.time.Interval interval50 = interval49.toInterval();
        org.joda.time.DateTime dateTime51 = interval50.getEnd();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableInterval readableInterval61 = null;
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.minutesIn(readableInterval61);
        java.lang.String str63 = minutes62.toString();
        org.joda.time.PeriodType periodType64 = minutes62.getPeriodType();
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant60, periodType64);
        org.joda.time.PeriodType periodType66 = periodType64.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration27, (org.joda.time.ReadableInstant) dateTime51, periodType66);
        org.joda.time.Interval interval68 = duration15.toIntervalFrom((org.joda.time.ReadableInstant) dateTime51);
        boolean boolean69 = interval12.isBefore((org.joda.time.ReadableInterval) interval68);
        mutablePeriod2.setPeriod((org.joda.time.ReadableInterval) interval68);
        org.joda.time.Duration duration73 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period75 = duration73.toPeriodFrom(readableInstant74);
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = duration73.toPeriod(chronology76);
        java.lang.String str78 = period77.toString();
        org.joda.time.MutablePeriod mutablePeriod79 = period77.toMutablePeriod();
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant82 = null;
        java.lang.Object obj83 = null;
        org.joda.time.Duration duration84 = new org.joda.time.Duration(obj83);
        org.joda.time.Period period85 = new org.joda.time.Period(readableInstant82, (org.joda.time.ReadableDuration) duration84);
        boolean boolean86 = duration81.isShorterThan((org.joda.time.ReadableDuration) duration84);
        org.joda.time.ReadableInstant readableInstant87 = null;
        org.joda.time.Interval interval88 = duration84.toIntervalTo(readableInstant87);
        long long89 = interval88.getStartMillis();
        mutablePeriod79.setPeriod((org.joda.time.ReadableInterval) interval88);
        org.joda.time.Minutes minutes91 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval88);
        long long92 = interval88.getEndMillis();
        org.joda.time.Interval interval93 = interval88.toInterval();
        long long94 = interval88.getEndMillis();
        mutablePeriod2.add((org.joda.time.ReadableInterval) interval88);
        long long96 = interval88.getStartMillis();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(dateTime51);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "PT0M" + "'", str63, "PT0M");
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "PT0.097S" + "'", str78, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod79);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(interval88);
// flaky:         org.junit.Assert.assertTrue("'" + long89 + "' != '" + 1644572470009L + "'", long89 == 1644572470009L);
        org.junit.Assert.assertNotNull(minutes91);
// flaky:         org.junit.Assert.assertTrue("'" + long92 + "' != '" + 1644572470009L + "'", long92 == 1644572470009L);
        org.junit.Assert.assertNotNull(interval93);
// flaky:         org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1644572470009L + "'", long94 == 1644572470009L);
// flaky:         org.junit.Assert.assertTrue("'" + long96 + "' != '" + 1644572470009L + "'", long96 == 1644572470009L);
    }

    @Test
    public void test08172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08172");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        int int3 = weeks1.getWeeks();
        org.joda.time.Weeks weeks5 = weeks1.minus(3);
        org.joda.time.Duration duration6 = weeks1.toStandardDuration();
        org.joda.time.Weeks weeks7 = weeks1.negated();
        org.joda.time.Period period10 = new org.joda.time.Period(0L, (long) 100);
        org.joda.time.Weeks weeks11 = period10.toStandardWeeks();
        org.joda.time.Weeks weeks13 = weeks11.multipliedBy((int) (byte) 1);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks16 = weeks15.negated();
        int int17 = weeks15.getWeeks();
        org.joda.time.Weeks weeks19 = weeks15.minus(3);
        org.joda.time.Period period21 = new org.joda.time.Period((long) (byte) 1);
        boolean boolean22 = weeks15.equals((java.lang.Object) (byte) 1);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks25 = weeks24.negated();
        int int26 = weeks24.getWeeks();
        org.joda.time.Weeks weeks28 = weeks24.minus(3);
        boolean boolean29 = weeks15.isGreaterThan(weeks28);
        boolean boolean30 = weeks11.isGreaterThan(weeks28);
        org.joda.time.Duration duration31 = weeks28.toStandardDuration();
        org.joda.time.Weeks weeks32 = weeks7.plus(weeks28);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(weeks32);
    }

    @Test
    public void test08173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08173");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        mutablePeriod3.setWeeks((int) (short) -1);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration12.toIntervalTo(readableInstant15);
        mutablePeriod3.setPeriod((org.joda.time.ReadableInterval) interval16);
        org.joda.time.Interval interval18 = interval16.toInterval();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration21.toPeriod(chronology23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        org.joda.time.Days days30 = duration28.toStandardDays();
        boolean boolean31 = periodType25.equals((java.lang.Object) duration28);
        boolean boolean32 = duration21.isEqual((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration38 = duration35.minus((long) '4');
        org.joda.time.Duration duration39 = duration21.minus((org.joda.time.ReadableDuration) duration35);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType41 = periodType40.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(periodType41);
        org.joda.time.Period period43 = duration35.toPeriod(periodType41);
        org.joda.time.Period period44 = interval16.toPeriod(periodType41);
        org.joda.time.PeriodType periodType45 = periodType41.withMonthsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType47 = periodType45.getFieldType(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(periodType45);
    }

    @Test
    public void test08174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08174");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572076849L);
        long long2 = duration1.getStandardSeconds();
        org.joda.time.Duration duration4 = new org.joda.time.Duration(1644572076849L);
        boolean boolean5 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        long long6 = duration4.getStandardSeconds();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1644572076L + "'", long2 == 1644572076L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1644572076L + "'", long6 == 1644572076L);
    }

    @Test
    public void test08175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08175");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.dividedBy((int) ' ');
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(periodType7);
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(10L, periodType7);
        int int10 = mutablePeriod9.getMillis();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration18 = duration15.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration20 = duration12.withDurationAdded((org.joda.time.ReadableDuration) duration15, (int) (short) 1);
        org.joda.time.Duration duration23 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration26 = duration23.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration28 = duration12.withDurationAdded((org.joda.time.ReadableDuration) duration26, (int) (short) 100);
        mutablePeriod9.add((org.joda.time.ReadableDuration) duration28);
        mutablePeriod9.addDays(0);
        boolean boolean32 = hours1.equals((java.lang.Object) mutablePeriod9);
        int int33 = mutablePeriod9.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod9.addMonths(246);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test08176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08176");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, periodType7, chronology8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.millis((long) '4');
        long long12 = duration11.getStandardDays();
        boolean boolean13 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration14 = duration1.toDuration();
        org.joda.time.Seconds seconds15 = duration1.toStandardSeconds();
        org.joda.time.Seconds seconds17 = seconds15.dividedBy((-2147483648));
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((-9700));
        org.joda.time.Seconds seconds21 = seconds19.multipliedBy((-35));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
    }

    @Test
    public void test08177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08177");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Period period8 = period4.minusSeconds(10);
        org.joda.time.Period period10 = period4.withWeeks((int) (byte) -1);
        int[] intArray11 = period10.getValues();
        org.joda.time.Minutes minutes12 = period10.toStandardMinutes();
        org.joda.time.Period period14 = period10.plusSeconds(34);
        java.lang.String str15 = period14.toString();
        int int16 = period14.getMillis();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0, -1, 0, 0, 0, 0, -97]");
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-1WT33.903S" + "'", str15, "P-1WT33.903S");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-97) + "'", int16 == (-97));
    }

    @Test
    public void test08178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08178");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.plus((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = seconds4.plus(seconds5);
        org.joda.time.Seconds seconds8 = seconds0.minus(seconds5);
        org.joda.time.PeriodType periodType9 = seconds0.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((java.lang.Object) seconds0);
        org.joda.time.format.PeriodFormatter periodFormatter11 = null;
        java.lang.String str12 = mutablePeriod10.toString(periodFormatter11);
        mutablePeriod10.setSeconds(27409537);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2S" + "'", str6, "PT2S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT3S" + "'", str12, "PT3S");
    }

    @Test
    public void test08179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08179");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.plus((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = seconds4.plus(seconds5);
        org.joda.time.Seconds seconds8 = seconds0.minus(seconds5);
        org.joda.time.Seconds seconds10 = seconds8.multipliedBy((int) (byte) -1);
        org.joda.time.Duration duration11 = seconds10.toStandardDuration();
        org.joda.time.Period period12 = duration11.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.Period period23 = interval22.toPeriod();
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval22);
        long long25 = interval22.getStartMillis();
        org.joda.time.DateTime dateTime26 = interval22.getEnd();
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration11, (org.joda.time.ReadableInstant) dateTime26);
        mutablePeriod27.setMinutes(0);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2S" + "'", str6, "PT2S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(seconds24);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1644572470294L + "'", long25 == 1644572470294L);
        org.junit.Assert.assertNotNull(dateTime26);
    }

    @Test
    public void test08180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08180");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds2 = seconds0.multipliedBy((int) (byte) 1);
        java.lang.String str3 = seconds0.toString();
        org.joda.time.PeriodType periodType4 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = seconds5.plus((-1));
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.TWO;
        java.lang.String str10 = seconds9.toString();
        org.joda.time.Seconds seconds11 = seconds8.plus(seconds9);
        org.joda.time.Seconds seconds12 = seconds0.minus(seconds8);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        org.joda.time.Seconds seconds16 = seconds13.plus((-1));
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.TWO;
        java.lang.String str18 = seconds17.toString();
        org.joda.time.Seconds seconds19 = seconds16.plus(seconds17);
        boolean boolean20 = seconds12.isGreaterThan(seconds16);
        org.joda.time.Seconds seconds22 = seconds16.minus((int) (byte) 0);
        org.joda.time.Period period24 = new org.joda.time.Period((-1L));
        org.joda.time.Seconds seconds25 = period24.toStandardSeconds();
        org.joda.time.Seconds seconds27 = seconds25.dividedBy(1);
        org.joda.time.DurationFieldType durationFieldType28 = seconds25.getFieldType();
        org.joda.time.Seconds seconds30 = seconds25.plus(0);
        org.joda.time.Seconds seconds32 = seconds30.dividedBy((int) (byte) -1);
        org.joda.time.Seconds seconds33 = seconds22.plus(seconds32);
        org.joda.time.Seconds seconds34 = seconds22.negated();
        org.joda.time.Period period35 = seconds34.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT3S" + "'", str3, "PT3S");
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2S" + "'", str10, "PT2S");
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2S" + "'", str18, "PT2S");
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(period35);
    }

    @Test
    public void test08181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08181");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.dayTime();
        org.joda.time.PeriodType periodType3 = periodType2.withSecondsRemoved();
        org.joda.time.PeriodType periodType4 = periodType3.withDaysRemoved();
        org.joda.time.PeriodType periodType5 = periodType4.withMillisRemoved();
        org.joda.time.PeriodType periodType6 = periodType4.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1644572102780L, 1644572455180L, periodType4);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test08182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08182");
        org.joda.time.Period period1 = org.joda.time.Period.parse("P-1M1WT10H1M9.052S");
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test08183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08183");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration8 = period4.toDurationTo(readableInstant7);
        long long9 = duration8.getStandardMinutes();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test08184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08184");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.DateTime dateTime20 = interval9.getStart();
        org.joda.time.Duration duration21 = interval9.toDuration();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType34);
        mutablePeriod35.setYears(0);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology40 = null;
        mutablePeriod35.setPeriod((org.joda.time.ReadableDuration) duration39, chronology40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration47 = duration44.minus((long) '4');
        mutablePeriod35.add((org.joda.time.ReadableDuration) duration47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType50 = periodType49.withHoursRemoved();
        org.joda.time.PeriodType periodType51 = periodType50.withSecondsRemoved();
        boolean boolean52 = mutablePeriod35.equals((java.lang.Object) periodType50);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        org.joda.time.Interval interval62 = interval61.toInterval();
        org.joda.time.Chronology chronology63 = interval62.getChronology();
        org.joda.time.Period period64 = new org.joda.time.Period((java.lang.Object) interval30, periodType50, chronology63);
        org.joda.time.PeriodType periodType65 = periodType50.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((long) (short) 1, (long) (byte) -1);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant73 = null;
        java.lang.Object obj74 = null;
        org.joda.time.Duration duration75 = new org.joda.time.Duration(obj74);
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant73, (org.joda.time.ReadableDuration) duration75);
        boolean boolean77 = duration72.isShorterThan((org.joda.time.ReadableDuration) duration75);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Interval interval79 = duration75.toIntervalTo(readableInstant78);
        org.joda.time.Interval interval80 = interval79.toInterval();
        org.joda.time.Chronology chronology81 = interval80.getChronology();
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((-1L), chronology81);
        mutablePeriod68.add(1644572099705L, chronology81);
        org.joda.time.Period period84 = duration21.toPeriod(periodType65, chronology81);
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period84);
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks87 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks88 = weeks86.minus(weeks87);
        org.joda.time.Weeks weeks90 = weeks87.minus((int) (short) -1);
        boolean boolean91 = weeks85.isGreaterThan(weeks87);
        int int92 = weeks85.getWeeks();
        org.joda.time.Weeks weeks93 = weeks85.negated();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(chronology63);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(interval79);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(chronology81);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(weeks93);
    }

    @Test
    public void test08185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08185");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) -1);
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Weeks weeks3 = period2.toStandardWeeks();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType5 = weeks3.getFieldType(30);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 30");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test08186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08186");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType2 = periodType1.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(2, 36, (int) '4', (-1), (-9700), (-963), (int) (short) 1, (-4));
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        long long22 = interval20.toDurationMillis();
        org.joda.time.Interval interval23 = interval20.toInterval();
        long long24 = interval23.getStartMillis();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.Hours hours44 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval43);
        org.joda.time.Hours hours45 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval43);
        boolean boolean46 = interval33.overlaps((org.joda.time.ReadableInterval) interval43);
        boolean boolean47 = interval23.isBefore((org.joda.time.ReadableInterval) interval33);
        long long48 = interval33.toDurationMillis();
        org.joda.time.Chronology chronology49 = interval33.getChronology();
        org.joda.time.DateTime dateTime50 = interval33.getEnd();
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType52 = periodType51.withMonthsRemoved();
        org.joda.time.PeriodType periodType53 = periodType52.withHoursRemoved();
        org.joda.time.Period period54 = interval33.toPeriod(periodType52);
        mutablePeriod11.setPeriod((org.joda.time.ReadableInterval) interval33);
        org.joda.time.DurationFieldType durationFieldType58 = org.joda.time.DurationFieldType.months();
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant61 = null;
        java.lang.Object obj62 = null;
        org.joda.time.Duration duration63 = new org.joda.time.Duration(obj62);
        org.joda.time.Period period64 = new org.joda.time.Period(readableInstant61, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = duration60.isShorterThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((java.lang.Object) duration60, periodType66, chronology67);
        org.joda.time.Duration duration70 = org.joda.time.Duration.millis((long) '4');
        long long71 = duration70.getStandardDays();
        boolean boolean72 = duration60.isLongerThan((org.joda.time.ReadableDuration) duration70);
        long long73 = duration60.getMillis();
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant76 = null;
        java.lang.Object obj77 = null;
        org.joda.time.Duration duration78 = new org.joda.time.Duration(obj77);
        org.joda.time.Period period79 = new org.joda.time.Period(readableInstant76, (org.joda.time.ReadableDuration) duration78);
        boolean boolean80 = duration75.isShorterThan((org.joda.time.ReadableDuration) duration78);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Interval interval82 = duration78.toIntervalTo(readableInstant81);
        org.joda.time.Interval interval83 = interval82.toInterval();
        org.joda.time.Chronology chronology84 = interval83.getChronology();
        org.joda.time.Period period85 = duration60.toPeriod(chronology84);
        org.joda.time.DurationField durationField86 = durationFieldType58.getField(chronology84);
        mutablePeriod11.setPeriod(1644572113592L, (long) 3, chronology84);
        org.joda.time.Period period88 = new org.joda.time.Period(700L, periodType2, chronology84);
        org.joda.time.Period period90 = period88.minusMonths(0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(interval23);
// flaky:         org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1644572470467L + "'", long24 == 1644572470467L);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(chronology49);
        org.junit.Assert.assertNotNull(dateTime50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 36000000L + "'", long73 == 36000000L);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(interval82);
        org.junit.Assert.assertNotNull(interval83);
        org.junit.Assert.assertNotNull(chronology84);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(durationField86);
        org.junit.Assert.assertNotNull(period90);
    }

    @Test
    public void test08187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08187");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572285761L);
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.junit.Assert.assertNotNull(seconds2);
    }

    @Test
    public void test08188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08188");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572088907L, (long) 3);
        java.lang.Object obj3 = mutablePeriod2.clone();
        org.joda.time.PeriodType periodType4 = mutablePeriod2.getPeriodType();
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "P-52Y-1M-1W-3DT-9H-34M-48.904S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "P-52Y-1M-1W-3DT-9H-34M-48.904S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "P-52Y-1M-1W-3DT-9H-34M-48.904S");
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test08189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08189");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration3 = duration1.plus(1644572076849L);
        org.joda.time.Days days4 = duration1.toStandardDays();
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.eras();
        java.lang.String str6 = durationFieldType5.getName();
        boolean boolean7 = days4.isSupported(durationFieldType5);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration15 = duration12.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration17 = duration9.withDurationAdded((org.joda.time.ReadableDuration) duration12, (int) (short) 1);
        org.joda.time.Days days18 = duration17.toStandardDays();
        org.joda.time.Days days19 = days4.plus(days18);
        org.joda.time.Days days21 = days19.dividedBy((-9700));
        org.joda.time.Days days23 = days19.minus((int) ' ');
        org.joda.time.DurationFieldType durationFieldType24 = days23.getFieldType();
        org.joda.time.Duration duration25 = days23.toStandardDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "eras" + "'", str6, "eras");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(duration25);
    }

    @Test
    public void test08190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08190");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        java.lang.Object obj10 = mutablePeriod9.clone();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.seconds((int) '#');
        int int13 = seconds12.getSeconds();
        int int14 = seconds12.getSeconds();
        org.joda.time.Seconds seconds16 = seconds12.dividedBy((int) (short) 10);
        mutablePeriod9.mergePeriod((org.joda.time.ReadablePeriod) seconds16);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = mutablePeriod9.getValue((-52));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -52");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "P10Y10M97W52DT-1M3.052S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "P10Y10M97W52DT-1M3.052S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "P10Y10M97W52DT-1M3.052S");
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 35 + "'", int13 == 35);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 35 + "'", int14 == 35);
        org.junit.Assert.assertNotNull(seconds16);
    }

    @Test
    public void test08191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08191");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("2022-02-11T09:34:57.703Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:34:57.703Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08192");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(1644572088216L);
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration9 = duration6.plus((long) 'a');
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.Duration duration17 = org.joda.time.Duration.millis((long) '4');
        long long18 = duration17.getStandardDays();
        boolean boolean19 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        org.joda.time.Interval interval36 = interval35.toInterval();
        org.joda.time.DateTime dateTime37 = interval36.getEnd();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant40 = null;
        java.lang.Object obj41 = null;
        org.joda.time.Duration duration42 = new org.joda.time.Duration(obj41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean44 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Interval interval46 = duration42.toIntervalTo(readableInstant45);
        org.joda.time.Interval interval47 = interval46.toInterval();
        org.joda.time.DateTime dateTime48 = interval47.getEnd();
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant52 = null;
        java.lang.Object obj53 = null;
        org.joda.time.Duration duration54 = new org.joda.time.Duration(obj53);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant52, (org.joda.time.ReadableDuration) duration54);
        boolean boolean56 = duration51.isShorterThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.minutesIn(readableInterval58);
        java.lang.String str60 = minutes59.toString();
        org.joda.time.PeriodType periodType61 = minutes59.getPeriodType();
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant57, periodType61);
        org.joda.time.PeriodType periodType63 = periodType61.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, (org.joda.time.ReadableInstant) dateTime48, periodType63);
        org.joda.time.Interval interval65 = duration12.toIntervalFrom((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.Interval interval66 = duration6.toIntervalFrom((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.Period period67 = duration2.toPeriodTo((org.joda.time.ReadableInstant) dateTime48);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours68 = org.joda.time.Hours.hoursBetween(readableInstant0, (org.joda.time.ReadableInstant) dateTime48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadableInstant objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 27409534L + "'", long3 == 27409534L);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT0M" + "'", str60, "PT0M");
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(period67);
    }

    @Test
    public void test08193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08193");
        org.joda.time.Period period1 = org.joda.time.Period.years((-1));
        org.joda.time.Period period3 = period1.withDays((-2147483648));
        int int4 = period1.size();
        int[] intArray5 = period1.getValues();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days6 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot convert period to duration as years is not precise in the period P-1Y");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test08194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08194");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        mutablePeriod3.setWeeks((int) (short) -1);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration12.toIntervalTo(readableInstant15);
        mutablePeriod3.setPeriod((org.joda.time.ReadableInterval) interval16);
        org.joda.time.Interval interval18 = interval16.toInterval();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration21.toPeriod(chronology23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        org.joda.time.Days days30 = duration28.toStandardDays();
        boolean boolean31 = periodType25.equals((java.lang.Object) duration28);
        boolean boolean32 = duration21.isEqual((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration38 = duration35.minus((long) '4');
        org.joda.time.Duration duration39 = duration21.minus((org.joda.time.ReadableDuration) duration35);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType41 = periodType40.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(periodType41);
        org.joda.time.Period period43 = duration35.toPeriod(periodType41);
        org.joda.time.Period period44 = interval16.toPeriod(periodType41);
        java.lang.String str45 = periodType41.getName();
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "MillisNoMillis" + "'", str45, "MillisNoMillis");
    }

    @Test
    public void test08195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08195");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        java.lang.String str7 = period6.toString();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        long long18 = interval17.getStartMillis();
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval17);
        mutablePeriod8.setDays((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod22 = mutablePeriod8.copy();
        int int23 = mutablePeriod8.getWeeks();
        mutablePeriod8.setMinutes(218);
        java.lang.String str26 = mutablePeriod8.toString();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0.097S" + "'", str7, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572470678L + "'", long18 == 1644572470678L);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P10DT218M" + "'", str26, "P10DT218M");
    }

    @Test
    public void test08196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08196");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        org.joda.time.Days days4 = org.joda.time.Days.ONE;
        org.joda.time.Days days5 = days4.negated();
        boolean boolean6 = days3.isGreaterThan(days5);
        org.joda.time.Days days7 = days0.plus(days5);
        java.lang.String str8 = days5.toString();
        org.joda.time.DurationFieldType durationFieldType9 = days5.getFieldType();
        org.joda.time.DurationFieldType durationFieldType10 = days5.getFieldType();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-1D" + "'", str8, "P-1D");
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(durationFieldType10);
    }

    @Test
    public void test08197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08197");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-2147483648));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) weeks1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Value cannot fit in an int: -21646635171840");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test08198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08198");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        mutablePeriod9.addMillis((-1));
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod9);
        int int13 = mutablePeriod5.getYears();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        org.joda.time.Period period24 = interval22.toPeriod();
        org.joda.time.DurationFieldType durationFieldType26 = period24.getFieldType((int) (byte) 0);
        mutablePeriod5.add(durationFieldType26, 59);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(durationFieldType26);
    }

    @Test
    public void test08199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08199");
        org.joda.time.Period period1 = new org.joda.time.Period((-1L));
        org.joda.time.Seconds seconds2 = period1.toStandardSeconds();
        org.joda.time.Seconds seconds4 = seconds2.dividedBy(1);
        org.joda.time.DurationFieldType durationFieldType5 = seconds2.getFieldType();
        org.joda.time.Seconds seconds7 = seconds2.plus(0);
        org.joda.time.Seconds seconds9 = seconds7.dividedBy((int) (byte) -1);
        org.joda.time.Seconds seconds11 = seconds9.multipliedBy(600);
        org.joda.time.Seconds seconds13 = seconds9.multipliedBy(52114);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType15 = seconds14.getFieldType();
        org.joda.time.Seconds seconds17 = seconds14.plus((-1));
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds18.multipliedBy((int) (byte) 1);
        int int21 = seconds20.size();
        org.joda.time.Period period23 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period25 = period23.minusMillis((-1));
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period25);
        boolean boolean27 = seconds20.isGreaterThan(seconds26);
        boolean boolean28 = seconds14.isGreaterThan(seconds20);
        org.joda.time.Seconds seconds30 = seconds14.multipliedBy(8);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds31.multipliedBy((int) (byte) 1);
        java.lang.String str34 = seconds31.toString();
        org.joda.time.PeriodType periodType35 = seconds31.getPeriodType();
        org.joda.time.Seconds seconds36 = seconds30.plus(seconds31);
        org.joda.time.Seconds seconds38 = seconds36.plus((int) (short) 100);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds39.multipliedBy((int) (byte) 1);
        org.joda.time.Period period46 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period48 = period46.plusDays(1);
        org.joda.time.Period period50 = period48.minusYears((int) (short) -1);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period48);
        org.joda.time.DurationFieldType durationFieldType52 = seconds51.getFieldType();
        boolean boolean53 = seconds41.isLessThan(seconds51);
        org.joda.time.Seconds seconds54 = seconds36.plus(seconds41);
        boolean boolean55 = seconds9.isLessThan(seconds36);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT3S" + "'", str34, "PT3S");
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test08200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08200");
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType9 = periodType8.withSecondsRemoved();
        org.joda.time.PeriodType periodType10 = periodType9.withMillisRemoved();
        org.joda.time.PeriodType periodType11 = periodType10.withMinutesRemoved();
        org.joda.time.PeriodType periodType12 = periodType11.withWeeksRemoved();
        org.joda.time.PeriodType periodType13 = periodType11.withWeeksRemoved();
        org.joda.time.PeriodType periodType14 = periodType11.withHoursRemoved();
        java.lang.String str15 = periodType11.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period16 = new org.joda.time.Period((int) '#', 298, 1, (int) '#', 456, 2119021, 1, 31, periodType11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PeriodType[MillisNoMillis]" + "'", str15, "PeriodType[MillisNoMillis]");
    }

    @Test
    public void test08201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08201");
        org.joda.time.Days days1 = org.joda.time.Days.days(2);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.Days days6 = duration4.toStandardDays();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours(1644572080830L);
        int int9 = duration4.compareTo((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.Duration duration17 = org.joda.time.Duration.millis((long) '4');
        long long18 = duration17.getStandardDays();
        boolean boolean19 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType21 = periodType20.withHoursRemoved();
        org.joda.time.Period period22 = duration17.toPeriod(periodType20);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) ' ', chronology24);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType28);
        mutablePeriod29.setYears(0);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology34 = null;
        mutablePeriod29.setPeriod((org.joda.time.ReadableDuration) duration33, chronology34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration40.toIntervalTo(readableInstant43);
        org.joda.time.Interval interval45 = interval44.toInterval();
        org.joda.time.DateTime dateTime46 = interval45.getEnd();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        org.joda.time.Interval interval56 = interval55.toInterval();
        org.joda.time.DateTime dateTime57 = interval56.getEnd();
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime46, (org.joda.time.ReadableInstant) dateTime57);
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, (org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Interval interval68 = duration64.toIntervalTo(readableInstant67);
        org.joda.time.Interval interval69 = interval68.toInterval();
        org.joda.time.DateTime dateTime70 = interval69.getEnd();
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType73 = periodType72.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(periodType73);
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(10L, periodType73);
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime46, (org.joda.time.ReadableInstant) dateTime70, periodType73);
        org.joda.time.Duration duration77 = mutablePeriod25.toDurationFrom((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.Duration duration79 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant80 = null;
        java.lang.Object obj81 = null;
        org.joda.time.Duration duration82 = new org.joda.time.Duration(obj81);
        org.joda.time.Period period83 = new org.joda.time.Period(readableInstant80, (org.joda.time.ReadableDuration) duration82);
        boolean boolean84 = duration79.isShorterThan((org.joda.time.ReadableDuration) duration82);
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.Interval interval86 = duration82.toIntervalTo(readableInstant85);
        org.joda.time.Interval interval87 = interval86.toInterval();
        org.joda.time.DateTime dateTime88 = interval87.getEnd();
        boolean boolean89 = dateTime46.isBefore((org.joda.time.ReadableInstant) dateTime88);
        org.joda.time.Period period90 = duration17.toPeriodTo((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.Period period91 = duration4.toPeriodFrom((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.Days days92 = duration4.toStandardDays();
        boolean boolean93 = days1.isLessThan(days92);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(dateTime70);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(interval86);
        org.junit.Assert.assertNotNull(interval87);
        org.junit.Assert.assertNotNull(dateTime88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertNotNull(days92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test08202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08202");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Period period9 = period4.multipliedBy((int) (byte) 100);
        org.joda.time.Period period11 = period9.withHours((int) (short) 0);
        org.joda.time.Period period13 = period9.withHours((int) (short) 1);
        org.joda.time.Minutes minutes14 = period13.toStandardMinutes();
        org.joda.time.Period period16 = period13.plusWeeks((int) (short) 1);
        org.joda.time.Period period18 = period13.minusWeeks((int) 'a');
        org.joda.time.Period period20 = period13.minusMillis(8);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.DateTime dateTime38 = interval37.getEnd();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant41 = null;
        java.lang.Object obj42 = null;
        org.joda.time.Duration duration43 = new org.joda.time.Duration(obj42);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration43);
        boolean boolean45 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration43.toIntervalTo(readableInstant46);
        org.joda.time.Interval interval48 = interval47.toInterval();
        org.joda.time.DateTime dateTime49 = interval48.getEnd();
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime38, (org.joda.time.ReadableInstant) dateTime49);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant53 = null;
        java.lang.Object obj54 = null;
        org.joda.time.Duration duration55 = new org.joda.time.Duration(obj54);
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant53, (org.joda.time.ReadableDuration) duration55);
        boolean boolean57 = duration52.isShorterThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableInterval readableInterval59 = null;
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.minutesIn(readableInterval59);
        java.lang.String str61 = minutes60.toString();
        org.joda.time.PeriodType periodType62 = minutes60.getPeriodType();
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant58, periodType62);
        org.joda.time.PeriodType periodType64 = periodType62.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration25, (org.joda.time.ReadableInstant) dateTime49, periodType64);
        org.joda.time.PeriodType periodType66 = periodType64.withSecondsRemoved();
        org.joda.time.PeriodType periodType67 = periodType64.withMinutesRemoved();
        org.joda.time.PeriodType periodType68 = periodType67.withWeeksRemoved();
        org.joda.time.PeriodType periodType69 = periodType68.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(periodType68);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period71 = period13.withPeriodType(periodType68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT0M" + "'", str61, "PT0M");
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(periodType69);
    }

    @Test
    public void test08203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08203");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        mutablePeriod9.addMillis((-1));
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        boolean boolean32 = interval22.isAfter((org.joda.time.ReadableInterval) interval31);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval31);
        org.joda.time.DateTime dateTime34 = interval31.getEnd();
        long long35 = interval31.toDurationMillis();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration40.toIntervalTo(readableInstant43);
        org.joda.time.Interval interval45 = interval44.toInterval();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        org.joda.time.Interval interval55 = interval54.toInterval();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant58 = null;
        java.lang.Object obj59 = null;
        org.joda.time.Duration duration60 = new org.joda.time.Duration(obj59);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant58, (org.joda.time.ReadableDuration) duration60);
        boolean boolean62 = duration57.isShorterThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Interval interval64 = duration60.toIntervalTo(readableInstant63);
        boolean boolean65 = interval55.isAfter((org.joda.time.ReadableInterval) interval64);
        org.joda.time.Period period66 = interval64.toPeriod();
        boolean boolean67 = interval45.isBefore((org.joda.time.ReadableInterval) interval64);
        java.lang.String str68 = interval64.toString();
        org.joda.time.DateTime dateTime69 = interval64.getEnd();
        boolean boolean70 = interval31.isBefore((org.joda.time.ReadableInterval) interval64);
        org.joda.time.MutableInterval mutableInterval71 = interval31.toMutableInterval();
        mutablePeriod5.setPeriod((org.joda.time.ReadableInterval) interval31);
        long long73 = interval31.toDurationMillis();
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str68 + "' != '" + "2022-02-11T09:41:10.970Z/2022-02-11T09:41:10.970Z" + "'", str68, "2022-02-11T09:41:10.970Z/2022-02-11T09:41:10.970Z");
        org.junit.Assert.assertNotNull(dateTime69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(mutableInterval71);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
    }

    @Test
    public void test08204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08204");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("2022-02-11T09:34:55.073Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:34:55.073Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08205");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-348), 56, 52, (int) 'a', (-1), 284, 0, (-41));
    }

    @Test
    public void test08206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08206");
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        mutablePeriod5.addWeeks((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray8 = mutablePeriod5.getFieldTypes();
        mutablePeriod5.addMillis((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod();
        mutablePeriod12.setPeriod(100L, (long) (-1));
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        org.joda.time.Interval interval29 = interval28.toInterval();
        org.joda.time.Chronology chronology30 = interval29.getChronology();
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((-1L), chronology30);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology30);
        mutablePeriod12.setPeriod((long) 100, chronology30);
        mutablePeriod5.setPeriod(1644572118718L, chronology30);
        org.joda.time.Period period35 = new org.joda.time.Period(1644572105679L, chronology30);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1644572122681L, 1644572157367L, chronology30);
        mutablePeriod36.addDays((-3));
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant41 = null;
        java.lang.Object obj42 = null;
        org.joda.time.Duration duration43 = new org.joda.time.Duration(obj42);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration43);
        boolean boolean45 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration43.toIntervalTo(readableInstant46);
        org.joda.time.Interval interval48 = interval47.toInterval();
        org.joda.time.DateTime dateTime49 = interval48.getEnd();
        org.joda.time.DateTime dateTime50 = interval48.getStart();
        java.lang.String str51 = dateTime50.toString();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant54 = null;
        java.lang.Object obj55 = null;
        org.joda.time.Duration duration56 = new org.joda.time.Duration(obj55);
        org.joda.time.Period period57 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        boolean boolean58 = duration53.isShorterThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Interval interval60 = duration56.toIntervalTo(readableInstant59);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant63 = null;
        java.lang.Object obj64 = null;
        org.joda.time.Duration duration65 = new org.joda.time.Duration(obj64);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant63, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = duration62.isShorterThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Interval interval69 = duration65.toIntervalTo(readableInstant68);
        org.joda.time.Interval interval70 = interval69.toInterval();
        org.joda.time.Hours hours71 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval70);
        org.joda.time.Hours hours72 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval70);
        boolean boolean73 = interval60.overlaps((org.joda.time.ReadableInterval) interval70);
        org.joda.time.MutableInterval mutableInterval74 = interval60.toMutableInterval();
        org.joda.time.DateTime dateTime75 = interval60.getStart();
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardHours(1644572143611L);
        long long78 = duration77.getStandardHours();
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime75, (org.joda.time.ReadableDuration) duration77);
        mutablePeriod36.setPeriod((org.joda.time.ReadableInstant) dateTime50, (org.joda.time.ReadableInstant) dateTime75);
        org.junit.Assert.assertNotNull(durationFieldTypeArray8);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(chronology30);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertNotNull(dateTime50);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "2022-02-11T09:41:11.050Z" + "'", str51, "2022-02-11T09:41:11.050Z");
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(interval70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(mutableInterval74);
        org.junit.Assert.assertNotNull(dateTime75);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1644572143611L + "'", long78 == 1644572143611L);
    }

    @Test
    public void test08207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08207");
        org.joda.time.Period period1 = org.joda.time.Period.hours((-34));
        java.lang.String str2 = period1.toString();
        org.joda.time.Period period4 = period1.plusMonths(876);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType7);
        mutablePeriod8.setYears(0);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology13 = null;
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration12, chronology13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.DateTime dateTime25 = interval24.getEnd();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime25);
        int int39 = period38.getHours();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType45 = minutes44.getPeriodType();
        org.joda.time.PeriodType periodType46 = periodType45.withYearsRemoved();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((long) '#', periodType45, chronology47);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType45);
        org.joda.time.Period period50 = period38.normalizedStandard(periodType45);
        org.joda.time.PeriodType periodType51 = periodType45.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(periodType45);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period53 = period1.withPeriodType(periodType45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT-34H" + "'", str2, "PT-34H");
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(periodType51);
    }

    @Test
    public void test08208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08208");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("2022-02-11T09:34:57.950Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:34:57.950Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08209");
        org.joda.time.Days days1 = org.joda.time.Days.days(100);
        org.joda.time.Days days3 = days1.minus((int) (short) 0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
    }

    @Test
    public void test08210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08210");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) ' ', chronology1);
        org.joda.time.Duration duration4 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration6 = duration4.plus(1644572076849L);
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration9 = duration6.minus(1644572101476L);
        org.joda.time.Days days10 = duration9.toStandardDays();
        org.joda.time.Days days11 = org.joda.time.Days.ZERO;
        org.joda.time.Days days12 = org.joda.time.Days.ONE;
        org.joda.time.Days days13 = days12.negated();
        int int14 = days11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days12);
        org.joda.time.Days days15 = days10.plus(days12);
        org.joda.time.Days days16 = org.joda.time.Days.SEVEN;
        boolean boolean17 = days15.isLessThan(days16);
        org.joda.time.DurationFieldType durationFieldType18 = days15.getFieldType();
        java.lang.String str19 = durationFieldType18.toString();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "days" + "'", str19, "days");
    }

    @Test
    public void test08211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08211");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration9 = duration6.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes10 = duration9.toStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.DateTime dateTime32 = interval31.getEnd();
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        org.joda.time.Interval interval54 = interval53.toInterval();
        org.joda.time.DateTime dateTime55 = interval54.getEnd();
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime44, (org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.DurationFieldType durationFieldType58 = minutes57.getFieldType();
        org.joda.time.Duration duration61 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration64 = duration61.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes65 = duration64.toStandardMinutes();
        org.joda.time.Duration duration67 = org.joda.time.Duration.millis((long) '4');
        long long68 = duration67.getMillis();
        org.joda.time.Minutes minutes69 = duration67.toStandardMinutes();
        org.joda.time.Minutes minutes70 = minutes69.negated();
        boolean boolean71 = minutes65.isGreaterThan(minutes70);
        org.joda.time.Minutes minutes72 = minutes57.plus(minutes70);
        org.joda.time.Minutes minutes73 = minutes10.minus(minutes57);
        org.joda.time.PeriodType periodType74 = minutes10.getPeriodType();
        org.joda.time.Period period75 = new org.joda.time.Period(1644572352361L, (long) (-68), periodType74);
        org.joda.time.PeriodType periodType76 = periodType74.withMillisRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period77 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 52L + "'", long68 == 52L);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(periodType76);
    }

    @Test
    public void test08212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08212");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (long) 100);
        org.joda.time.Weeks weeks3 = period2.toStandardWeeks();
        org.joda.time.Weeks weeks5 = weeks3.multipliedBy((int) (byte) 1);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks8 = weeks7.negated();
        int int9 = weeks7.getWeeks();
        org.joda.time.Weeks weeks11 = weeks7.minus(3);
        org.joda.time.Period period13 = new org.joda.time.Period((long) (byte) 1);
        boolean boolean14 = weeks7.equals((java.lang.Object) (byte) 1);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks17 = weeks16.negated();
        int int18 = weeks16.getWeeks();
        org.joda.time.Weeks weeks20 = weeks16.minus(3);
        boolean boolean21 = weeks7.isGreaterThan(weeks20);
        boolean boolean22 = weeks3.isGreaterThan(weeks20);
        org.joda.time.Duration duration24 = org.joda.time.Duration.millis((long) '4');
        long long25 = duration24.getMillis();
        org.joda.time.Period period26 = new org.joda.time.Period((java.lang.Object) duration24);
        org.joda.time.Duration duration27 = period26.toStandardDuration();
        boolean boolean28 = weeks20.equals((java.lang.Object) period26);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks31 = weeks30.negated();
        int int32 = weeks30.getWeeks();
        org.joda.time.Weeks weeks34 = weeks30.minus(3);
        org.joda.time.Weeks weeks36 = weeks34.minus(0);
        org.joda.time.Weeks weeks37 = weeks20.plus(weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks38.plus((int) '4');
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean44 = weeks41.isGreaterThan(weeks43);
        org.joda.time.DurationFieldType durationFieldType45 = weeks43.getFieldType();
        boolean boolean46 = weeks38.isGreaterThan(weeks43);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean50 = weeks47.isGreaterThan(weeks49);
        java.lang.String str51 = weeks47.toString();
        org.joda.time.Weeks weeks52 = weeks38.plus(weeks47);
        org.joda.time.PeriodType periodType53 = weeks52.getPeriodType();
        org.joda.time.Weeks weeks54 = weeks20.minus(weeks52);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks56 = weeks52.multipliedBy((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483645 * 35");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 52L + "'", long25 == 52L);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-2147483648W" + "'", str51, "P-2147483648W");
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(weeks54);
    }

    @Test
    public void test08213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08213");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) (byte) 100);
        org.joda.time.Period period3 = period1.plusMinutes(10);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration8 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration11 = duration8.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration13 = duration5.withDurationAdded((org.joda.time.ReadableDuration) duration8, (int) (short) 1);
        org.joda.time.Days days14 = duration13.toStandardDays();
        org.joda.time.DurationFieldType durationFieldType15 = days14.getFieldType();
        int int16 = period1.indexOf(durationFieldType15);
        int int17 = period1.getSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    }

    @Test
    public void test08214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08214");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        org.joda.time.Hours hours14 = hours11.minus(1);
        org.joda.time.PeriodType periodType15 = hours11.getPeriodType();
        org.joda.time.Hours hours17 = hours11.plus(10);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(hours17);
    }

    @Test
    public void test08215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08215");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("P35W");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08216");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.plusDays(1);
        org.joda.time.ReadableInstant readableInstant7 = null;
        java.lang.Object obj8 = null;
        org.joda.time.Duration duration9 = new org.joda.time.Duration(obj8);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.Days days11 = duration9.toStandardDays();
        org.joda.time.Days days12 = days11.negated();
        org.joda.time.Period period13 = period6.plus((org.joda.time.ReadablePeriod) days11);
        org.joda.time.Days days15 = days11.minus((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod16 = days11.toMutablePeriod();
        org.joda.time.Duration duration17 = days11.toStandardDuration();
        org.joda.time.Days days18 = org.joda.time.Days.ONE;
        org.joda.time.Days days19 = days18.negated();
        org.joda.time.Days days21 = days19.multipliedBy((-1));
        org.joda.time.Days days22 = days19.negated();
        org.joda.time.Days days23 = days11.plus(days19);
        org.joda.time.Days days24 = org.joda.time.Days.ONE;
        org.joda.time.Days days25 = days24.negated();
        org.joda.time.Days days26 = org.joda.time.Days.ONE;
        org.joda.time.Days days27 = days26.negated();
        org.joda.time.Days days28 = org.joda.time.Days.ONE;
        org.joda.time.Days days29 = days28.negated();
        boolean boolean30 = days27.isGreaterThan(days29);
        org.joda.time.Days days31 = days24.plus(days29);
        org.joda.time.Days days32 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days24);
        org.joda.time.Days days33 = days11.minus(days24);
        org.joda.time.Duration duration35 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration37 = duration35.plus(1644572076849L);
        org.joda.time.Days days38 = duration35.toStandardDays();
        org.joda.time.Days days39 = org.joda.time.Days.ZERO;
        boolean boolean40 = days38.isGreaterThan(days39);
        org.joda.time.MutablePeriod mutablePeriod41 = days39.toMutablePeriod();
        org.joda.time.Days days42 = org.joda.time.Days.ONE;
        org.joda.time.Days days43 = org.joda.time.Days.ONE;
        org.joda.time.Days days44 = days43.negated();
        org.joda.time.Days days45 = days42.minus(days43);
        org.joda.time.Days days46 = days39.plus(days45);
        org.joda.time.Days days48 = days39.plus(107);
        java.lang.String str49 = days39.toString();
        org.joda.time.Days days50 = days33.plus(days39);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P0D" + "'", str49, "P0D");
        org.junit.Assert.assertNotNull(days50);
    }

    @Test
    public void test08217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08217");
        org.joda.time.format.PeriodFormatter periodFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod2 = org.joda.time.MutablePeriod.parse("PT8.170S", periodFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08218");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) 1);
        mutablePeriod10.setPeriod((org.joda.time.ReadablePeriod) minutes13);
        org.joda.time.PeriodType periodType15 = minutes13.getPeriodType();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.minutesIn(readableInterval18);
        java.lang.String str20 = minutes19.toString();
        org.joda.time.PeriodType periodType21 = minutes19.getPeriodType();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) (short) 10, (long) (byte) -1, periodType21, chronology22);
        boolean boolean24 = minutes13.equals((java.lang.Object) chronology22);
        int int25 = minutes13.getMinutes();
        org.joda.time.Minutes minutes26 = minutes13.negated();
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.Minutes minutes29 = minutes27.dividedBy((int) (byte) 100);
        boolean boolean30 = minutes0.isLessThan(minutes27);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT0M" + "'", str20, "PT0M");
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2147483647 + "'", int25 == 2147483647);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test08219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08219");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) '4');
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        boolean boolean9 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Interval interval11 = duration7.toIntervalTo(readableInstant10);
        org.joda.time.Interval interval12 = interval11.toInterval();
        org.joda.time.DateTime dateTime13 = interval12.getEnd();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        boolean boolean33 = interval23.isAfter((org.joda.time.ReadableInterval) interval32);
        boolean boolean34 = interval12.contains((org.joda.time.ReadableInterval) interval23);
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType37);
        mutablePeriod38.setYears(0);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology43 = null;
        mutablePeriod38.setPeriod((org.joda.time.ReadableDuration) duration42, chronology43);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        org.joda.time.Interval interval54 = interval53.toInterval();
        org.joda.time.DateTime dateTime55 = interval54.getEnd();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant58 = null;
        java.lang.Object obj59 = null;
        org.joda.time.Duration duration60 = new org.joda.time.Duration(obj59);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant58, (org.joda.time.ReadableDuration) duration60);
        boolean boolean62 = duration57.isShorterThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Interval interval64 = duration60.toIntervalTo(readableInstant63);
        org.joda.time.Interval interval65 = interval64.toInterval();
        org.joda.time.DateTime dateTime66 = interval65.getEnd();
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime55, (org.joda.time.ReadableInstant) dateTime66);
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, (org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant71 = null;
        java.lang.Object obj72 = null;
        org.joda.time.Duration duration73 = new org.joda.time.Duration(obj72);
        org.joda.time.Period period74 = new org.joda.time.Period(readableInstant71, (org.joda.time.ReadableDuration) duration73);
        boolean boolean75 = duration70.isShorterThan((org.joda.time.ReadableDuration) duration73);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Interval interval77 = duration73.toIntervalTo(readableInstant76);
        org.joda.time.Interval interval78 = interval77.toInterval();
        org.joda.time.DateTime dateTime79 = interval78.getEnd();
        org.joda.time.PeriodType periodType81 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType82 = periodType81.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(periodType82);
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(10L, periodType82);
        org.joda.time.Period period85 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime55, (org.joda.time.ReadableInstant) dateTime79, periodType82);
        boolean boolean86 = interval23.isAfter((org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.Interval interval87 = duration2.toIntervalFrom((org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.Period period90 = org.joda.time.Period.days((int) ' ');
        int int91 = period90.getSeconds();
        org.joda.time.PeriodType periodType92 = period90.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod93 = new org.joda.time.MutablePeriod(0L, periodType92);
        int int94 = periodType92.size();
        org.joda.time.MutablePeriod mutablePeriod95 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableInstant) dateTime55, periodType92);
        mutablePeriod95.addMonths((int) (byte) 1);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(dateTime13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(dateTime66);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(dateTime79);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(interval87);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(periodType92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 8 + "'", int94 == 8);
    }

    @Test
    public void test08220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08220");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        org.joda.time.Seconds seconds3 = seconds0.plus((-1));
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.TWO;
        java.lang.String str5 = seconds4.toString();
        org.joda.time.Seconds seconds6 = seconds3.plus(seconds4);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds7.multipliedBy((int) (byte) 1);
        java.lang.String str10 = seconds7.toString();
        org.joda.time.PeriodType periodType11 = seconds7.getPeriodType();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType13 = seconds12.getFieldType();
        org.joda.time.Seconds seconds15 = seconds12.plus((-1));
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.TWO;
        java.lang.String str17 = seconds16.toString();
        org.joda.time.Seconds seconds18 = seconds15.plus(seconds16);
        org.joda.time.Seconds seconds19 = seconds7.minus(seconds15);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.Seconds seconds21 = seconds3.minus(seconds20);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.seconds(2);
        org.joda.time.Seconds seconds24 = seconds3.plus(seconds23);
        java.lang.String str25 = seconds3.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT2S" + "'", str5, "PT2S");
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT3S" + "'", str10, "PT3S");
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2S" + "'", str17, "PT2S");
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT-1S" + "'", str25, "PT-1S");
    }

    @Test
    public void test08221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08221");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(0L);
        mutablePeriod1.addMinutes((int) (short) 1);
        int int4 = mutablePeriod1.getWeeks();
        mutablePeriod1.setHours((int) (short) 100);
        mutablePeriod1.setSeconds((-1));
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType11);
        mutablePeriod12.setYears(0);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology17 = null;
        mutablePeriod12.setPeriod((org.joda.time.ReadableDuration) duration16, chronology17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        org.joda.time.Duration duration24 = duration21.minus((long) '4');
        mutablePeriod12.add((org.joda.time.ReadableDuration) duration24);
        mutablePeriod1.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod12);
        int int27 = mutablePeriod1.getHours();
        mutablePeriod1.add(1644572179789L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
    }

    @Test
    public void test08222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08222");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) 'a');
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.Minutes minutes3 = duration2.toStandardMinutes();
        org.joda.time.Minutes minutes4 = minutes3.negated();
        int int5 = minutes3.getMinutes();
        org.joda.time.Duration duration8 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration11 = duration8.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes12 = duration11.toStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration40.toIntervalTo(readableInstant43);
        org.joda.time.Interval interval45 = interval44.toInterval();
        org.joda.time.DateTime dateTime46 = interval45.getEnd();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        org.joda.time.Interval interval56 = interval55.toInterval();
        org.joda.time.DateTime dateTime57 = interval56.getEnd();
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime46, (org.joda.time.ReadableInstant) dateTime57);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableInstant) dateTime57);
        org.joda.time.DurationFieldType durationFieldType60 = minutes59.getFieldType();
        org.joda.time.Duration duration63 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration66 = duration63.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes67 = duration66.toStandardMinutes();
        org.joda.time.Duration duration69 = org.joda.time.Duration.millis((long) '4');
        long long70 = duration69.getMillis();
        org.joda.time.Minutes minutes71 = duration69.toStandardMinutes();
        org.joda.time.Minutes minutes72 = minutes71.negated();
        boolean boolean73 = minutes67.isGreaterThan(minutes72);
        org.joda.time.Minutes minutes74 = minutes59.plus(minutes72);
        org.joda.time.Minutes minutes75 = minutes12.minus(minutes59);
        org.joda.time.Minutes minutes77 = minutes59.minus((-101));
        org.joda.time.Minutes minutes78 = minutes3.minus(minutes59);
        org.joda.time.Minutes minutes80 = minutes59.dividedBy((-2147483648));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 97 + "'", int5 == 97);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 52L + "'", long70 == 52L);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes80);
    }

    @Test
    public void test08223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08223");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds2 = seconds0.multipliedBy((int) (byte) 1);
        int int3 = seconds2.size();
        org.joda.time.Period period5 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period7 = period5.minusMillis((-1));
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period7);
        boolean boolean9 = seconds2.isGreaterThan(seconds8);
        org.joda.time.DurationFieldType durationFieldType10 = seconds8.getFieldType();
        org.joda.time.DurationFieldType durationFieldType11 = seconds8.getFieldType();
        org.joda.time.DurationFieldType durationFieldType12 = seconds8.getFieldType();
        org.joda.time.Seconds seconds14 = seconds8.multipliedBy(8);
        org.joda.time.Seconds seconds16 = seconds8.plus((int) (byte) 10);
        org.joda.time.Seconds seconds18 = seconds16.plus((-52));
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
    }

    @Test
    public void test08224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08224");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType2 = minutes1.getFieldType();
        org.joda.time.Minutes minutes3 = minutes1.negated();
        org.joda.time.PeriodType periodType4 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes6 = minutes1.multipliedBy((int) (short) 10);
        org.joda.time.PeriodType periodType7 = minutes6.getPeriodType();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test08225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08225");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        java.lang.String str37 = dateTime23.toString();
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant41 = null;
        java.lang.Object obj42 = null;
        org.joda.time.Duration duration43 = new org.joda.time.Duration(obj42);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration43);
        boolean boolean45 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration43.toIntervalTo(readableInstant46);
        org.joda.time.Interval interval48 = interval47.toInterval();
        org.joda.time.DateTime dateTime49 = interval48.getEnd();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant52 = null;
        java.lang.Object obj53 = null;
        org.joda.time.Duration duration54 = new org.joda.time.Duration(obj53);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant52, (org.joda.time.ReadableDuration) duration54);
        boolean boolean56 = duration51.isShorterThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Interval interval58 = duration54.toIntervalTo(readableInstant57);
        org.joda.time.Interval interval59 = interval58.toInterval();
        org.joda.time.DateTime dateTime60 = interval59.getEnd();
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime49, (org.joda.time.ReadableInstant) dateTime60);
        org.joda.time.Days days62 = org.joda.time.Days.daysBetween((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant63, (org.joda.time.ReadableDuration) duration65);
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration65.toPeriod(chronology67);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration73 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration76 = duration73.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration78 = duration70.withDurationAdded((org.joda.time.ReadableDuration) duration73, (int) (short) 1);
        boolean boolean79 = duration65.isEqual((org.joda.time.ReadableDuration) duration78);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType81 = periodType80.withDaysRemoved();
        org.joda.time.PeriodType periodType82 = periodType81.withMinutesRemoved();
        org.joda.time.Period period83 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableDuration) duration78, periodType82);
        org.joda.time.MutablePeriod mutablePeriod84 = period83.toMutablePeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "2022-02-11T09:41:11.906Z" + "'", str37, "2022-02-11T09:41:11.906Z");
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(dateTime60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(mutablePeriod84);
    }

    @Test
    public void test08226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08226");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration3 = duration1.plus(1644572076849L);
        org.joda.time.Days days4 = duration1.toStandardDays();
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.eras();
        java.lang.String str6 = durationFieldType5.getName();
        boolean boolean7 = days4.isSupported(durationFieldType5);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration15 = duration12.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration17 = duration9.withDurationAdded((org.joda.time.ReadableDuration) duration12, (int) (short) 1);
        org.joda.time.Days days18 = duration17.toStandardDays();
        org.joda.time.Days days19 = days4.plus(days18);
        org.joda.time.Days days21 = days19.dividedBy((-9700));
        org.joda.time.Days days23 = days19.minus((int) ' ');
        org.joda.time.Days days24 = org.joda.time.Days.ONE;
        org.joda.time.Days days25 = days24.negated();
        org.joda.time.Days days26 = org.joda.time.Days.ONE;
        org.joda.time.Days days27 = days26.negated();
        org.joda.time.Days days28 = org.joda.time.Days.ONE;
        org.joda.time.Days days29 = days28.negated();
        boolean boolean30 = days27.isGreaterThan(days29);
        org.joda.time.Days days31 = days24.plus(days29);
        org.joda.time.Days days32 = null;
        boolean boolean33 = days24.isGreaterThan(days32);
        org.joda.time.Days days35 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.PeriodType periodType36 = days35.getPeriodType();
        boolean boolean37 = days24.isGreaterThan(days35);
        org.joda.time.Days days38 = days19.minus(days35);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((long) ' ', chronology40);
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType44);
        mutablePeriod45.setYears(0);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology50 = null;
        mutablePeriod45.setPeriod((org.joda.time.ReadableDuration) duration49, chronology50);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant54 = null;
        java.lang.Object obj55 = null;
        org.joda.time.Duration duration56 = new org.joda.time.Duration(obj55);
        org.joda.time.Period period57 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        boolean boolean58 = duration53.isShorterThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Interval interval60 = duration56.toIntervalTo(readableInstant59);
        org.joda.time.Interval interval61 = interval60.toInterval();
        org.joda.time.DateTime dateTime62 = interval61.getEnd();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant65 = null;
        java.lang.Object obj66 = null;
        org.joda.time.Duration duration67 = new org.joda.time.Duration(obj66);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant65, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = duration64.isShorterThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Interval interval71 = duration67.toIntervalTo(readableInstant70);
        org.joda.time.Interval interval72 = interval71.toInterval();
        org.joda.time.DateTime dateTime73 = interval72.getEnd();
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime62, (org.joda.time.ReadableInstant) dateTime73);
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, (org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant78 = null;
        java.lang.Object obj79 = null;
        org.joda.time.Duration duration80 = new org.joda.time.Duration(obj79);
        org.joda.time.Period period81 = new org.joda.time.Period(readableInstant78, (org.joda.time.ReadableDuration) duration80);
        boolean boolean82 = duration77.isShorterThan((org.joda.time.ReadableDuration) duration80);
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.Interval interval84 = duration80.toIntervalTo(readableInstant83);
        org.joda.time.Interval interval85 = interval84.toInterval();
        org.joda.time.DateTime dateTime86 = interval85.getEnd();
        org.joda.time.PeriodType periodType88 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType89 = periodType88.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod(periodType89);
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod(10L, periodType89);
        org.joda.time.Period period92 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime62, (org.joda.time.ReadableInstant) dateTime86, periodType89);
        org.joda.time.Duration duration93 = mutablePeriod41.toDurationFrom((org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.Days days94 = duration93.toStandardDays();
        int int95 = days94.getDays();
        org.joda.time.Days days97 = days94.minus((-2));
        boolean boolean98 = days38.isGreaterThan(days94);
        org.joda.time.Duration duration99 = days38.toStandardDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "eras" + "'", str6, "eras");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(dateTime62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(dateTime73);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(interval84);
        org.junit.Assert.assertNotNull(interval85);
        org.junit.Assert.assertNotNull(dateTime86);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertNotNull(days94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertNotNull(days97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(duration99);
    }

    @Test
    public void test08227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08227");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks3 = weeks1.dividedBy((-101));
        int int4 = weeks3.getWeeks();
        java.lang.String str5 = weeks3.toString();
        org.joda.time.Weeks weeks7 = weeks3.dividedBy((-2147483646));
        org.joda.time.Weeks weeks9 = weeks3.minus(876);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P0W" + "'", str5, "P0W");
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
    }

    @Test
    public void test08228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08228");
        org.joda.time.Days days0 = org.joda.time.Days.FOUR;
        org.joda.time.Days days2 = days0.multipliedBy((-1));
        org.joda.time.Days days4 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod6 = days4.toMutablePeriod();
        org.joda.time.Days days7 = days2.plus(days4);
        org.joda.time.Duration duration8 = days2.toStandardDuration();
        org.joda.time.Days days9 = org.joda.time.Days.ONE;
        org.joda.time.Days days10 = days9.negated();
        org.joda.time.Days days11 = org.joda.time.Days.ONE;
        org.joda.time.Days days12 = days11.negated();
        org.joda.time.Days days13 = org.joda.time.Days.ONE;
        org.joda.time.Days days14 = days13.negated();
        boolean boolean15 = days12.isGreaterThan(days14);
        org.joda.time.Days days16 = days9.plus(days14);
        int int17 = days9.getDays();
        org.joda.time.Days days19 = days9.minus(2147483647);
        org.joda.time.Days days21 = days9.plus(35);
        org.joda.time.Days days23 = org.joda.time.Days.days((int) (byte) 1);
        org.joda.time.Days days24 = days23.negated();
        org.joda.time.Days days25 = days9.minus(days23);
        org.joda.time.Days days26 = days2.minus(days25);
        org.joda.time.Days days27 = days2.negated();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
    }

    @Test
    public void test08229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08229");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period1 = org.joda.time.Period.parse("2022-02-11T09:39:10.058Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:39:10.058Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08230");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(1644572440804L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test08231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08231");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        boolean boolean29 = interval19.isAfter((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Period period30 = interval28.toPeriod();
        boolean boolean31 = interval9.isBefore((org.joda.time.ReadableInterval) interval28);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.Duration duration39 = org.joda.time.Duration.millis((long) '4');
        long long40 = duration39.getStandardDays();
        boolean boolean41 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant51 = null;
        java.lang.Object obj52 = null;
        org.joda.time.Duration duration53 = new org.joda.time.Duration(obj52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        boolean boolean55 = duration50.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Interval interval57 = duration53.toIntervalTo(readableInstant56);
        org.joda.time.Interval interval58 = interval57.toInterval();
        org.joda.time.DateTime dateTime59 = interval58.getEnd();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Interval interval68 = duration64.toIntervalTo(readableInstant67);
        org.joda.time.Interval interval69 = interval68.toInterval();
        org.joda.time.DateTime dateTime70 = interval69.getEnd();
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime59, (org.joda.time.ReadableInstant) dateTime70);
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant74 = null;
        java.lang.Object obj75 = null;
        org.joda.time.Duration duration76 = new org.joda.time.Duration(obj75);
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant74, (org.joda.time.ReadableDuration) duration76);
        boolean boolean78 = duration73.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.ReadableInterval readableInterval80 = null;
        org.joda.time.Minutes minutes81 = org.joda.time.Minutes.minutesIn(readableInterval80);
        java.lang.String str82 = minutes81.toString();
        org.joda.time.PeriodType periodType83 = minutes81.getPeriodType();
        org.joda.time.Period period84 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration76, readableInstant79, periodType83);
        org.joda.time.PeriodType periodType85 = periodType83.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration46, (org.joda.time.ReadableInstant) dateTime70, periodType85);
        org.joda.time.Interval interval87 = duration34.toIntervalFrom((org.joda.time.ReadableInstant) dateTime70);
        boolean boolean88 = interval28.overlaps((org.joda.time.ReadableInterval) interval87);
        org.joda.time.MutableInterval mutableInterval89 = interval87.toMutableInterval();
        java.lang.String str90 = interval87.toString();
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod((java.lang.Object) interval87);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(dateTime59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(dateTime70);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "PT0M" + "'", str82, "PT0M");
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(interval87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(mutableInterval89);
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "2022-02-11T09:41:12.199Z/2022-02-11T09:41:12.199Z" + "'", str90, "2022-02-11T09:41:12.199Z/2022-02-11T09:41:12.199Z");
    }

    @Test
    public void test08232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08232");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration7 = duration4.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration9 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration4, (int) (short) 1);
        long long10 = duration1.getStandardDays();
        long long11 = duration1.getStandardHours();
        long long12 = duration1.getStandardMinutes();
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = duration15.toPeriodFrom(readableInstant16);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration15.toPeriod(chronology18);
        java.lang.String str20 = period19.toString();
        org.joda.time.MutablePeriod mutablePeriod21 = period19.toMutablePeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        long long31 = interval30.getStartMillis();
        mutablePeriod21.setPeriod((org.joda.time.ReadableInterval) interval30);
        org.joda.time.Interval interval33 = interval30.toInterval();
        org.joda.time.DateTime dateTime34 = interval30.getStart();
        org.joda.time.Duration duration36 = org.joda.time.Duration.millis((long) '4');
        long long37 = duration36.getMillis();
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType40);
        mutablePeriod41.setYears(0);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology46 = null;
        mutablePeriod41.setPeriod((org.joda.time.ReadableDuration) duration45, chronology46);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        boolean boolean54 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Interval interval56 = duration52.toIntervalTo(readableInstant55);
        org.joda.time.Interval interval57 = interval56.toInterval();
        org.joda.time.DateTime dateTime58 = interval57.getEnd();
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant61 = null;
        java.lang.Object obj62 = null;
        org.joda.time.Duration duration63 = new org.joda.time.Duration(obj62);
        org.joda.time.Period period64 = new org.joda.time.Period(readableInstant61, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = duration60.isShorterThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Interval interval67 = duration63.toIntervalTo(readableInstant66);
        org.joda.time.Interval interval68 = interval67.toInterval();
        org.joda.time.DateTime dateTime69 = interval68.getEnd();
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime58, (org.joda.time.ReadableInstant) dateTime69);
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, (org.joda.time.ReadableInstant) dateTime58);
        java.lang.String str72 = dateTime58.toString();
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, (org.joda.time.ReadableInstant) dateTime58);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant74, (org.joda.time.ReadableDuration) duration76);
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.Period period79 = duration76.toPeriod(chronology78);
        org.joda.time.Minutes minutes80 = duration76.toStandardMinutes();
        org.joda.time.Duration duration81 = duration76.toDuration();
        org.joda.time.Duration duration83 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant84 = null;
        java.lang.Object obj85 = null;
        org.joda.time.Duration duration86 = new org.joda.time.Duration(obj85);
        org.joda.time.Period period87 = new org.joda.time.Period(readableInstant84, (org.joda.time.ReadableDuration) duration86);
        boolean boolean88 = duration83.isShorterThan((org.joda.time.ReadableDuration) duration86);
        org.joda.time.ReadableInstant readableInstant89 = null;
        org.joda.time.ReadableInterval readableInterval90 = null;
        org.joda.time.Minutes minutes91 = org.joda.time.Minutes.minutesIn(readableInterval90);
        java.lang.String str92 = minutes91.toString();
        org.joda.time.PeriodType periodType93 = minutes91.getPeriodType();
        org.joda.time.Period period94 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration86, readableInstant89, periodType93);
        org.joda.time.Period period95 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime58, (org.joda.time.ReadableDuration) duration76, periodType93);
        org.joda.time.PeriodType periodType96 = periodType93.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod97 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime34, periodType93);
        org.joda.time.DateTimeFieldType dateTimeFieldType98 = null;
        boolean boolean99 = dateTime34.isSupported(dateTimeFieldType98);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 600L + "'", long12 == 600L);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT0.097S" + "'", str20, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572472258L + "'", long31 == 1644572472258L);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 52L + "'", long37 == 52L);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(dateTime58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(interval67);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertNotNull(dateTime69);
// flaky:         org.junit.Assert.assertEquals("'" + str72 + "' != '" + "2022-02-11T09:41:12.258Z" + "'", str72, "2022-02-11T09:41:12.258Z");
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(minutes91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "PT0M" + "'", str92, "PT0M");
        org.junit.Assert.assertNotNull(periodType93);
        org.junit.Assert.assertNotNull(periodType96);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test08233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08233");
        org.joda.time.Duration duration3 = org.joda.time.Duration.millis(1644572139243L);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        boolean boolean10 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Interval interval12 = duration8.toIntervalTo(readableInstant11);
        org.joda.time.Interval interval13 = interval12.toInterval();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        boolean boolean23 = interval13.isAfter((org.joda.time.ReadableInterval) interval22);
        org.joda.time.Period period24 = interval22.toPeriod();
        org.joda.time.DateTime dateTime25 = interval22.getStart();
        org.joda.time.Period period27 = org.joda.time.Period.millis(1);
        org.joda.time.Period period29 = period27.minusMinutes((int) (short) -1);
        org.joda.time.Period period31 = period29.withDays(10);
        org.joda.time.PeriodType periodType32 = period31.getPeriodType();
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, (org.joda.time.ReadableInstant) dateTime25, periodType32);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((long) (short) 1, (long) (byte) -1);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant41 = null;
        java.lang.Object obj42 = null;
        org.joda.time.Duration duration43 = new org.joda.time.Duration(obj42);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration43);
        boolean boolean45 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration43.toIntervalTo(readableInstant46);
        org.joda.time.Interval interval48 = interval47.toInterval();
        org.joda.time.Chronology chronology49 = interval48.getChronology();
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((-1L), chronology49);
        mutablePeriod36.add(1644572099705L, chronology49);
        org.joda.time.Period period52 = new org.joda.time.Period(1644572213557L, 1644572278584L, periodType32, chronology49);
        org.joda.time.PeriodType periodType53 = periodType32.withHoursRemoved();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant56 = null;
        java.lang.Object obj57 = null;
        org.joda.time.Duration duration58 = new org.joda.time.Duration(obj57);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant56, (org.joda.time.ReadableDuration) duration58);
        boolean boolean60 = duration55.isShorterThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Interval interval62 = duration58.toIntervalTo(readableInstant61);
        org.joda.time.Duration duration65 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean66 = duration58.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes67 = duration58.toStandardMinutes();
        org.joda.time.Minutes minutes69 = minutes67.multipliedBy((int) '4');
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(0L);
        mutablePeriod71.addMinutes((int) (short) 1);
        org.joda.time.PeriodType periodType82 = null;
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType82);
        org.joda.time.Minutes minutes84 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes86 = minutes84.multipliedBy((int) (short) 1);
        mutablePeriod83.setPeriod((org.joda.time.ReadablePeriod) minutes86);
        boolean boolean88 = mutablePeriod71.equals((java.lang.Object) minutes86);
        org.joda.time.Period period89 = minutes86.toPeriod();
        org.joda.time.DurationFieldType durationFieldType90 = minutes86.getFieldType();
        java.lang.String str91 = durationFieldType90.getName();
        boolean boolean92 = minutes69.isSupported(durationFieldType90);
        java.lang.String str93 = durationFieldType90.getName();
        int int94 = periodType53.indexOf(durationFieldType90);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(chronology49);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "minutes" + "'", str91, "minutes");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "minutes" + "'", str93, "minutes");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 4 + "'", int94 == 4);
    }

    @Test
    public void test08234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08234");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.minusYears((int) (byte) -1);
        org.joda.time.Period period10 = period8.minusHours(3);
        org.joda.time.Period period12 = period10.plusMonths((int) (byte) 100);
        org.joda.time.Period period15 = new org.joda.time.Period(0L, (long) 100);
        org.joda.time.Weeks weeks16 = period15.toStandardWeeks();
        int int18 = period15.getValue(0);
        org.joda.time.Period period19 = period15.negated();
        org.joda.time.Duration duration20 = period19.toStandardDuration();
        org.joda.time.Period period21 = period19.negated();
        boolean boolean22 = period10.equals((java.lang.Object) period21);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test08235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08235");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) '4');
        mutablePeriod1.addSeconds(31);
    }

    @Test
    public void test08236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08236");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis((long) '4');
        long long8 = duration7.getStandardDays();
        boolean boolean9 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType11 = periodType10.withHoursRemoved();
        org.joda.time.Period period12 = duration7.toPeriod(periodType10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.millis((long) '4');
        long long15 = duration14.getMillis();
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType18);
        mutablePeriod19.setYears(0);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology24 = null;
        mutablePeriod19.setPeriod((org.joda.time.ReadableDuration) duration23, chronology24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.DateTime dateTime47 = interval46.getEnd();
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, (org.joda.time.ReadableInstant) dateTime36);
        java.lang.String str50 = dateTime36.toString();
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, (org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Duration duration53 = new org.joda.time.Duration((long) (byte) 1);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType56 = periodType55.withMillisRemoved();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((long) (short) 1, periodType56, chronology57);
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableDuration) duration53, periodType56);
        org.joda.time.ReadableInstant readableInstant60 = null;
        java.lang.Object obj61 = null;
        org.joda.time.Duration duration62 = new org.joda.time.Duration(obj61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant60, (org.joda.time.ReadableDuration) duration62);
        org.joda.time.Period period65 = period63.withSeconds((int) '4');
        org.joda.time.Period period67 = period63.plusWeeks(10);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType70 = periodType69.withMillisRemoved();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = new org.joda.time.Period((long) (short) 1, periodType70, chronology71);
        org.joda.time.PeriodType periodType73 = periodType70.withYearsRemoved();
        org.joda.time.PeriodType periodType74 = periodType70.withMillisRemoved();
        org.joda.time.Period period75 = period67.normalizedStandard(periodType74);
        org.joda.time.PeriodType periodType76 = periodType74.withMillisRemoved();
        org.joda.time.PeriodType periodType77 = periodType74.withWeeksRemoved();
        org.joda.time.PeriodType periodType78 = periodType77.withMinutesRemoved();
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime36, periodType77);
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod(periodType77);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 52L + "'", long15 == 52L);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(dateTime47);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "2022-02-11T09:41:12.378Z" + "'", str50, "2022-02-11T09:41:12.378Z");
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(periodType78);
    }

    @Test
    public void test08237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08237");
        org.joda.time.Period period1 = new org.joda.time.Period(1L);
        int int2 = period1.getWeeks();
        int int3 = period1.getWeeks();
        org.joda.time.Period period12 = new org.joda.time.Period(36, 10, (-97), (-4), 10, (int) (short) 0, (int) (short) -1, (-101));
        org.joda.time.Period period13 = period1.withFields((org.joda.time.ReadablePeriod) period12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardSeconds(1644572096050L);
        org.joda.time.Duration duration17 = duration15.minus(1644572107117L);
        org.joda.time.Hours hours18 = duration17.toStandardHours();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        org.joda.time.Interval interval28 = interval27.toInterval();
        org.joda.time.Hours hours29 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Hours hours30 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Hours hours32 = hours30.minus(8);
        org.joda.time.Hours hours34 = hours32.plus(0);
        org.joda.time.Hours hours35 = hours32.negated();
        org.joda.time.DurationFieldType durationFieldType36 = hours35.getFieldType();
        int int37 = hours18.get(durationFieldType36);
        boolean boolean38 = period13.isSupported(durationFieldType36);
        org.joda.time.Chronology chronology39 = null;
        boolean boolean40 = durationFieldType36.isSupported(chronology39);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 456368756 + "'", int37 == 456368756);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test08238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08238");
        org.joda.time.Period period1 = new org.joda.time.Period((long) '#');
    }

    @Test
    public void test08239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08239");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks5 = weeks2.plus((int) ' ');
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks11 = weeks8.plus((int) ' ');
        boolean boolean12 = weeks2.isGreaterThan(weeks8);
        org.joda.time.DurationFieldType durationFieldType13 = weeks2.getFieldType();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks14.plus((int) '4');
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks17.minus(weeks18);
        org.joda.time.Weeks weeks20 = weeks14.minus(weeks17);
        boolean boolean21 = weeks2.isGreaterThan(weeks14);
        org.joda.time.DurationFieldType durationFieldType22 = weeks14.getFieldType();
        org.joda.time.Weeks weeks24 = weeks14.plus(906);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(weeks24);
    }

    @Test
    public void test08240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08240");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Period period6 = duration5.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = period6.getValue((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test08241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08241");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType2 = periodType1.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(periodType2);
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(10L, periodType2);
        int int5 = mutablePeriod4.getMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        boolean boolean12 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration10.toIntervalTo(readableInstant13);
        org.joda.time.Interval interval15 = interval14.toInterval();
        org.joda.time.DateTime dateTime16 = interval15.getEnd();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.DateTime dateTime27 = interval26.getEnd();
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime16, (org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.DateTime dateTime39 = interval38.getEnd();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Interval interval48 = duration44.toIntervalTo(readableInstant47);
        org.joda.time.Interval interval49 = interval48.toInterval();
        org.joda.time.DateTime dateTime50 = interval49.getEnd();
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableInstant) dateTime50);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime50);
        org.joda.time.DurationFieldType durationFieldType53 = minutes52.getFieldType();
        int int54 = mutablePeriod4.indexOf(durationFieldType53);
        java.lang.String str55 = durationFieldType53.getName();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(dateTime16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(dateTime50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "minutes" + "'", str55, "minutes");
    }

    @Test
    public void test08242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08242");
        org.joda.time.format.PeriodFormatter periodFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period2 = org.joda.time.Period.parse("2022-02-11T09:39:11.177Z", periodFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08243");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Duration duration1 = days0.toStandardDuration();
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType4 = periodType3.withMillisRemoved();
        java.lang.String str5 = periodType4.getName();
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.hours();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Chronology chronology20 = interval19.getChronology();
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((long) 9, chronology20);
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(10L, 1644572107117L, periodType8, chronology20);
        boolean boolean23 = periodType4.equals((java.lang.Object) periodType8);
        java.lang.String str24 = periodType4.getName();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration1.toPeriod(periodType4, chronology25);
        org.joda.time.Period period27 = duration1.toPeriod();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MillisNoMillis" + "'", str5, "MillisNoMillis");
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(chronology20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "MillisNoMillis" + "'", str24, "MillisNoMillis");
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
    }

    @Test
    public void test08244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08244");
        org.joda.time.Days days0 = org.joda.time.Days.FOUR;
        org.joda.time.Period period1 = days0.toPeriod();
        org.joda.time.Days days3 = org.joda.time.Days.days((int) ' ');
        org.joda.time.Days days5 = days3.minus((int) (byte) 0);
        org.joda.time.Days days6 = days0.minus(days3);
        java.lang.String str7 = days0.toString();
        org.joda.time.Days days9 = days0.minus(36000000);
        org.joda.time.Days days10 = days9.negated();
        org.joda.time.Days days12 = days9.minus((-963));
        org.joda.time.DurationFieldType durationFieldType13 = days12.getFieldType();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P4D" + "'", str7, "P4D");
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(durationFieldType13);
    }

    @Test
    public void test08245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08245");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.plus((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = seconds4.plus(seconds5);
        org.joda.time.Seconds seconds8 = seconds0.minus(seconds5);
        org.joda.time.Seconds seconds10 = seconds8.dividedBy(3);
        org.joda.time.Period period11 = new org.joda.time.Period((java.lang.Object) seconds8);
        org.joda.time.PeriodType periodType12 = seconds8.getPeriodType();
        org.joda.time.Seconds seconds13 = null;
        boolean boolean14 = seconds8.isGreaterThan(seconds13);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2S" + "'", str6, "PT2S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test08246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08246");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        long long11 = interval9.getEndMillis();
        org.joda.time.Period period12 = interval9.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        boolean boolean32 = interval22.isAfter((org.joda.time.ReadableInterval) interval31);
        org.joda.time.Period period33 = interval31.toPeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval31);
        boolean boolean35 = interval9.contains((org.joda.time.ReadableInterval) interval31);
        java.lang.String str36 = interval9.toString();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.Period period47 = interval46.toPeriod();
        org.joda.time.MutableInterval mutableInterval48 = interval46.toMutableInterval();
        boolean boolean49 = interval9.isBefore((org.joda.time.ReadableInterval) interval46);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(hours10);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1644572472605L + "'", long11 == 1644572472605L);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "2022-02-11T09:41:12.605Z/2022-02-11T09:41:12.605Z" + "'", str36, "2022-02-11T09:41:12.605Z/2022-02-11T09:41:12.605Z");
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(mutableInterval48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test08247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08247");
        org.joda.time.Period period1 = new org.joda.time.Period(1L);
        org.joda.time.Period period3 = period1.withYears((int) ' ');
        org.joda.time.Period period5 = period3.minusDays(9);
        org.joda.time.Period period7 = period5.withMillis((int) ' ');
        org.joda.time.format.PeriodFormatter periodFormatter8 = null;
        java.lang.String str9 = period7.toString(periodFormatter8);
        org.joda.time.Period period11 = period7.plusYears((int) ' ');
        org.joda.time.Period period13 = period7.plusWeeks(1);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((java.lang.Object) period13, chronology14);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P32Y-9DT0.032S" + "'", str9, "P32Y-9DT0.032S");
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test08248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08248");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(32);
        int int2 = period1.getDays();
        org.joda.time.Period period4 = period1.withDays((int) (byte) 0);
        org.joda.time.Period period6 = period4.plusMillis((int) (short) 1);
        org.joda.time.Period period8 = period6.withHours(30);
        org.joda.time.Weeks weeks9 = period6.toStandardWeeks();
        int int10 = weeks9.size();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test08249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08249");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType4);
        mutablePeriod5.setYears(0);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration9, chronology10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.DateTime dateTime22 = interval21.getEnd();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, (org.joda.time.ReadableInstant) dateTime22);
        java.lang.String str36 = dateTime22.toString();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType41);
        mutablePeriod42.setYears(0);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology47 = null;
        mutablePeriod42.setPeriod((org.joda.time.ReadableDuration) duration46, chronology47);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant51 = null;
        java.lang.Object obj52 = null;
        org.joda.time.Duration duration53 = new org.joda.time.Duration(obj52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        boolean boolean55 = duration50.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Interval interval57 = duration53.toIntervalTo(readableInstant56);
        org.joda.time.Interval interval58 = interval57.toInterval();
        org.joda.time.DateTime dateTime59 = interval58.getEnd();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Interval interval68 = duration64.toIntervalTo(readableInstant67);
        org.joda.time.Interval interval69 = interval68.toInterval();
        org.joda.time.DateTime dateTime70 = interval69.getEnd();
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime59, (org.joda.time.ReadableInstant) dateTime70);
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, (org.joda.time.ReadableInstant) dateTime59);
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period74 = duration38.toPeriodTo((org.joda.time.ReadableInstant) dateTime59, periodType73);
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime59);
        org.joda.time.Minutes minutes76 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.PeriodType periodType77 = minutes76.getPeriodType();
        org.joda.time.Period period78 = duration1.toPeriodFrom((org.joda.time.ReadableInstant) dateTime59, periodType77);
        org.joda.time.PeriodType periodType79 = periodType77.withMinutesRemoved();
        org.joda.time.PeriodType periodType80 = periodType77.withMillisRemoved();
        org.joda.time.PeriodType periodType81 = periodType80.withSecondsRemoved();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "2022-02-11T09:41:12.803Z" + "'", str36, "2022-02-11T09:41:12.803Z");
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(dateTime59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(dateTime70);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType81);
    }

    @Test
    public void test08250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08250");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        mutablePeriod9.addMillis((-1));
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod9);
        mutablePeriod5.setDays((int) ' ');
        int int15 = mutablePeriod5.size();
        org.joda.time.MutablePeriod mutablePeriod16 = mutablePeriod5.copy();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        boolean boolean36 = interval26.isAfter((org.joda.time.ReadableInterval) interval35);
        org.joda.time.DateTime dateTime37 = interval26.getStart();
        org.joda.time.ReadableInstant readableInstant38 = null;
        boolean boolean39 = interval26.isAfter(readableInstant38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval26);
        org.joda.time.Chronology chronology41 = interval26.getChronology();
        org.joda.time.Chronology chronology42 = interval26.getChronology();
        mutablePeriod5.setPeriod((org.joda.time.ReadableInterval) interval26);
        long long44 = interval26.getStartMillis();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        org.joda.time.Interval interval54 = interval53.toInterval();
        org.joda.time.Period period55 = interval54.toPeriod();
        org.joda.time.MutableInterval mutableInterval56 = interval54.toMutableInterval();
        boolean boolean57 = interval26.isAfter((org.joda.time.ReadableInterval) mutableInterval56);
        org.joda.time.Interval interval58 = interval26.toInterval();
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(chronology41);
        org.junit.Assert.assertNotNull(chronology42);
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1644572472835L + "'", long44 == 1644572472835L);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(mutableInterval56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(interval58);
    }

    @Test
    public void test08251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08251");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType2 = periodType1.withMillisRemoved();
        java.lang.String str3 = periodType2.getName();
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.hours();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration12.toIntervalTo(readableInstant15);
        org.joda.time.Interval interval17 = interval16.toInterval();
        org.joda.time.Chronology chronology18 = interval17.getChronology();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) 9, chronology18);
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(10L, 1644572107117L, periodType6, chronology18);
        boolean boolean21 = periodType2.equals((java.lang.Object) periodType6);
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1644572103708L, periodType6);
        mutablePeriod22.setPeriod(1644572292093L);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MillisNoMillis" + "'", str3, "MillisNoMillis");
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(chronology18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test08252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08252");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.format.PeriodFormatter periodFormatter7 = null;
        java.lang.String str8 = period4.toString(periodFormatter7);
        org.joda.time.Hours hours9 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours10 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours11 = hours9.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = hours10.getFieldType();
        org.joda.time.Period period14 = period4.withFieldAdded(durationFieldType12, 0);
        org.joda.time.Period period16 = period14.multipliedBy(3);
        org.joda.time.Period period18 = period16.plusHours((int) (short) 100);
        org.joda.time.Period period20 = period16.withWeeks(0);
        int int21 = period20.getMinutes();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT0.097S" + "'", str8, "PT0.097S");
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test08253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08253");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration3 = duration1.plus(1644572076849L);
        org.joda.time.Days days4 = duration1.toStandardDays();
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.eras();
        java.lang.String str6 = durationFieldType5.getName();
        boolean boolean7 = days4.isSupported(durationFieldType5);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration15 = duration12.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration17 = duration9.withDurationAdded((org.joda.time.ReadableDuration) duration12, (int) (short) 1);
        org.joda.time.Days days18 = duration17.toStandardDays();
        org.joda.time.Days days19 = days4.plus(days18);
        org.joda.time.Days days21 = days19.dividedBy((-9700));
        org.joda.time.Days days23 = days19.minus((int) ' ');
        org.joda.time.Duration duration24 = days23.toStandardDuration();
        org.joda.time.Days days25 = org.joda.time.Days.FOUR;
        org.joda.time.Days days27 = days25.dividedBy((int) '#');
        org.joda.time.PeriodType periodType28 = days25.getPeriodType();
        org.joda.time.Days days29 = days25.negated();
        org.joda.time.Days days30 = org.joda.time.Days.THREE;
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration38 = duration35.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration40 = duration32.withDurationAdded((org.joda.time.ReadableDuration) duration35, (int) (short) 1);
        org.joda.time.Days days41 = duration40.toStandardDays();
        org.joda.time.Days days42 = duration40.toStandardDays();
        org.joda.time.Period period43 = days42.toPeriod();
        org.joda.time.Days days44 = days30.plus(days42);
        org.joda.time.Days days46 = days42.minus(10);
        boolean boolean47 = days25.isLessThan(days42);
        org.joda.time.DurationFieldType durationFieldType48 = days25.getFieldType();
        org.joda.time.Days days49 = days23.plus(days25);
        org.joda.time.Duration duration50 = days25.toStandardDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "eras" + "'", str6, "eras");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(duration50);
    }

    @Test
    public void test08254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08254");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks5 = weeks2.plus((int) ' ');
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks8 = weeks6.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks9.minus(weeks10);
        org.joda.time.Weeks weeks13 = weeks11.multipliedBy(100);
        org.joda.time.PeriodType periodType14 = weeks13.getPeriodType();
        org.joda.time.Period period16 = new org.joda.time.Period(1L);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Period period19 = period16.plus((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks18.minus((int) (short) -1);
        org.joda.time.Weeks weeks23 = weeks18.plus((int) (byte) 1);
        org.joda.time.Weeks weeks24 = weeks13.plus(weeks18);
        org.joda.time.Weeks weeks25 = weeks6.plus(weeks18);
        org.joda.time.Weeks weeks27 = weeks25.minus(100);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Duration duration30 = weeks29.toStandardDuration();
        org.joda.time.Period period33 = new org.joda.time.Period(0L, (long) 100);
        org.joda.time.Weeks weeks34 = period33.toStandardWeeks();
        org.joda.time.Weeks weeks36 = weeks34.multipliedBy((int) (byte) 1);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks39 = weeks38.negated();
        int int40 = weeks38.getWeeks();
        org.joda.time.Weeks weeks42 = weeks38.minus(3);
        org.joda.time.Period period44 = new org.joda.time.Period((long) (byte) 1);
        boolean boolean45 = weeks38.equals((java.lang.Object) (byte) 1);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks48 = weeks47.negated();
        int int49 = weeks47.getWeeks();
        org.joda.time.Weeks weeks51 = weeks47.minus(3);
        boolean boolean52 = weeks38.isGreaterThan(weeks51);
        boolean boolean53 = weeks34.isGreaterThan(weeks51);
        org.joda.time.Weeks weeks54 = weeks29.plus(weeks34);
        org.joda.time.Weeks weeks55 = weeks25.plus(weeks29);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
    }

    @Test
    public void test08255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08255");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("PT-2147483647H");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08256");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis((long) '4');
        long long8 = duration7.getStandardDays();
        boolean boolean9 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.DateTime dateTime27 = interval26.getEnd();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.DateTime dateTime38 = interval37.getEnd();
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.minutesIn(readableInterval48);
        java.lang.String str50 = minutes49.toString();
        org.joda.time.PeriodType periodType51 = minutes49.getPeriodType();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant47, periodType51);
        org.joda.time.PeriodType periodType53 = periodType51.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, (org.joda.time.ReadableInstant) dateTime38, periodType53);
        org.joda.time.Interval interval55 = duration2.toIntervalFrom((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration60 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration63 = duration60.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration65 = duration57.withDurationAdded((org.joda.time.ReadableDuration) duration60, (int) (short) 1);
        org.joda.time.Duration duration68 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration71 = duration68.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration73 = duration57.withDurationAdded((org.joda.time.ReadableDuration) duration71, (int) (short) 100);
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime38, (org.joda.time.ReadableDuration) duration73);
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod((java.lang.Object) period74);
        mutablePeriod75.setYears((-97));
        mutablePeriod75.setPeriod(2, (int) '4', 97, 0, 32, 36000000, 34, 0);
        org.joda.time.PeriodType periodType87 = mutablePeriod75.getPeriodType();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT0M" + "'", str50, "PT0M");
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(periodType87);
    }

    @Test
    public void test08257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08257");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        mutablePeriod9.setPeriod((int) '#', 35, (-963), (int) ' ', (int) '4', (-1), (-869), 876);
        mutablePeriod9.setPeriod(1644572230081L);
    }

    @Test
    public void test08258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08258");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("2022-02-11T09:34:58.114Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:34:58.114Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08259");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutesIn(readableInterval0);
        org.joda.time.Minutes minutes2 = minutes1.negated();
        org.joda.time.Duration duration4 = org.joda.time.Duration.millis((long) '4');
        long long5 = duration4.getMillis();
        org.joda.time.Minutes minutes6 = duration4.toStandardMinutes();
        org.joda.time.Minutes minutes7 = minutes6.negated();
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration13 = duration10.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes14 = duration13.toStandardMinutes();
        org.joda.time.Duration duration16 = org.joda.time.Duration.millis((long) '4');
        long long17 = duration16.getMillis();
        org.joda.time.Minutes minutes18 = duration16.toStandardMinutes();
        org.joda.time.Minutes minutes19 = minutes18.negated();
        boolean boolean20 = minutes14.isGreaterThan(minutes19);
        int int21 = minutes14.getMinutes();
        boolean boolean22 = minutes6.isLessThan(minutes14);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.minutes((int) (short) -1);
        boolean boolean25 = minutes14.isGreaterThan(minutes24);
        boolean boolean26 = minutes1.isGreaterThan(minutes24);
        org.joda.time.Minutes minutes27 = minutes24.negated();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        long long38 = interval36.toDurationMillis();
        org.joda.time.Interval interval39 = interval36.toInterval();
        boolean boolean40 = minutes27.equals((java.lang.Object) interval39);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 52L + "'", long5 == 52L);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 52L + "'", long17 == 52L);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test08260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08260");
        org.joda.time.Period period1 = org.joda.time.Period.hours(2719);
        org.joda.time.Period period2 = period1.toPeriod();
        int int3 = period2.getWeeks();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test08261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08261");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis((long) '4');
        long long8 = duration7.getStandardDays();
        boolean boolean9 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.DateTime dateTime27 = interval26.getEnd();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.DateTime dateTime38 = interval37.getEnd();
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.minutesIn(readableInterval48);
        java.lang.String str50 = minutes49.toString();
        org.joda.time.PeriodType periodType51 = minutes49.getPeriodType();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant47, periodType51);
        org.joda.time.PeriodType periodType53 = periodType51.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, (org.joda.time.ReadableInstant) dateTime38, periodType53);
        org.joda.time.Interval interval55 = duration2.toIntervalFrom((org.joda.time.ReadableInstant) dateTime38);
        java.lang.String str56 = interval55.toString();
        org.joda.time.DateTime dateTime57 = interval55.getStart();
        org.joda.time.MutableInterval mutableInterval58 = interval55.toMutableInterval();
        org.joda.time.DateTime dateTime59 = mutableInterval58.getEnd();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT0M" + "'", str50, "PT0M");
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(interval55);
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "2022-02-11T09:41:13.154Z/2022-02-11T09:41:13.154Z" + "'", str56, "2022-02-11T09:41:13.154Z/2022-02-11T09:41:13.154Z");
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertNotNull(mutableInterval58);
        org.junit.Assert.assertNotNull(dateTime59);
    }

    @Test
    public void test08262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08262");
        org.joda.time.Period period4 = new org.joda.time.Period(21262214, (int) (byte) 10, (-11), 0);
    }

    @Test
    public void test08263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08263");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Chronology chronology10 = interval9.getChronology();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        boolean boolean41 = interval31.isAfter((org.joda.time.ReadableInterval) interval40);
        boolean boolean42 = interval20.contains((org.joda.time.ReadableInterval) interval31);
        org.joda.time.PeriodType periodType45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType45);
        mutablePeriod46.setYears(0);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology51 = null;
        mutablePeriod46.setPeriod((org.joda.time.ReadableDuration) duration50, chronology51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        org.joda.time.Interval interval62 = interval61.toInterval();
        org.joda.time.DateTime dateTime63 = interval62.getEnd();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant66 = null;
        java.lang.Object obj67 = null;
        org.joda.time.Duration duration68 = new org.joda.time.Duration(obj67);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant66, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = duration65.isShorterThan((org.joda.time.ReadableDuration) duration68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Interval interval72 = duration68.toIntervalTo(readableInstant71);
        org.joda.time.Interval interval73 = interval72.toInterval();
        org.joda.time.DateTime dateTime74 = interval73.getEnd();
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableInstant) dateTime74);
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, (org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant79 = null;
        java.lang.Object obj80 = null;
        org.joda.time.Duration duration81 = new org.joda.time.Duration(obj80);
        org.joda.time.Period period82 = new org.joda.time.Period(readableInstant79, (org.joda.time.ReadableDuration) duration81);
        boolean boolean83 = duration78.isShorterThan((org.joda.time.ReadableDuration) duration81);
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Interval interval85 = duration81.toIntervalTo(readableInstant84);
        org.joda.time.Interval interval86 = interval85.toInterval();
        org.joda.time.DateTime dateTime87 = interval86.getEnd();
        org.joda.time.PeriodType periodType89 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType90 = periodType89.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod(periodType90);
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod(10L, periodType90);
        org.joda.time.Period period93 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableInstant) dateTime87, periodType90);
        boolean boolean94 = interval31.isAfter((org.joda.time.ReadableInstant) dateTime63);
        boolean boolean95 = interval9.isBefore((org.joda.time.ReadableInterval) interval31);
        org.joda.time.Interval interval96 = interval31.toInterval();
        org.joda.time.Chronology chronology97 = interval96.getChronology();
        long long98 = interval96.getEndMillis();
        org.joda.time.Minutes minutes99 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval96);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(chronology10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(dateTime63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(interval85);
        org.junit.Assert.assertNotNull(interval86);
        org.junit.Assert.assertNotNull(dateTime87);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(periodType90);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(interval96);
        org.junit.Assert.assertNotNull(chronology97);
// flaky:         org.junit.Assert.assertTrue("'" + long98 + "' != '" + 1644572473221L + "'", long98 == 1644572473221L);
        org.junit.Assert.assertNotNull(minutes99);
    }

    @Test
    public void test08264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08264");
        java.lang.Object obj0 = null;
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod();
        mutablePeriod2.setPeriod(100L, (long) (-1));
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Chronology chronology20 = interval19.getChronology();
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((-1L), chronology20);
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology20);
        mutablePeriod2.setPeriod((long) 100, chronology20);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(obj0, periodType1, chronology20);
        org.joda.time.Hours hours25 = org.joda.time.Hours.FOUR;
        org.joda.time.Hours hours27 = hours25.dividedBy(32);
        org.joda.time.Period period29 = org.joda.time.Period.minutes((-101));
        org.joda.time.Period period31 = org.joda.time.Period.days((-97));
        org.joda.time.Period period32 = period29.minus((org.joda.time.ReadablePeriod) period31);
        boolean boolean33 = hours27.equals((java.lang.Object) period31);
        java.lang.String str34 = hours27.toString();
        org.joda.time.Hours hours36 = hours27.plus(9);
        mutablePeriod24.add((org.joda.time.ReadablePeriod) hours27);
        int int38 = mutablePeriod24.getDays();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod24.addMillis(685);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(chronology20);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT0H" + "'", str34, "PT0H");
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test08265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08265");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.Period period10 = period6.minusMonths(100);
        org.joda.time.Period period12 = period10.withDays((-2));
        int int13 = period12.getWeeks();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test08266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08266");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        mutablePeriod9.addDays(0);
        java.lang.Object obj16 = mutablePeriod9.clone();
        mutablePeriod9.addHours((-1));
        org.joda.time.Period period19 = mutablePeriod9.toPeriod();
        int int20 = period19.getSeconds();
        int int21 = period19.getSeconds();
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "PT-1H2147483647M");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "PT-1H2147483647M");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "PT-1H2147483647M");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test08267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08267");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        boolean boolean30 = interval20.isAfter((org.joda.time.ReadableInterval) interval29);
        boolean boolean31 = interval9.contains((org.joda.time.ReadableInterval) interval20);
        org.joda.time.Hours hours32 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        long long33 = interval9.toDurationMillis();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        org.joda.time.Interval interval54 = interval53.toInterval();
        org.joda.time.DateTime dateTime55 = interval54.getEnd();
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime44, (org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.Instant instant57 = dateTime55.toInstant();
        java.lang.String str58 = instant57.toString();
        boolean boolean59 = interval9.contains((org.joda.time.ReadableInstant) instant57);
        long long60 = instant57.getMillis();
        java.lang.String str61 = instant57.toString();
        org.joda.time.ReadableInstant readableInstant62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks63 = org.joda.time.Weeks.weeksBetween((org.joda.time.ReadableInstant) instant57, readableInstant62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadableInstant objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertNotNull(instant57);
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "2022-02-11T09:41:13.347Z" + "'", str58, "2022-02-11T09:41:13.347Z");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1644572473347L + "'", long60 == 1644572473347L);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "2022-02-11T09:41:13.347Z" + "'", str61, "2022-02-11T09:41:13.347Z");
    }

    @Test
    public void test08268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08268");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 0);
        java.lang.String str2 = period1.toString();
        int int3 = period1.getMillis();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        boolean boolean10 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Interval interval12 = duration8.toIntervalTo(readableInstant11);
        org.joda.time.Interval interval13 = interval12.toInterval();
        org.joda.time.DateTime dateTime14 = interval13.getEnd();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        boolean boolean34 = interval24.isAfter((org.joda.time.ReadableInterval) interval33);
        boolean boolean35 = interval13.contains((org.joda.time.ReadableInterval) interval24);
        org.joda.time.Hours hours36 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval13);
        org.joda.time.DurationFieldType durationFieldType37 = hours36.getFieldType();
        org.joda.time.Period period38 = period1.plus((org.joda.time.ReadablePeriod) hours36);
        org.joda.time.Hours hours40 = hours36.dividedBy(601);
        org.joda.time.Hours hours42 = hours36.minus((-59));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType44 = hours36.getFieldType((-21262214));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -21262214");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0S" + "'", str2, "PT0S");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
    }

    @Test
    public void test08269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08269");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        long long9 = interval8.getStartMillis();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval8);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.Minutes minutes13 = minutes10.negated();
        org.joda.time.Duration duration14 = minutes10.toStandardDuration();
        java.lang.String str15 = minutes10.toString();
        org.joda.time.MutablePeriod mutablePeriod16 = minutes10.toMutablePeriod();
        org.joda.time.Duration duration17 = minutes10.toStandardDuration();
        java.lang.String str18 = minutes10.toString();
        org.joda.time.DurationFieldType durationFieldType19 = minutes10.getFieldType();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1644572473426L + "'", long9 == 1644572473426L);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT0M" + "'", str15, "PT0M");
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT0M" + "'", str18, "PT0M");
        org.junit.Assert.assertNotNull(durationFieldType19);
    }

    @Test
    public void test08270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08270");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(52, 32, (int) (short) -1, 0);
        org.joda.time.DurationFieldType durationFieldType6 = mutablePeriod4.getFieldType(0);
        mutablePeriod4.setMonths((-53));
        org.junit.Assert.assertNotNull(durationFieldType6);
    }

    @Test
    public void test08271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08271");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(24L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test08272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08272");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = weeks0.minus(weeks3);
        org.joda.time.PeriodType periodType6 = weeks5.getPeriodType();
        int int7 = weeks5.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test08273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08273");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.dividedBy((int) ' ');
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(periodType7);
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(10L, periodType7);
        int int10 = mutablePeriod9.getMillis();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration18 = duration15.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration20 = duration12.withDurationAdded((org.joda.time.ReadableDuration) duration15, (int) (short) 1);
        org.joda.time.Duration duration23 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration26 = duration23.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration28 = duration12.withDurationAdded((org.joda.time.ReadableDuration) duration26, (int) (short) 100);
        mutablePeriod9.add((org.joda.time.ReadableDuration) duration28);
        mutablePeriod9.addDays(0);
        boolean boolean32 = hours1.equals((java.lang.Object) mutablePeriod9);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.Hours hours43 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval42);
        org.joda.time.Hours hours44 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval42);
        org.joda.time.DurationFieldType durationFieldType45 = hours44.getFieldType();
        org.joda.time.Hours hours47 = hours44.minus(1);
        org.joda.time.Duration duration50 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = duration50.toPeriodFrom(readableInstant51);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration50.toPeriod(chronology53);
        org.joda.time.Period period56 = period54.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval57 = null;
        org.joda.time.Hours hours58 = org.joda.time.Hours.hoursIn(readableInterval57);
        org.joda.time.Period period59 = period56.minus((org.joda.time.ReadablePeriod) hours58);
        org.joda.time.Hours hours60 = hours58.negated();
        org.joda.time.Hours hours61 = hours47.plus(hours60);
        org.joda.time.Hours hours62 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours63 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours64 = hours62.minus(hours63);
        org.joda.time.DurationFieldType durationFieldType65 = hours63.getFieldType();
        boolean boolean66 = hours61.isLessThan(hours63);
        org.joda.time.ReadableInterval readableInterval67 = null;
        org.joda.time.Hours hours68 = org.joda.time.Hours.hoursIn(readableInterval67);
        org.joda.time.Hours hours70 = hours68.minus((int) (byte) 100);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant73 = null;
        java.lang.Object obj74 = null;
        org.joda.time.Duration duration75 = new org.joda.time.Duration(obj74);
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant73, (org.joda.time.ReadableDuration) duration75);
        boolean boolean77 = duration72.isShorterThan((org.joda.time.ReadableDuration) duration75);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Interval interval79 = duration75.toIntervalTo(readableInstant78);
        org.joda.time.Interval interval80 = interval79.toInterval();
        org.joda.time.Hours hours81 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval80);
        org.joda.time.Hours hours83 = hours81.dividedBy(1);
        org.joda.time.Hours hours85 = hours81.minus((int) (short) 1);
        boolean boolean86 = hours68.isGreaterThan(hours85);
        org.joda.time.Hours hours88 = hours68.plus(32);
        org.joda.time.Hours hours89 = hours63.plus(hours68);
        org.joda.time.Hours hours90 = hours1.plus(hours68);
        org.joda.time.PeriodType periodType91 = hours68.getPeriodType();
        org.joda.time.Hours hours93 = hours68.multipliedBy((-4));
        org.joda.time.Hours hours95 = hours93.multipliedBy(46);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(interval79);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertNotNull(periodType91);
        org.junit.Assert.assertNotNull(hours93);
        org.junit.Assert.assertNotNull(hours95);
    }

    @Test
    public void test08274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08274");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        long long3 = duration1.getStandardMinutes();
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.Duration duration5 = duration1.plus(readableDuration4);
        org.joda.time.Duration duration6 = duration5.toDuration();
        org.joda.time.Duration duration8 = new org.joda.time.Duration(1644572090932L);
        org.joda.time.Duration duration10 = duration8.withMillis((long) 32);
        org.joda.time.Duration duration12 = org.joda.time.Duration.millis((long) '4');
        long long13 = duration12.getMillis();
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType16);
        mutablePeriod17.setYears(0);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology22 = null;
        mutablePeriod17.setPeriod((org.joda.time.ReadableDuration) duration21, chronology22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.DateTime dateTime45 = interval44.getEnd();
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, (org.joda.time.ReadableInstant) dateTime34);
        java.lang.String str48 = dateTime34.toString();
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant52 = null;
        java.lang.Object obj53 = null;
        org.joda.time.Duration duration54 = new org.joda.time.Duration(obj53);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant52, (org.joda.time.ReadableDuration) duration54);
        boolean boolean56 = duration51.isShorterThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Interval interval58 = duration54.toIntervalTo(readableInstant57);
        org.joda.time.Interval interval59 = interval58.toInterval();
        org.joda.time.DateTime dateTime60 = interval59.getEnd();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant63 = null;
        java.lang.Object obj64 = null;
        org.joda.time.Duration duration65 = new org.joda.time.Duration(obj64);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant63, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = duration62.isShorterThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Interval interval69 = duration65.toIntervalTo(readableInstant68);
        org.joda.time.Interval interval70 = interval69.toInterval();
        org.joda.time.DateTime dateTime71 = interval70.getEnd();
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime60, (org.joda.time.ReadableInstant) dateTime71);
        org.joda.time.Days days73 = org.joda.time.Days.daysBetween((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableInstant) dateTime71);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant74, (org.joda.time.ReadableDuration) duration76);
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.Period period79 = duration76.toPeriod(chronology78);
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration84 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration87 = duration84.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration89 = duration81.withDurationAdded((org.joda.time.ReadableDuration) duration84, (int) (short) 1);
        boolean boolean90 = duration76.isEqual((org.joda.time.ReadableDuration) duration89);
        org.joda.time.PeriodType periodType91 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType92 = periodType91.withDaysRemoved();
        org.joda.time.PeriodType periodType93 = periodType92.withMinutesRemoved();
        org.joda.time.Period period94 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableDuration) duration89, periodType93);
        org.joda.time.Duration duration96 = duration8.withDurationAdded((org.joda.time.ReadableDuration) duration89, 36000000);
        boolean boolean97 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 52L + "'", long13 == 52L);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(dateTime45);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "2022-02-11T09:41:13.538Z" + "'", str48, "2022-02-11T09:41:13.538Z");
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(dateTime60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(interval70);
        org.junit.Assert.assertNotNull(dateTime71);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(periodType91);
        org.junit.Assert.assertNotNull(periodType92);
        org.junit.Assert.assertNotNull(periodType93);
        org.junit.Assert.assertNotNull(duration96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test08275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08275");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("2022-02-11T09:36:21.573Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:36:21.573Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08276");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Period period9 = period4.multipliedBy((int) (byte) 100);
        org.joda.time.Period period11 = period9.withHours((int) (short) 0);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType24);
        mutablePeriod25.setYears(0);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology30 = null;
        mutablePeriod25.setPeriod((org.joda.time.ReadableDuration) duration29, chronology30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration37 = duration34.minus((long) '4');
        mutablePeriod25.add((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType40 = periodType39.withHoursRemoved();
        org.joda.time.PeriodType periodType41 = periodType40.withSecondsRemoved();
        boolean boolean42 = mutablePeriod25.equals((java.lang.Object) periodType40);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant45 = null;
        java.lang.Object obj46 = null;
        org.joda.time.Duration duration47 = new org.joda.time.Duration(obj46);
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration47);
        boolean boolean49 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Interval interval51 = duration47.toIntervalTo(readableInstant50);
        org.joda.time.Interval interval52 = interval51.toInterval();
        org.joda.time.Chronology chronology53 = interval52.getChronology();
        org.joda.time.Period period54 = new org.joda.time.Period((java.lang.Object) interval20, periodType40, chronology53);
        boolean boolean55 = period9.equals((java.lang.Object) period54);
        int int56 = period9.getYears();
        int int57 = period9.getSeconds();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(chronology53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test08277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08277");
        org.joda.time.Period period4 = new org.joda.time.Period(46, (-2147483646), 592, (-44));
    }

    @Test
    public void test08278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08278");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (short) 10, 1644572077926L, chronology2);
        org.joda.time.Period period5 = period3.withDays((int) (byte) 10);
        int int6 = period5.getYears();
        org.joda.time.Period period7 = period5.toPeriod();
        org.joda.time.Period period8 = period5.toPeriod();
        org.joda.time.Period period10 = period5.withMinutes(59);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot convert period to duration as years is not precise in the period P52Y1M1W10DT9H59M37.916S");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test08279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08279");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-1), (-97), (int) (short) -1, (-101), (int) (byte) 100, 9, (-101), (int) (byte) 100);
        org.joda.time.format.PeriodFormatter periodFormatter9 = null;
        java.lang.String str10 = mutablePeriod8.toString(periodFormatter9);
        int int11 = mutablePeriod8.size();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration20 = duration17.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration22 = duration14.withDurationAdded((org.joda.time.ReadableDuration) duration17, (int) (short) 1);
        long long23 = duration14.getStandardDays();
        long long24 = duration14.getStandardHours();
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.standard();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.Chronology chronology38 = interval37.getChronology();
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((long) (byte) -1, 52L, periodType27, chronology38);
        org.joda.time.Period period40 = duration14.toPeriod(chronology38);
        mutablePeriod8.add(1644572143374L, chronology38);
        mutablePeriod8.setPeriod(1644572330012L, 1644572388869L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "P-1Y-97M-1W-101DT100H9M-100.900S" + "'", str10, "P-1Y-97M-1W-101DT100H9M-100.900S");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10L + "'", long24 == 10L);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(chronology38);
        org.junit.Assert.assertNotNull(period40);
    }

    @Test
    public void test08280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08280");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        org.joda.time.Days days4 = org.joda.time.Days.ONE;
        org.joda.time.Days days5 = days4.negated();
        boolean boolean6 = days3.isGreaterThan(days5);
        org.joda.time.Days days7 = days0.plus(days5);
        org.joda.time.PeriodType periodType8 = days7.getPeriodType();
        org.joda.time.PeriodType periodType9 = periodType8.withMinutesRemoved();
        org.joda.time.PeriodType periodType10 = periodType8.withMillisRemoved();
        org.joda.time.PeriodType periodType11 = periodType10.withMinutesRemoved();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = duration14.toPeriodFrom(readableInstant15);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration14.toPeriod(chronology17);
        org.joda.time.Period period20 = period18.withYears((int) (byte) 10);
        org.joda.time.Period period22 = period18.minusMonths(100);
        org.joda.time.Period period24 = period22.withDays((-2));
        org.joda.time.Days days25 = org.joda.time.Days.ONE;
        org.joda.time.Days days26 = days25.negated();
        org.joda.time.Days days27 = org.joda.time.Days.ONE;
        org.joda.time.Days days28 = days27.negated();
        org.joda.time.Days days29 = org.joda.time.Days.ONE;
        org.joda.time.Days days30 = days29.negated();
        boolean boolean31 = days28.isGreaterThan(days30);
        org.joda.time.Days days32 = days25.plus(days30);
        java.lang.String str33 = days30.toString();
        org.joda.time.DurationFieldType durationFieldType34 = days30.getFieldType();
        org.joda.time.Period period36 = period24.withFieldAdded(durationFieldType34, (-4));
        int int37 = periodType10.indexOf(durationFieldType34);
        int int38 = periodType10.size();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-1D" + "'", str33, "P-1D");
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
    }

    @Test
    public void test08281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08281");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Instant instant23 = dateTime21.toInstant();
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = null;
        boolean boolean25 = instant23.isSupported(dateTimeFieldType24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.DateTime dateTime47 = interval46.getEnd();
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        boolean boolean50 = dateTime36.isEqual(readableInstant49);
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod();
        mutablePeriod52.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod52, periodType56);
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime36, readableDuration51, periodType56);
        org.joda.time.Hours hours60 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours61 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours62 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours63 = hours61.minus(hours62);
        int int64 = hours61.getHours();
        org.joda.time.Hours hours65 = hours60.minus(hours61);
        org.joda.time.PeriodType periodType66 = hours61.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) instant23, (org.joda.time.ReadableInstant) dateTime36, periodType66);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2147483647 + "'", int64 == 2147483647);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(periodType66);
    }

    @Test
    public void test08282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08282");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Seconds seconds4 = period3.toStandardSeconds();
        org.joda.time.Seconds seconds5 = period3.toStandardSeconds();
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType8 = seconds7.getFieldType();
        org.joda.time.Seconds seconds10 = seconds7.plus((-1));
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.TWO;
        java.lang.String str12 = seconds11.toString();
        org.joda.time.Seconds seconds13 = seconds10.plus(seconds11);
        org.joda.time.Seconds seconds14 = seconds6.minus(seconds11);
        org.joda.time.PeriodType periodType15 = seconds6.getPeriodType();
        org.joda.time.Seconds seconds16 = seconds5.plus(seconds6);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        org.joda.time.Seconds seconds21 = seconds18.plus((-1));
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.TWO;
        java.lang.String str23 = seconds22.toString();
        org.joda.time.Seconds seconds24 = seconds21.plus(seconds22);
        org.joda.time.Seconds seconds25 = seconds17.minus(seconds22);
        org.joda.time.PeriodType periodType26 = seconds17.getPeriodType();
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.Seconds seconds28 = seconds16.plus(seconds17);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.plus((-1));
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.TWO;
        java.lang.String str35 = seconds34.toString();
        org.joda.time.Seconds seconds36 = seconds33.plus(seconds34);
        org.joda.time.Seconds seconds37 = seconds29.minus(seconds34);
        org.joda.time.Seconds seconds38 = seconds17.plus(seconds34);
        org.joda.time.Seconds seconds39 = seconds38.negated();
        java.lang.String str40 = seconds38.toString();
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2S" + "'", str12, "PT2S");
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2S" + "'", str23, "PT2S");
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "PT2S" + "'", str35, "PT2S");
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT5S" + "'", str40, "PT5S");
    }

    @Test
    public void test08283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08283");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration7 = duration5.withMillis((long) (byte) 10);
        org.joda.time.Duration duration9 = org.joda.time.Duration.millis((long) '4');
        long long10 = duration9.getStandardDays();
        boolean boolean11 = duration7.isEqual((org.joda.time.ReadableDuration) duration9);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType14);
        mutablePeriod15.setYears(0);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod15.setPeriod((org.joda.time.ReadableDuration) duration19, chronology20);
        org.joda.time.Duration duration23 = duration9.withDurationAdded((org.joda.time.ReadableDuration) duration19, (int) (short) 0);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean36 = duration28.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes37 = duration28.toStandardMinutes();
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        boolean boolean39 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType44);
        mutablePeriod45.setYears(0);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology50 = null;
        mutablePeriod45.setPeriod((org.joda.time.ReadableDuration) duration49, chronology50);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant54 = null;
        java.lang.Object obj55 = null;
        org.joda.time.Duration duration56 = new org.joda.time.Duration(obj55);
        org.joda.time.Period period57 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        boolean boolean58 = duration53.isShorterThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Interval interval60 = duration56.toIntervalTo(readableInstant59);
        org.joda.time.Interval interval61 = interval60.toInterval();
        org.joda.time.DateTime dateTime62 = interval61.getEnd();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant65 = null;
        java.lang.Object obj66 = null;
        org.joda.time.Duration duration67 = new org.joda.time.Duration(obj66);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant65, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = duration64.isShorterThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Interval interval71 = duration67.toIntervalTo(readableInstant70);
        org.joda.time.Interval interval72 = interval71.toInterval();
        org.joda.time.DateTime dateTime73 = interval72.getEnd();
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime62, (org.joda.time.ReadableInstant) dateTime73);
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, (org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period77 = duration41.toPeriodTo((org.joda.time.ReadableInstant) dateTime62, periodType76);
        org.joda.time.Period period78 = duration38.toPeriodFrom((org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.Period period80 = period78.plusYears(36);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(dateTime62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(dateTime73);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period80);
    }

    @Test
    public void test08284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08284");
        org.joda.time.Days days0 = org.joda.time.Days.FOUR;
        org.joda.time.Days days2 = days0.multipliedBy((-1));
        org.joda.time.Days days4 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod6 = days4.toMutablePeriod();
        org.joda.time.Days days7 = days2.plus(days4);
        org.joda.time.Days days9 = days4.plus(2);
        org.joda.time.Duration duration11 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration13 = duration11.plus(1644572076849L);
        org.joda.time.Days days14 = duration11.toStandardDays();
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.eras();
        java.lang.String str16 = durationFieldType15.getName();
        boolean boolean17 = days14.isSupported(durationFieldType15);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration22 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration25 = duration22.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration27 = duration19.withDurationAdded((org.joda.time.ReadableDuration) duration22, (int) (short) 1);
        org.joda.time.Days days28 = duration27.toStandardDays();
        org.joda.time.Days days29 = days14.plus(days28);
        java.lang.String str30 = days14.toString();
        org.joda.time.Days days31 = days4.minus(days14);
        org.joda.time.Duration duration32 = days31.toStandardDuration();
        org.joda.time.Days days34 = days31.dividedBy(600);
        org.joda.time.Duration duration36 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration38 = duration36.plus(1644572076849L);
        org.joda.time.Days days39 = duration36.toStandardDays();
        org.joda.time.DurationFieldType durationFieldType40 = org.joda.time.DurationFieldType.eras();
        java.lang.String str41 = durationFieldType40.getName();
        boolean boolean42 = days39.isSupported(durationFieldType40);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration47 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration50 = duration47.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration52 = duration44.withDurationAdded((org.joda.time.ReadableDuration) duration47, (int) (short) 1);
        org.joda.time.Days days53 = duration52.toStandardDays();
        org.joda.time.Days days54 = days39.plus(days53);
        org.joda.time.Days days56 = days54.dividedBy((-9700));
        org.joda.time.Days days58 = days54.minus((int) ' ');
        org.joda.time.Days days59 = org.joda.time.Days.ONE;
        org.joda.time.Days days60 = days59.negated();
        org.joda.time.Days days61 = org.joda.time.Days.ONE;
        org.joda.time.Days days62 = days61.negated();
        org.joda.time.Days days63 = org.joda.time.Days.ONE;
        org.joda.time.Days days64 = days63.negated();
        boolean boolean65 = days62.isGreaterThan(days64);
        org.joda.time.Days days66 = days59.plus(days64);
        org.joda.time.Days days67 = null;
        boolean boolean68 = days59.isGreaterThan(days67);
        org.joda.time.Days days70 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.PeriodType periodType71 = days70.getPeriodType();
        boolean boolean72 = days59.isGreaterThan(days70);
        org.joda.time.Days days73 = days54.minus(days70);
        org.joda.time.Days days74 = days34.minus(days73);
        org.joda.time.Days days75 = days74.negated();
        org.joda.time.Days days76 = org.joda.time.Days.ONE;
        org.joda.time.Days days77 = days76.negated();
        org.joda.time.Days days78 = org.joda.time.Days.ONE;
        org.joda.time.Days days79 = days78.negated();
        org.joda.time.Days days80 = org.joda.time.Days.ONE;
        org.joda.time.Days days81 = days80.negated();
        boolean boolean82 = days79.isGreaterThan(days81);
        org.joda.time.Days days83 = days76.plus(days81);
        int int84 = days76.getDays();
        org.joda.time.Days days86 = days76.minus(2147483647);
        org.joda.time.Days days88 = days76.plus(35);
        org.joda.time.Days days90 = days88.plus(8);
        java.lang.String str91 = days90.toString();
        org.joda.time.Days days92 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days94 = days92.multipliedBy(8);
        org.joda.time.Days days95 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days94);
        int int96 = days95.size();
        boolean boolean97 = days90.isGreaterThan(days95);
        org.joda.time.Days days98 = days74.minus(days90);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "eras" + "'", str16, "eras");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "P0D" + "'", str30, "P0D");
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "eras" + "'", str41, "eras");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(days83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(days86);
        org.junit.Assert.assertNotNull(days88);
        org.junit.Assert.assertNotNull(days90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "P44D" + "'", str91, "P44D");
        org.junit.Assert.assertNotNull(days92);
        org.junit.Assert.assertNotNull(days94);
        org.junit.Assert.assertNotNull(days95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(days98);
    }

    @Test
    public void test08285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08285");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) ' ', chronology1);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.DateTime dateTime47 = interval46.getEnd();
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType50 = periodType49.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(periodType50);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(10L, periodType50);
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime47, periodType50);
        org.joda.time.Duration duration54 = mutablePeriod2.toDurationFrom((org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Seconds seconds55 = duration54.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType56 = seconds55.getFieldType();
        int int58 = seconds55.getValue(0);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test08286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08286");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks5 = weeks2.plus((int) ' ');
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks11 = weeks8.plus((int) ' ');
        boolean boolean12 = weeks2.isGreaterThan(weeks8);
        org.joda.time.DurationFieldType durationFieldType13 = weeks2.getFieldType();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((int) (short) -1);
        java.lang.String str16 = weeks15.toString();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        int int18 = weeks17.size();
        org.joda.time.Duration duration19 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        int int21 = weeks20.size();
        org.joda.time.Duration duration22 = weeks20.toStandardDuration();
        java.lang.String str23 = weeks20.toString();
        org.joda.time.Weeks weeks25 = weeks20.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks27 = weeks25.multipliedBy(3);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((-1));
        boolean boolean30 = weeks25.isGreaterThan(weeks29);
        org.joda.time.Weeks weeks31 = weeks17.minus(weeks29);
        int int32 = weeks31.getWeeks();
        org.joda.time.Weeks weeks34 = weeks31.minus((int) (short) 10);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        int int36 = weeks35.size();
        org.joda.time.Duration duration37 = weeks35.toStandardDuration();
        java.lang.String str38 = weeks35.toString();
        org.joda.time.Weeks weeks40 = weeks35.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks42 = weeks40.multipliedBy(3);
        org.joda.time.Period period44 = new org.joda.time.Period(1L);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Period period47 = period44.plus((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks49 = weeks46.minus((int) (short) -1);
        org.joda.time.Weeks weeks51 = weeks46.plus((int) (byte) 1);
        org.joda.time.Weeks weeks52 = weeks40.minus(weeks51);
        boolean boolean53 = weeks31.isLessThan(weeks40);
        org.joda.time.Weeks weeks54 = weeks15.plus(weeks31);
        boolean boolean55 = weeks2.isLessThan(weeks15);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-1W" + "'", str16, "P-1W");
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P3W" + "'", str23, "P3W");
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P3W" + "'", str38, "P3W");
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test08287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08287");
        org.joda.time.Period period4 = new org.joda.time.Period((-100), (-3), 105, 0);
    }

    @Test
    public void test08288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08288");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType14);
        mutablePeriod15.setYears(0);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod15.setPeriod((org.joda.time.ReadableDuration) duration19, chronology20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration27 = duration24.minus((long) '4');
        mutablePeriod15.add((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType30 = periodType29.withHoursRemoved();
        org.joda.time.PeriodType periodType31 = periodType30.withSecondsRemoved();
        boolean boolean32 = mutablePeriod15.equals((java.lang.Object) periodType30);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.Chronology chronology43 = interval42.getChronology();
        org.joda.time.Period period44 = new org.joda.time.Period((java.lang.Object) interval10, periodType30, chronology43);
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((long) (-2147483648), (long) (byte) 0, chronology43);
        mutablePeriod45.setWeeks(8);
        int int48 = mutablePeriod45.getMinutes();
        java.lang.Object obj49 = mutablePeriod45.clone();
        mutablePeriod45.addDays((-34));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(chronology43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 31 + "'", int48 == 31);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "P8W-31DT20H31M23.648S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "P8W-31DT20H31M23.648S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "P8W-31DT20H31M23.648S");
    }

    @Test
    public void test08289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08289");
        org.joda.time.Days days0 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days2 = days0.multipliedBy(8);
        org.joda.time.Days days3 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days2);
        org.joda.time.Days days4 = days3.negated();
        int int5 = days3.getDays();
        org.joda.time.Days days7 = days3.multipliedBy((-52));
        // The following exception was thrown during execution in test generation
        try {
            int int9 = days7.getValue(52114);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52114");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 56 + "'", int5 == 56);
        org.junit.Assert.assertNotNull(days7);
    }

    @Test
    public void test08290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08290");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Chronology chronology10 = interval9.getChronology();
        org.joda.time.Days days11 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Days days12 = days11.negated();
        org.joda.time.Days days14 = days12.plus((-2));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(chronology10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
    }

    @Test
    public void test08291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08291");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.Period period3 = new org.joda.time.Period((java.lang.Object) duration1);
        org.joda.time.Duration duration4 = period3.toStandardDuration();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration10 = duration7.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration13 = duration10.withDurationAdded(1644572117257L, (int) 'a');
        org.joda.time.Duration duration15 = duration4.withDurationAdded((org.joda.time.ReadableDuration) duration10, 2);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        boolean boolean22 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Interval interval24 = duration20.toIntervalTo(readableInstant23);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        org.joda.time.Interval interval34 = interval33.toInterval();
        org.joda.time.Hours hours35 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval34);
        org.joda.time.Hours hours36 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval34);
        boolean boolean37 = interval24.overlaps((org.joda.time.ReadableInterval) interval34);
        org.joda.time.MutableInterval mutableInterval38 = interval24.toMutableInterval();
        org.joda.time.Interval interval39 = mutableInterval38.toInterval();
        org.joda.time.Duration duration40 = interval39.toDuration();
        org.joda.time.Duration duration41 = duration10.plus((org.joda.time.ReadableDuration) duration40);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(mutableInterval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration41);
    }

    @Test
    public void test08292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08292");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) -1);
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period1.plusMonths(8);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Seconds seconds7 = seconds5.minus(32);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        java.lang.String str9 = seconds8.toString();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT0S" + "'", str9, "PT0S");
    }

    @Test
    public void test08293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08293");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        org.joda.time.Seconds seconds3 = seconds0.plus((-1));
        org.joda.time.DurationFieldType durationFieldType4 = seconds0.getFieldType();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.plus((-1));
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.TWO;
        java.lang.String str11 = seconds10.toString();
        org.joda.time.Seconds seconds12 = seconds9.plus(seconds10);
        org.joda.time.Seconds seconds13 = seconds5.minus(seconds10);
        org.joda.time.Seconds seconds14 = seconds0.plus(seconds5);
        org.joda.time.Seconds seconds16 = seconds5.dividedBy(8);
        org.joda.time.MutablePeriod mutablePeriod17 = seconds5.toMutablePeriod();
        mutablePeriod17.clear();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT2S" + "'", str11, "PT2S");
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
    }

    @Test
    public void test08294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08294");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(128849018820L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test08295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08295");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Period period20 = interval18.toPeriod();
        org.joda.time.Period period21 = interval18.toPeriod();
        org.joda.time.Period period23 = period21.minusMillis((int) (byte) 1);
        org.joda.time.MutablePeriod mutablePeriod24 = period23.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod25 = mutablePeriod24.toMutablePeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
    }

    @Test
    public void test08296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08296");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Period period10 = interval9.toPeriod();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy(52114);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
    }

    @Test
    public void test08297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08297");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds2 = seconds0.dividedBy(3);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType5 = seconds4.getFieldType();
        org.joda.time.Seconds seconds7 = seconds4.plus((-1));
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.TWO;
        java.lang.String str9 = seconds8.toString();
        org.joda.time.Seconds seconds10 = seconds7.plus(seconds8);
        org.joda.time.Seconds seconds11 = seconds3.minus(seconds8);
        org.joda.time.ReadablePeriod readablePeriod12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.standardSecondsIn(readablePeriod12);
        org.joda.time.Seconds seconds14 = seconds11.plus(seconds13);
        int int15 = seconds11.getSeconds();
        int int16 = seconds11.size();
        org.joda.time.Seconds seconds17 = seconds2.minus(seconds11);
        org.joda.time.Seconds seconds19 = seconds2.plus((-34));
        int int20 = seconds2.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT2S" + "'", str9, "PT2S");
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-715827882) + "'", int20 == (-715827882));
    }

    @Test
    public void test08298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08298");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Period period9 = period4.multipliedBy((int) (byte) 100);
        org.joda.time.Period period11 = period9.withHours((int) (short) 0);
        org.joda.time.Period period13 = period9.withHours((int) (short) 1);
        int[] intArray14 = period13.getValues();
        org.joda.time.Period period16 = period13.withMinutes(187);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0, 0, 0, 1, 0, 0, -9700]");
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test08299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08299");
        org.joda.time.Days days1 = org.joda.time.Days.days(1);
        org.joda.time.Days days3 = days1.plus(0);
        org.joda.time.Days days4 = days3.negated();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
    }

    @Test
    public void test08300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08300");
        java.lang.Object obj0 = null;
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod();
        mutablePeriod2.setPeriod(100L, (long) (-1));
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Chronology chronology20 = interval19.getChronology();
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((-1L), chronology20);
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology20);
        mutablePeriod2.setPeriod((long) 100, chronology20);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(obj0, periodType1, chronology20);
        mutablePeriod24.setMinutes(0);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.Duration duration35 = org.joda.time.Duration.millis((long) '4');
        long long36 = duration35.getStandardDays();
        boolean boolean37 = duration30.isLongerThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType39 = periodType38.withHoursRemoved();
        org.joda.time.Period period40 = duration35.toPeriod(periodType38);
        org.joda.time.PeriodType periodType41 = periodType38.withMinutesRemoved();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        org.joda.time.Duration duration53 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean54 = duration46.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes55 = duration46.toStandardMinutes();
        org.joda.time.Minutes minutes57 = minutes55.multipliedBy((int) '4');
        org.joda.time.Minutes minutes59 = minutes57.multipliedBy((int) (short) 100);
        org.joda.time.DurationFieldType durationFieldType61 = minutes57.getFieldType((int) (short) 0);
        boolean boolean62 = periodType38.isSupported(durationFieldType61);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType70 = periodType69.withMillisRemoved();
        java.lang.String str71 = periodType70.getName();
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((long) 100, 36000L, periodType70);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod();
        mutablePeriod73.setPeriod(100L, (long) (-1));
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant83 = null;
        java.lang.Object obj84 = null;
        org.joda.time.Duration duration85 = new org.joda.time.Duration(obj84);
        org.joda.time.Period period86 = new org.joda.time.Period(readableInstant83, (org.joda.time.ReadableDuration) duration85);
        boolean boolean87 = duration82.isShorterThan((org.joda.time.ReadableDuration) duration85);
        org.joda.time.ReadableInstant readableInstant88 = null;
        org.joda.time.Interval interval89 = duration85.toIntervalTo(readableInstant88);
        org.joda.time.Interval interval90 = interval89.toInterval();
        org.joda.time.Chronology chronology91 = interval90.getChronology();
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((-1L), chronology91);
        org.joda.time.MutablePeriod mutablePeriod93 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology91);
        mutablePeriod73.setPeriod((long) 100, chronology91);
        org.joda.time.Period period95 = new org.joda.time.Period((long) 100, 1644572102665L, periodType70, chronology91);
        org.joda.time.MutablePeriod mutablePeriod96 = new org.joda.time.MutablePeriod(1644572127303L, 1644572118467L, chronology91);
        org.joda.time.DurationField durationField97 = durationFieldType61.getField(chronology91);
        mutablePeriod24.setPeriod(1644572227777L, chronology91);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(chronology20);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "MillisNoMillis" + "'", str71, "MillisNoMillis");
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(interval89);
        org.junit.Assert.assertNotNull(interval90);
        org.junit.Assert.assertNotNull(chronology91);
        org.junit.Assert.assertNotNull(durationField97);
    }

    @Test
    public void test08301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08301");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(periodType3);
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(10L, periodType3);
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(10L, periodType3);
        int int7 = mutablePeriod6.getMonths();
        int int8 = mutablePeriod6.getHours();
        org.joda.time.Duration duration10 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration12 = duration10.plus(1644572076849L);
        long long13 = duration10.getMillis();
        mutablePeriod6.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration18 = duration10.withDurationAdded((org.joda.time.ReadableDuration) duration16, 35);
        org.joda.time.Duration duration19 = duration10.toDuration();
        org.joda.time.Days days20 = duration19.toStandardDays();
        org.joda.time.Days days22 = org.joda.time.Days.days((int) (byte) 1);
        boolean boolean23 = days20.isLessThan(days22);
        java.lang.String str24 = days20.toString();
        java.lang.String str25 = days20.toString();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 52L + "'", long13 == 52L);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P0D" + "'", str24, "P0D");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P0D" + "'", str25, "P0D");
    }

    @Test
    public void test08302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08302");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.parse("2022-02-11T09:40:14.102Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:40:14.102Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08303");
        java.lang.Object obj2 = null;
        org.joda.time.Duration duration3 = new org.joda.time.Duration(obj2);
        org.joda.time.Duration duration6 = duration3.withDurationAdded(1644572078660L, 0);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        boolean boolean13 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Interval interval15 = duration11.toIntervalTo(readableInstant14);
        org.joda.time.Interval interval16 = interval15.toInterval();
        org.joda.time.DateTime dateTime17 = interval16.getEnd();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        org.joda.time.Interval interval27 = interval26.toInterval();
        org.joda.time.DateTime dateTime28 = interval27.getEnd();
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime17, (org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.DateTime dateTime40 = interval39.getEnd();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant43 = null;
        java.lang.Object obj44 = null;
        org.joda.time.Duration duration45 = new org.joda.time.Duration(obj44);
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration45);
        boolean boolean47 = duration42.isShorterThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Interval interval49 = duration45.toIntervalTo(readableInstant48);
        org.joda.time.Interval interval50 = interval49.toInterval();
        org.joda.time.DateTime dateTime51 = interval50.getEnd();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime28, (org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.Interval interval54 = duration6.toIntervalFrom((org.joda.time.ReadableInstant) dateTime51);
        java.lang.String str55 = dateTime51.toString();
        org.joda.time.Chronology chronology56 = dateTime51.getChronology();
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod(1644572107117L, 1644572388869L, chronology56);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(dateTime28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(dateTime51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(interval54);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "2022-02-11T09:41:14.484Z" + "'", str55, "2022-02-11T09:41:14.484Z");
        org.junit.Assert.assertNotNull(chronology56);
    }

    @Test
    public void test08304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08304");
        org.joda.time.Period period1 = org.joda.time.Period.hours((-12));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test08305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08305");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        long long9 = interval8.getStartMillis();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval8);
        org.joda.time.Duration duration11 = interval8.toDuration();
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.Duration duration19 = org.joda.time.Duration.millis((long) '4');
        long long20 = duration19.getStandardDays();
        boolean boolean21 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.DateTime dateTime39 = interval38.getEnd();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Interval interval48 = duration44.toIntervalTo(readableInstant47);
        org.joda.time.Interval interval49 = interval48.toInterval();
        org.joda.time.DateTime dateTime50 = interval49.getEnd();
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableInstant) dateTime50);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant54 = null;
        java.lang.Object obj55 = null;
        org.joda.time.Duration duration56 = new org.joda.time.Duration(obj55);
        org.joda.time.Period period57 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        boolean boolean58 = duration53.isShorterThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableInterval readableInterval60 = null;
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.minutesIn(readableInterval60);
        java.lang.String str62 = minutes61.toString();
        org.joda.time.PeriodType periodType63 = minutes61.getPeriodType();
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant59, periodType63);
        org.joda.time.PeriodType periodType65 = periodType63.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration26, (org.joda.time.ReadableInstant) dateTime50, periodType65);
        org.joda.time.Interval interval67 = duration14.toIntervalFrom((org.joda.time.ReadableInstant) dateTime50);
        java.lang.String str68 = interval67.toString();
        org.joda.time.DateTime dateTime69 = interval67.getStart();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((long) ' ', chronology71);
        org.joda.time.Duration duration74 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration76 = duration74.plus(1644572076849L);
        mutablePeriod72.setPeriod((org.joda.time.ReadableDuration) duration76);
        org.joda.time.Duration duration79 = duration76.minus(1644572101476L);
        org.joda.time.Duration duration82 = duration79.withDurationAdded(1644572143611L, (int) (byte) -1);
        org.joda.time.Duration duration84 = duration79.minus(1644572089958L);
        org.joda.time.Duration duration86 = org.joda.time.Duration.standardHours(1644572078660L);
        org.joda.time.Duration duration87 = duration79.plus((org.joda.time.ReadableDuration) duration86);
        org.joda.time.Period period88 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime69, (org.joda.time.ReadableDuration) duration87);
        org.joda.time.Minutes minutes90 = org.joda.time.Minutes.minutes(18);
        java.lang.String str91 = minutes90.toString();
        org.joda.time.PeriodType periodType92 = minutes90.getPeriodType();
        org.joda.time.Period period93 = duration11.toPeriodFrom((org.joda.time.ReadableInstant) dateTime69, periodType92);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType95 = period93.getFieldType(456368756);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 456368756");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1644572474523L + "'", long9 == 1644572474523L);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(dateTime50);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT0M" + "'", str62, "PT0M");
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(interval67);
// flaky:         org.junit.Assert.assertEquals("'" + str68 + "' != '" + "2022-02-11T09:41:14.523Z/2022-02-11T09:41:14.523Z" + "'", str68, "2022-02-11T09:41:14.523Z/2022-02-11T09:41:14.523Z");
        org.junit.Assert.assertNotNull(dateTime69);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertNotNull(minutes90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "PT18M" + "'", str91, "PT18M");
        org.junit.Assert.assertNotNull(periodType92);
        org.junit.Assert.assertNotNull(period93);
    }

    @Test
    public void test08306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08306");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((long) ' ', chronology3);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType7);
        mutablePeriod8.setYears(0);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology13 = null;
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration12, chronology13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.DateTime dateTime25 = interval24.getEnd();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant41 = null;
        java.lang.Object obj42 = null;
        org.joda.time.Duration duration43 = new org.joda.time.Duration(obj42);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration43);
        boolean boolean45 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration43.toIntervalTo(readableInstant46);
        org.joda.time.Interval interval48 = interval47.toInterval();
        org.joda.time.DateTime dateTime49 = interval48.getEnd();
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType52 = periodType51.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(periodType52);
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(10L, periodType52);
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime49, periodType52);
        org.joda.time.Duration duration56 = mutablePeriod4.toDurationFrom((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.Days days57 = duration56.toStandardDays();
        int int58 = days57.getDays();
        org.joda.time.Days days60 = days57.minus((-2));
        int int61 = days57.getDays();
        org.joda.time.PeriodType periodType62 = days57.getPeriodType();
        org.joda.time.Period period63 = new org.joda.time.Period((long) 105, 128849018820L, periodType62);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(periodType62);
    }

    @Test
    public void test08307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08307");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn(readableInterval9);
        org.joda.time.Period period11 = period8.minus((org.joda.time.ReadablePeriod) hours10);
        org.joda.time.Hours hours13 = hours10.minus((int) '4');
        org.joda.time.Hours hours15 = hours13.plus((int) '#');
        org.joda.time.Hours hours16 = hours13.negated();
        org.joda.time.Duration duration17 = hours16.toStandardDuration();
        org.joda.time.Hours hours18 = hours16.negated();
        org.joda.time.Hours hours20 = org.joda.time.Hours.hours((int) (byte) 100);
        org.joda.time.Duration duration21 = hours20.toStandardDuration();
        org.joda.time.Hours hours22 = hours16.minus(hours20);
        int int23 = hours22.size();
        org.joda.time.Hours hours25 = hours22.plus(369700);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType27 = hours22.getFieldType(906);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 906");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(hours25);
    }

    @Test
    public void test08308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08308");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        long long23 = dateTime21.getMillis();
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration29 = duration26.minus((long) '4');
        org.joda.time.Duration duration31 = org.joda.time.Duration.millis((long) '4');
        long long32 = duration31.getMillis();
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType35);
        mutablePeriod36.setYears(0);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology41 = null;
        mutablePeriod36.setPeriod((org.joda.time.ReadableDuration) duration40, chronology41);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant45 = null;
        java.lang.Object obj46 = null;
        org.joda.time.Duration duration47 = new org.joda.time.Duration(obj46);
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration47);
        boolean boolean49 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Interval interval51 = duration47.toIntervalTo(readableInstant50);
        org.joda.time.Interval interval52 = interval51.toInterval();
        org.joda.time.DateTime dateTime53 = interval52.getEnd();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant56 = null;
        java.lang.Object obj57 = null;
        org.joda.time.Duration duration58 = new org.joda.time.Duration(obj57);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant56, (org.joda.time.ReadableDuration) duration58);
        boolean boolean60 = duration55.isShorterThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Interval interval62 = duration58.toIntervalTo(readableInstant61);
        org.joda.time.Interval interval63 = interval62.toInterval();
        org.joda.time.DateTime dateTime64 = interval63.getEnd();
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime53, (org.joda.time.ReadableInstant) dateTime64);
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, (org.joda.time.ReadableInstant) dateTime53);
        java.lang.String str67 = dateTime53.toString();
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, (org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.Duration duration70 = new org.joda.time.Duration((long) (byte) 1);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType73 = periodType72.withMillisRemoved();
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((long) (short) 1, periodType73, chronology74);
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime53, (org.joda.time.ReadableDuration) duration70, periodType73);
        org.joda.time.Period period77 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableDuration) duration29, periodType73);
        long long78 = duration29.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572474590L + "'", long23 == 1644572474590L);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 52L + "'", long32 == 52L);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(dateTime53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(dateTime64);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "2022-02-11T09:41:14.590Z" + "'", str67, "2022-02-11T09:41:14.590Z");
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
    }

    @Test
    public void test08309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08309");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        java.lang.String str7 = period6.toString();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        long long18 = interval17.getStartMillis();
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval17);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = weeks20.getValue((-35));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -35");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0.097S" + "'", str7, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572474635L + "'", long18 == 1644572474635L);
        org.junit.Assert.assertNotNull(weeks20);
    }

    @Test
    public void test08310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08310");
        org.joda.time.Period period1 = new org.joda.time.Period(1L);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Period period4 = period1.plus((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Period period5 = period4.toPeriod();
        org.joda.time.Period period7 = period4.minusMonths(97);
        int[] intArray8 = period4.getValues();
        org.joda.time.Period period10 = period4.minusHours(600);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0, -1, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test08311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08311");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.DurationFieldType durationFieldType3 = hours1.getFieldType();
        org.joda.time.Hours hours5 = hours1.plus((-369700));
        org.joda.time.Hours hours6 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours7 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours8 = hours6.minus(hours7);
        int int9 = hours6.getHours();
        org.joda.time.Hours hours10 = hours1.plus(hours6);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test08312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08312");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableInstant) dateTime44);
        boolean boolean48 = dateTime21.equals((java.lang.Object) "2022-02-11T09:40:51.860Z");
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test08313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08313");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(35);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test08314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08314");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType3 = minutes2.getPeriodType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period5 = new org.joda.time.Period((java.lang.Object) minutes4);
        boolean boolean6 = minutes2.isGreaterThan(minutes4);
        org.joda.time.MutablePeriod mutablePeriod7 = minutes2.toMutablePeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.minutesIn(readableInterval16);
        java.lang.String str18 = minutes17.toString();
        org.joda.time.PeriodType periodType19 = minutes17.getPeriodType();
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant15, periodType19);
        org.joda.time.Duration duration22 = duration12.withMillis((long) 'a');
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.DateTime dateTime40 = interval39.getEnd();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant43 = null;
        java.lang.Object obj44 = null;
        org.joda.time.Duration duration45 = new org.joda.time.Duration(obj44);
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration45);
        boolean boolean47 = duration42.isShorterThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Interval interval49 = duration45.toIntervalTo(readableInstant48);
        org.joda.time.Interval interval50 = interval49.toInterval();
        org.joda.time.DateTime dateTime51 = interval50.getEnd();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableInterval readableInterval61 = null;
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.minutesIn(readableInterval61);
        java.lang.String str63 = minutes62.toString();
        org.joda.time.PeriodType periodType64 = minutes62.getPeriodType();
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant60, periodType64);
        org.joda.time.PeriodType periodType66 = periodType64.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration27, (org.joda.time.ReadableInstant) dateTime51, periodType66);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant70 = null;
        java.lang.Object obj71 = null;
        org.joda.time.Duration duration72 = new org.joda.time.Duration(obj71);
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant70, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = duration69.isShorterThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((java.lang.Object) duration69, periodType75, chronology76);
        org.joda.time.Duration duration79 = org.joda.time.Duration.millis((long) '4');
        long long80 = duration79.getStandardDays();
        boolean boolean81 = duration69.isLongerThan((org.joda.time.ReadableDuration) duration79);
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime51, (org.joda.time.ReadableDuration) duration79);
        org.joda.time.Interval interval83 = duration22.toIntervalTo((org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.Chronology chronology84 = dateTime51.getChronology();
        org.joda.time.Chronology chronology85 = dateTime51.getChronology();
        boolean boolean87 = dateTime51.equals((java.lang.Object) 1644572136952L);
        org.joda.time.Duration duration88 = mutablePeriod7.toDurationTo((org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.ReadableInstant readableInstant89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds90 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime51, readableInstant89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadableInstant objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT0M" + "'", str18, "PT0M");
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(dateTime51);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "PT0M" + "'", str63, "PT0M");
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(interval83);
        org.junit.Assert.assertNotNull(chronology84);
        org.junit.Assert.assertNotNull(chronology85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(duration88);
    }

    @Test
    public void test08315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08315");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Period period8 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period10 = period8.minusMillis((-1));
        org.joda.time.Period period11 = period4.minus((org.joda.time.ReadablePeriod) period8);
        org.joda.time.Period period13 = period8.minusWeeks(3);
        org.joda.time.Duration duration15 = org.joda.time.Duration.millis((long) '4');
        long long16 = duration15.getMillis();
        org.joda.time.Minutes minutes17 = duration15.toStandardMinutes();
        int int18 = minutes17.getMinutes();
        org.joda.time.Minutes minutes19 = minutes17.negated();
        org.joda.time.Period period20 = period8.minus((org.joda.time.ReadablePeriod) minutes17);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 52L + "'", long16 == 52L);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test08316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08316");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks5 = weeks2.plus((int) ' ');
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks8 = weeks6.multipliedBy((int) (short) 0);
        org.joda.time.PeriodType periodType9 = weeks8.getPeriodType();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.minutesIn(readableInterval20);
        java.lang.String str22 = minutes21.toString();
        org.joda.time.PeriodType periodType23 = minutes21.getPeriodType();
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant19, periodType23);
        org.joda.time.PeriodType periodType25 = periodType23.withYearsRemoved();
        org.joda.time.PeriodType periodType26 = periodType25.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1644572097900L, 1644572097900L, periodType25);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period28 = new org.joda.time.Period((java.lang.Object) periodType9, periodType25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT0M" + "'", str22, "PT0M");
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
    }

    @Test
    public void test08317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08317");
        org.joda.time.Period period1 = new org.joda.time.Period((-1L));
        org.joda.time.Seconds seconds2 = period1.toStandardSeconds();
        org.joda.time.Seconds seconds3 = seconds2.negated();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType5 = seconds4.getFieldType();
        org.joda.time.Seconds seconds7 = seconds4.plus((-1));
        org.joda.time.Seconds seconds8 = seconds3.plus(seconds7);
        org.joda.time.Duration duration9 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        org.joda.time.Seconds seconds14 = seconds11.plus((-1));
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.TWO;
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Seconds seconds17 = seconds14.plus(seconds15);
        org.joda.time.Seconds seconds18 = seconds10.minus(seconds15);
        org.joda.time.Duration duration19 = seconds15.toStandardDuration();
        org.joda.time.Duration duration20 = duration9.plus((org.joda.time.ReadableDuration) duration19);
        long long21 = duration19.getStandardSeconds();
        long long22 = duration19.getStandardHours();
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2S" + "'", str16, "PT2S");
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2L + "'", long21 == 2L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    }

    @Test
    public void test08318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08318");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays(1644572086619L);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows a long: 1644572086619 * 86400000");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08319");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-28));
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test08320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08320");
        org.joda.time.Period period1 = org.joda.time.Period.millis(36);
        org.joda.time.Period period2 = period1.normalizedStandard();
        java.lang.String str3 = period1.toString();
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant8);
        long long10 = duration6.getMillis();
        long long11 = duration6.getStandardDays();
        java.lang.String str12 = duration6.toString();
        long long13 = duration6.getStandardSeconds();
        org.joda.time.Duration duration15 = new org.joda.time.Duration(1644572076849L);
        long long16 = duration15.getStandardSeconds();
        org.joda.time.Duration duration18 = duration6.withDurationAdded((org.joda.time.ReadableDuration) duration15, (int) ' ');
        org.joda.time.Duration duration19 = duration6.toDuration();
        org.joda.time.Minutes minutes20 = duration6.toStandardMinutes();
        org.joda.time.Minutes minutes22 = minutes20.minus(601);
        org.joda.time.Period period23 = period1.withFields((org.joda.time.ReadablePeriod) minutes20);
        org.joda.time.Period period25 = period1.plusDays(952);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0.036S" + "'", str3, "PT0.036S");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT0S" + "'", str12, "PT0S");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572076L + "'", long16 == 1644572076L);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test08321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08321");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) '4', (long) ' ', chronology2);
        mutablePeriod3.setWeeks(1);
        mutablePeriod3.setMinutes((-648));
    }

    @Test
    public void test08322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08322");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks5 = weeks2.plus((int) ' ');
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        int int9 = weeks6.size();
        org.joda.time.PeriodType periodType10 = weeks6.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test08323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08323");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn(readableInterval9);
        org.joda.time.Period period11 = period8.minus((org.joda.time.ReadablePeriod) hours10);
        org.joda.time.Hours hours13 = hours10.minus((int) '4');
        org.joda.time.Hours hours15 = hours13.plus((int) '#');
        org.joda.time.Hours hours16 = hours13.negated();
        org.joda.time.Duration duration17 = hours16.toStandardDuration();
        org.joda.time.Hours hours18 = hours16.negated();
        org.joda.time.Period period19 = hours16.toPeriod();
        org.joda.time.Hours hours21 = hours16.dividedBy((-2147483646));
        org.joda.time.Hours hours22 = hours16.negated();
        org.joda.time.Hours hours24 = hours22.multipliedBy(52);
        org.joda.time.Hours hours25 = hours24.negated();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
    }

    @Test
    public void test08324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08324");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(10L);
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardSeconds((long) (byte) 0);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType7);
        mutablePeriod8.setYears(0);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology13 = null;
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration12, chronology13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.DateTime dateTime25 = interval24.getEnd();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime25);
        java.lang.String str39 = dateTime25.toString();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType44);
        mutablePeriod45.setYears(0);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology50 = null;
        mutablePeriod45.setPeriod((org.joda.time.ReadableDuration) duration49, chronology50);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant54 = null;
        java.lang.Object obj55 = null;
        org.joda.time.Duration duration56 = new org.joda.time.Duration(obj55);
        org.joda.time.Period period57 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        boolean boolean58 = duration53.isShorterThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Interval interval60 = duration56.toIntervalTo(readableInstant59);
        org.joda.time.Interval interval61 = interval60.toInterval();
        org.joda.time.DateTime dateTime62 = interval61.getEnd();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant65 = null;
        java.lang.Object obj66 = null;
        org.joda.time.Duration duration67 = new org.joda.time.Duration(obj66);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant65, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = duration64.isShorterThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Interval interval71 = duration67.toIntervalTo(readableInstant70);
        org.joda.time.Interval interval72 = interval71.toInterval();
        org.joda.time.DateTime dateTime73 = interval72.getEnd();
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime62, (org.joda.time.ReadableInstant) dateTime73);
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, (org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period77 = duration41.toPeriodTo((org.joda.time.ReadableInstant) dateTime62, periodType76);
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.PeriodType periodType79 = org.joda.time.PeriodType.dayTime();
        org.joda.time.PeriodType periodType80 = periodType79.withMonthsRemoved();
        org.joda.time.PeriodType periodType81 = periodType79.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, (org.joda.time.ReadableInstant) dateTime62, periodType81);
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(readableDuration2, (org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.Interval interval84 = duration1.toIntervalTo((org.joda.time.ReadableInstant) dateTime62);
        java.lang.String str85 = dateTime62.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "2022-02-11T09:41:14.916Z" + "'", str39, "2022-02-11T09:41:14.916Z");
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(dateTime62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(dateTime73);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(interval84);
// flaky:         org.junit.Assert.assertEquals("'" + str85 + "' != '" + "2022-02-11T09:41:14.916Z" + "'", str85, "2022-02-11T09:41:14.916Z");
    }

    @Test
    public void test08325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08325");
        org.joda.time.Period period1 = org.joda.time.Period.days((int) (short) 1);
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration37 = period1.toDurationFrom((org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration42 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration45 = duration42.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration47 = duration39.withDurationAdded((org.joda.time.ReadableDuration) duration42, (int) (short) 1);
        org.joda.time.Duration duration50 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration53 = duration50.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration55 = duration39.withDurationAdded((org.joda.time.ReadableDuration) duration53, (int) (short) 100);
        org.joda.time.Duration duration57 = duration53.plus(1644572094383L);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.dayTime();
        org.joda.time.PeriodType periodType59 = periodType58.withMonthsRemoved();
        org.joda.time.PeriodType periodType60 = periodType58.withMillisRemoved();
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableDuration) duration57, periodType60);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant64 = null;
        java.lang.Object obj65 = null;
        org.joda.time.Duration duration66 = new org.joda.time.Duration(obj65);
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant64, (org.joda.time.ReadableDuration) duration66);
        boolean boolean68 = duration63.isShorterThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Interval interval70 = duration66.toIntervalTo(readableInstant69);
        org.joda.time.Duration duration73 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean74 = duration66.equals((java.lang.Object) 'a');
        org.joda.time.ReadableInstant readableInstant75 = null;
        java.lang.Object obj76 = null;
        org.joda.time.Duration duration77 = new org.joda.time.Duration(obj76);
        org.joda.time.Period period78 = new org.joda.time.Period(readableInstant75, (org.joda.time.ReadableDuration) duration77);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration77, readableInstant79);
        org.joda.time.Duration duration82 = org.joda.time.Duration.millis((long) '4');
        long long83 = duration82.getStandardDays();
        boolean boolean84 = duration77.isLongerThan((org.joda.time.ReadableDuration) duration82);
        org.joda.time.PeriodType periodType85 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType86 = periodType85.withHoursRemoved();
        org.joda.time.Period period87 = duration82.toPeriod(periodType85);
        org.joda.time.PeriodType periodType88 = periodType85.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableDuration) duration66, periodType88);
        int int90 = mutablePeriod89.getMonths();
        org.joda.time.MutablePeriod mutablePeriod91 = mutablePeriod89.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod89.addYears(703);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(interval70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 0L + "'", long83 == 0L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod91);
    }

    @Test
    public void test08326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08326");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (short) 10, 1644572077926L, chronology2);
        org.joda.time.Period period5 = period3.withDays((int) (byte) 10);
        int int6 = period3.size();
        org.joda.time.DurationFieldType[] durationFieldTypeArray7 = period3.getFieldTypes();
        org.joda.time.Period period9 = period3.plusWeeks((int) (byte) -1);
        org.joda.time.Period period11 = period3.withMonths(54);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(durationFieldTypeArray7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test08327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08327");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("2022-02-11T09:36:47.683Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:36:47.683Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08328");
        org.joda.time.Period period1 = org.joda.time.Period.years(21262214);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test08329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08329");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        mutablePeriod2.addWeeks((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray5 = mutablePeriod2.getFieldTypes();
        int int6 = mutablePeriod2.getWeeks();
        org.joda.time.Period period8 = org.joda.time.Period.weeks((-1));
        mutablePeriod2.add((org.joda.time.ReadablePeriod) period8);
        org.joda.time.MutablePeriod mutablePeriod10 = period8.toMutablePeriod();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.seconds((int) '#');
        org.joda.time.DurationFieldType durationFieldType13 = seconds12.getFieldType();
        org.joda.time.DurationFieldType durationFieldType14 = seconds12.getFieldType();
        org.joda.time.Period period16 = period8.withField(durationFieldType14, (-101));
        org.junit.Assert.assertNotNull(durationFieldTypeArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test08330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08330");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.plus((int) '4');
        org.joda.time.Weeks weeks4 = weeks2.minus((-1));
        org.joda.time.Weeks weeks6 = weeks2.dividedBy(13);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
    }

    @Test
    public void test08331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08331");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Chronology chronology10 = interval9.getChronology();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        boolean boolean41 = interval31.isAfter((org.joda.time.ReadableInterval) interval40);
        boolean boolean42 = interval20.contains((org.joda.time.ReadableInterval) interval31);
        org.joda.time.PeriodType periodType45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType45);
        mutablePeriod46.setYears(0);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology51 = null;
        mutablePeriod46.setPeriod((org.joda.time.ReadableDuration) duration50, chronology51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        org.joda.time.Interval interval62 = interval61.toInterval();
        org.joda.time.DateTime dateTime63 = interval62.getEnd();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant66 = null;
        java.lang.Object obj67 = null;
        org.joda.time.Duration duration68 = new org.joda.time.Duration(obj67);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant66, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = duration65.isShorterThan((org.joda.time.ReadableDuration) duration68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Interval interval72 = duration68.toIntervalTo(readableInstant71);
        org.joda.time.Interval interval73 = interval72.toInterval();
        org.joda.time.DateTime dateTime74 = interval73.getEnd();
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableInstant) dateTime74);
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, (org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant79 = null;
        java.lang.Object obj80 = null;
        org.joda.time.Duration duration81 = new org.joda.time.Duration(obj80);
        org.joda.time.Period period82 = new org.joda.time.Period(readableInstant79, (org.joda.time.ReadableDuration) duration81);
        boolean boolean83 = duration78.isShorterThan((org.joda.time.ReadableDuration) duration81);
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Interval interval85 = duration81.toIntervalTo(readableInstant84);
        org.joda.time.Interval interval86 = interval85.toInterval();
        org.joda.time.DateTime dateTime87 = interval86.getEnd();
        org.joda.time.PeriodType periodType89 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType90 = periodType89.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod(periodType90);
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod(10L, periodType90);
        org.joda.time.Period period93 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableInstant) dateTime87, periodType90);
        boolean boolean94 = interval31.isAfter((org.joda.time.ReadableInstant) dateTime63);
        boolean boolean95 = interval9.isBefore((org.joda.time.ReadableInterval) interval31);
        org.joda.time.Interval interval96 = interval31.toInterval();
        org.joda.time.Chronology chronology97 = interval96.getChronology();
        org.joda.time.Duration duration98 = interval96.toDuration();
        org.joda.time.DateTime dateTime99 = interval96.getEnd();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(chronology10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(dateTime63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(interval85);
        org.junit.Assert.assertNotNull(interval86);
        org.junit.Assert.assertNotNull(dateTime87);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(periodType90);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(interval96);
        org.junit.Assert.assertNotNull(chronology97);
        org.junit.Assert.assertNotNull(duration98);
        org.junit.Assert.assertNotNull(dateTime99);
    }

    @Test
    public void test08332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08332");
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.Duration duration9 = org.joda.time.Duration.millis((long) '4');
        long long10 = duration9.getStandardDays();
        boolean boolean11 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        org.joda.time.Interval interval28 = interval27.toInterval();
        org.joda.time.DateTime dateTime29 = interval28.getEnd();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.DateTime dateTime40 = interval39.getEnd();
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime29, (org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.minutesIn(readableInterval50);
        java.lang.String str52 = minutes51.toString();
        org.joda.time.PeriodType periodType53 = minutes51.getPeriodType();
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant49, periodType53);
        org.joda.time.PeriodType periodType55 = periodType53.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration16, (org.joda.time.ReadableInstant) dateTime40, periodType55);
        org.joda.time.Interval interval57 = duration4.toIntervalFrom((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration62 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration65 = duration62.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration67 = duration59.withDurationAdded((org.joda.time.ReadableDuration) duration62, (int) (short) 1);
        org.joda.time.Duration duration70 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration73 = duration70.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration75 = duration59.withDurationAdded((org.joda.time.ReadableDuration) duration73, (int) (short) 100);
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableDuration) duration75);
        org.joda.time.Chronology chronology77 = dateTime40.getChronology();
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(1644572094748L, 1644572157173L, chronology77);
        mutablePeriod78.setMinutes((-869));
        int int81 = mutablePeriod78.getHours();
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(dateTime29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT0M" + "'", str52, "PT0M");
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(chronology77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test08333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08333");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        boolean boolean13 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Interval interval15 = duration11.toIntervalTo(readableInstant14);
        org.joda.time.Interval interval16 = interval15.toInterval();
        org.joda.time.DateTime dateTime17 = interval16.getEnd();
        org.joda.time.Duration duration18 = period6.toDurationFrom((org.joda.time.ReadableInstant) dateTime17);
        int int19 = period6.getSeconds();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test08334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08334");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        int int3 = weeks1.getWeeks();
        org.joda.time.Weeks weeks5 = weeks1.minus(3);
        org.joda.time.Weeks weeks7 = weeks5.minus(0);
        org.joda.time.Weeks weeks8 = weeks7.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType10 = weeks7.getFieldType(2719);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2719");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
    }

    @Test
    public void test08335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08335");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        java.lang.String str37 = dateTime23.toString();
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Period period40 = period38.plusMinutes((-97));
        org.joda.time.Minutes minutes41 = period40.toStandardMinutes();
        org.joda.time.Period period43 = period40.withHours(142);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardSeconds(1644572096050L);
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(1644572081298L, (long) (byte) 1);
        boolean boolean49 = duration45.equals((java.lang.Object) mutablePeriod48);
        int int50 = mutablePeriod48.getYears();
        org.joda.time.Period period51 = period40.withFields((org.joda.time.ReadablePeriod) mutablePeriod48);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType53 = period40.getFieldType((-2147483646));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -2147483646");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "2022-02-11T09:41:15.349Z" + "'", str37, "2022-02-11T09:41:15.349Z");
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-52) + "'", int50 == (-52));
        org.junit.Assert.assertNotNull(period51);
    }

    @Test
    public void test08336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08336");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType1 = periodType0.withMillisRemoved();
        java.lang.String str2 = periodType1.getName();
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.hours();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        boolean boolean13 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Interval interval15 = duration11.toIntervalTo(readableInstant14);
        org.joda.time.Interval interval16 = interval15.toInterval();
        org.joda.time.Chronology chronology17 = interval16.getChronology();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) 9, chronology17);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(10L, 1644572107117L, periodType5, chronology17);
        boolean boolean20 = periodType1.equals((java.lang.Object) periodType5);
        java.lang.String str21 = periodType5.getName();
        java.lang.String str22 = periodType5.getName();
        org.joda.time.PeriodType periodType23 = periodType5.withMonthsRemoved();
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "MillisNoMillis" + "'", str2, "MillisNoMillis");
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(chronology17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Hours" + "'", str21, "Hours");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Hours" + "'", str22, "Hours");
        org.junit.Assert.assertNotNull(periodType23);
    }

    @Test
    public void test08337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08337");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(1644572169225L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test08338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08338");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.plusDays((int) (short) 1);
        org.joda.time.Duration duration7 = period4.toStandardDuration();
        org.joda.time.DurationFieldType[] durationFieldTypeArray8 = period4.getFieldTypes();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(durationFieldTypeArray8);
    }

    @Test
    public void test08339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08339");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 0);
        org.joda.time.Duration duration3 = org.joda.time.Duration.millis((long) '4');
        long long4 = duration3.getMillis();
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType7);
        mutablePeriod8.setYears(0);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology13 = null;
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration12, chronology13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.DateTime dateTime25 = interval24.getEnd();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime25);
        java.lang.String str39 = dateTime25.toString();
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, (org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType43 = periodType42.withMillisRemoved();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((long) (short) 1, periodType43, chronology44);
        org.joda.time.PeriodType periodType46 = periodType43.withYearsRemoved();
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.standard();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant52 = null;
        java.lang.Object obj53 = null;
        org.joda.time.Duration duration54 = new org.joda.time.Duration(obj53);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant52, (org.joda.time.ReadableDuration) duration54);
        boolean boolean56 = duration51.isShorterThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Interval interval58 = duration54.toIntervalTo(readableInstant57);
        org.joda.time.Interval interval59 = interval58.toInterval();
        org.joda.time.Chronology chronology60 = interval59.getChronology();
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((long) (byte) -1, 52L, periodType49, chronology60);
        org.joda.time.Period period62 = duration3.toPeriod(periodType46, chronology60);
        org.joda.time.Period period63 = period1.normalizedStandard(periodType46);
        org.joda.time.Hours hours64 = period1.toStandardHours();
        java.lang.String str65 = hours64.toString();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 52L + "'", long4 == 52L);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "2022-02-11T09:41:15.484Z" + "'", str39, "2022-02-11T09:41:15.484Z");
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(chronology60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "PT0H" + "'", str65, "PT0H");
    }

    @Test
    public void test08340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08340");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        java.lang.String str7 = period6.toString();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        java.lang.Object obj9 = mutablePeriod8.clone();
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology18 = null;
        mutablePeriod13.setPeriod((org.joda.time.ReadableDuration) duration17, chronology18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        org.joda.time.Interval interval29 = interval28.toInterval();
        org.joda.time.DateTime dateTime30 = interval29.getEnd();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        boolean boolean37 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration35.toIntervalTo(readableInstant38);
        org.joda.time.Interval interval40 = interval39.toInterval();
        org.joda.time.DateTime dateTime41 = interval40.getEnd();
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime30, (org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, (org.joda.time.ReadableInstant) dateTime30);
        java.lang.String str44 = dateTime30.toString();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType49);
        mutablePeriod50.setYears(0);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology55 = null;
        mutablePeriod50.setPeriod((org.joda.time.ReadableDuration) duration54, chronology55);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant59 = null;
        java.lang.Object obj60 = null;
        org.joda.time.Duration duration61 = new org.joda.time.Duration(obj60);
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant59, (org.joda.time.ReadableDuration) duration61);
        boolean boolean63 = duration58.isShorterThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration61.toIntervalTo(readableInstant64);
        org.joda.time.Interval interval66 = interval65.toInterval();
        org.joda.time.DateTime dateTime67 = interval66.getEnd();
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant70 = null;
        java.lang.Object obj71 = null;
        org.joda.time.Duration duration72 = new org.joda.time.Duration(obj71);
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant70, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = duration69.isShorterThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Interval interval76 = duration72.toIntervalTo(readableInstant75);
        org.joda.time.Interval interval77 = interval76.toInterval();
        org.joda.time.DateTime dateTime78 = interval77.getEnd();
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime67, (org.joda.time.ReadableInstant) dateTime78);
        org.joda.time.Period period80 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, (org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.PeriodType periodType81 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period82 = duration46.toPeriodTo((org.joda.time.ReadableInstant) dateTime67, periodType81);
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime30, (org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime30, readableInstant84);
        org.joda.time.DurationFieldType durationFieldType86 = org.joda.time.DurationFieldType.halfdays();
        int int87 = mutablePeriod85.indexOf(durationFieldType86);
        mutablePeriod8.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod85);
        mutablePeriod8.setDays(36000000);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0.097S" + "'", str7, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "P36000000D");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "P36000000D");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "P36000000D");
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(dateTime30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(dateTime41);
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "2022-02-11T09:41:15.513Z" + "'", str44, "2022-02-11T09:41:15.513Z");
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(dateTime67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(dateTime78);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test08341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08341");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        boolean boolean7 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((java.lang.Object) duration2, periodType8, chronology9);
        org.joda.time.DurationFieldType[] durationFieldTypeArray11 = mutablePeriod10.getFieldTypes();
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.forFields(durationFieldTypeArray11);
        org.joda.time.Period period13 = new org.joda.time.Period((long) 32, periodType12);
        org.joda.time.Hours hours14 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours15 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours16 = hours14.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = hours15.getFieldType();
        int int18 = period13.indexOf(durationFieldType17);
        java.lang.String str19 = durationFieldType17.toString();
        java.lang.String str20 = durationFieldType17.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldTypeArray11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hours" + "'", str19, "hours");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hours" + "'", str20, "hours");
    }

    @Test
    public void test08342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08342");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds2 = seconds0.dividedBy(3);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType5 = seconds4.getFieldType();
        org.joda.time.Seconds seconds7 = seconds4.plus((-1));
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.TWO;
        java.lang.String str9 = seconds8.toString();
        org.joda.time.Seconds seconds10 = seconds7.plus(seconds8);
        org.joda.time.Seconds seconds11 = seconds3.minus(seconds8);
        org.joda.time.ReadablePeriod readablePeriod12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.standardSecondsIn(readablePeriod12);
        org.joda.time.Seconds seconds14 = seconds11.plus(seconds13);
        int int15 = seconds11.getSeconds();
        int int16 = seconds11.size();
        org.joda.time.Seconds seconds17 = seconds2.minus(seconds11);
        org.joda.time.Seconds seconds19 = seconds2.plus((-34));
        org.joda.time.Duration duration20 = seconds2.toStandardDuration();
        long long21 = duration20.getStandardSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT2S" + "'", str9, "PT2S");
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-715827882L) + "'", long21 == (-715827882L));
    }

    @Test
    public void test08343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08343");
        java.lang.Object obj3 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod();
        mutablePeriod5.setPeriod(100L, (long) (-1));
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.Chronology chronology23 = interval22.getChronology();
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((-1L), chronology23);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology23);
        mutablePeriod5.setPeriod((long) 100, chronology23);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(obj3, periodType4, chronology23);
        org.joda.time.Hours hours28 = org.joda.time.Hours.FOUR;
        org.joda.time.Hours hours30 = hours28.dividedBy(32);
        org.joda.time.Period period32 = org.joda.time.Period.minutes((-101));
        org.joda.time.Period period34 = org.joda.time.Period.days((-97));
        org.joda.time.Period period35 = period32.minus((org.joda.time.ReadablePeriod) period34);
        boolean boolean36 = hours30.equals((java.lang.Object) period34);
        java.lang.String str37 = hours30.toString();
        org.joda.time.Hours hours39 = hours30.plus(9);
        mutablePeriod27.add((org.joda.time.ReadablePeriod) hours30);
        org.joda.time.Hours hours42 = hours30.plus((-2147483646));
        org.joda.time.PeriodType periodType43 = hours30.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        mutablePeriod46.addWeeks((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray49 = mutablePeriod46.getFieldTypes();
        mutablePeriod46.addMillis((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod();
        mutablePeriod53.setPeriod(100L, (long) (-1));
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant63 = null;
        java.lang.Object obj64 = null;
        org.joda.time.Duration duration65 = new org.joda.time.Duration(obj64);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant63, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = duration62.isShorterThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Interval interval69 = duration65.toIntervalTo(readableInstant68);
        org.joda.time.Interval interval70 = interval69.toInterval();
        org.joda.time.Chronology chronology71 = interval70.getChronology();
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((-1L), chronology71);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology71);
        mutablePeriod53.setPeriod((long) 100, chronology71);
        mutablePeriod46.setPeriod(1644572118718L, chronology71);
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(360000L, 1644572157654L, periodType43, chronology71);
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((long) 592, chronology71);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(chronology23);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT0H" + "'", str37, "PT0H");
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(durationFieldTypeArray49);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(interval70);
        org.junit.Assert.assertNotNull(chronology71);
    }

    @Test
    public void test08344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08344");
        org.joda.time.Period period8 = new org.joda.time.Period(2119021, 0, (int) (short) -1, (int) (byte) 0, (-800), 59, (-59), 142);
    }

    @Test
    public void test08345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08345");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period4 = new org.joda.time.Period(1644572099705L, periodType3);
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1644572269457L, 1644572093756L, periodType3);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod5.addMonths((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test08346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08346");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.plus((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = seconds4.plus(seconds5);
        org.joda.time.Seconds seconds8 = seconds0.minus(seconds5);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.secondsIn(readableInterval9);
        org.joda.time.Seconds seconds11 = seconds5.plus(seconds10);
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        java.lang.String str13 = seconds11.toString();
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType15 = seconds14.getFieldType();
        org.joda.time.Seconds seconds17 = seconds14.plus((-1));
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.TWO;
        java.lang.String str19 = seconds18.toString();
        org.joda.time.Seconds seconds20 = seconds17.plus(seconds18);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = seconds21.multipliedBy((int) (byte) 1);
        java.lang.String str24 = seconds21.toString();
        org.joda.time.PeriodType periodType25 = seconds21.getPeriodType();
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType27 = seconds26.getFieldType();
        org.joda.time.Seconds seconds29 = seconds26.plus((-1));
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.TWO;
        java.lang.String str31 = seconds30.toString();
        org.joda.time.Seconds seconds32 = seconds29.plus(seconds30);
        org.joda.time.Seconds seconds33 = seconds21.minus(seconds29);
        org.joda.time.Seconds seconds34 = seconds33.negated();
        org.joda.time.Seconds seconds35 = seconds17.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds17.dividedBy(97);
        boolean boolean38 = seconds11.isLessThan(seconds17);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds39.multipliedBy((int) (byte) 1);
        int int42 = seconds41.size();
        org.joda.time.Period period44 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period46 = period44.minusMillis((-1));
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period46);
        boolean boolean48 = seconds41.isGreaterThan(seconds47);
        org.joda.time.DurationFieldType durationFieldType49 = seconds47.getFieldType();
        org.joda.time.DurationFieldType durationFieldType50 = seconds47.getFieldType();
        org.joda.time.DurationFieldType durationFieldType51 = seconds47.getFieldType();
        boolean boolean52 = seconds11.isGreaterThan(seconds47);
        org.joda.time.Seconds seconds54 = seconds47.plus((-963));
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2S" + "'", str6, "PT2S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT2S" + "'", str13, "PT2S");
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT2S" + "'", str19, "PT2S");
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT3S" + "'", str24, "PT3S");
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT2S" + "'", str31, "PT2S");
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(seconds54);
    }

    @Test
    public void test08347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08347");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (byte) 100);
        org.joda.time.Duration duration3 = duration1.plus(1644572467452L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
    }

    @Test
    public void test08348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08348");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        boolean boolean30 = interval20.isAfter((org.joda.time.ReadableInterval) interval29);
        boolean boolean31 = interval9.contains((org.joda.time.ReadableInterval) interval20);
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType34);
        mutablePeriod35.addMillis((-1));
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant40 = null;
        java.lang.Object obj41 = null;
        org.joda.time.Duration duration42 = new org.joda.time.Duration(obj41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean44 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Interval interval46 = duration42.toIntervalTo(readableInstant45);
        org.joda.time.Interval interval47 = interval46.toInterval();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        boolean boolean54 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Interval interval56 = duration52.toIntervalTo(readableInstant55);
        boolean boolean57 = interval47.isAfter((org.joda.time.ReadableInterval) interval56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval56);
        org.joda.time.Period period59 = interval56.toPeriod();
        mutablePeriod35.add((org.joda.time.ReadableInterval) interval56);
        long long61 = interval56.getEndMillis();
        boolean boolean62 = interval20.isAfter((org.joda.time.ReadableInterval) interval56);
        long long63 = interval56.getStartMillis();
        org.joda.time.Period period64 = interval56.toPeriod();
        org.joda.time.Period period66 = period64.minusHours((-869));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(period59);
// flaky:         org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1644572475734L + "'", long61 == 1644572475734L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1644572475734L + "'", long63 == 1644572475734L);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period66);
    }

    @Test
    public void test08349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08349");
        org.joda.time.Period period1 = org.joda.time.Period.millis(10);
        org.joda.time.Period period3 = period1.minusSeconds(56);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test08350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08350");
        org.joda.time.Period period4 = new org.joda.time.Period(0, 10, (int) (short) -1, (int) (byte) 1);
        int int5 = period4.getYears();
        org.joda.time.Period period7 = period4.minusMinutes((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test08351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08351");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        mutablePeriod3.setWeeks((int) (short) -1);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration12.toIntervalTo(readableInstant15);
        mutablePeriod3.setPeriod((org.joda.time.ReadableInterval) interval16);
        org.joda.time.ReadableDuration readableDuration18 = null;
        mutablePeriod3.setPeriod(readableDuration18);
        int int20 = mutablePeriod3.size();
        org.joda.time.PeriodType periodType21 = mutablePeriod3.getPeriodType();
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertNotNull(periodType21);
    }

    @Test
    public void test08352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08352");
        java.lang.Object obj3 = null;
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType6 = periodType5.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(periodType6);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(10L, periodType6);
        int int9 = mutablePeriod8.getMillis();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration14 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration17 = duration14.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration19 = duration11.withDurationAdded((org.joda.time.ReadableDuration) duration14, (int) (short) 1);
        org.joda.time.Duration duration22 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration25 = duration22.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration27 = duration11.withDurationAdded((org.joda.time.ReadableDuration) duration25, (int) (short) 100);
        mutablePeriod8.add((org.joda.time.ReadableDuration) duration27);
        mutablePeriod8.add(1644572085189L);
        int int31 = mutablePeriod8.getWeeks();
        org.joda.time.DurationFieldType durationFieldType36 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.Chronology chronology47 = interval46.getChronology();
        org.joda.time.DurationField durationField48 = durationFieldType36.getField(chronology47);
        org.joda.time.Period period49 = new org.joda.time.Period(36000L, chronology47);
        org.joda.time.Period period50 = new org.joda.time.Period(1644572093963L, 0L, chronology47);
        mutablePeriod8.add(1644572085189L, chronology47);
        org.joda.time.Period period52 = new org.joda.time.Period(obj3, chronology47);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((long) 35, chronology47);
        org.joda.time.Period period54 = new org.joda.time.Period(1644572165275L, 1644572292459L, chronology47);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = period54.getValue(54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 54");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(chronology47);
        org.junit.Assert.assertNotNull(durationField48);
    }

    @Test
    public void test08353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08353");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.Minutes minutes3 = duration1.toStandardMinutes();
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.PeriodType periodType5 = minutes4.getPeriodType();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        boolean boolean12 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration10.toIntervalTo(readableInstant13);
        long long15 = interval14.getStartMillis();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval14);
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.years();
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.Minutes minutes19 = minutes16.negated();
        org.joda.time.Minutes minutes21 = minutes16.multipliedBy((int) ' ');
        org.joda.time.Minutes minutes23 = minutes16.multipliedBy((int) ' ');
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy(0);
        org.joda.time.Minutes minutes26 = minutes4.plus(minutes23);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(interval14);
// flaky:         org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1644572475886L + "'", long15 == 1644572475886L);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
    }

    @Test
    public void test08354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08354");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (short) 10, 1644572077926L, chronology2);
        org.joda.time.Period period5 = period3.withDays((int) (byte) 10);
        org.joda.time.Period period6 = period3.negated();
        java.lang.String str7 = period3.toString();
        org.joda.time.Period period9 = period3.minusDays(21262214);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P52Y1M1W3DT9H34M37.916S" + "'", str7, "P52Y1M1W3DT9H34M37.916S");
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test08355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08355");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Interval interval18 = interval17.toInterval();
        org.joda.time.Hours hours19 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Hours hours20 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval18);
        boolean boolean21 = interval8.overlaps((org.joda.time.ReadableInterval) interval18);
        org.joda.time.MutableInterval mutableInterval22 = interval8.toMutableInterval();
        long long23 = interval8.getEndMillis();
        org.joda.time.DateTime dateTime24 = interval8.getStart();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        long long34 = interval33.getStartMillis();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.Hours hours45 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval44);
        org.joda.time.Hours hours46 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval44);
        boolean boolean47 = interval33.isBefore((org.joda.time.ReadableInterval) interval44);
        boolean boolean48 = interval8.isBefore((org.joda.time.ReadableInterval) interval33);
        java.lang.String str49 = interval33.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(mutableInterval22);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572475916L + "'", long23 == 1644572475916L);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1644572475916L + "'", long34 == 1644572475916L);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "2022-02-11T09:41:15.916Z/2022-02-11T09:41:15.916Z" + "'", str49, "2022-02-11T09:41:15.916Z/2022-02-11T09:41:15.916Z");
    }

    @Test
    public void test08356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08356");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours(1644572355925L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test08357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08357");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-9700), 903, (-348), (-52));
    }

    @Test
    public void test08358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08358");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("2022-02-11T09:37:10.689Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:37:10.689Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08359");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.Period period9 = period6.toPeriod();
        org.joda.time.Period period10 = period6.toPeriod();
        int int11 = period6.getMillis();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = duration14.toPeriodFrom(readableInstant15);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration14.toPeriod(chronology17);
        org.joda.time.Period period20 = period18.withYears((int) (byte) 10);
        org.joda.time.Period period22 = period18.minusMonths(100);
        org.joda.time.Period period24 = period18.plusYears(100);
        org.joda.time.Period period26 = period24.minusMinutes((int) (byte) 100);
        org.joda.time.Period period27 = period6.withFields((org.joda.time.ReadablePeriod) period24);
        org.joda.time.Period period29 = period24.plusWeeks((int) ' ');
        org.joda.time.Period period31 = period29.withSeconds((int) (byte) 10);
        org.joda.time.Period period33 = period29.minusSeconds((int) (short) -1);
        int int34 = period29.getWeeks();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-97) + "'", int11 == (-97));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 32 + "'", int34 == 32);
    }

    @Test
    public void test08360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08360");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(0L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.DateTime dateTime12 = interval11.getEnd();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        boolean boolean32 = interval22.isAfter((org.joda.time.ReadableInterval) interval31);
        boolean boolean33 = interval11.contains((org.joda.time.ReadableInterval) interval22);
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval11);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        boolean boolean54 = interval44.isAfter((org.joda.time.ReadableInterval) interval53);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant57 = null;
        java.lang.Object obj58 = null;
        org.joda.time.Duration duration59 = new org.joda.time.Duration(obj58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant57, (org.joda.time.ReadableDuration) duration59);
        boolean boolean61 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration59.toIntervalTo(readableInstant62);
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant66 = null;
        java.lang.Object obj67 = null;
        org.joda.time.Duration duration68 = new org.joda.time.Duration(obj67);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant66, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = duration65.isShorterThan((org.joda.time.ReadableDuration) duration68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Interval interval72 = duration68.toIntervalTo(readableInstant71);
        org.joda.time.Interval interval73 = interval72.toInterval();
        org.joda.time.Hours hours74 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval73);
        org.joda.time.Hours hours75 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval73);
        boolean boolean76 = interval63.overlaps((org.joda.time.ReadableInterval) interval73);
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant79 = null;
        java.lang.Object obj80 = null;
        org.joda.time.Duration duration81 = new org.joda.time.Duration(obj80);
        org.joda.time.Period period82 = new org.joda.time.Period(readableInstant79, (org.joda.time.ReadableDuration) duration81);
        boolean boolean83 = duration78.isShorterThan((org.joda.time.ReadableDuration) duration81);
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Interval interval85 = duration81.toIntervalTo(readableInstant84);
        org.joda.time.Interval interval86 = interval85.toInterval();
        org.joda.time.Hours hours87 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval86);
        boolean boolean88 = interval73.contains((org.joda.time.ReadableInterval) interval86);
        boolean boolean89 = interval53.contains((org.joda.time.ReadableInterval) interval73);
        boolean boolean90 = interval11.overlaps((org.joda.time.ReadableInterval) interval73);
        org.joda.time.DateTime dateTime91 = interval11.getStart();
        org.joda.time.Duration duration92 = mutablePeriod1.toDurationTo((org.joda.time.ReadableInstant) dateTime91);
        mutablePeriod1.addSeconds(10);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = mutablePeriod1.getValue(33);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 33");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(dateTime12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(interval85);
        org.junit.Assert.assertNotNull(interval86);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(dateTime91);
        org.junit.Assert.assertNotNull(duration92);
    }

    @Test
    public void test08361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08361");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (short) 10, 1644572077926L, chronology2);
        org.joda.time.Period period5 = period3.plusMinutes((int) (short) 100);
        org.joda.time.Period period6 = period5.toPeriod();
        org.joda.time.Period period8 = period5.minusHours((-4));
        org.joda.time.Period period10 = period8.minusMillis(2);
        int int11 = period10.getWeeks();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test08362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08362");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(30, 246, 18, 8, (-9551), 9, 246, (int) (short) 1);
    }

    @Test
    public void test08363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08363");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        org.joda.time.Days days4 = org.joda.time.Days.ONE;
        org.joda.time.Days days5 = days4.negated();
        boolean boolean6 = days3.isGreaterThan(days5);
        org.joda.time.Days days7 = days0.plus(days5);
        int int8 = days0.getDays();
        org.joda.time.Days days10 = days0.minus(2147483647);
        org.joda.time.Days days12 = days0.plus(35);
        org.joda.time.Days days14 = org.joda.time.Days.days((int) (byte) 1);
        org.joda.time.Days days15 = days14.negated();
        org.joda.time.Days days16 = days0.minus(days14);
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.seconds();
        int int18 = days16.get(durationFieldType17);
        org.joda.time.Duration duration19 = days16.toStandardDuration();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(duration19);
    }

    @Test
    public void test08364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08364");
        org.joda.time.Period period4 = new org.joda.time.Period(17, 13, 142, 97);
    }

    @Test
    public void test08365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08365");
        org.joda.time.Period period1 = new org.joda.time.Period(1L);
        int int2 = period1.getWeeks();
        org.joda.time.Period period4 = period1.plusMonths((int) '#');
        org.joda.time.Period period6 = period4.minusDays(100);
        org.joda.time.Period period8 = period4.plusMonths(35);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn(readableInterval9);
        org.joda.time.Hours hours12 = hours10.minus((int) (byte) 100);
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = duration15.toPeriodFrom(readableInstant16);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration15.toPeriod(chronology18);
        org.joda.time.Period period21 = period19.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Hours hours23 = org.joda.time.Hours.hoursIn(readableInterval22);
        org.joda.time.Period period24 = period21.minus((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours26 = hours23.minus((int) '4');
        org.joda.time.Hours hours28 = hours26.plus((int) '#');
        org.joda.time.Hours hours29 = hours12.minus(hours26);
        org.joda.time.Hours hours30 = hours26.negated();
        org.joda.time.PeriodType periodType31 = hours30.getPeriodType();
        org.joda.time.PeriodType periodType32 = hours30.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period33 = period4.withPeriodType(periodType32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
    }

    @Test
    public void test08366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08366");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks3 = weeks1.dividedBy((-101));
        int int4 = weeks3.getWeeks();
        org.joda.time.Weeks weeks6 = weeks3.plus(10);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(weeks6);
    }

    @Test
    public void test08367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08367");
        org.joda.time.Period period1 = new org.joda.time.Period(1L);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Period period4 = period1.plus((org.joda.time.ReadablePeriod) weeks3);
        int int5 = weeks3.getWeeks();
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test08368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08368");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds2 = seconds0.multipliedBy((int) (byte) 1);
        java.lang.String str3 = seconds0.toString();
        org.joda.time.PeriodType periodType4 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = seconds5.plus((-1));
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.TWO;
        java.lang.String str10 = seconds9.toString();
        org.joda.time.Seconds seconds11 = seconds8.plus(seconds9);
        org.joda.time.Seconds seconds12 = seconds0.minus(seconds8);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        org.joda.time.Seconds seconds16 = seconds13.plus((-1));
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.TWO;
        java.lang.String str18 = seconds17.toString();
        org.joda.time.Seconds seconds19 = seconds16.plus(seconds17);
        boolean boolean20 = seconds12.isGreaterThan(seconds16);
        org.joda.time.Seconds seconds22 = seconds12.plus((int) (short) 100);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT3S" + "'", str3, "PT3S");
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2S" + "'", str10, "PT2S");
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2S" + "'", str18, "PT2S");
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(seconds22);
    }

    @Test
    public void test08369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08369");
        org.joda.time.Period period1 = org.joda.time.Period.days(100);
        org.joda.time.Period period3 = period1.plusMinutes(0);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration8 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration11 = duration8.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration13 = duration5.withDurationAdded((org.joda.time.ReadableDuration) duration8, (int) (short) 1);
        org.joda.time.Days days14 = duration13.toStandardDays();
        org.joda.time.Duration duration16 = duration13.minus((long) 10);
        boolean boolean17 = period3.equals((java.lang.Object) duration13);
        long long18 = duration13.getStandardSeconds();
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.standard();
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) (byte) 0, periodType21);
        org.joda.time.PeriodType periodType23 = periodType21.withMonthsRemoved();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration13.toPeriod(periodType23, chronology24);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 35999L + "'", long18 == 35999L);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test08370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08370");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks5 = weeks2.plus((int) ' ');
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks11 = weeks8.plus((int) ' ');
        boolean boolean12 = weeks2.isGreaterThan(weeks8);
        org.joda.time.MutablePeriod mutablePeriod13 = weeks2.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks2.multipliedBy((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType16 = weeks2.getFieldType();
        org.joda.time.Weeks weeks18 = weeks2.plus(6);
        org.joda.time.Weeks weeks20 = weeks18.dividedBy(906);
        int int21 = weeks18.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 7 + "'", int21 == 7);
    }

    @Test
    public void test08371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08371");
        org.joda.time.Days days1 = org.joda.time.Days.days((-100));
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test08372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08372");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period4 = new org.joda.time.Period(1644572099705L, periodType3);
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1644572269457L, 1644572093756L, periodType3);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        boolean boolean12 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration10.toIntervalTo(readableInstant13);
        org.joda.time.Interval interval15 = interval14.toInterval();
        org.joda.time.DateTime dateTime16 = interval15.getEnd();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.DateTime dateTime27 = interval26.getEnd();
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime16, (org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.DateTime dateTime39 = interval38.getEnd();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Interval interval48 = duration44.toIntervalTo(readableInstant47);
        org.joda.time.Interval interval49 = interval48.toInterval();
        org.joda.time.DateTime dateTime50 = interval49.getEnd();
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableInstant) dateTime50);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime50);
        org.joda.time.DurationFieldType durationFieldType53 = minutes52.getFieldType();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.DurationField durationField55 = durationFieldType53.getField(chronology54);
        boolean boolean56 = periodType3.isSupported(durationFieldType53);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(dateTime16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(dateTime50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(durationField55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test08373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08373");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("2022-02-11T09:39:18.777Z/2022-02-11T09:39:18.777Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:39:18.777Z/2022-02...\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08374");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration7 = duration5.withMillis((long) (byte) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration13 = duration10.plus((long) 'a');
        org.joda.time.Duration duration15 = duration7.withDurationAdded((org.joda.time.ReadableDuration) duration13, (int) '4');
        org.joda.time.Duration duration17 = org.joda.time.Duration.millis(1644572088907L);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.time();
        org.joda.time.PeriodType periodType20 = periodType19.withYearsRemoved();
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = seconds21.multipliedBy((int) (byte) 1);
        java.lang.String str24 = seconds21.toString();
        org.joda.time.PeriodType periodType25 = seconds21.getPeriodType();
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType27 = seconds26.getFieldType();
        org.joda.time.Seconds seconds29 = seconds26.plus((-1));
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.TWO;
        java.lang.String str31 = seconds30.toString();
        org.joda.time.Seconds seconds32 = seconds29.plus(seconds30);
        org.joda.time.Seconds seconds33 = seconds21.minus(seconds29);
        org.joda.time.Seconds seconds34 = seconds33.negated();
        org.joda.time.Seconds seconds36 = seconds34.plus((-101));
        org.joda.time.DurationFieldType durationFieldType37 = seconds36.getFieldType();
        boolean boolean38 = periodType20.isSupported(durationFieldType37);
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(periodType20);
        org.joda.time.ReadableInstant readableInstant40 = null;
        java.lang.Object obj41 = null;
        org.joda.time.Duration duration42 = new org.joda.time.Duration(obj41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration42, readableInstant44);
        long long46 = duration42.getMillis();
        long long47 = duration42.getStandardDays();
        java.lang.String str48 = duration42.toString();
        long long49 = duration42.getStandardSeconds();
        org.joda.time.Duration duration51 = new org.joda.time.Duration(1644572076849L);
        long long52 = duration51.getStandardSeconds();
        org.joda.time.Duration duration54 = duration42.withDurationAdded((org.joda.time.ReadableDuration) duration51, (int) ' ');
        org.joda.time.Duration duration55 = duration42.toDuration();
        org.joda.time.Period period58 = new org.joda.time.Period(1644572128494L, (long) (byte) 0);
        org.joda.time.Period period60 = period58.plusYears((int) ' ');
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((java.lang.Object) period58);
        org.joda.time.PeriodType periodType62 = mutablePeriod61.getPeriodType();
        org.joda.time.Period period63 = duration42.toPeriod(periodType62);
        org.joda.time.Duration duration65 = duration42.withMillis(1644572256756L);
        mutablePeriod39.setPeriod((org.joda.time.ReadableDuration) duration42);
        int int67 = duration13.compareTo((org.joda.time.ReadableDuration) duration42);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT3S" + "'", str24, "PT3S");
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT2S" + "'", str31, "PT2S");
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "PT0S" + "'", str48, "PT0S");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1644572076L + "'", long52 == 1644572076L);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
    }

    @Test
    public void test08375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08375");
        org.joda.time.Period period1 = org.joda.time.Period.hours((-369700));
        org.joda.time.Period period3 = period1.plusMonths(5);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test08376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08376");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period1 = org.joda.time.Period.parse("halfdays");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"halfdays\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08377");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        long long3 = duration1.getStandardMinutes();
        org.joda.time.Duration duration6 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration9 = duration6.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes10 = duration9.toStandardMinutes();
        org.joda.time.Duration duration12 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration9, (-1));
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration1.toPeriod(chronology13);
        org.joda.time.Period period16 = period14.plusMillis(456368756);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period16);
        org.joda.time.Period period19 = period16.withWeeks((int) (short) 0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test08378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08378");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(1644572106070L);
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType4);
        mutablePeriod5.setYears(0);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration9, chronology10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.DateTime dateTime22 = interval21.getEnd();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, (org.joda.time.ReadableInstant) dateTime22);
        java.lang.String str36 = dateTime22.toString();
        org.joda.time.Duration duration38 = new org.joda.time.Duration((-86400L));
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableDuration) duration38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType41 = periodType40.withHoursRemoved();
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime22, periodType41);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType46 = periodType45.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(periodType46);
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(10L, periodType46);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(10L, periodType46);
        int int50 = mutablePeriod49.getMonths();
        int int51 = mutablePeriod49.getHours();
        org.joda.time.Duration duration53 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration55 = duration53.plus(1644572076849L);
        long long56 = duration53.getMillis();
        mutablePeriod49.add((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration61 = duration53.withDurationAdded((org.joda.time.ReadableDuration) duration59, 35);
        org.joda.time.Duration duration62 = duration53.toDuration();
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant66 = null;
        java.lang.Object obj67 = null;
        org.joda.time.Duration duration68 = new org.joda.time.Duration(obj67);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant66, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = duration65.isShorterThan((org.joda.time.ReadableDuration) duration68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Interval interval72 = duration68.toIntervalTo(readableInstant71);
        org.joda.time.Interval interval73 = interval72.toInterval();
        org.joda.time.DateTime dateTime74 = interval73.getEnd();
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant77 = null;
        java.lang.Object obj78 = null;
        org.joda.time.Duration duration79 = new org.joda.time.Duration(obj78);
        org.joda.time.Period period80 = new org.joda.time.Period(readableInstant77, (org.joda.time.ReadableDuration) duration79);
        boolean boolean81 = duration76.isShorterThan((org.joda.time.ReadableDuration) duration79);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.Interval interval83 = duration79.toIntervalTo(readableInstant82);
        org.joda.time.Interval interval84 = interval83.toInterval();
        org.joda.time.DateTime dateTime85 = interval84.getEnd();
        org.joda.time.Period period86 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime74, (org.joda.time.ReadableInstant) dateTime85);
        org.joda.time.ReadableInstant readableInstant87 = null;
        boolean boolean88 = dateTime74.isEqual(readableInstant87);
        org.joda.time.DateTimeFieldType dateTimeFieldType89 = null;
        boolean boolean90 = dateTime74.isSupported(dateTimeFieldType89);
        org.joda.time.Weeks weeks91 = org.joda.time.Weeks.weeksBetween((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime74);
        boolean boolean93 = dateTime74.equals((java.lang.Object) "2022-02-11T09:36:56.879Z");
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "2022-02-11T09:41:16.307Z" + "'", str36, "2022-02-11T09:41:16.307Z");
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 52L + "'", long56 == 52L);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(interval83);
        org.junit.Assert.assertNotNull(interval84);
        org.junit.Assert.assertNotNull(dateTime85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test08379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08379");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        long long9 = interval8.getStartMillis();
        org.joda.time.DateTime dateTime10 = interval8.getStart();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        boolean boolean30 = interval20.isAfter((org.joda.time.ReadableInterval) interval29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval29);
        org.joda.time.DateTime dateTime32 = interval29.getEnd();
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, readableDuration34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = weeks36.minus(weeks39);
        org.joda.time.PeriodType periodType42 = weeks41.getPeriodType();
        org.joda.time.PeriodType periodType45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType45);
        mutablePeriod46.setYears(0);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology51 = null;
        mutablePeriod46.setPeriod((org.joda.time.ReadableDuration) duration50, chronology51);
        mutablePeriod46.add(0, (-1), (int) (short) 1, (int) (byte) 0, (int) (byte) 0, 1, 10, (int) '4');
        int int62 = mutablePeriod46.getYears();
        mutablePeriod46.addMonths((int) (short) 0);
        mutablePeriod46.addSeconds(0);
        mutablePeriod46.addSeconds((-1));
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType70 = periodType69.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(periodType69);
        org.joda.time.DurationFieldType durationFieldType72 = org.joda.time.DurationFieldType.weeks();
        java.lang.String str73 = durationFieldType72.toString();
        boolean boolean74 = periodType69.isSupported(durationFieldType72);
        boolean boolean75 = mutablePeriod46.isSupported(durationFieldType72);
        int int76 = periodType42.indexOf(durationFieldType72);
        org.joda.time.Period period78 = period35.withFieldAdded(durationFieldType72, 7);
        org.joda.time.Period period80 = org.joda.time.Period.months(100);
        org.joda.time.Period period81 = period35.minus((org.joda.time.ReadablePeriod) period80);
        org.joda.time.Period period83 = period35.plusMinutes(601);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1644572476349L + "'", long9 == 1644572476349L);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "weeks" + "'", str73, "weeks");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period83);
    }

    @Test
    public void test08380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08380");
        org.joda.time.Period period1 = org.joda.time.Period.months(30);
        org.joda.time.Period period3 = period1.plusDays(369700);
        org.joda.time.Period period5 = period3.plusSeconds((int) ' ');
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test08381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08381");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Interval interval18 = interval17.toInterval();
        org.joda.time.Hours hours19 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Hours hours20 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval18);
        boolean boolean21 = interval8.overlaps((org.joda.time.ReadableInterval) interval18);
        org.joda.time.DateTime dateTime22 = interval8.getStart();
        org.joda.time.MutableInterval mutableInterval23 = interval8.toMutableInterval();
        org.joda.time.MutableInterval mutableInterval24 = mutableInterval23.toMutableInterval();
        org.joda.time.MutableInterval mutableInterval25 = mutableInterval23.toMutableInterval();
        long long26 = mutableInterval25.getStartMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(mutableInterval23);
        org.junit.Assert.assertNotNull(mutableInterval24);
        org.junit.Assert.assertNotNull(mutableInterval25);
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1644572476405L + "'", long26 == 1644572476405L);
    }

    @Test
    public void test08382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08382");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        boolean boolean30 = interval20.isAfter((org.joda.time.ReadableInterval) interval29);
        boolean boolean31 = interval9.contains((org.joda.time.ReadableInterval) interval20);
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType34);
        mutablePeriod35.addMillis((-1));
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant40 = null;
        java.lang.Object obj41 = null;
        org.joda.time.Duration duration42 = new org.joda.time.Duration(obj41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean44 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Interval interval46 = duration42.toIntervalTo(readableInstant45);
        org.joda.time.Interval interval47 = interval46.toInterval();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        boolean boolean54 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Interval interval56 = duration52.toIntervalTo(readableInstant55);
        boolean boolean57 = interval47.isAfter((org.joda.time.ReadableInterval) interval56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval56);
        org.joda.time.Period period59 = interval56.toPeriod();
        mutablePeriod35.add((org.joda.time.ReadableInterval) interval56);
        long long61 = interval56.getEndMillis();
        boolean boolean62 = interval20.isAfter((org.joda.time.ReadableInterval) interval56);
        long long63 = interval56.getEndMillis();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval56);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(period59);
// flaky:         org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1644572476422L + "'", long61 == 1644572476422L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1644572476422L + "'", long63 == 1644572476422L);
        org.junit.Assert.assertNotNull(weeks64);
    }

    @Test
    public void test08383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08383");
        java.lang.Object obj1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.Duration duration9 = org.joda.time.Duration.millis((long) '4');
        long long10 = duration9.getStandardDays();
        boolean boolean11 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType13 = periodType12.withHoursRemoved();
        org.joda.time.Period period14 = duration9.toPeriod(periodType12);
        org.joda.time.PeriodType periodType15 = periodType12.withMinutesRemoved();
        org.joda.time.Period period16 = new org.joda.time.Period(obj1, periodType12);
        org.joda.time.PeriodType periodType17 = periodType12.withWeeksRemoved();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((java.lang.Object) duration19, periodType25, chronology26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.millis((long) '4');
        long long30 = duration29.getStandardDays();
        boolean boolean31 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration29);
        long long32 = duration19.getMillis();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.Chronology chronology43 = interval42.getChronology();
        org.joda.time.Period period44 = duration19.toPeriod(chronology43);
        org.joda.time.Period period45 = new org.joda.time.Period(1644572298194L, periodType17, chronology43);
        org.joda.time.Days days46 = org.joda.time.Days.ONE;
        org.joda.time.Days days47 = days46.negated();
        org.joda.time.Days days48 = org.joda.time.Days.ONE;
        org.joda.time.Days days49 = days48.negated();
        org.joda.time.Days days50 = org.joda.time.Days.ONE;
        org.joda.time.Days days51 = days50.negated();
        boolean boolean52 = days49.isGreaterThan(days51);
        org.joda.time.Days days53 = days46.plus(days51);
        java.lang.String str54 = days51.toString();
        org.joda.time.DurationFieldType durationFieldType55 = days51.getFieldType();
        java.lang.String str56 = durationFieldType55.getName();
        int int57 = periodType17.indexOf(durationFieldType55);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 36000000L + "'", long32 == 36000000L);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(chronology43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "P-1D" + "'", str54, "P-1D");
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "days" + "'", str56, "days");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test08384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08384");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration7 = duration4.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration9 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration4, (int) (short) 1);
        org.joda.time.Days days10 = duration9.toStandardDays();
        org.joda.time.Duration duration12 = duration9.minus((long) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((java.lang.Object) duration14, periodType20, chronology21);
        org.joda.time.PeriodType periodType23 = periodType20.withSecondsRemoved();
        org.joda.time.Period period24 = duration12.toPeriod(periodType20);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        org.joda.time.Interval interval34 = interval33.toInterval();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        boolean boolean44 = interval34.isAfter((org.joda.time.ReadableInterval) interval43);
        org.joda.time.Period period45 = interval43.toPeriod();
        org.joda.time.Period period46 = interval43.toPeriod();
        org.joda.time.Interval interval47 = interval43.toInterval();
        org.joda.time.DateTime dateTime48 = interval47.getEnd();
        org.joda.time.Period period49 = duration12.toPeriodTo((org.joda.time.ReadableInstant) dateTime48);
        long long50 = duration12.getStandardHours();
        org.joda.time.Period period51 = new org.joda.time.Period((java.lang.Object) duration12);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 9L + "'", long50 == 9L);
    }

    @Test
    public void test08385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08385");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(1644572263159L);
    }

    @Test
    public void test08386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08386");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(1644572091586L, chronology1);
        int int3 = period2.getMonths();
        org.joda.time.Hours hours4 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period2);
        int int5 = period2.getMillis();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 586 + "'", int5 == 586);
    }

    @Test
    public void test08387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08387");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.weeks();
        org.joda.time.PeriodType periodType4 = periodType3.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(2, 36, (int) '4', (-1), (-9700), (-963), (int) (short) 1, (-4));
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        long long24 = interval22.toDurationMillis();
        org.joda.time.Interval interval25 = interval22.toInterval();
        long long26 = interval25.getStartMillis();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration40.toIntervalTo(readableInstant43);
        org.joda.time.Interval interval45 = interval44.toInterval();
        org.joda.time.Hours hours46 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval45);
        org.joda.time.Hours hours47 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval45);
        boolean boolean48 = interval35.overlaps((org.joda.time.ReadableInterval) interval45);
        boolean boolean49 = interval25.isBefore((org.joda.time.ReadableInterval) interval35);
        long long50 = interval35.toDurationMillis();
        org.joda.time.Chronology chronology51 = interval35.getChronology();
        org.joda.time.DateTime dateTime52 = interval35.getEnd();
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType54 = periodType53.withMonthsRemoved();
        org.joda.time.PeriodType periodType55 = periodType54.withHoursRemoved();
        org.joda.time.Period period56 = interval35.toPeriod(periodType54);
        mutablePeriod13.setPeriod((org.joda.time.ReadableInterval) interval35);
        org.joda.time.DurationFieldType durationFieldType60 = org.joda.time.DurationFieldType.months();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant63 = null;
        java.lang.Object obj64 = null;
        org.joda.time.Duration duration65 = new org.joda.time.Duration(obj64);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant63, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = duration62.isShorterThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.PeriodType periodType68 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((java.lang.Object) duration62, periodType68, chronology69);
        org.joda.time.Duration duration72 = org.joda.time.Duration.millis((long) '4');
        long long73 = duration72.getStandardDays();
        boolean boolean74 = duration62.isLongerThan((org.joda.time.ReadableDuration) duration72);
        long long75 = duration62.getMillis();
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant78 = null;
        java.lang.Object obj79 = null;
        org.joda.time.Duration duration80 = new org.joda.time.Duration(obj79);
        org.joda.time.Period period81 = new org.joda.time.Period(readableInstant78, (org.joda.time.ReadableDuration) duration80);
        boolean boolean82 = duration77.isShorterThan((org.joda.time.ReadableDuration) duration80);
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.Interval interval84 = duration80.toIntervalTo(readableInstant83);
        org.joda.time.Interval interval85 = interval84.toInterval();
        org.joda.time.Chronology chronology86 = interval85.getChronology();
        org.joda.time.Period period87 = duration62.toPeriod(chronology86);
        org.joda.time.DurationField durationField88 = durationFieldType60.getField(chronology86);
        mutablePeriod13.setPeriod(1644572113592L, (long) 3, chronology86);
        org.joda.time.Period period90 = new org.joda.time.Period(700L, periodType4, chronology86);
        org.joda.time.PeriodType periodType91 = period90.getPeriodType();
        org.joda.time.Period period92 = new org.joda.time.Period(0L, 1644572403977L, periodType91);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period94 = period92.minusDays((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(interval25);
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1644572476564L + "'", long26 == 1644572476564L);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(chronology51);
        org.junit.Assert.assertNotNull(dateTime52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 36000000L + "'", long75 == 36000000L);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(interval84);
        org.junit.Assert.assertNotNull(interval85);
        org.junit.Assert.assertNotNull(chronology86);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(durationField88);
        org.junit.Assert.assertNotNull(periodType91);
    }

    @Test
    public void test08388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08388");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.hours();
        org.joda.time.Period period3 = new org.joda.time.Period((long) (byte) 0, (long) (short) 100, periodType2);
        org.joda.time.Period period5 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period6 = period5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType8 = period6.getFieldType(5);
        boolean boolean9 = periodType2.equals((java.lang.Object) period6);
        org.joda.time.Period period11 = period6.minusMillis(36000000);
        int int12 = period11.getMonths();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test08389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08389");
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutesIn(readableInterval4);
        java.lang.String str6 = minutes5.toString();
        org.joda.time.PeriodType periodType7 = minutes5.getPeriodType();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) (short) 10, (long) (byte) -1, periodType7, chronology8);
        org.joda.time.PeriodType periodType10 = period9.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(periodType10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1644572138187L, (-9648L), periodType10, chronology12);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0M" + "'", str6, "PT0M");
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test08390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08390");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Period period9 = period4.multipliedBy((int) (byte) 100);
        org.joda.time.Period period11 = period9.withHours((int) (short) 0);
        int int12 = period11.getYears();
        org.joda.time.Period period14 = period11.minusDays(10);
        int int15 = period11.getMillis();
        int int16 = period11.getMillis();
        org.joda.time.Period period18 = period11.withWeeks((-800));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-9700) + "'", int15 == (-9700));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-9700) + "'", int16 == (-9700));
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test08391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08391");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(0);
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.minusHours((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray5 = period1.getFieldTypes();
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.forFields(durationFieldTypeArray5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.forFields(durationFieldTypeArray5);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldTypeArray5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test08392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08392");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Days days4 = duration2.toStandardDays();
        org.joda.time.Duration duration6 = org.joda.time.Duration.millis((long) '4');
        long long7 = duration6.getMillis();
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType10);
        mutablePeriod11.setYears(0);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology16 = null;
        mutablePeriod11.setPeriod((org.joda.time.ReadableDuration) duration15, chronology16);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        org.joda.time.Interval interval27 = interval26.toInterval();
        org.joda.time.DateTime dateTime28 = interval27.getEnd();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.DateTime dateTime39 = interval38.getEnd();
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime28, (org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, (org.joda.time.ReadableInstant) dateTime28);
        java.lang.String str42 = dateTime28.toString();
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, (org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant46 = null;
        java.lang.Object obj47 = null;
        org.joda.time.Duration duration48 = new org.joda.time.Duration(obj47);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant46, (org.joda.time.ReadableDuration) duration48);
        boolean boolean50 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Interval interval52 = duration48.toIntervalTo(readableInstant51);
        org.joda.time.Interval interval53 = interval52.toInterval();
        org.joda.time.DateTime dateTime54 = interval53.getEnd();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant57 = null;
        java.lang.Object obj58 = null;
        org.joda.time.Duration duration59 = new org.joda.time.Duration(obj58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant57, (org.joda.time.ReadableDuration) duration59);
        boolean boolean61 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration59.toIntervalTo(readableInstant62);
        org.joda.time.Interval interval64 = interval63.toInterval();
        org.joda.time.DateTime dateTime65 = interval64.getEnd();
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime54, (org.joda.time.ReadableInstant) dateTime65);
        org.joda.time.Days days67 = org.joda.time.Days.daysBetween((org.joda.time.ReadableInstant) dateTime28, (org.joda.time.ReadableInstant) dateTime65);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant70 = null;
        java.lang.Object obj71 = null;
        org.joda.time.Duration duration72 = new org.joda.time.Duration(obj71);
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant70, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = duration69.isShorterThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Interval interval76 = duration72.toIntervalTo(readableInstant75);
        org.joda.time.Interval interval77 = interval76.toInterval();
        org.joda.time.DateTime dateTime78 = interval77.getEnd();
        boolean boolean79 = dateTime28.isEqual((org.joda.time.ReadableInstant) dateTime78);
        org.joda.time.DateTimeFieldType dateTimeFieldType80 = null;
        boolean boolean81 = dateTime28.isSupported(dateTimeFieldType80);
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.dayTime();
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, (org.joda.time.ReadableInstant) dateTime28, periodType82);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod83.addWeeks((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 52L + "'", long7 == 52L);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(dateTime28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(dateTime39);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "2022-02-11T09:41:16.729Z" + "'", str42, "2022-02-11T09:41:16.729Z");
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(dateTime65);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(dateTime78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(periodType82);
    }

    @Test
    public void test08393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08393");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Period period9 = period4.multipliedBy((int) (byte) 100);
        org.joda.time.Period period11 = period9.withHours((int) (short) 0);
        org.joda.time.Minutes minutes12 = period9.toStandardMinutes();
        org.joda.time.Period period14 = period9.withMillis((int) (short) 0);
        org.joda.time.Period period16 = period9.plusMillis(601);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test08394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08394");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Period period3 = mutablePeriod2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod4 = mutablePeriod2.copy();
        mutablePeriod2.setMillis(36000000);
        mutablePeriod2.addMonths(246);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
    }

    @Test
    public void test08395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08395");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration7, chronology8);
        mutablePeriod3.add(0, (-1), (int) (short) 1, (int) (byte) 0, (int) (byte) 0, 1, 10, (int) '4');
        int int19 = mutablePeriod3.getYears();
        mutablePeriod3.addMonths((int) (short) 0);
        mutablePeriod3.addMinutes((int) (byte) 10);
        mutablePeriod3.setPeriod(1644572437957L);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test08396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08396");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(0L);
        org.joda.time.Hours hours2 = duration1.toStandardHours();
        org.joda.time.Weeks weeks3 = hours2.toStandardWeeks();
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test08397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08397");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Days days4 = duration2.toStandardDays();
        org.joda.time.Days days6 = days4.multipliedBy((-9700));
        org.joda.time.Days days7 = days4.negated();
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
    }

    @Test
    public void test08398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08398");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        org.joda.time.Hours hours14 = hours11.minus(1);
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = duration17.toPeriodFrom(readableInstant18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration17.toPeriod(chronology20);
        org.joda.time.Period period23 = period21.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Hours hours25 = org.joda.time.Hours.hoursIn(readableInterval24);
        org.joda.time.Period period26 = period23.minus((org.joda.time.ReadablePeriod) hours25);
        org.joda.time.Hours hours27 = hours25.negated();
        org.joda.time.Hours hours28 = hours14.plus(hours27);
        org.joda.time.Hours hours30 = hours27.multipliedBy((int) (short) 100);
        java.lang.String str31 = hours27.toString();
        org.joda.time.Hours hours33 = hours27.minus((int) (byte) -1);
        org.joda.time.Hours hours35 = hours33.minus(0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT0H" + "'", str31, "PT0H");
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
    }

    @Test
    public void test08399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08399");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days1 = org.joda.time.Days.parseDays("2022-02-11T09:38:46.581Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:38:46.581Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08400");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        org.joda.time.Days days4 = org.joda.time.Days.ONE;
        org.joda.time.Days days5 = days4.negated();
        boolean boolean6 = days3.isGreaterThan(days5);
        org.joda.time.Days days7 = days0.plus(days5);
        org.joda.time.Days days8 = null;
        boolean boolean9 = days0.isGreaterThan(days8);
        org.joda.time.Days days11 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.PeriodType periodType12 = days11.getPeriodType();
        boolean boolean13 = days0.isGreaterThan(days11);
        org.joda.time.Period period14 = days0.toPeriod();
        org.joda.time.Days days15 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days17 = days15.multipliedBy(8);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        org.joda.time.Interval interval27 = interval26.toInterval();
        long long28 = interval26.toDurationMillis();
        org.joda.time.Interval interval29 = interval26.toInterval();
        org.joda.time.Days days30 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval26);
        org.joda.time.DurationFieldType durationFieldType31 = days30.getFieldType();
        org.joda.time.Days days33 = days30.minus(0);
        boolean boolean34 = days17.isGreaterThan(days30);
        org.joda.time.Days days35 = days0.minus(days30);
        org.joda.time.PeriodType periodType36 = days35.getPeriodType();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(periodType36);
    }

    @Test
    public void test08401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08401");
        org.joda.time.Period period1 = org.joda.time.Period.hours(3);
        org.joda.time.Period period3 = period1.plusYears(2147483647);
        org.joda.time.Period period5 = period3.minusDays(648);
        org.joda.time.Period period7 = period3.plusSeconds(0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test08402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08402");
        org.joda.time.Period period1 = new org.joda.time.Period((-1L));
        org.joda.time.Seconds seconds2 = period1.toStandardSeconds();
        org.joda.time.Seconds seconds3 = seconds2.negated();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType5 = seconds4.getFieldType();
        org.joda.time.Seconds seconds7 = seconds4.plus((-1));
        org.joda.time.Seconds seconds8 = seconds3.plus(seconds7);
        org.joda.time.Seconds seconds10 = seconds7.dividedBy(1);
        org.joda.time.Seconds seconds12 = seconds10.plus(18);
        org.joda.time.Seconds seconds13 = seconds10.negated();
        org.joda.time.PeriodType periodType14 = seconds10.getPeriodType();
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(periodType14);
    }

    @Test
    public void test08403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08403");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.minus(weeks1);
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.dayTime();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((java.lang.Object) weeks2, periodType3);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks7 = weeks6.negated();
        boolean boolean8 = weeks2.isGreaterThan(weeks6);
        java.lang.String str9 = weeks6.toString();
        int int10 = weeks6.getWeeks();
        org.joda.time.Duration duration11 = weeks6.toStandardDuration();
        int int12 = weeks6.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-1W" + "'", str9, "P-1W");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test08404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08404");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(46, 876, 8, (-9700));
        mutablePeriod4.add((-52), 456368756, (-10886400), 8, 36000000, 97, (-21262214), (-348));
    }

    @Test
    public void test08405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08405");
        org.joda.time.Period period1 = org.joda.time.Period.hours(246);
        org.joda.time.Period period3 = period1.withWeeks((-97));
        org.joda.time.Period period5 = period3.plusDays(7);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test08406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08406");
        org.joda.time.Period period1 = org.joda.time.Period.hours((int) (short) 0);
        org.joda.time.Hours hours2 = period1.toStandardHours();
        org.joda.time.Period period4 = org.joda.time.Period.years((int) (short) 10);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant7 = null;
        java.lang.Object obj8 = null;
        org.joda.time.Duration duration9 = new org.joda.time.Duration(obj8);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration9);
        boolean boolean11 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Interval interval13 = duration9.toIntervalTo(readableInstant12);
        org.joda.time.Interval interval14 = interval13.toInterval();
        org.joda.time.Hours hours15 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval14);
        org.joda.time.Hours hours17 = hours15.dividedBy(1);
        boolean boolean18 = period4.equals((java.lang.Object) hours17);
        org.joda.time.Hours hours20 = hours17.minus(10);
        org.joda.time.Hours hours21 = hours2.plus(hours17);
        int int22 = hours2.size();
        int int23 = hours2.getHours();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test08407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08407");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType1 = periodType0.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(periodType0);
        mutablePeriod2.setPeriod(1644572115073L);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod2.setWeeks(27409535);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
    }

    @Test
    public void test08408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08408");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(2147483647);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType4 = seconds3.getFieldType();
        org.joda.time.Seconds seconds6 = seconds3.plus((-1));
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.TWO;
        java.lang.String str8 = seconds7.toString();
        org.joda.time.Seconds seconds9 = seconds6.plus(seconds7);
        org.joda.time.Seconds seconds10 = seconds2.minus(seconds7);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy(3);
        org.joda.time.Seconds seconds14 = seconds12.plus((-97));
        boolean boolean15 = seconds1.isLessThan(seconds14);
        org.joda.time.Seconds seconds17 = seconds14.dividedBy((-3));
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT2S" + "'", str8, "PT2S");
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
    }

    @Test
    public void test08409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08409");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.Duration duration17 = org.joda.time.Duration.millis((long) '4');
        long long18 = duration17.getStandardDays();
        boolean boolean19 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        org.joda.time.Interval interval36 = interval35.toInterval();
        org.joda.time.DateTime dateTime37 = interval36.getEnd();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant40 = null;
        java.lang.Object obj41 = null;
        org.joda.time.Duration duration42 = new org.joda.time.Duration(obj41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean44 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Interval interval46 = duration42.toIntervalTo(readableInstant45);
        org.joda.time.Interval interval47 = interval46.toInterval();
        org.joda.time.DateTime dateTime48 = interval47.getEnd();
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant52 = null;
        java.lang.Object obj53 = null;
        org.joda.time.Duration duration54 = new org.joda.time.Duration(obj53);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant52, (org.joda.time.ReadableDuration) duration54);
        boolean boolean56 = duration51.isShorterThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.minutesIn(readableInterval58);
        java.lang.String str60 = minutes59.toString();
        org.joda.time.PeriodType periodType61 = minutes59.getPeriodType();
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant57, periodType61);
        org.joda.time.PeriodType periodType63 = periodType61.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, (org.joda.time.ReadableInstant) dateTime48, periodType63);
        org.joda.time.Interval interval65 = duration12.toIntervalFrom((org.joda.time.ReadableInstant) dateTime48);
        boolean boolean66 = interval9.isBefore((org.joda.time.ReadableInterval) interval65);
        org.joda.time.MutableInterval mutableInterval67 = interval9.toMutableInterval();
        org.joda.time.Period period68 = mutableInterval67.toPeriod();
        org.joda.time.Period period69 = new org.joda.time.Period((java.lang.Object) period68);
        org.joda.time.Period period71 = period69.withDays((-2147483646));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT0M" + "'", str60, "PT0M");
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(mutableInterval67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period71);
    }

    @Test
    public void test08410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08410");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType3 = minutes2.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod4 = minutes2.toMutablePeriod();
        org.joda.time.Period period5 = new org.joda.time.Period((java.lang.Object) minutes2);
        org.joda.time.Minutes minutes6 = minutes2.negated();
        org.joda.time.Minutes minutes7 = minutes6.negated();
        org.joda.time.Minutes minutes8 = null;
        boolean boolean9 = minutes7.isLessThan(minutes8);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test08411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08411");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572237246L, 35791394L);
        mutablePeriod2.add(218, 0, 0, 1, 17, (int) (short) 100, (int) '#', 100);
    }

    @Test
    public void test08412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08412");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn(readableInterval9);
        org.joda.time.Period period11 = period8.minus((org.joda.time.ReadablePeriod) hours10);
        org.joda.time.Hours hours12 = hours10.negated();
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = duration15.toPeriodFrom(readableInstant16);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration15.toPeriod(chronology18);
        org.joda.time.Period period21 = period19.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Hours hours23 = org.joda.time.Hours.hoursIn(readableInterval22);
        org.joda.time.Period period24 = period21.minus((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours25 = hours23.negated();
        org.joda.time.Hours hours26 = hours10.minus(hours23);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        org.joda.time.Interval interval36 = interval35.toInterval();
        org.joda.time.Hours hours37 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval36);
        boolean boolean38 = hours23.isLessThan(hours37);
        org.joda.time.Hours hours40 = hours23.plus(35);
        org.joda.time.Hours hours42 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours43 = hours40.plus(hours42);
        org.joda.time.Hours hours45 = hours43.plus(36);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours45);
    }

    @Test
    public void test08413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08413");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 0);
        java.lang.String str2 = period1.toString();
        org.joda.time.Period period4 = period1.withMonths(35);
        org.joda.time.Period period6 = period1.minusDays((-10));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0S" + "'", str2, "PT0S");
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test08414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08414");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("2022-02-11T09:39:21.653Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:39:21.653Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08415");
        org.joda.time.Period period2 = new org.joda.time.Period(1644572113474L, 1644572091852L);
        org.joda.time.Period period4 = period2.plusMonths(27409537);
        org.joda.time.Period period6 = period2.minusYears(90);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test08416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08416");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(1644572116727L);
        org.joda.time.Duration duration3 = duration1.plus(1644572262174L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
    }

    @Test
    public void test08417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08417");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration3 = duration1.plus(1644572076849L);
        org.joda.time.Days days4 = duration1.toStandardDays();
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.eras();
        java.lang.String str6 = durationFieldType5.getName();
        boolean boolean7 = days4.isSupported(durationFieldType5);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration15 = duration12.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration17 = duration9.withDurationAdded((org.joda.time.ReadableDuration) duration12, (int) (short) 1);
        org.joda.time.Days days18 = duration17.toStandardDays();
        org.joda.time.Days days19 = days4.plus(days18);
        org.joda.time.Days days21 = days19.dividedBy((-9700));
        org.joda.time.Days days23 = days19.minus((int) ' ');
        org.joda.time.PeriodType periodType24 = days23.getPeriodType();
        org.joda.time.Days days26 = days23.dividedBy((-2147483648));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "eras" + "'", str6, "eras");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(days26);
    }

    @Test
    public void test08418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08418");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        int int1 = weeks0.size();
        org.joda.time.Duration duration2 = weeks0.toStandardDuration();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        int int4 = weeks3.size();
        org.joda.time.Duration duration5 = weeks3.toStandardDuration();
        java.lang.String str6 = weeks3.toString();
        org.joda.time.Weeks weeks8 = weeks3.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks10 = weeks8.multipliedBy(3);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.weeks((-1));
        boolean boolean13 = weeks8.isGreaterThan(weeks12);
        org.joda.time.Weeks weeks14 = weeks0.minus(weeks12);
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks21 = weeks18.plus((int) ' ');
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks27 = weeks24.plus((int) ' ');
        boolean boolean28 = weeks18.isGreaterThan(weeks24);
        org.joda.time.Weeks weeks30 = weeks24.plus(2719);
        org.joda.time.Weeks weeks31 = weeks15.plus(weeks24);
        org.joda.time.Weeks weeks33 = weeks31.multipliedBy(21262214);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P3W" + "'", str6, "P3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
    }

    @Test
    public void test08419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08419");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        java.lang.String str7 = period6.toString();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        long long18 = interval17.getStartMillis();
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval17);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval17);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval17);
        org.joda.time.DateTime dateTime22 = interval17.getEnd();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) (short) 100, chronology24);
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.eras();
        boolean boolean27 = period25.isSupported(durationFieldType26);
        org.joda.time.Period period29 = period25.plusHours((int) (byte) 10);
        int int31 = period25.getValue((int) (short) 0);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours(1644572080830L);
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType36);
        mutablePeriod37.setYears(0);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology42 = null;
        mutablePeriod37.setPeriod((org.joda.time.ReadableDuration) duration41, chronology42);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant46 = null;
        java.lang.Object obj47 = null;
        org.joda.time.Duration duration48 = new org.joda.time.Duration(obj47);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant46, (org.joda.time.ReadableDuration) duration48);
        boolean boolean50 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Interval interval52 = duration48.toIntervalTo(readableInstant51);
        org.joda.time.Interval interval53 = interval52.toInterval();
        org.joda.time.DateTime dateTime54 = interval53.getEnd();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant57 = null;
        java.lang.Object obj58 = null;
        org.joda.time.Duration duration59 = new org.joda.time.Duration(obj58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant57, (org.joda.time.ReadableDuration) duration59);
        boolean boolean61 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration59.toIntervalTo(readableInstant62);
        org.joda.time.Interval interval64 = interval63.toInterval();
        org.joda.time.DateTime dateTime65 = interval64.getEnd();
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime54, (org.joda.time.ReadableInstant) dateTime65);
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, (org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant70 = null;
        java.lang.Object obj71 = null;
        org.joda.time.Duration duration72 = new org.joda.time.Duration(obj71);
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant70, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = duration69.isShorterThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Interval interval76 = duration72.toIntervalTo(readableInstant75);
        org.joda.time.Interval interval77 = interval76.toInterval();
        org.joda.time.DateTime dateTime78 = interval77.getEnd();
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType81 = periodType80.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(periodType81);
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(10L, periodType81);
        org.joda.time.Period period84 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime54, (org.joda.time.ReadableInstant) dateTime78, periodType81);
        org.joda.time.Period period85 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, (org.joda.time.ReadableInstant) dateTime78);
        java.lang.String str86 = dateTime78.toString();
        org.joda.time.Duration duration87 = period25.toDurationTo((org.joda.time.ReadableInstant) dateTime78);
        org.joda.time.Duration duration88 = new org.joda.time.Duration((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime78);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0.097S" + "'", str7, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572477224L + "'", long18 == 1644572477224L);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(dateTime65);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(dateTime78);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType81);
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "2022-02-11T09:41:17.224Z" + "'", str86, "2022-02-11T09:41:17.224Z");
        org.junit.Assert.assertNotNull(duration87);
    }

    @Test
    public void test08420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08420");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        mutablePeriod9.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod13);
        mutablePeriod13.setPeriod((long) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod19 = mutablePeriod13.copy();
        int int20 = mutablePeriod13.getSeconds();
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) 1);
        mutablePeriod30.setPeriod((org.joda.time.ReadablePeriod) minutes33);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        mutablePeriod30.setPeriod((org.joda.time.ReadableInterval) interval43);
        mutablePeriod13.setPeriod((org.joda.time.ReadableInterval) interval43);
        long long46 = interval43.getStartMillis();
        org.joda.time.Interval interval47 = interval43.toInterval();
        org.joda.time.Chronology chronology48 = interval47.getChronology();
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
// flaky:         org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1644572477332L + "'", long46 == 1644572477332L);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(chronology48);
    }

    @Test
    public void test08421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08421");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(36000000);
        org.joda.time.Minutes minutes3 = minutes1.minus((int) ' ');
        org.joda.time.Duration duration6 = new org.joda.time.Duration(1644572078660L, 36000000L);
        org.joda.time.Minutes minutes7 = duration6.toStandardMinutes();
        boolean boolean8 = minutes1.isGreaterThan(minutes7);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test08422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08422");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        mutablePeriod9.setPeriod((org.joda.time.ReadableInterval) interval22);
        org.joda.time.DateTime dateTime24 = interval22.getStart();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes(1644572194576L);
        org.joda.time.Duration duration28 = duration26.withMillis(1644572143374L);
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime24, (org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.millis((long) '4');
        long long38 = duration37.getStandardDays();
        boolean boolean39 = duration32.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        org.joda.time.Interval interval56 = interval55.toInterval();
        org.joda.time.DateTime dateTime57 = interval56.getEnd();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant60 = null;
        java.lang.Object obj61 = null;
        org.joda.time.Duration duration62 = new org.joda.time.Duration(obj61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant60, (org.joda.time.ReadableDuration) duration62);
        boolean boolean64 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Interval interval66 = duration62.toIntervalTo(readableInstant65);
        org.joda.time.Interval interval67 = interval66.toInterval();
        org.joda.time.DateTime dateTime68 = interval67.getEnd();
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime57, (org.joda.time.ReadableInstant) dateTime68);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant72 = null;
        java.lang.Object obj73 = null;
        org.joda.time.Duration duration74 = new org.joda.time.Duration(obj73);
        org.joda.time.Period period75 = new org.joda.time.Period(readableInstant72, (org.joda.time.ReadableDuration) duration74);
        boolean boolean76 = duration71.isShorterThan((org.joda.time.ReadableDuration) duration74);
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.ReadableInterval readableInterval78 = null;
        org.joda.time.Minutes minutes79 = org.joda.time.Minutes.minutesIn(readableInterval78);
        java.lang.String str80 = minutes79.toString();
        org.joda.time.PeriodType periodType81 = minutes79.getPeriodType();
        org.joda.time.Period period82 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration74, readableInstant77, periodType81);
        org.joda.time.PeriodType periodType83 = periodType81.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration44, (org.joda.time.ReadableInstant) dateTime68, periodType83);
        org.joda.time.Interval interval85 = duration32.toIntervalFrom((org.joda.time.ReadableInstant) dateTime68);
        java.lang.String str86 = interval85.toString();
        org.joda.time.Duration duration87 = interval85.toDuration();
        org.joda.time.ReadableInstant readableInstant88 = null;
        boolean boolean89 = interval85.isBefore(readableInstant88);
        mutablePeriod29.setPeriod((org.joda.time.ReadableInterval) interval85);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(interval67);
        org.junit.Assert.assertNotNull(dateTime68);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "PT0M" + "'", str80, "PT0M");
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(interval85);
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "2022-02-11T09:41:17.490Z/2022-02-11T09:41:17.490Z" + "'", str86, "2022-02-11T09:41:17.490Z/2022-02-11T09:41:17.490Z");
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test08423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08423");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Period period4 = period2.plusMillis((int) (byte) 0);
        int int5 = period2.getHours();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        boolean boolean12 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((java.lang.Object) duration7, periodType13, chronology14);
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType24);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) 1);
        mutablePeriod25.setPeriod((org.joda.time.ReadablePeriod) minutes28);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        mutablePeriod25.setPeriod((org.joda.time.ReadableInterval) interval38);
        org.joda.time.Duration duration41 = org.joda.time.Duration.millis((long) '4');
        long long42 = duration41.getMillis();
        org.joda.time.PeriodType periodType45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType45);
        mutablePeriod46.setYears(0);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology51 = null;
        mutablePeriod46.setPeriod((org.joda.time.ReadableDuration) duration50, chronology51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        org.joda.time.Interval interval62 = interval61.toInterval();
        org.joda.time.DateTime dateTime63 = interval62.getEnd();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant66 = null;
        java.lang.Object obj67 = null;
        org.joda.time.Duration duration68 = new org.joda.time.Duration(obj67);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant66, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = duration65.isShorterThan((org.joda.time.ReadableDuration) duration68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Interval interval72 = duration68.toIntervalTo(readableInstant71);
        org.joda.time.Interval interval73 = interval72.toInterval();
        org.joda.time.DateTime dateTime74 = interval73.getEnd();
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableInstant) dateTime74);
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, (org.joda.time.ReadableInstant) dateTime63);
        java.lang.String str77 = dateTime63.toString();
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, (org.joda.time.ReadableInstant) dateTime63);
        boolean boolean79 = interval38.isAfter((org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime63);
        int int81 = mutablePeriod80.getMinutes();
        mutablePeriod80.add(1644572116727L);
        org.joda.time.DurationFieldType durationFieldType84 = org.joda.time.DurationFieldType.millis();
        java.lang.String str85 = durationFieldType84.toString();
        mutablePeriod80.set(durationFieldType84, (-963));
        java.lang.String str88 = durationFieldType84.getName();
        int int89 = period2.get(durationFieldType84);
        int int90 = period2.getHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 52L + "'", long42 == 52L);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(dateTime63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(dateTime74);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "2022-02-11T09:41:17.541Z" + "'", str77, "2022-02-11T09:41:17.541Z");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "millis" + "'", str85, "millis");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "millis" + "'", str88, "millis");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 52 + "'", int89 == 52);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
    }

    @Test
    public void test08424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08424");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks3 = weeks1.dividedBy((-101));
        org.joda.time.Duration duration4 = weeks1.toStandardDuration();
        int int5 = weeks1.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test08425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08425");
        org.joda.time.Period period1 = new org.joda.time.Period(1644572245495L);
    }

    @Test
    public void test08426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08426");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572188851L);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = duration4.toPeriodFrom(readableInstant5);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration4.toPeriod(chronology7);
        java.lang.String str9 = period8.toString();
        org.joda.time.MutablePeriod mutablePeriod10 = period8.toMutablePeriod();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        long long20 = interval19.getStartMillis();
        mutablePeriod10.setPeriod((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval19);
        long long23 = interval19.getEndMillis();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant46 = null;
        java.lang.Object obj47 = null;
        org.joda.time.Duration duration48 = new org.joda.time.Duration(obj47);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant46, (org.joda.time.ReadableDuration) duration48);
        boolean boolean50 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Interval interval52 = duration48.toIntervalTo(readableInstant51);
        boolean boolean53 = interval43.isAfter((org.joda.time.ReadableInterval) interval52);
        org.joda.time.Period period54 = interval52.toPeriod();
        boolean boolean55 = interval33.isBefore((org.joda.time.ReadableInterval) interval52);
        boolean boolean56 = interval19.isAfter((org.joda.time.ReadableInterval) interval33);
        org.joda.time.Duration duration57 = interval19.toDuration();
        org.joda.time.Chronology chronology58 = interval19.getChronology();
        org.joda.time.Period period59 = duration1.toPeriod(chronology58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        java.lang.Object obj61 = null;
        org.joda.time.Duration duration62 = new org.joda.time.Duration(obj61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant60, (org.joda.time.ReadableDuration) duration62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration62, readableInstant64);
        long long66 = duration62.getMillis();
        long long67 = duration62.getStandardDays();
        java.lang.String str68 = duration62.toString();
        long long69 = duration62.getStandardSeconds();
        org.joda.time.Duration duration71 = new org.joda.time.Duration(1644572076849L);
        long long72 = duration71.getStandardSeconds();
        org.joda.time.Duration duration74 = duration62.withDurationAdded((org.joda.time.ReadableDuration) duration71, (int) ' ');
        org.joda.time.Duration duration75 = duration62.toDuration();
        boolean boolean76 = duration1.isEqual((org.joda.time.ReadableDuration) duration62);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT0.097S" + "'", str9, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
// flaky:         org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1644572477666L + "'", long20 == 1644572477666L);
        org.junit.Assert.assertNotNull(minutes22);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572477666L + "'", long23 == 1644572477666L);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(chronology58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "PT0S" + "'", str68, "PT0S");
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1644572076L + "'", long72 == 1644572076L);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test08427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08427");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration5 = duration3.plus(1644572076849L);
        long long6 = duration3.getMillis();
        long long7 = duration3.getStandardHours();
        boolean boolean8 = duration1.isEqual((org.joda.time.ReadableDuration) duration3);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.millis((long) '4');
        long long17 = duration16.getStandardDays();
        boolean boolean18 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration19 = duration3.minus((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration25 = duration23.plus(1644572076849L);
        long long26 = duration23.getMillis();
        long long27 = duration23.getStandardHours();
        boolean boolean28 = duration21.isEqual((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.Duration duration36 = org.joda.time.Duration.millis((long) '4');
        long long37 = duration36.getStandardDays();
        boolean boolean38 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration39 = duration23.minus((org.joda.time.ReadableDuration) duration36);
        boolean boolean40 = duration19.equals((java.lang.Object) duration23);
        org.joda.time.Duration duration42 = org.joda.time.Duration.millis((long) '4');
        long long43 = duration42.getMillis();
        org.joda.time.Minutes minutes44 = duration42.toStandardMinutes();
        org.joda.time.Duration duration45 = duration23.plus((org.joda.time.ReadableDuration) duration42);
        long long46 = duration45.getStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 52L + "'", long6 == 52L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 52L + "'", long26 == 52L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 52L + "'", long43 == 52L);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
    }

    @Test
    public void test08428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08428");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(36000000L, 0L);
        int int3 = mutablePeriod2.getMonths();
        int int4 = mutablePeriod2.getMonths();
        mutablePeriod2.setMinutes(7);
        mutablePeriod2.addMinutes((-101));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test08429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08429");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((-101));
        org.joda.time.Period period3 = org.joda.time.Period.days((-97));
        org.joda.time.Period period4 = period1.minus((org.joda.time.ReadablePeriod) period3);
        org.joda.time.Period period6 = period3.multipliedBy(56);
        org.joda.time.Days days7 = org.joda.time.Days.ONE;
        org.joda.time.Days days8 = days7.negated();
        org.joda.time.Days days9 = org.joda.time.Days.ONE;
        org.joda.time.Days days10 = days9.negated();
        boolean boolean11 = days8.isGreaterThan(days10);
        org.joda.time.Days days13 = days10.plus((int) (short) 10);
        org.joda.time.Days days14 = org.joda.time.Days.ONE;
        org.joda.time.Days days15 = days14.negated();
        org.joda.time.Days days16 = org.joda.time.Days.ONE;
        org.joda.time.Days days17 = days16.negated();
        org.joda.time.Days days18 = org.joda.time.Days.ONE;
        org.joda.time.Days days19 = days18.negated();
        boolean boolean20 = days17.isGreaterThan(days19);
        org.joda.time.Days days21 = days14.plus(days19);
        org.joda.time.Days days22 = days13.plus(days14);
        int int23 = days22.getDays();
        org.joda.time.Days days25 = days22.minus(14);
        org.joda.time.DurationFieldType durationFieldType26 = days22.getFieldType();
        org.joda.time.Period period28 = period3.withField(durationFieldType26, 33);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test08430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08430");
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.TWO;
        org.joda.time.DurationFieldType durationFieldType7 = weeks6.getFieldType();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Interval interval18 = interval17.toInterval();
        org.joda.time.DateTime dateTime19 = interval18.getEnd();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        org.joda.time.Interval interval29 = interval28.toInterval();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        boolean boolean39 = interval29.isAfter((org.joda.time.ReadableInterval) interval38);
        boolean boolean40 = interval18.contains((org.joda.time.ReadableInterval) interval29);
        org.joda.time.PeriodType periodType43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType43);
        mutablePeriod44.setYears(0);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology49 = null;
        mutablePeriod44.setPeriod((org.joda.time.ReadableDuration) duration48, chronology49);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant53 = null;
        java.lang.Object obj54 = null;
        org.joda.time.Duration duration55 = new org.joda.time.Duration(obj54);
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant53, (org.joda.time.ReadableDuration) duration55);
        boolean boolean57 = duration52.isShorterThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Interval interval59 = duration55.toIntervalTo(readableInstant58);
        org.joda.time.Interval interval60 = interval59.toInterval();
        org.joda.time.DateTime dateTime61 = interval60.getEnd();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant64 = null;
        java.lang.Object obj65 = null;
        org.joda.time.Duration duration66 = new org.joda.time.Duration(obj65);
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant64, (org.joda.time.ReadableDuration) duration66);
        boolean boolean68 = duration63.isShorterThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Interval interval70 = duration66.toIntervalTo(readableInstant69);
        org.joda.time.Interval interval71 = interval70.toInterval();
        org.joda.time.DateTime dateTime72 = interval71.getEnd();
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime61, (org.joda.time.ReadableInstant) dateTime72);
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, (org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant77 = null;
        java.lang.Object obj78 = null;
        org.joda.time.Duration duration79 = new org.joda.time.Duration(obj78);
        org.joda.time.Period period80 = new org.joda.time.Period(readableInstant77, (org.joda.time.ReadableDuration) duration79);
        boolean boolean81 = duration76.isShorterThan((org.joda.time.ReadableDuration) duration79);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.Interval interval83 = duration79.toIntervalTo(readableInstant82);
        org.joda.time.Interval interval84 = interval83.toInterval();
        org.joda.time.DateTime dateTime85 = interval84.getEnd();
        org.joda.time.PeriodType periodType87 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType88 = periodType87.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod(periodType88);
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod(10L, periodType88);
        org.joda.time.Period period91 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime61, (org.joda.time.ReadableInstant) dateTime85, periodType88);
        boolean boolean92 = interval29.isAfter((org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.Chronology chronology93 = dateTime61.getChronology();
        org.joda.time.MutablePeriod mutablePeriod94 = new org.joda.time.MutablePeriod(0L, chronology93);
        org.joda.time.DurationField durationField95 = durationFieldType7.getField(chronology93);
        org.joda.time.MutablePeriod mutablePeriod96 = new org.joda.time.MutablePeriod((long) 97, 1644572206510L, chronology93);
        org.joda.time.Period period97 = new org.joda.time.Period(1644572252104L, (long) 34, chronology93);
        org.joda.time.Period period98 = new org.joda.time.Period(1644572375632L, 1644572395182L, chronology93);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(dateTime61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(interval70);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(dateTime72);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(interval83);
        org.junit.Assert.assertNotNull(interval84);
        org.junit.Assert.assertNotNull(dateTime85);
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(chronology93);
        org.junit.Assert.assertNotNull(durationField95);
    }

    @Test
    public void test08431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08431");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Duration duration5 = duration2.plus((long) 'a');
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.millis((long) '4');
        long long14 = duration13.getStandardDays();
        boolean boolean15 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        boolean boolean22 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.minutesIn(readableInterval54);
        java.lang.String str56 = minutes55.toString();
        org.joda.time.PeriodType periodType57 = minutes55.getPeriodType();
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant53, periodType57);
        org.joda.time.PeriodType periodType59 = periodType57.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration20, (org.joda.time.ReadableInstant) dateTime44, periodType59);
        org.joda.time.Interval interval61 = duration8.toIntervalFrom((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Interval interval62 = duration2.toIntervalFrom((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Period period63 = interval62.toPeriod();
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval62);
        org.joda.time.Minutes minutes66 = minutes64.plus((-9700));
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType69 = minutes68.getFieldType();
        org.joda.time.Minutes minutes70 = minutes68.negated();
        org.joda.time.DurationFieldType durationFieldType72 = minutes70.getFieldType((int) (short) 0);
        java.lang.String str73 = minutes70.toString();
        org.joda.time.Minutes minutes74 = minutes66.plus(minutes70);
        org.joda.time.Minutes minutes76 = minutes74.dividedBy(107);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PT0M" + "'", str56, "PT0M");
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "PT-10M" + "'", str73, "PT-10M");
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes76);
    }

    @Test
    public void test08432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08432");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Duration duration11 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean12 = duration4.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes13 = duration4.toStandardMinutes();
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = duration17.toPeriodFrom(readableInstant18);
        org.joda.time.Period period21 = period19.minusSeconds((int) '4');
        org.joda.time.Minutes minutes22 = period19.toStandardMinutes();
        boolean boolean23 = minutes13.isLessThan(minutes22);
        org.joda.time.Minutes minutes25 = minutes13.minus((int) (short) 0);
        org.joda.time.PeriodType periodType26 = minutes13.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(periodType26);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(periodType26);
    }

    @Test
    public void test08433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08433");
        org.joda.time.Period period1 = new org.joda.time.Period(1L);
        org.joda.time.Period period3 = period1.minusMonths((-101));
        org.joda.time.Period period5 = period1.plusMillis(3);
        org.joda.time.Period period7 = period5.withHours(2719);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration12.toIntervalTo(readableInstant15);
        org.joda.time.Interval interval17 = interval16.toInterval();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        boolean boolean27 = interval17.isAfter((org.joda.time.ReadableInterval) interval26);
        org.joda.time.Period period28 = interval26.toPeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval26);
        org.joda.time.PeriodType periodType30 = hours29.getPeriodType();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        boolean boolean37 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration35.toIntervalTo(readableInstant38);
        org.joda.time.Interval interval40 = interval39.toInterval();
        org.joda.time.Period period41 = interval40.toPeriod();
        org.joda.time.Chronology chronology42 = interval40.getChronology();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period43 = new org.joda.time.Period((java.lang.Object) period7, periodType30, chronology42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(chronology42);
    }

    @Test
    public void test08434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08434");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((-6));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test08435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08435");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType3 = minutes2.getPeriodType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period5 = new org.joda.time.Period((java.lang.Object) minutes4);
        boolean boolean6 = minutes2.isGreaterThan(minutes4);
        org.joda.time.MutablePeriod mutablePeriod7 = minutes2.toMutablePeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.minutesIn(readableInterval16);
        java.lang.String str18 = minutes17.toString();
        org.joda.time.PeriodType periodType19 = minutes17.getPeriodType();
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant15, periodType19);
        org.joda.time.Duration duration22 = duration12.withMillis((long) 'a');
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.DateTime dateTime40 = interval39.getEnd();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant43 = null;
        java.lang.Object obj44 = null;
        org.joda.time.Duration duration45 = new org.joda.time.Duration(obj44);
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration45);
        boolean boolean47 = duration42.isShorterThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Interval interval49 = duration45.toIntervalTo(readableInstant48);
        org.joda.time.Interval interval50 = interval49.toInterval();
        org.joda.time.DateTime dateTime51 = interval50.getEnd();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableInterval readableInterval61 = null;
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.minutesIn(readableInterval61);
        java.lang.String str63 = minutes62.toString();
        org.joda.time.PeriodType periodType64 = minutes62.getPeriodType();
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant60, periodType64);
        org.joda.time.PeriodType periodType66 = periodType64.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration27, (org.joda.time.ReadableInstant) dateTime51, periodType66);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant70 = null;
        java.lang.Object obj71 = null;
        org.joda.time.Duration duration72 = new org.joda.time.Duration(obj71);
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant70, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = duration69.isShorterThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((java.lang.Object) duration69, periodType75, chronology76);
        org.joda.time.Duration duration79 = org.joda.time.Duration.millis((long) '4');
        long long80 = duration79.getStandardDays();
        boolean boolean81 = duration69.isLongerThan((org.joda.time.ReadableDuration) duration79);
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime51, (org.joda.time.ReadableDuration) duration79);
        org.joda.time.Interval interval83 = duration22.toIntervalTo((org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.Chronology chronology84 = dateTime51.getChronology();
        org.joda.time.Chronology chronology85 = dateTime51.getChronology();
        boolean boolean87 = dateTime51.equals((java.lang.Object) 1644572136952L);
        org.joda.time.Duration duration88 = mutablePeriod7.toDurationTo((org.joda.time.ReadableInstant) dateTime51);
        mutablePeriod7.add(2147483639, (-35), 52114, 53, 2147483647, (-21262214), (-9700), 33);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT0M" + "'", str18, "PT0M");
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(dateTime51);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "PT0M" + "'", str63, "PT0M");
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(interval83);
        org.junit.Assert.assertNotNull(chronology84);
        org.junit.Assert.assertNotNull(chronology85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(duration88);
    }

    @Test
    public void test08436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08436");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("2022-02-11T09:38:35.884Z/2022-02-11T09:38:35.884Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:38:35.884Z/2022-02...\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08437");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, 0L);
        org.joda.time.Period period4 = period2.minusYears((int) (short) 1);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant7 = null;
        java.lang.Object obj8 = null;
        org.joda.time.Duration duration9 = new org.joda.time.Duration(obj8);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration9);
        boolean boolean11 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Interval interval13 = duration9.toIntervalTo(readableInstant12);
        org.joda.time.Interval interval14 = interval13.toInterval();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        boolean boolean24 = interval14.isAfter((org.joda.time.ReadableInterval) interval23);
        org.joda.time.Period period25 = interval23.toPeriod();
        org.joda.time.Period period26 = interval23.toPeriod();
        org.joda.time.Period period28 = period26.minusMillis((int) (byte) 1);
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = duration31.toPeriodFrom(readableInstant32);
        org.joda.time.Period period35 = period33.minusSeconds((int) '4');
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType40 = mutablePeriod38.getFieldType(1);
        org.joda.time.Period period42 = period33.withField(durationFieldType40, (int) (byte) 100);
        int int43 = period28.get(durationFieldType40);
        org.joda.time.Period period45 = period2.withField(durationFieldType40, 4);
        org.joda.time.Period period47 = period2.minusMinutes(90);
        int int48 = period2.getSeconds();
        int[] intArray49 = period2.getValues();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test08438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08438");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.plusDays(1);
        org.joda.time.ReadableInstant readableInstant7 = null;
        java.lang.Object obj8 = null;
        org.joda.time.Duration duration9 = new org.joda.time.Duration(obj8);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.Days days11 = duration9.toStandardDays();
        org.joda.time.Days days12 = days11.negated();
        org.joda.time.Period period13 = period6.plus((org.joda.time.ReadablePeriod) days11);
        org.joda.time.Period period15 = period13.plusDays((-1));
        org.joda.time.Period period17 = period15.minusHours((int) '#');
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType22 = mutablePeriod20.getFieldType(1);
        org.joda.time.Period period24 = period17.withField(durationFieldType22, 1);
        int[] intArray25 = period24.getValues();
        org.joda.time.Period period27 = period24.plusWeeks((-9551));
        int[] intArray28 = period27.getValues();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 1, 0, 0, -35, 10, 100, 100]");
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1, -9551, 0, -35, 10, 100, 100]");
    }

    @Test
    public void test08439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08439");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) ' ', chronology1);
        org.joda.time.Duration duration4 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration6 = duration4.plus(1644572076849L);
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Hours hours8 = duration6.toStandardHours();
        org.joda.time.Hours hours9 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours10 = hours8.minus(hours9);
        int int11 = hours8.getHours();
        java.lang.String str12 = hours8.toString();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 456825 + "'", int11 == 456825);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT456825H" + "'", str12, "PT456825H");
    }

    @Test
    public void test08440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08440");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Period period9 = period4.multipliedBy((int) (byte) 100);
        org.joda.time.Period period11 = period9.withHours((int) (short) 0);
        org.joda.time.Period period13 = period9.withHours((int) (short) 1);
        org.joda.time.Minutes minutes14 = period13.toStandardMinutes();
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.minutesIn(readableInterval17);
        java.lang.String str19 = minutes18.toString();
        org.joda.time.PeriodType periodType20 = minutes18.getPeriodType();
        org.joda.time.PeriodType periodType21 = periodType20.withMillisRemoved();
        org.joda.time.Period period22 = new org.joda.time.Period(9L, 599L, periodType20);
        org.joda.time.DurationFieldType durationFieldType24 = periodType20.getFieldType((int) (byte) 0);
        java.lang.String str25 = periodType20.getName();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        long long35 = interval34.getStartMillis();
        org.joda.time.DateTime dateTime36 = interval34.getStart();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        boolean boolean56 = interval46.isAfter((org.joda.time.ReadableInterval) interval55);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval55);
        org.joda.time.DateTime dateTime58 = interval55.getEnd();
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableInstant) dateTime58);
        org.joda.time.Instant instant60 = dateTime58.toInstant();
        org.joda.time.DateTimeFieldType dateTimeFieldType61 = null;
        boolean boolean62 = instant60.isSupported(dateTimeFieldType61);
        org.joda.time.Chronology chronology63 = instant60.getChronology();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period64 = new org.joda.time.Period((java.lang.Object) period13, periodType20, chronology63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT0M" + "'", str19, "PT0M");
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Minutes" + "'", str25, "Minutes");
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1644572478228L + "'", long35 == 1644572478228L);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(dateTime58);
        org.junit.Assert.assertNotNull(instant60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(chronology63);
    }

    @Test
    public void test08441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08441");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.minus(weeks1);
        org.joda.time.Period period3 = new org.joda.time.Period((java.lang.Object) weeks2);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        boolean boolean10 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Interval interval12 = duration8.toIntervalTo(readableInstant11);
        org.joda.time.Interval interval13 = interval12.toInterval();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        boolean boolean23 = interval13.isAfter((org.joda.time.ReadableInterval) interval22);
        org.joda.time.Period period24 = interval22.toPeriod();
        org.joda.time.Period period25 = interval22.toPeriod();
        org.joda.time.Duration duration28 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = duration28.toPeriodFrom(readableInstant29);
        org.joda.time.Period period32 = period30.minusSeconds((int) '4');
        org.joda.time.Period period34 = period30.minusSeconds(10);
        org.joda.time.Period period36 = period30.withWeeks((int) (byte) -1);
        org.joda.time.Period period37 = period25.plus((org.joda.time.ReadablePeriod) period36);
        org.joda.time.Period period39 = period37.withHours(9);
        org.joda.time.MutablePeriod mutablePeriod40 = period37.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod41 = mutablePeriod40.copy();
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType44);
        mutablePeriod45.setYears(0);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology50 = null;
        mutablePeriod45.setPeriod((org.joda.time.ReadableDuration) duration49, chronology50);
        mutablePeriod45.add(0, (-1), (int) (short) 1, (int) (byte) 0, (int) (byte) 0, 1, 10, (int) '4');
        int int61 = mutablePeriod45.getYears();
        mutablePeriod45.addMonths((int) (short) 0);
        mutablePeriod45.addSeconds(0);
        mutablePeriod45.addSeconds((-1));
        org.joda.time.PeriodType periodType68 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType69 = periodType68.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(periodType68);
        org.joda.time.DurationFieldType durationFieldType71 = org.joda.time.DurationFieldType.weeks();
        java.lang.String str72 = durationFieldType71.toString();
        boolean boolean73 = periodType68.isSupported(durationFieldType71);
        boolean boolean74 = mutablePeriod45.isSupported(durationFieldType71);
        java.lang.String str75 = durationFieldType71.getName();
        boolean boolean76 = mutablePeriod41.isSupported(durationFieldType71);
        int int77 = period3.get(durationFieldType71);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period79 = period3.minusMinutes((-34));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "weeks" + "'", str72, "weeks");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "weeks" + "'", str75, "weeks");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test08442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08442");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(0L);
        mutablePeriod1.addMinutes((int) (short) 1);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType12);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) 1);
        mutablePeriod13.setPeriod((org.joda.time.ReadablePeriod) minutes16);
        boolean boolean18 = mutablePeriod1.equals((java.lang.Object) minutes16);
        org.joda.time.PeriodType periodType19 = minutes16.getPeriodType();
        org.joda.time.PeriodType periodType20 = periodType19.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(periodType20);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType24 = minutes23.getFieldType();
        org.joda.time.Minutes minutes25 = minutes23.negated();
        org.joda.time.DurationFieldType durationFieldType27 = minutes25.getFieldType((int) (short) 0);
        int int28 = mutablePeriod21.get(durationFieldType27);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod21.setMonths((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test08443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08443");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (short) 1, (long) (byte) -1);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant7 = null;
        java.lang.Object obj8 = null;
        org.joda.time.Duration duration9 = new org.joda.time.Duration(obj8);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration9);
        boolean boolean11 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Interval interval13 = duration9.toIntervalTo(readableInstant12);
        org.joda.time.Interval interval14 = interval13.toInterval();
        org.joda.time.Chronology chronology15 = interval14.getChronology();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((-1L), chronology15);
        mutablePeriod2.add(1644572099705L, chronology15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours19 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours20 = hours18.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = hours19.getFieldType();
        int int22 = mutablePeriod2.indexOf(durationFieldType21);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.years();
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.Chronology chronology43 = interval42.getChronology();
        org.joda.time.DurationField durationField44 = durationFieldType32.getField(chronology43);
        org.joda.time.Period period45 = new org.joda.time.Period(36000L, chronology43);
        org.joda.time.Period period46 = new org.joda.time.Period(1644572093963L, 0L, chronology43);
        org.joda.time.Period period47 = new org.joda.time.Period((-86400L), chronology43);
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((long) 1, (long) 2147483647, periodType27, chronology43);
        mutablePeriod2.setPeriod(1644572102429L, 1644572092997L, chronology43);
        mutablePeriod2.addMillis(5);
        int int52 = mutablePeriod2.getMinutes();
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(chronology15);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(chronology43);
        org.junit.Assert.assertNotNull(durationField44);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test08444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08444");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = duration4.toPeriodFrom(readableInstant7);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((long) ' ', chronology10);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType14);
        mutablePeriod15.setYears(0);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod15.setPeriod((org.joda.time.ReadableDuration) duration19, chronology20);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.DateTime dateTime32 = interval31.getEnd();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.DateTime dateTime43 = interval42.getEnd();
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, (org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        org.joda.time.Interval interval55 = interval54.toInterval();
        org.joda.time.DateTime dateTime56 = interval55.getEnd();
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType59 = periodType58.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(periodType59);
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(10L, periodType59);
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableInstant) dateTime56, periodType59);
        org.joda.time.Duration duration63 = mutablePeriod11.toDurationFrom((org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.Duration duration64 = duration63.toDuration();
        org.joda.time.Duration duration65 = duration63.toDuration();
        org.joda.time.Duration duration66 = duration4.plus((org.joda.time.ReadableDuration) duration63);
        long long67 = duration66.getStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(dateTime56);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
    }

    @Test
    public void test08445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08445");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType21);
        mutablePeriod22.setYears(0);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology27 = null;
        mutablePeriod22.setPeriod((org.joda.time.ReadableDuration) duration26, chronology27);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.DateTime dateTime39 = interval38.getEnd();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Interval interval48 = duration44.toIntervalTo(readableInstant47);
        org.joda.time.Interval interval49 = interval48.toInterval();
        org.joda.time.DateTime dateTime50 = interval49.getEnd();
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableInstant) dateTime50);
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, (org.joda.time.ReadableInstant) dateTime39);
        java.lang.String str53 = dateTime39.toString();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType58);
        mutablePeriod59.setYears(0);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology64 = null;
        mutablePeriod59.setPeriod((org.joda.time.ReadableDuration) duration63, chronology64);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant68 = null;
        java.lang.Object obj69 = null;
        org.joda.time.Duration duration70 = new org.joda.time.Duration(obj69);
        org.joda.time.Period period71 = new org.joda.time.Period(readableInstant68, (org.joda.time.ReadableDuration) duration70);
        boolean boolean72 = duration67.isShorterThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Interval interval74 = duration70.toIntervalTo(readableInstant73);
        org.joda.time.Interval interval75 = interval74.toInterval();
        org.joda.time.DateTime dateTime76 = interval75.getEnd();
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant79 = null;
        java.lang.Object obj80 = null;
        org.joda.time.Duration duration81 = new org.joda.time.Duration(obj80);
        org.joda.time.Period period82 = new org.joda.time.Period(readableInstant79, (org.joda.time.ReadableDuration) duration81);
        boolean boolean83 = duration78.isShorterThan((org.joda.time.ReadableDuration) duration81);
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Interval interval85 = duration81.toIntervalTo(readableInstant84);
        org.joda.time.Interval interval86 = interval85.toInterval();
        org.joda.time.DateTime dateTime87 = interval86.getEnd();
        org.joda.time.Period period88 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime76, (org.joda.time.ReadableInstant) dateTime87);
        org.joda.time.Period period89 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, (org.joda.time.ReadableInstant) dateTime76);
        org.joda.time.PeriodType periodType90 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period91 = duration55.toPeriodTo((org.joda.time.ReadableInstant) dateTime76, periodType90);
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableInstant) dateTime76);
        org.joda.time.Interval interval93 = duration13.toIntervalTo((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.Chronology chronology94 = dateTime39.getChronology();
        boolean boolean95 = interval9.isAfter((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.Interval interval96 = interval9.toInterval();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(dateTime50);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "2022-02-11T09:41:18.358Z" + "'", str53, "2022-02-11T09:41:18.358Z");
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(interval74);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(dateTime76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(interval85);
        org.junit.Assert.assertNotNull(interval86);
        org.junit.Assert.assertNotNull(dateTime87);
        org.junit.Assert.assertNotNull(periodType90);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertNotNull(interval93);
        org.junit.Assert.assertNotNull(chronology94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(interval96);
    }

    @Test
    public void test08446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08446");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.plusDays(1);
        org.joda.time.Period period8 = period4.minusMonths((int) (byte) -1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test08447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08447");
        org.joda.time.Period period1 = org.joda.time.Period.millis(32);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test08448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08448");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        java.lang.String str37 = dateTime23.toString();
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType40 = periodType39.withSecondsRemoved();
        org.joda.time.PeriodType periodType41 = periodType40.withMillisRemoved();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        long long51 = interval50.getStartMillis();
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval50);
        org.joda.time.DurationFieldType durationFieldType53 = org.joda.time.DurationFieldType.years();
        int int54 = minutes52.get(durationFieldType53);
        boolean boolean55 = periodType40.isSupported(durationFieldType53);
        int int56 = period38.get(durationFieldType53);
        org.joda.time.Period period58 = period38.minusMillis((int) (short) 0);
        org.joda.time.Period period60 = period58.plusSeconds(107);
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((java.lang.Object) period58);
        int int62 = period58.getDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "2022-02-11T09:41:18.445Z" + "'", str37, "2022-02-11T09:41:18.445Z");
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
// flaky:         org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1644572478445L + "'", long51 == 1644572478445L);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test08449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08449");
        org.joda.time.Days days0 = org.joda.time.Days.FOUR;
        org.joda.time.Days days1 = org.joda.time.Days.ONE;
        org.joda.time.Days days2 = days1.negated();
        org.joda.time.Days days3 = org.joda.time.Days.ONE;
        org.joda.time.Days days4 = days3.negated();
        org.joda.time.Days days5 = org.joda.time.Days.ONE;
        org.joda.time.Days days6 = days5.negated();
        boolean boolean7 = days4.isGreaterThan(days6);
        org.joda.time.Days days8 = days1.plus(days6);
        org.joda.time.Days days9 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days1);
        org.joda.time.Days days11 = days1.plus((-1));
        org.joda.time.Days days12 = days0.plus(days1);
        org.joda.time.Period period13 = days1.toPeriod();
        org.joda.time.PeriodType periodType14 = period13.getPeriodType();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType14);
    }

    @Test
    public void test08450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08450");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) (byte) 0);
        java.lang.String str2 = duration1.toString();
        org.joda.time.Period period4 = org.joda.time.Period.days((int) ' ');
        int int5 = period4.getSeconds();
        org.joda.time.PeriodType periodType6 = period4.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.PeriodType periodType8 = periodType6.withMonthsRemoved();
        boolean boolean9 = duration1.equals((java.lang.Object) periodType6);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0S" + "'", str2, "PT0S");
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test08451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08451");
        org.joda.time.Days days0 = org.joda.time.Days.FOUR;
        org.joda.time.Period period1 = days0.toPeriod();
        org.joda.time.Days days3 = org.joda.time.Days.days((int) ' ');
        org.joda.time.Days days5 = days3.minus((int) (byte) 0);
        org.joda.time.Days days6 = days0.minus(days3);
        org.joda.time.Days days7 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days6);
        org.joda.time.Days days9 = days6.multipliedBy(0);
        org.joda.time.Days days10 = org.joda.time.Days.FOUR;
        java.lang.String str11 = days10.toString();
        boolean boolean12 = days9.isGreaterThan(days10);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P4D" + "'", str11, "P4D");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test08452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08452");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 100, (int) (byte) 10, (int) (short) 0, (int) (short) 10);
        org.joda.time.format.PeriodFormatter periodFormatter5 = null;
        java.lang.String str6 = mutablePeriod4.toString(periodFormatter5);
        mutablePeriod4.addHours(13);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod4.copy();
        org.joda.time.MutablePeriod mutablePeriod10 = mutablePeriod9.toMutablePeriod();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType15);
        mutablePeriod16.setYears(0);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology21 = null;
        mutablePeriod16.setPeriod((org.joda.time.ReadableDuration) duration20, chronology21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period48 = duration12.toPeriodTo((org.joda.time.ReadableInstant) dateTime33, periodType47);
        long long49 = dateTime33.getMillis();
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant53 = null;
        java.lang.Object obj54 = null;
        org.joda.time.Duration duration55 = new org.joda.time.Duration(obj54);
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant53, (org.joda.time.ReadableDuration) duration55);
        boolean boolean57 = duration52.isShorterThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Interval interval59 = duration55.toIntervalTo(readableInstant58);
        org.joda.time.Interval interval60 = interval59.toInterval();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant63 = null;
        java.lang.Object obj64 = null;
        org.joda.time.Duration duration65 = new org.joda.time.Duration(obj64);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant63, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = duration62.isShorterThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Interval interval69 = duration65.toIntervalTo(readableInstant68);
        org.joda.time.Interval interval70 = interval69.toInterval();
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant73 = null;
        java.lang.Object obj74 = null;
        org.joda.time.Duration duration75 = new org.joda.time.Duration(obj74);
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant73, (org.joda.time.ReadableDuration) duration75);
        boolean boolean77 = duration72.isShorterThan((org.joda.time.ReadableDuration) duration75);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Interval interval79 = duration75.toIntervalTo(readableInstant78);
        boolean boolean80 = interval70.isAfter((org.joda.time.ReadableInterval) interval79);
        org.joda.time.Period period81 = interval79.toPeriod();
        boolean boolean82 = interval60.isBefore((org.joda.time.ReadableInterval) interval79);
        java.lang.String str83 = interval79.toString();
        org.joda.time.DateTime dateTime84 = interval79.getEnd();
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod(readableDuration50, (org.joda.time.ReadableInstant) dateTime84);
        java.lang.String str86 = dateTime84.toString();
        mutablePeriod10.setPeriod((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime84);
        int int88 = mutablePeriod10.getSeconds();
        mutablePeriod10.add(37, 0, 16, (-97), 456825, (-10), 16, 55);
        mutablePeriod10.addMinutes((-348));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT100H10M0.010S" + "'", str6, "PT100H10M0.010S");
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period48);
// flaky:         org.junit.Assert.assertTrue("'" + long49 + "' != '" + 1644572478600L + "'", long49 == 1644572478600L);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(interval70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(interval79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "2022-02-11T09:41:18.600Z/2022-02-11T09:41:18.600Z" + "'", str83, "2022-02-11T09:41:18.600Z/2022-02-11T09:41:18.600Z");
        org.junit.Assert.assertNotNull(dateTime84);
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "2022-02-11T09:41:18.600Z" + "'", str86, "2022-02-11T09:41:18.600Z");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test08453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08453");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(1644572076884L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType11);
        mutablePeriod12.setYears(0);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology17 = null;
        mutablePeriod12.setPeriod((org.joda.time.ReadableDuration) duration16, chronology17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        org.joda.time.Interval interval28 = interval27.toInterval();
        org.joda.time.DateTime dateTime29 = interval28.getEnd();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.DateTime dateTime40 = interval39.getEnd();
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime29, (org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, (org.joda.time.ReadableInstant) dateTime29);
        java.lang.String str43 = dateTime29.toString();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType48);
        mutablePeriod49.setYears(0);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology54 = null;
        mutablePeriod49.setPeriod((org.joda.time.ReadableDuration) duration53, chronology54);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant58 = null;
        java.lang.Object obj59 = null;
        org.joda.time.Duration duration60 = new org.joda.time.Duration(obj59);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant58, (org.joda.time.ReadableDuration) duration60);
        boolean boolean62 = duration57.isShorterThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Interval interval64 = duration60.toIntervalTo(readableInstant63);
        org.joda.time.Interval interval65 = interval64.toInterval();
        org.joda.time.DateTime dateTime66 = interval65.getEnd();
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant69 = null;
        java.lang.Object obj70 = null;
        org.joda.time.Duration duration71 = new org.joda.time.Duration(obj70);
        org.joda.time.Period period72 = new org.joda.time.Period(readableInstant69, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = duration68.isShorterThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Interval interval75 = duration71.toIntervalTo(readableInstant74);
        org.joda.time.Interval interval76 = interval75.toInterval();
        org.joda.time.DateTime dateTime77 = interval76.getEnd();
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime66, (org.joda.time.ReadableInstant) dateTime77);
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, (org.joda.time.ReadableInstant) dateTime66);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period81 = duration45.toPeriodTo((org.joda.time.ReadableInstant) dateTime66, periodType80);
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime29, (org.joda.time.ReadableInstant) dateTime66);
        org.joda.time.Interval interval83 = duration3.toIntervalTo((org.joda.time.ReadableInstant) dateTime29);
        org.joda.time.Interval interval84 = duration1.toIntervalFrom((org.joda.time.ReadableInstant) dateTime29);
        org.joda.time.Duration duration86 = org.joda.time.Duration.standardSeconds(1644572096050L);
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime29, (org.joda.time.ReadableDuration) duration86);
        int int88 = mutablePeriod87.getMinutes();
        int int89 = mutablePeriod87.getMonths();
        mutablePeriod87.addHours((-44));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(dateTime29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(dateTime40);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "2022-02-11T09:41:18.654Z" + "'", str43, "2022-02-11T09:41:18.654Z");
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(dateTime66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(dateTime77);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(interval83);
        org.junit.Assert.assertNotNull(interval84);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 14 + "'", int88 == 14);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 5 + "'", int89 == 5);
    }

    @Test
    public void test08454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08454");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.plusDays(1);
        org.joda.time.Days days7 = org.joda.time.Days.ONE;
        org.joda.time.Days days8 = days7.negated();
        org.joda.time.Days days9 = org.joda.time.Days.ONE;
        org.joda.time.Days days10 = days9.negated();
        org.joda.time.Days days11 = org.joda.time.Days.ONE;
        org.joda.time.Days days12 = days11.negated();
        boolean boolean13 = days10.isGreaterThan(days12);
        org.joda.time.Days days14 = days7.plus(days12);
        org.joda.time.Days days15 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days7);
        org.joda.time.DurationFieldType durationFieldType16 = days15.getFieldType();
        int int17 = period4.indexOf(durationFieldType16);
        org.joda.time.MutablePeriod mutablePeriod18 = period4.toMutablePeriod();
        mutablePeriod18.setMinutes((int) (short) 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(mutablePeriod18);
    }

    @Test
    public void test08455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08455");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(0L);
        mutablePeriod1.addMinutes((int) (short) 1);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType12);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) 1);
        mutablePeriod13.setPeriod((org.joda.time.ReadablePeriod) minutes16);
        boolean boolean18 = mutablePeriod1.equals((java.lang.Object) minutes16);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        org.joda.time.Interval interval28 = interval27.toInterval();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant41 = null;
        java.lang.Object obj42 = null;
        org.joda.time.Duration duration43 = new org.joda.time.Duration(obj42);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration43);
        boolean boolean45 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration43.toIntervalTo(readableInstant46);
        boolean boolean48 = interval38.isAfter((org.joda.time.ReadableInterval) interval47);
        org.joda.time.Period period49 = interval47.toPeriod();
        boolean boolean50 = interval28.isBefore((org.joda.time.ReadableInterval) interval47);
        mutablePeriod1.add((org.joda.time.ReadableInterval) interval28);
        long long52 = interval28.toDurationMillis();
        java.lang.String str53 = interval28.toString();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes56 = minutes54.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType57 = minutes56.getPeriodType();
        int int58 = minutes56.getMinutes();
        boolean boolean59 = interval28.equals((java.lang.Object) minutes56);
        org.joda.time.DateTime dateTime60 = interval28.getStart();
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "2022-02-11T09:41:18.729Z/2022-02-11T09:41:18.729Z" + "'", str53, "2022-02-11T09:41:18.729Z/2022-02-11T09:41:18.729Z");
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2147483647 + "'", int58 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(dateTime60);
    }

    @Test
    public void test08456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08456");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Period period23 = new org.joda.time.Period(0L, (long) 100);
        org.joda.time.Weeks weeks24 = period23.toStandardWeeks();
        boolean boolean25 = weeks20.isGreaterThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks20.minus(443);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks27);
    }

    @Test
    public void test08457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08457");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.plus((int) '4');
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean6 = weeks3.isGreaterThan(weeks5);
        org.joda.time.DurationFieldType durationFieldType7 = weeks5.getFieldType();
        boolean boolean8 = weeks0.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean12 = weeks9.isGreaterThan(weeks11);
        java.lang.String str13 = weeks9.toString();
        org.joda.time.Weeks weeks14 = weeks0.plus(weeks9);
        org.joda.time.PeriodType periodType15 = weeks9.getPeriodType();
        org.joda.time.PeriodType periodType16 = periodType15.withDaysRemoved();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-2147483648W" + "'", str13, "P-2147483648W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
    }

    @Test
    public void test08458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08458");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        java.lang.String str2 = minutes0.toString();
        org.joda.time.Minutes minutes4 = minutes0.multipliedBy(0);
        org.joda.time.Duration duration6 = org.joda.time.Duration.millis((long) '4');
        long long7 = duration6.getMillis();
        org.joda.time.Minutes minutes8 = duration6.toStandardMinutes();
        org.joda.time.Minutes minutes9 = minutes8.negated();
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.minutesIn(readableInterval10);
        org.joda.time.PeriodType periodType12 = minutes11.getPeriodType();
        boolean boolean13 = minutes9.isLessThan(minutes11);
        java.lang.String str14 = minutes9.toString();
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.minutesIn(readableInterval15);
        java.lang.String str17 = minutes16.toString();
        org.joda.time.Minutes minutes19 = minutes16.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes20 = minutes9.plus(minutes16);
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) '#');
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((java.lang.Object) duration25, periodType31, chronology32);
        java.lang.String str34 = duration25.toString();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration37 = org.joda.time.Duration.millis((long) '4');
        long long38 = duration37.getMillis();
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType41);
        mutablePeriod42.setYears(0);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology47 = null;
        mutablePeriod42.setPeriod((org.joda.time.ReadableDuration) duration46, chronology47);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant51 = null;
        java.lang.Object obj52 = null;
        org.joda.time.Duration duration53 = new org.joda.time.Duration(obj52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        boolean boolean55 = duration50.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Interval interval57 = duration53.toIntervalTo(readableInstant56);
        org.joda.time.Interval interval58 = interval57.toInterval();
        org.joda.time.DateTime dateTime59 = interval58.getEnd();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Interval interval68 = duration64.toIntervalTo(readableInstant67);
        org.joda.time.Interval interval69 = interval68.toInterval();
        org.joda.time.DateTime dateTime70 = interval69.getEnd();
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime59, (org.joda.time.ReadableInstant) dateTime70);
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, (org.joda.time.ReadableInstant) dateTime59);
        java.lang.String str73 = dateTime59.toString();
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, (org.joda.time.ReadableInstant) dateTime59);
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant77 = null;
        java.lang.Object obj78 = null;
        org.joda.time.Duration duration79 = new org.joda.time.Duration(obj78);
        org.joda.time.Period period80 = new org.joda.time.Period(readableInstant77, (org.joda.time.ReadableDuration) duration79);
        boolean boolean81 = duration76.isShorterThan((org.joda.time.ReadableDuration) duration79);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.Interval interval83 = duration79.toIntervalTo(readableInstant82);
        org.joda.time.Duration duration86 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean87 = duration79.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes88 = duration79.toStandardMinutes();
        org.joda.time.Duration duration89 = duration37.plus((org.joda.time.ReadableDuration) duration79);
        org.joda.time.Duration duration91 = duration37.minus((long) 100);
        org.joda.time.Duration duration92 = duration91.toDuration();
        org.joda.time.Duration duration93 = duration25.minus((org.joda.time.ReadableDuration) duration91);
        org.joda.time.Minutes minutes94 = duration91.toStandardMinutes();
        org.joda.time.DurationFieldType durationFieldType95 = minutes94.getFieldType();
        boolean boolean96 = minutes22.isLessThan(minutes94);
        org.joda.time.Minutes minutes97 = minutes4.plus(minutes22);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0M" + "'", str2, "PT0M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 52L + "'", long7 == 52L);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT0M" + "'", str14, "PT0M");
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT0M" + "'", str17, "PT0M");
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT36000S" + "'", str34, "PT36000S");
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 52L + "'", long38 == 52L);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(dateTime59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(dateTime70);
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "2022-02-11T09:41:18.792Z" + "'", str73, "2022-02-11T09:41:18.792Z");
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(interval83);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertNotNull(duration91);
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertNotNull(minutes94);
        org.junit.Assert.assertNotNull(durationFieldType95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(minutes97);
    }

    @Test
    public void test08459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08459");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(97, 246, (int) 'a', (int) (short) 0);
        mutablePeriod4.addDays(3);
        int int7 = mutablePeriod4.getYears();
        mutablePeriod4.addDays(90);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test08460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08460");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType2 = periodType1.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(periodType2);
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(10L, periodType2);
        int int5 = mutablePeriod4.getMillis();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration13 = duration10.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration15 = duration7.withDurationAdded((org.joda.time.ReadableDuration) duration10, (int) (short) 1);
        org.joda.time.Duration duration18 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration21 = duration18.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration23 = duration7.withDurationAdded((org.joda.time.ReadableDuration) duration21, (int) (short) 100);
        mutablePeriod4.add((org.joda.time.ReadableDuration) duration23);
        mutablePeriod4.add(1644572085189L);
        int int27 = mutablePeriod4.getWeeks();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType31 = minutes30.getPeriodType();
        org.joda.time.PeriodType periodType32 = periodType31.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType33 = org.joda.time.DurationFieldType.eras();
        boolean boolean34 = periodType31.isSupported(durationFieldType33);
        java.lang.String str35 = durationFieldType33.getName();
        java.lang.String str36 = durationFieldType33.getName();
        int int37 = mutablePeriod4.indexOf(durationFieldType33);
        int int38 = mutablePeriod4.getYears();
        java.lang.Object obj39 = mutablePeriod4.clone();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod4.addSeconds(906);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'seconds'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "eras" + "'", str35, "eras");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "eras" + "'", str36, "eras");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "P");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "P");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "P");
    }

    @Test
    public void test08461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08461");
        org.joda.time.Period period1 = new org.joda.time.Period((long) ' ');
        org.joda.time.Period period3 = period1.withHours((int) (byte) -1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test08462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08462");
        org.joda.time.Period period2 = new org.joda.time.Period(1644572414292L, 1644572077926L);
    }

    @Test
    public void test08463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08463");
        org.joda.time.Period period1 = org.joda.time.Period.years((-1));
        org.joda.time.Period period3 = period1.withDays((-2147483648));
        org.joda.time.DurationFieldType[] durationFieldTypeArray4 = period3.getFieldTypes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration8 = duration6.plus(1644572076849L);
        org.joda.time.Days days9 = duration6.toStandardDays();
        org.joda.time.Period period10 = days9.toPeriod();
        java.lang.String str11 = days9.toString();
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType15 = periodType14.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(periodType15);
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(10L, periodType15);
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(10L, periodType15);
        int int19 = mutablePeriod18.getMonths();
        int int20 = mutablePeriod18.getHours();
        org.joda.time.Duration duration22 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration24 = duration22.plus(1644572076849L);
        long long25 = duration22.getMillis();
        mutablePeriod18.add((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration30 = duration22.withDurationAdded((org.joda.time.ReadableDuration) duration28, 35);
        org.joda.time.Duration duration31 = duration22.toDuration();
        org.joda.time.Days days32 = duration31.toStandardDays();
        org.joda.time.Days days34 = org.joda.time.Days.days((int) (byte) 1);
        boolean boolean35 = days32.isLessThan(days34);
        java.lang.String str36 = days32.toString();
        org.joda.time.Days days37 = days9.plus(days32);
        org.joda.time.Days days38 = days37.negated();
        org.joda.time.Period period39 = period3.plus((org.joda.time.ReadablePeriod) days38);
        org.joda.time.Days days41 = days38.plus((-617));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(durationFieldTypeArray4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 52L + "'", long25 == 52L);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "P0D" + "'", str36, "P0D");
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days41);
    }

    @Test
    public void test08464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08464");
        org.joda.time.Period period8 = new org.joda.time.Period(107, (-242), 9, (-869), (int) 'a', 52114, (-10), 284);
    }

    @Test
    public void test08465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08465");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        org.joda.time.Hours hours14 = hours11.minus(1);
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = duration17.toPeriodFrom(readableInstant18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration17.toPeriod(chronology20);
        org.joda.time.Period period23 = period21.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Hours hours25 = org.joda.time.Hours.hoursIn(readableInterval24);
        org.joda.time.Period period26 = period23.minus((org.joda.time.ReadablePeriod) hours25);
        org.joda.time.Hours hours27 = hours25.negated();
        org.joda.time.Hours hours28 = hours14.plus(hours27);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.Hours hours39 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval38);
        org.joda.time.Hours hours40 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval38);
        org.joda.time.DurationFieldType durationFieldType41 = hours40.getFieldType();
        org.joda.time.Hours hours43 = hours40.minus(1);
        org.joda.time.Duration duration46 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = duration46.toPeriodFrom(readableInstant47);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration46.toPeriod(chronology49);
        org.joda.time.Period period52 = period50.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Hours hours54 = org.joda.time.Hours.hoursIn(readableInterval53);
        org.joda.time.Period period55 = period52.minus((org.joda.time.ReadablePeriod) hours54);
        org.joda.time.Hours hours56 = hours54.negated();
        org.joda.time.Hours hours57 = hours43.plus(hours56);
        org.joda.time.DurationFieldType durationFieldType58 = hours56.getFieldType();
        org.joda.time.Hours hours59 = hours14.plus(hours56);
        org.joda.time.Hours hours61 = hours59.multipliedBy(0);
        org.joda.time.Hours hours63 = hours61.minus((-101));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours63);
    }

    @Test
    public void test08466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08466");
        org.joda.time.format.PeriodFormatter periodFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod2 = org.joda.time.MutablePeriod.parse("2022-02-11T09:38:26.497Z", periodFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08467");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType14);
        mutablePeriod15.setYears(0);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod15.setPeriod((org.joda.time.ReadableDuration) duration19, chronology20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration27 = duration24.minus((long) '4');
        mutablePeriod15.add((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType30 = periodType29.withHoursRemoved();
        org.joda.time.PeriodType periodType31 = periodType30.withSecondsRemoved();
        boolean boolean32 = mutablePeriod15.equals((java.lang.Object) periodType30);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.Chronology chronology43 = interval42.getChronology();
        org.joda.time.Period period44 = new org.joda.time.Period((java.lang.Object) interval10, periodType30, chronology43);
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(1644572173996L, 1644572198571L, periodType30);
        org.joda.time.Period period50 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period52 = period50.plusDays(1);
        org.joda.time.Period period54 = period52.minusYears((int) (short) -1);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period52);
        org.joda.time.DurationFieldType durationFieldType56 = seconds55.getFieldType();
        boolean boolean57 = periodType30.isSupported(durationFieldType56);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(chronology43);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test08468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08468");
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.dayTime();
        org.joda.time.PeriodType periodType9 = periodType8.withSecondsRemoved();
        org.joda.time.PeriodType periodType10 = periodType9.withDaysRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((-2), (-28), 97, 27409537, 187, (-97), (-648), (-53), periodType9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test08469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08469");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours2 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours3 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours4 = hours2.minus(hours3);
        int int5 = hours2.getHours();
        org.joda.time.Hours hours6 = hours1.minus(hours2);
        org.joda.time.Duration duration9 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = duration9.toPeriodFrom(readableInstant10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration9.toPeriod(chronology12);
        org.joda.time.Period period15 = period13.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        org.joda.time.Period period18 = period15.minus((org.joda.time.ReadablePeriod) hours17);
        org.joda.time.Hours hours19 = hours17.negated();
        org.joda.time.Duration duration22 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = duration22.toPeriodFrom(readableInstant23);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration22.toPeriod(chronology25);
        org.joda.time.Period period28 = period26.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Hours hours30 = org.joda.time.Hours.hoursIn(readableInterval29);
        org.joda.time.Period period31 = period28.minus((org.joda.time.ReadablePeriod) hours30);
        org.joda.time.Hours hours32 = hours30.negated();
        org.joda.time.Hours hours33 = hours17.minus(hours30);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.Hours hours44 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval43);
        org.joda.time.Hours hours45 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval43);
        org.joda.time.Hours hours47 = hours45.minus(8);
        boolean boolean48 = hours17.isLessThan(hours45);
        org.joda.time.Hours hours49 = hours2.plus(hours45);
        org.joda.time.Hours hours50 = hours45.negated();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2147483647 + "'", int5 == 2147483647);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
    }

    @Test
    public void test08470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08470");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("2022-02-11T09:35:37.322Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:35:37.322Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08471");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks3 = weeks1.dividedBy((-101));
        org.joda.time.Duration duration4 = weeks1.toStandardDuration();
        org.joda.time.Weeks weeks6 = weeks1.plus(0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(weeks6);
    }

    @Test
    public void test08472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08472");
        org.joda.time.Period period1 = org.joda.time.Period.hours(10);
        org.joda.time.Period period3 = period1.plusMonths(2147483647);
        org.joda.time.Period period5 = period1.withMinutes((int) (byte) 0);
        org.joda.time.Period period7 = period5.withDays(2147483647);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType9 = periodType8.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(periodType9);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.eras();
        int int12 = periodType9.indexOf(durationFieldType11);
        boolean boolean13 = period7.isSupported(durationFieldType11);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test08473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08473");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Days days4 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.Days days6 = days4.plus(36);
        org.joda.time.PeriodType periodType7 = days4.getPeriodType();
        org.joda.time.Period period8 = period2.normalizedStandard(periodType7);
        org.joda.time.Period period10 = period2.plusSeconds(10);
        int int11 = period10.getMinutes();
        org.joda.time.Period period13 = period10.withMillis(27409537);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test08474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08474");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Duration duration11 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean12 = duration4.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes13 = duration4.toStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean26 = duration18.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes27 = duration18.toStandardMinutes();
        org.joda.time.Minutes minutes28 = minutes27.negated();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = duration31.toPeriodFrom(readableInstant32);
        org.joda.time.Period period35 = period33.minusSeconds((int) '4');
        org.joda.time.Minutes minutes36 = period33.toStandardMinutes();
        boolean boolean37 = minutes27.isLessThan(minutes36);
        org.joda.time.Minutes minutes39 = minutes27.minus((int) (short) 0);
        org.joda.time.Minutes minutes41 = minutes27.plus(100);
        org.joda.time.Duration duration44 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = duration44.toPeriodFrom(readableInstant45);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration44.toPeriod(chronology47);
        java.lang.String str49 = period48.toString();
        org.joda.time.MutablePeriod mutablePeriod50 = period48.toMutablePeriod();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant53 = null;
        java.lang.Object obj54 = null;
        org.joda.time.Duration duration55 = new org.joda.time.Duration(obj54);
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant53, (org.joda.time.ReadableDuration) duration55);
        boolean boolean57 = duration52.isShorterThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Interval interval59 = duration55.toIntervalTo(readableInstant58);
        long long60 = interval59.getStartMillis();
        mutablePeriod50.setPeriod((org.joda.time.ReadableInterval) interval59);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval59);
        org.joda.time.Minutes minutes64 = minutes62.dividedBy((int) (short) 1);
        org.joda.time.Minutes minutes65 = minutes41.plus(minutes64);
        org.joda.time.Minutes minutes66 = minutes13.minus(minutes64);
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes69 = minutes67.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType70 = minutes69.getPeriodType();
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period72 = new org.joda.time.Period((java.lang.Object) minutes71);
        boolean boolean73 = minutes69.isGreaterThan(minutes71);
        org.joda.time.Minutes minutes75 = minutes69.minus(8);
        org.joda.time.PeriodType periodType76 = minutes69.getPeriodType();
        org.joda.time.Minutes minutes77 = minutes13.plus(minutes69);
        org.joda.time.DurationFieldType durationFieldType78 = minutes13.getFieldType();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "PT0.097S" + "'", str49, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(interval59);
// flaky:         org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1644572479359L + "'", long60 == 1644572479359L);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(durationFieldType78);
    }

    @Test
    public void test08475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08475");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        mutablePeriod9.addDays(0);
        java.lang.Object obj16 = mutablePeriod9.clone();
        java.lang.Object obj17 = mutablePeriod9.clone();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "PT2147483647M");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "PT2147483647M");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "PT2147483647M");
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "PT2147483647M");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "PT2147483647M");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes18);
    }

    @Test
    public void test08476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08476");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Days days4 = duration2.toStandardDays();
        org.joda.time.Duration duration6 = org.joda.time.Duration.millis((long) '4');
        long long7 = duration6.getMillis();
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType10);
        mutablePeriod11.setYears(0);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology16 = null;
        mutablePeriod11.setPeriod((org.joda.time.ReadableDuration) duration15, chronology16);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        org.joda.time.Interval interval27 = interval26.toInterval();
        org.joda.time.DateTime dateTime28 = interval27.getEnd();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.DateTime dateTime39 = interval38.getEnd();
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime28, (org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, (org.joda.time.ReadableInstant) dateTime28);
        java.lang.String str42 = dateTime28.toString();
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, (org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant46 = null;
        java.lang.Object obj47 = null;
        org.joda.time.Duration duration48 = new org.joda.time.Duration(obj47);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant46, (org.joda.time.ReadableDuration) duration48);
        boolean boolean50 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Interval interval52 = duration48.toIntervalTo(readableInstant51);
        org.joda.time.Interval interval53 = interval52.toInterval();
        org.joda.time.DateTime dateTime54 = interval53.getEnd();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant57 = null;
        java.lang.Object obj58 = null;
        org.joda.time.Duration duration59 = new org.joda.time.Duration(obj58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant57, (org.joda.time.ReadableDuration) duration59);
        boolean boolean61 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration59.toIntervalTo(readableInstant62);
        org.joda.time.Interval interval64 = interval63.toInterval();
        org.joda.time.DateTime dateTime65 = interval64.getEnd();
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime54, (org.joda.time.ReadableInstant) dateTime65);
        org.joda.time.Days days67 = org.joda.time.Days.daysBetween((org.joda.time.ReadableInstant) dateTime28, (org.joda.time.ReadableInstant) dateTime65);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant70 = null;
        java.lang.Object obj71 = null;
        org.joda.time.Duration duration72 = new org.joda.time.Duration(obj71);
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant70, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = duration69.isShorterThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Interval interval76 = duration72.toIntervalTo(readableInstant75);
        org.joda.time.Interval interval77 = interval76.toInterval();
        org.joda.time.DateTime dateTime78 = interval77.getEnd();
        boolean boolean79 = dateTime28.isEqual((org.joda.time.ReadableInstant) dateTime78);
        org.joda.time.DateTimeFieldType dateTimeFieldType80 = null;
        boolean boolean81 = dateTime28.isSupported(dateTimeFieldType80);
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.dayTime();
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, (org.joda.time.ReadableInstant) dateTime28, periodType82);
        org.joda.time.PeriodType periodType84 = periodType82.withWeeksRemoved();
        org.joda.time.PeriodType periodType85 = periodType84.withMillisRemoved();
        org.joda.time.PeriodType periodType86 = periodType84.withMillisRemoved();
        org.joda.time.PeriodType periodType87 = periodType84.withHoursRemoved();
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 52L + "'", long7 == 52L);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(dateTime28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(dateTime39);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "2022-02-11T09:41:19.488Z" + "'", str42, "2022-02-11T09:41:19.488Z");
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(dateTime65);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(dateTime78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(periodType87);
    }

    @Test
    public void test08477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08477");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration8 = duration5.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration10 = duration2.withDurationAdded((org.joda.time.ReadableDuration) duration5, (int) (short) 1);
        org.joda.time.Days days11 = duration10.toStandardDays();
        org.joda.time.Days days12 = duration10.toStandardDays();
        org.joda.time.Period period13 = days12.toPeriod();
        org.joda.time.Days days14 = days0.plus(days12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        org.joda.time.Days days19 = duration17.toStandardDays();
        org.joda.time.Days days20 = days19.negated();
        org.joda.time.Days days22 = days19.dividedBy((-1));
        boolean boolean23 = days12.isGreaterThan(days22);
        org.joda.time.PeriodType periodType24 = days12.getPeriodType();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(periodType24);
    }

    @Test
    public void test08478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08478");
        java.lang.Object obj0 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        boolean boolean9 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((java.lang.Object) duration4, periodType10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.Chronology chronology23 = interval22.getChronology();
        org.joda.time.Period period24 = new org.joda.time.Period((long) 1, (long) '#', periodType10, chronology23);
        org.joda.time.Period period25 = new org.joda.time.Period(obj0, periodType10);
        org.joda.time.Seconds seconds26 = period25.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType27 = seconds26.getFieldType();
        java.lang.String str28 = durationFieldType27.getName();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(chronology23);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "seconds" + "'", str28, "seconds");
    }

    @Test
    public void test08479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08479");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        org.joda.time.Duration duration3 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = duration3.toPeriodFrom(readableInstant4);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration3.toPeriod(chronology6);
        org.joda.time.Period period9 = period7.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Hours hours11 = org.joda.time.Hours.hoursIn(readableInterval10);
        org.joda.time.Period period12 = period9.minus((org.joda.time.ReadablePeriod) hours11);
        org.joda.time.Hours hours14 = hours11.minus((int) '4');
        org.joda.time.Hours hours15 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours16 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours17 = hours15.minus(hours16);
        org.joda.time.Hours hours18 = hours11.minus(hours17);
        org.joda.time.Hours hours20 = hours11.plus(0);
        org.joda.time.Hours hours21 = hours0.plus(hours11);
        int int22 = hours21.getHours();
        org.joda.time.Hours hours24 = hours21.minus(298);
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod26 = mutablePeriod25.toMutablePeriod();
        mutablePeriod25.setPeriod((-10886400), (-21262214), (-44), 539, 55, 6, 685, (-21262214));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
    }

    @Test
    public void test08480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08480");
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.PeriodType periodType9 = seconds8.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((-242), 685, 9, (-4), (-2147483612), 19034, (-68), 10, periodType9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
    }

    @Test
    public void test08481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08481");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.hours();
        org.joda.time.PeriodType periodType3 = periodType2.withMonthsRemoved();
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.Period period5 = new org.joda.time.Period(1644572282260L, 1644572285632L, periodType4);
        int int6 = period5.getMillis();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test08482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08482");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn(readableInterval9);
        org.joda.time.Period period11 = period8.minus((org.joda.time.ReadablePeriod) hours10);
        org.joda.time.Hours hours13 = hours10.minus((int) '4');
        org.joda.time.Hours hours15 = hours13.plus((int) '#');
        org.joda.time.Hours hours16 = hours13.negated();
        org.joda.time.Duration duration17 = hours16.toStandardDuration();
        org.joda.time.Hours hours18 = hours16.negated();
        org.joda.time.Period period19 = hours16.toPeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.SIX;
        boolean boolean21 = hours16.isGreaterThan(hours20);
        org.joda.time.Duration duration24 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = duration24.toPeriodFrom(readableInstant25);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration24.toPeriod(chronology27);
        org.joda.time.Period period30 = period28.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Hours hours32 = org.joda.time.Hours.hoursIn(readableInterval31);
        org.joda.time.Period period33 = period30.minus((org.joda.time.ReadablePeriod) hours32);
        org.joda.time.Hours hours35 = hours32.minus((int) '4');
        boolean boolean36 = hours20.isGreaterThan(hours35);
        org.joda.time.Hours hours38 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours39 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours40 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours41 = hours39.minus(hours40);
        int int42 = hours39.getHours();
        org.joda.time.Hours hours43 = hours38.minus(hours39);
        org.joda.time.DurationFieldType durationFieldType44 = hours38.getFieldType();
        int int45 = hours38.getHours();
        org.joda.time.Hours hours46 = hours35.minus(hours38);
        org.joda.time.DurationFieldType durationFieldType47 = hours35.getFieldType();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2147483647 + "'", int42 == 2147483647);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(durationFieldType47);
    }

    @Test
    public void test08483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08483");
        org.joda.time.Period period1 = org.joda.time.Period.millis(36);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = duration4.toPeriodFrom(readableInstant5);
        org.joda.time.Period period8 = period6.minusSeconds((int) '4');
        org.joda.time.format.PeriodFormatter periodFormatter9 = null;
        java.lang.String str10 = period6.toString(periodFormatter9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours12 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours13 = hours11.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = hours12.getFieldType();
        org.joda.time.Period period16 = period6.withFieldAdded(durationFieldType14, 0);
        org.joda.time.Period period18 = period1.withField(durationFieldType14, (int) (byte) 100);
        java.lang.Class<?> wildcardClass19 = durationFieldType14.getClass();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0.097S" + "'", str10, "PT0.097S");
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test08484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08484");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        org.joda.time.Days days4 = org.joda.time.Days.ONE;
        org.joda.time.Days days5 = days4.negated();
        boolean boolean6 = days3.isGreaterThan(days5);
        org.joda.time.Days days7 = days0.plus(days5);
        int int8 = days0.getDays();
        org.joda.time.Days days10 = days0.minus(2147483647);
        org.joda.time.Days days12 = days10.dividedBy((-101));
        org.joda.time.Days days13 = org.joda.time.Days.ONE;
        org.joda.time.Days days14 = days13.negated();
        org.joda.time.Days days15 = org.joda.time.Days.ONE;
        org.joda.time.Days days16 = days15.negated();
        org.joda.time.Days days17 = org.joda.time.Days.ONE;
        org.joda.time.Days days18 = days17.negated();
        boolean boolean19 = days16.isGreaterThan(days18);
        org.joda.time.Days days20 = days13.plus(days18);
        org.joda.time.PeriodType periodType21 = days20.getPeriodType();
        boolean boolean22 = days10.isLessThan(days20);
        org.joda.time.DurationFieldType durationFieldType23 = days20.getFieldType();
        java.lang.String str24 = durationFieldType23.toString();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "days" + "'", str24, "days");
    }

    @Test
    public void test08485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08485");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration13 = duration10.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes14 = duration13.toStandardMinutes();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.DateTime dateTime25 = interval24.getEnd();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant40 = null;
        java.lang.Object obj41 = null;
        org.joda.time.Duration duration42 = new org.joda.time.Duration(obj41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean44 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Interval interval46 = duration42.toIntervalTo(readableInstant45);
        org.joda.time.Interval interval47 = interval46.toInterval();
        org.joda.time.DateTime dateTime48 = interval47.getEnd();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant51 = null;
        java.lang.Object obj52 = null;
        org.joda.time.Duration duration53 = new org.joda.time.Duration(obj52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        boolean boolean55 = duration50.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Interval interval57 = duration53.toIntervalTo(readableInstant56);
        org.joda.time.Interval interval58 = interval57.toInterval();
        org.joda.time.DateTime dateTime59 = interval58.getEnd();
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime48, (org.joda.time.ReadableInstant) dateTime59);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableInstant) dateTime59);
        org.joda.time.DurationFieldType durationFieldType62 = minutes61.getFieldType();
        org.joda.time.Duration duration65 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration68 = duration65.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes69 = duration68.toStandardMinutes();
        org.joda.time.Duration duration71 = org.joda.time.Duration.millis((long) '4');
        long long72 = duration71.getMillis();
        org.joda.time.Minutes minutes73 = duration71.toStandardMinutes();
        org.joda.time.Minutes minutes74 = minutes73.negated();
        boolean boolean75 = minutes69.isGreaterThan(minutes74);
        org.joda.time.Minutes minutes76 = minutes61.plus(minutes74);
        org.joda.time.Minutes minutes77 = minutes14.minus(minutes61);
        org.joda.time.Minutes minutes78 = minutes7.plus(minutes77);
        org.joda.time.PeriodType periodType79 = minutes77.getPeriodType();
        org.joda.time.Minutes minutes81 = minutes77.plus(246);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(dateTime59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 52L + "'", long72 == 52L);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(minutes81);
    }

    @Test
    public void test08486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08486");
        org.joda.time.format.PeriodFormatter periodFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod2 = org.joda.time.MutablePeriod.parse("2022-02-11T09:35:36.124Z/2022-02-11T09:35:36.124Z", periodFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08487");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 0);
        org.joda.time.Period period3 = period1.withMillis((int) (short) 100);
        org.joda.time.Days days4 = period1.toStandardDays();
        org.joda.time.Period period6 = period1.plusDays(90);
        org.joda.time.Period period8 = period1.plusSeconds((int) (byte) 100);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test08488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08488");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        org.joda.time.Seconds seconds3 = seconds0.plus((-1));
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds4.multipliedBy((int) (byte) 1);
        int int7 = seconds6.size();
        org.joda.time.Period period9 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period11 = period9.minusMillis((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period11);
        boolean boolean13 = seconds6.isGreaterThan(seconds12);
        boolean boolean14 = seconds0.isGreaterThan(seconds6);
        org.joda.time.Seconds seconds16 = seconds0.multipliedBy(8);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        org.joda.time.Seconds seconds21 = seconds18.plus((-1));
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.TWO;
        java.lang.String str23 = seconds22.toString();
        org.joda.time.Seconds seconds24 = seconds21.plus(seconds22);
        org.joda.time.Seconds seconds25 = seconds17.minus(seconds22);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.Seconds seconds28 = seconds22.plus(seconds27);
        org.joda.time.Seconds seconds29 = seconds0.minus(seconds27);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType33 = seconds32.getFieldType();
        org.joda.time.Seconds seconds35 = seconds32.plus((-1));
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.TWO;
        java.lang.String str37 = seconds36.toString();
        org.joda.time.Seconds seconds38 = seconds35.plus(seconds36);
        org.joda.time.Seconds seconds39 = seconds31.minus(seconds36);
        org.joda.time.Seconds seconds41 = seconds39.multipliedBy((int) (byte) -1);
        org.joda.time.Duration duration42 = seconds41.toStandardDuration();
        int int43 = seconds41.getSeconds();
        boolean boolean44 = seconds30.isGreaterThan(seconds41);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType46 = seconds45.getFieldType();
        org.joda.time.Seconds seconds48 = seconds45.plus((-1));
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.TWO;
        java.lang.String str50 = seconds49.toString();
        org.joda.time.Seconds seconds51 = seconds48.plus(seconds49);
        boolean boolean52 = seconds30.isGreaterThan(seconds51);
        org.joda.time.Seconds seconds54 = seconds51.multipliedBy((-9700));
        org.joda.time.Seconds seconds55 = seconds51.negated();
        org.joda.time.PeriodType periodType56 = seconds55.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2S" + "'", str23, "PT2S");
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT2S" + "'", str37, "PT2S");
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT2S" + "'", str50, "PT2S");
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(periodType56);
    }

    @Test
    public void test08489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08489");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("2022-02-11T09:35:21.774Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:35:21.774Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08490");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.Period period10 = period6.minusMonths(100);
        org.joda.time.Period period12 = period6.plusYears(100);
        org.joda.time.Period period14 = period12.minusMinutes((int) (byte) 100);
        org.joda.time.Period period16 = period14.minusSeconds(4);
        org.joda.time.Hours hours18 = org.joda.time.Hours.hours((-1));
        org.joda.time.Period period19 = hours18.toPeriod();
        org.joda.time.Hours hours21 = hours18.dividedBy((int) ' ');
        org.joda.time.Period period23 = org.joda.time.Period.millis(36);
        org.joda.time.Duration duration26 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = duration26.toPeriodFrom(readableInstant27);
        org.joda.time.Period period30 = period28.minusSeconds((int) '4');
        org.joda.time.format.PeriodFormatter periodFormatter31 = null;
        java.lang.String str32 = period28.toString(periodFormatter31);
        org.joda.time.Hours hours33 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours34 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours35 = hours33.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = hours34.getFieldType();
        org.joda.time.Period period38 = period28.withFieldAdded(durationFieldType36, 0);
        org.joda.time.Period period40 = period23.withField(durationFieldType36, (int) (byte) 100);
        int int41 = hours18.get(durationFieldType36);
        org.joda.time.Period period42 = period14.withFields((org.joda.time.ReadablePeriod) hours18);
        org.joda.time.Hours hours44 = hours18.plus((int) (short) 1);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        org.joda.time.Interval interval54 = interval53.toInterval();
        org.joda.time.Hours hours55 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval54);
        org.joda.time.Hours hours56 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval54);
        org.joda.time.Hours hours58 = hours56.minus(8);
        org.joda.time.Hours hours60 = hours58.plus(0);
        org.joda.time.Hours hours61 = hours58.negated();
        org.joda.time.Hours hours62 = hours44.plus(hours58);
        org.joda.time.DurationFieldType durationFieldType63 = hours44.getFieldType();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT0.097S" + "'", str32, "PT0.097S");
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(durationFieldType63);
    }

    @Test
    public void test08491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08491");
        org.joda.time.Days days1 = org.joda.time.Days.days(6);
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test08492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08492");
        org.joda.time.Period period1 = org.joda.time.Period.days((int) (byte) 100);
        org.joda.time.Period period3 = period1.plusSeconds(0);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = seconds5.plus((-1));
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.TWO;
        java.lang.String str10 = seconds9.toString();
        org.joda.time.Seconds seconds11 = seconds8.plus(seconds9);
        org.joda.time.Seconds seconds12 = seconds4.minus(seconds9);
        org.joda.time.Seconds seconds14 = seconds12.dividedBy(3);
        org.joda.time.Period period15 = new org.joda.time.Period((java.lang.Object) seconds12);
        org.joda.time.PeriodType periodType16 = seconds12.getPeriodType();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.plus((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = seconds21.multipliedBy((int) (byte) 1);
        int int24 = seconds23.size();
        org.joda.time.Period period26 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period28 = period26.minusMillis((-1));
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period28);
        boolean boolean30 = seconds23.isGreaterThan(seconds29);
        boolean boolean31 = seconds17.isGreaterThan(seconds23);
        org.joda.time.Seconds seconds33 = seconds23.minus(0);
        org.joda.time.DurationFieldType durationFieldType34 = seconds33.getFieldType();
        org.joda.time.PeriodType periodType35 = seconds33.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType36 = seconds33.getFieldType();
        boolean boolean37 = periodType16.isSupported(durationFieldType36);
        int int38 = period1.get(durationFieldType36);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2S" + "'", str10, "PT2S");
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test08493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08493");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        mutablePeriod9.setYears((int) '4');
        org.joda.time.MutablePeriod mutablePeriod16 = mutablePeriod9.copy();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        boolean boolean36 = interval26.isAfter((org.joda.time.ReadableInterval) interval35);
        org.joda.time.Period period37 = interval35.toPeriod();
        org.joda.time.Period period38 = interval35.toPeriod();
        org.joda.time.Interval interval39 = interval35.toInterval();
        org.joda.time.DateTime dateTime40 = interval39.getEnd();
        mutablePeriod9.add((org.joda.time.ReadableInterval) interval39);
        int int42 = mutablePeriod9.getYears();
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
    }

    @Test
    public void test08494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08494");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType11 = mutablePeriod9.getFieldType(1);
        org.joda.time.Period period13 = period4.withField(durationFieldType11, (int) (byte) 100);
        org.joda.time.Period period15 = period4.minusDays((-4));
        org.joda.time.Period period17 = period4.plusSeconds((int) (byte) 10);
        int int18 = period4.getYears();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test08495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08495");
        java.lang.Object obj0 = null;
        org.joda.time.Duration duration1 = new org.joda.time.Duration(obj0);
        org.joda.time.Hours hours2 = duration1.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType3 = hours2.getFieldType();
        org.joda.time.Hours hours4 = hours2.negated();
        org.joda.time.PeriodType periodType5 = hours2.getPeriodType();
        org.joda.time.Hours hours7 = hours2.plus(32);
        org.joda.time.Hours hours9 = org.joda.time.Hours.hours(369700);
        org.joda.time.Hours hours10 = hours2.plus(hours9);
        org.joda.time.DurationFieldType durationFieldType11 = hours9.getFieldType();
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(durationFieldType11);
    }

    @Test
    public void test08496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08496");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        long long10 = interval9.getEndMillis();
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType12 = periodType11.withHoursRemoved();
        org.joda.time.Period period13 = interval9.toPeriod(periodType11);
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration19 = duration16.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes20 = duration19.toStandardMinutes();
        org.joda.time.Duration duration22 = org.joda.time.Duration.millis((long) '4');
        long long23 = duration22.getMillis();
        org.joda.time.Minutes minutes24 = duration22.toStandardMinutes();
        org.joda.time.Minutes minutes25 = minutes24.negated();
        boolean boolean26 = minutes20.isGreaterThan(minutes25);
        org.joda.time.Duration duration28 = org.joda.time.Duration.millis((long) '4');
        long long29 = duration28.getMillis();
        org.joda.time.Minutes minutes30 = duration28.toStandardMinutes();
        org.joda.time.Minutes minutes31 = minutes30.negated();
        org.joda.time.Duration duration34 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration37 = duration34.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes38 = duration37.toStandardMinutes();
        org.joda.time.Duration duration40 = org.joda.time.Duration.millis((long) '4');
        long long41 = duration40.getMillis();
        org.joda.time.Minutes minutes42 = duration40.toStandardMinutes();
        org.joda.time.Minutes minutes43 = minutes42.negated();
        boolean boolean44 = minutes38.isGreaterThan(minutes43);
        int int45 = minutes38.getMinutes();
        boolean boolean46 = minutes30.isLessThan(minutes38);
        boolean boolean47 = minutes25.isLessThan(minutes30);
        org.joda.time.PeriodType periodType48 = minutes30.getPeriodType();
        org.joda.time.Period period49 = interval9.toPeriod(periodType48);
        int int50 = period49.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
// flaky:         org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1644572480062L + "'", long10 == 1644572480062L);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 52L + "'", long23 == 52L);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 52L + "'", long29 == 52L);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 52L + "'", long41 == 52L);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test08497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08497");
        org.joda.time.Days days0 = org.joda.time.Days.FOUR;
        org.joda.time.Days days2 = days0.dividedBy((int) '#');
        java.lang.String str3 = days2.toString();
        java.lang.String str4 = days2.toString();
        org.joda.time.Days days6 = days2.plus(52114);
        org.joda.time.Days days7 = org.joda.time.Days.ONE;
        org.joda.time.Days days8 = days7.negated();
        org.joda.time.Days days10 = days8.multipliedBy((-1));
        org.joda.time.Days days11 = org.joda.time.Days.ONE;
        org.joda.time.Days days12 = days11.negated();
        org.joda.time.Days days13 = org.joda.time.Days.ONE;
        org.joda.time.Days days14 = days13.negated();
        boolean boolean15 = days12.isGreaterThan(days14);
        int int16 = days14.size();
        int int17 = days14.getDays();
        org.joda.time.Days days19 = days14.multipliedBy(2147483647);
        int int20 = days8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days14);
        org.joda.time.Days days21 = days14.negated();
        org.joda.time.Duration duration23 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration25 = duration23.plus(1644572076849L);
        org.joda.time.Days days26 = duration23.toStandardDays();
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.eras();
        java.lang.String str28 = durationFieldType27.getName();
        boolean boolean29 = days26.isSupported(durationFieldType27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration34 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration37 = duration34.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration39 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration34, (int) (short) 1);
        org.joda.time.Days days40 = duration39.toStandardDays();
        org.joda.time.Days days41 = days26.plus(days40);
        org.joda.time.Days days43 = days41.dividedBy((-9700));
        org.joda.time.Days days45 = days41.minus((int) ' ');
        org.joda.time.DurationFieldType durationFieldType46 = days45.getFieldType();
        boolean boolean47 = days21.isGreaterThan(days45);
        boolean boolean48 = days2.isLessThan(days21);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "P0D" + "'", str3, "P0D");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P0D" + "'", str4, "P0D");
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "eras" + "'", str28, "eras");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test08498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08498");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType2 = periodType1.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(periodType2);
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(10L, periodType2);
        int int5 = mutablePeriod4.getMillis();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration13 = duration10.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration15 = duration7.withDurationAdded((org.joda.time.ReadableDuration) duration10, (int) (short) 1);
        org.joda.time.Duration duration18 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration21 = duration18.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration23 = duration7.withDurationAdded((org.joda.time.ReadableDuration) duration21, (int) (short) 100);
        mutablePeriod4.add((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Minutes minutes25 = duration23.toStandardMinutes();
        int int26 = minutes25.getMinutes();
        org.joda.time.Minutes minutes28 = minutes25.multipliedBy((-6));
        org.joda.time.Minutes minutes30 = minutes25.dividedBy((-2147483612));
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 601 + "'", int26 == 601);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
    }

    @Test
    public void test08499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08499");
        org.joda.time.Duration duration2 = org.joda.time.Duration.millis((long) '4');
        long long3 = duration2.getMillis();
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType6);
        mutablePeriod7.setYears(0);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology12 = null;
        mutablePeriod7.setPeriod((org.joda.time.ReadableDuration) duration11, chronology12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        org.joda.time.DateTime dateTime24 = interval23.getEnd();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        org.joda.time.Interval interval34 = interval33.toInterval();
        org.joda.time.DateTime dateTime35 = interval34.getEnd();
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime24, (org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, (org.joda.time.ReadableInstant) dateTime24);
        java.lang.String str38 = dateTime24.toString();
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, (org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType42 = periodType41.withMillisRemoved();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((long) (short) 1, periodType42, chronology43);
        org.joda.time.PeriodType periodType45 = periodType42.withYearsRemoved();
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.standard();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant51 = null;
        java.lang.Object obj52 = null;
        org.joda.time.Duration duration53 = new org.joda.time.Duration(obj52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        boolean boolean55 = duration50.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Interval interval57 = duration53.toIntervalTo(readableInstant56);
        org.joda.time.Interval interval58 = interval57.toInterval();
        org.joda.time.Chronology chronology59 = interval58.getChronology();
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((long) (byte) -1, 52L, periodType48, chronology59);
        org.joda.time.Period period61 = duration2.toPeriod(periodType45, chronology59);
        org.joda.time.Period period62 = new org.joda.time.Period(1644572136952L, chronology59);
        org.joda.time.Period period64 = period62.withYears(36000000);
        org.joda.time.Period period66 = period64.minusWeeks(14);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 52L + "'", long3 == 52L);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(dateTime35);
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "2022-02-11T09:41:20.172Z" + "'", str38, "2022-02-11T09:41:20.172Z");
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(chronology59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period66);
    }

    @Test
    public void test08500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08500");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours(1644572339826L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        long long11 = interval10.getStartMillis();
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType14);
        mutablePeriod15.setYears(0);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod15.setPeriod((org.joda.time.ReadableDuration) duration19, chronology20);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.DateTime dateTime32 = interval31.getEnd();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.DateTime dateTime43 = interval42.getEnd();
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, (org.joda.time.ReadableInstant) dateTime32);
        boolean boolean46 = interval10.isBefore((org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = null;
        boolean boolean48 = dateTime32.isSupported(dateTimeFieldType47);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.Duration duration50 = duration1.toDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1644572480199L + "'", long11 == 1644572480199L);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
    }
}
