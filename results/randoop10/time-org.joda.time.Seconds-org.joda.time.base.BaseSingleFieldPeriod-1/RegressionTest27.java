import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest27 {

    public static boolean debug = false;

    @Test
    public void test13501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13501");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Chronology chronology10 = interval9.getChronology();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        org.joda.time.Duration duration13 = weeks11.toStandardDuration();
        org.joda.time.PeriodType periodType14 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks16 = weeks11.multipliedBy((-97));
        org.joda.time.Duration duration17 = weeks11.toStandardDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(chronology10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(duration17);
    }

    @Test
    public void test13502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13502");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572122713L);
        long long2 = duration1.getStandardMinutes();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 27409535L + "'", long2 == 27409535L);
    }

    @Test
    public void test13503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13503");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(952, 10, (-869), (int) (byte) -1, 14, 0, 139579, 8);
    }

    @Test
    public void test13504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13504");
        org.joda.time.Period period8 = new org.joda.time.Period((int) (byte) 1, (-2147483648), (-963), 298, 876, 36, 8, 8);
        org.joda.time.Period period10 = period8.minusWeeks(246);
        int int11 = period10.getMillis();
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
    }

    @Test
    public void test13505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13505");
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        java.lang.String str8 = periodType7.getName();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) 100, 36000L, periodType7);
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod();
        mutablePeriod10.setPeriod(100L, (long) (-1));
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        org.joda.time.Interval interval27 = interval26.toInterval();
        org.joda.time.Chronology chronology28 = interval27.getChronology();
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((-1L), chronology28);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology28);
        mutablePeriod10.setPeriod((long) 100, chronology28);
        org.joda.time.Period period32 = new org.joda.time.Period((long) 100, 1644572102665L, periodType7, chronology28);
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(1644572127303L, 1644572118467L, chronology28);
        int int34 = mutablePeriod33.getDays();
        mutablePeriod33.addSeconds((-8380800));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MillisNoMillis" + "'", str8, "MillisNoMillis");
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(chronology28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test13506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13506");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        java.lang.String str1 = seconds0.toString();
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType4 = seconds3.getFieldType();
        org.joda.time.Seconds seconds6 = seconds3.plus((-1));
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.TWO;
        java.lang.String str8 = seconds7.toString();
        org.joda.time.Seconds seconds9 = seconds6.plus(seconds7);
        org.joda.time.Seconds seconds10 = seconds2.minus(seconds7);
        org.joda.time.PeriodType periodType11 = seconds2.getPeriodType();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds2);
        org.joda.time.Seconds seconds14 = seconds12.multipliedBy((int) '#');
        org.joda.time.Seconds seconds15 = seconds0.plus(seconds14);
        org.joda.time.Seconds seconds17 = seconds15.dividedBy(36000000);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds18.multipliedBy((int) (byte) 1);
        int int21 = seconds20.size();
        org.joda.time.Period period23 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period25 = period23.minusMillis((-1));
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period25);
        boolean boolean27 = seconds20.isGreaterThan(seconds26);
        org.joda.time.DurationFieldType durationFieldType28 = seconds26.getFieldType();
        org.joda.time.DurationFieldType durationFieldType29 = seconds26.getFieldType();
        org.joda.time.DurationFieldType durationFieldType30 = seconds26.getFieldType();
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType36 = periodType35.withMillisRemoved();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((long) (short) 1, periodType36, chronology37);
        org.joda.time.PeriodType periodType39 = periodType36.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((long) 3, periodType39);
        java.lang.String str41 = periodType39.toString();
        org.joda.time.Period period42 = new org.joda.time.Period((long) ' ', 1644572205233L, periodType39);
        org.joda.time.Period period43 = new org.joda.time.Period((java.lang.Object) seconds26, periodType39);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.seconds((-2147483648));
        org.joda.time.Seconds seconds46 = seconds26.plus(seconds45);
        org.joda.time.MutablePeriod mutablePeriod47 = seconds45.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds48 = seconds15.minus(seconds45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Integer.MIN_VALUE cannot be negated");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "PT2S" + "'", str1, "PT2S");
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT2S" + "'", str8, "PT2S");
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PeriodType[MillisNoMillis]" + "'", str41, "PeriodType[MillisNoMillis]");
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
    }

    @Test
    public void test13507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13507");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType4);
        mutablePeriod5.setYears(0);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration9, chronology10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.DateTime dateTime22 = interval21.getEnd();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, (org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period37 = duration1.toPeriodTo((org.joda.time.ReadableInstant) dateTime22, periodType36);
        org.joda.time.Hours hours38 = duration1.toStandardHours();
        org.joda.time.PeriodType periodType39 = hours38.getPeriodType();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(periodType39);
    }

    @Test
    public void test13508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13508");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572488477L);
    }

    @Test
    public void test13509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13509");
        org.joda.time.Days days1 = org.joda.time.Days.days(369701);
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test13510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13510");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(32);
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod3 = hours1.toMutablePeriod();
        mutablePeriod3.clear();
        org.joda.time.Period period6 = new org.joda.time.Period((-1L));
        org.joda.time.Period period8 = period6.withWeeks((int) (short) 100);
        boolean boolean9 = mutablePeriod3.equals((java.lang.Object) (short) 100);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test13511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13511");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.minusYears((int) (byte) -1);
        org.joda.time.Period period10 = period8.minusHours(3);
        org.joda.time.Period period12 = period10.plusMonths((int) (byte) 100);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        long long23 = interval21.toDurationMillis();
        org.joda.time.Interval interval24 = interval21.toInterval();
        long long25 = interval24.getStartMillis();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.Hours hours45 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval44);
        org.joda.time.Hours hours46 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval44);
        boolean boolean47 = interval34.overlaps((org.joda.time.ReadableInterval) interval44);
        boolean boolean48 = interval24.isBefore((org.joda.time.ReadableInterval) interval34);
        long long49 = interval34.toDurationMillis();
        org.joda.time.Chronology chronology50 = interval34.getChronology();
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((java.lang.Object) period12, chronology50);
        mutablePeriod51.add(1644572289322L);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(interval24);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1644572614673L + "'", long25 == 1644572614673L);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(chronology50);
    }

    @Test
    public void test13512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13512");
        org.joda.time.Period period1 = org.joda.time.Period.millis(26);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13513");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(56);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds4 = null;
        boolean boolean5 = seconds3.isLessThan(seconds4);
        org.joda.time.Seconds seconds7 = seconds3.minus((-101));
        org.joda.time.Seconds seconds9 = seconds7.minus(2719);
        boolean boolean10 = seconds1.isLessThan(seconds9);
        org.joda.time.Duration duration11 = seconds1.toStandardDuration();
        org.joda.time.Duration duration13 = duration11.plus(0L);
        org.joda.time.Period period14 = duration11.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test13514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13514");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) ' ', chronology11);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType15);
        mutablePeriod16.setYears(0);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology21 = null;
        mutablePeriod16.setPeriod((org.joda.time.ReadableDuration) duration20, chronology21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        org.joda.time.Interval interval56 = interval55.toInterval();
        org.joda.time.DateTime dateTime57 = interval56.getEnd();
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType60 = periodType59.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(periodType60);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(10L, periodType60);
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime57, periodType60);
        org.joda.time.Duration duration64 = mutablePeriod12.toDurationFrom((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant67 = null;
        java.lang.Object obj68 = null;
        org.joda.time.Duration duration69 = new org.joda.time.Duration(obj68);
        org.joda.time.Period period70 = new org.joda.time.Period(readableInstant67, (org.joda.time.ReadableDuration) duration69);
        boolean boolean71 = duration66.isShorterThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Interval interval73 = duration69.toIntervalTo(readableInstant72);
        org.joda.time.Interval interval74 = interval73.toInterval();
        org.joda.time.DateTime dateTime75 = interval74.getEnd();
        boolean boolean76 = dateTime33.isBefore((org.joda.time.ReadableInstant) dateTime75);
        boolean boolean77 = interval8.isBefore((org.joda.time.ReadableInstant) dateTime75);
        org.joda.time.Duration duration79 = org.joda.time.Duration.millis((long) 3);
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime75, (org.joda.time.ReadableDuration) duration79);
        org.joda.time.ReadableDuration readableDuration81 = null;
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime75, readableDuration81);
        mutablePeriod82.setYears(36000000);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(interval74);
        org.junit.Assert.assertNotNull(dateTime75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(duration79);
    }

    @Test
    public void test13515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13515");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Period period9 = period4.multipliedBy((int) (byte) 100);
        org.joda.time.Period period11 = period9.withHours((int) (short) 0);
        org.joda.time.Period period13 = period9.withHours((int) (short) 1);
        org.joda.time.Minutes minutes14 = period13.toStandardMinutes();
        org.joda.time.Period period16 = period13.plusWeeks((int) (short) 1);
        org.joda.time.Period period18 = period13.minusWeeks((int) 'a');
        int int19 = period18.size();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period18);
        java.lang.String str21 = minutes20.toString();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT-977700M" + "'", str21, "PT-977700M");
    }

    @Test
    public void test13516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13516");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType1 = periodType0.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(periodType0);
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(periodType0);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod3.add(107, (int) (short) 0, (-348), (int) (byte) 100, 231, 36000000, (-27409538), (-9700));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
    }

    @Test
    public void test13517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13517");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.DurationFieldType durationFieldType47 = minutes46.getFieldType();
        org.joda.time.Duration duration50 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration53 = duration50.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes54 = duration53.toStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.millis((long) '4');
        long long57 = duration56.getMillis();
        org.joda.time.Minutes minutes58 = duration56.toStandardMinutes();
        org.joda.time.Minutes minutes59 = minutes58.negated();
        boolean boolean60 = minutes54.isGreaterThan(minutes59);
        org.joda.time.Minutes minutes61 = minutes46.plus(minutes59);
        org.joda.time.Period period64 = new org.joda.time.Period(0L, 0L);
        org.joda.time.Minutes minutes65 = period64.toStandardMinutes();
        org.joda.time.Minutes minutes66 = minutes61.plus(minutes65);
        org.joda.time.Minutes minutes68 = minutes65.plus((-9700));
        org.joda.time.Minutes minutes70 = minutes65.minus((-2));
        java.lang.String str71 = minutes70.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 52L + "'", long57 == 52L);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "PT2M" + "'", str71, "PT2M");
    }

    @Test
    public void test13518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13518");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        mutablePeriod9.addMillis((-1));
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod9);
        mutablePeriod5.setDays((int) ' ');
        int int15 = mutablePeriod5.size();
        org.joda.time.MutablePeriod mutablePeriod16 = mutablePeriod5.copy();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        boolean boolean36 = interval26.isAfter((org.joda.time.ReadableInterval) interval35);
        org.joda.time.DateTime dateTime37 = interval26.getStart();
        org.joda.time.ReadableInstant readableInstant38 = null;
        boolean boolean39 = interval26.isAfter(readableInstant38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval26);
        org.joda.time.Chronology chronology41 = interval26.getChronology();
        org.joda.time.Chronology chronology42 = interval26.getChronology();
        mutablePeriod5.setPeriod((org.joda.time.ReadableInterval) interval26);
        long long44 = interval26.getStartMillis();
        org.joda.time.Interval interval45 = interval26.toInterval();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval45);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(chronology41);
        org.junit.Assert.assertNotNull(chronology42);
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1644572614849L + "'", long44 == 1644572614849L);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(weeks46);
    }

    @Test
    public void test13519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13519");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Period period9 = period4.multipliedBy((int) (byte) 100);
        org.joda.time.Period period11 = period9.withHours((int) (short) 0);
        org.joda.time.Period period13 = period11.plusMillis((int) '4');
        org.joda.time.Period period15 = period13.withYears(10);
        org.joda.time.Period period17 = period15.withDays(0);
        org.joda.time.Period period19 = period17.plusMillis(97);
        org.joda.time.Period period20 = period19.toPeriod();
        org.joda.time.Period period22 = period19.withHours(1015);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
    }

    @Test
    public void test13520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13520");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.Period period10 = period6.minusMonths(100);
        org.joda.time.Period period12 = period10.withDays((-2));
        org.joda.time.Days days13 = org.joda.time.Days.ONE;
        org.joda.time.Days days14 = days13.negated();
        org.joda.time.Days days15 = org.joda.time.Days.ONE;
        org.joda.time.Days days16 = days15.negated();
        org.joda.time.Days days17 = org.joda.time.Days.ONE;
        org.joda.time.Days days18 = days17.negated();
        boolean boolean19 = days16.isGreaterThan(days18);
        org.joda.time.Days days20 = days13.plus(days18);
        java.lang.String str21 = days18.toString();
        org.joda.time.DurationFieldType durationFieldType22 = days18.getFieldType();
        org.joda.time.Period period24 = period12.withFieldAdded(durationFieldType22, (-4));
        org.joda.time.Period period26 = period24.minusSeconds(9);
        org.joda.time.Period period28 = period26.minusDays(456825);
        org.joda.time.Period period30 = period28.plusWeeks((-97));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-1D" + "'", str21, "P-1D");
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
    }

    @Test
    public void test13521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13521");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("2022-02-11T09:37:55.439Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:37:55.439Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13522");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(35);
        org.joda.time.Period period3 = period1.minusYears((int) (short) 1);
        org.joda.time.Period period5 = period1.minusMinutes(456368756);
        org.joda.time.Period period7 = period1.plusYears(703);
        org.joda.time.Period period9 = period1.minusMinutes(952);
        org.joda.time.Period period11 = period9.withDays(36);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test13523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13523");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(16);
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test13524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13524");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        int int3 = weeks1.getWeeks();
        org.joda.time.Weeks weeks5 = weeks1.minus(3);
        org.joda.time.Period period7 = new org.joda.time.Period((long) (byte) 1);
        boolean boolean8 = weeks1.equals((java.lang.Object) (byte) 1);
        org.joda.time.PeriodType periodType9 = weeks1.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod10 = weeks1.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod11 = mutablePeriod10.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod10.setValue(12, 105);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 12");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
    }

    @Test
    public void test13525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13525");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Period period20 = interval18.toPeriod();
        org.joda.time.Period period21 = interval18.toPeriod();
        org.joda.time.Duration duration24 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = duration24.toPeriodFrom(readableInstant25);
        org.joda.time.Period period28 = period26.minusSeconds((int) '4');
        org.joda.time.Period period30 = period26.minusSeconds(10);
        org.joda.time.Period period32 = period26.withWeeks((int) (byte) -1);
        org.joda.time.Period period33 = period21.plus((org.joda.time.ReadablePeriod) period32);
        org.joda.time.Period period35 = period33.withHours(9);
        org.joda.time.MutablePeriod mutablePeriod36 = period33.toMutablePeriod();
        org.joda.time.Seconds seconds37 = period33.toStandardSeconds();
        org.joda.time.Seconds seconds39 = seconds37.dividedBy(107);
        org.joda.time.Period period41 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period43 = period41.minusMillis((-1));
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period43);
        org.joda.time.Seconds seconds46 = seconds44.multipliedBy((int) (byte) 0);
        boolean boolean47 = seconds37.isGreaterThan(seconds46);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test13526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13526");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType9);
        mutablePeriod10.setYears(0);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology15 = null;
        mutablePeriod10.setPeriod((org.joda.time.ReadableDuration) duration14, chronology15);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.DateTime dateTime27 = interval26.getEnd();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.DateTime dateTime38 = interval37.getEnd();
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, (org.joda.time.ReadableInstant) dateTime27);
        java.lang.String str41 = dateTime27.toString();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType46);
        mutablePeriod47.setYears(0);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology52 = null;
        mutablePeriod47.setPeriod((org.joda.time.ReadableDuration) duration51, chronology52);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant56 = null;
        java.lang.Object obj57 = null;
        org.joda.time.Duration duration58 = new org.joda.time.Duration(obj57);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant56, (org.joda.time.ReadableDuration) duration58);
        boolean boolean60 = duration55.isShorterThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Interval interval62 = duration58.toIntervalTo(readableInstant61);
        org.joda.time.Interval interval63 = interval62.toInterval();
        org.joda.time.DateTime dateTime64 = interval63.getEnd();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant67 = null;
        java.lang.Object obj68 = null;
        org.joda.time.Duration duration69 = new org.joda.time.Duration(obj68);
        org.joda.time.Period period70 = new org.joda.time.Period(readableInstant67, (org.joda.time.ReadableDuration) duration69);
        boolean boolean71 = duration66.isShorterThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Interval interval73 = duration69.toIntervalTo(readableInstant72);
        org.joda.time.Interval interval74 = interval73.toInterval();
        org.joda.time.DateTime dateTime75 = interval74.getEnd();
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime64, (org.joda.time.ReadableInstant) dateTime75);
        org.joda.time.Period period77 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, (org.joda.time.ReadableInstant) dateTime64);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period79 = duration43.toPeriodTo((org.joda.time.ReadableInstant) dateTime64, periodType78);
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime64);
        org.joda.time.Interval interval81 = duration1.toIntervalTo((org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.ReadableInstant readableInstant82 = null;
        java.lang.Object obj83 = null;
        org.joda.time.Duration duration84 = new org.joda.time.Duration(obj83);
        org.joda.time.Period period85 = new org.joda.time.Period(readableInstant82, (org.joda.time.ReadableDuration) duration84);
        org.joda.time.Seconds seconds86 = period85.toStandardSeconds();
        org.joda.time.Seconds seconds87 = period85.toStandardSeconds();
        boolean boolean88 = dateTime27.equals((java.lang.Object) period85);
        org.joda.time.Period period89 = period85.toPeriod();
        org.joda.time.Period period91 = period89.plusMillis((int) (short) 100);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(dateTime38);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "2022-02-11T09:43:35.043Z" + "'", str41, "2022-02-11T09:43:35.043Z");
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(dateTime64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(interval74);
        org.junit.Assert.assertNotNull(dateTime75);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(interval81);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertNotNull(seconds87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(period91);
    }

    @Test
    public void test13527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13527");
        org.joda.time.Period period1 = org.joda.time.Period.days((int) (short) 1);
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Seconds seconds3 = minutes2.toStandardSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(seconds3);
    }

    @Test
    public void test13528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13528");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        boolean boolean7 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Interval interval9 = duration5.toIntervalTo(readableInstant8);
        org.joda.time.Interval interval10 = interval9.toInterval();
        org.joda.time.DateTime dateTime11 = interval10.getEnd();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.DateTime dateTime22 = interval21.getEnd();
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime11, (org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.DateTime dateTime45 = interval44.getEnd();
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.DateTimeZone dateTimeZone48 = dateTime22.getZone();
        org.joda.time.Chronology chronology49 = dateTime22.getChronology();
        org.joda.time.Chronology chronology50 = dateTime22.getChronology();
        org.joda.time.Chronology chronology51 = dateTime22.getChronology();
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(1644572310864L, chronology51);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(dateTime11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(dateTimeZone48);
        org.junit.Assert.assertNotNull(chronology49);
        org.junit.Assert.assertNotNull(chronology50);
        org.junit.Assert.assertNotNull(chronology51);
    }

    @Test
    public void test13529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13529");
        org.joda.time.Days days0 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days2 = days0.multipliedBy(8);
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.Days days4 = org.joda.time.Days.FOUR;
        org.joda.time.Period period5 = days4.toPeriod();
        org.joda.time.Days days7 = org.joda.time.Days.days((int) ' ');
        org.joda.time.Days days9 = days7.minus((int) (byte) 0);
        org.joda.time.Days days10 = days4.minus(days7);
        org.joda.time.Days days11 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days10);
        org.joda.time.Days days12 = days2.plus(days10);
        org.joda.time.Days days13 = org.joda.time.Days.ONE;
        org.joda.time.Days days14 = days13.negated();
        org.joda.time.Days days15 = org.joda.time.Days.ONE;
        org.joda.time.Days days16 = days15.negated();
        org.joda.time.Days days17 = org.joda.time.Days.ONE;
        org.joda.time.Days days18 = days17.negated();
        boolean boolean19 = days16.isGreaterThan(days18);
        org.joda.time.Days days20 = days13.plus(days18);
        int int21 = days13.getDays();
        org.joda.time.Days days23 = days13.minus(2147483647);
        boolean boolean24 = days10.isGreaterThan(days23);
        org.joda.time.Days days26 = days23.plus(33);
        org.joda.time.Days days28 = days23.minus(0);
        org.joda.time.Days days30 = days28.minus((-715827882));
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
    }

    @Test
    public void test13530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13530");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.minusHours((-1));
        int int7 = period6.size();
        org.joda.time.Period period9 = period6.withMinutes(648);
        org.joda.time.Hours hours10 = period9.toStandardHours();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test13531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13531");
        org.joda.time.ReadableDuration readableDuration0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period4 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration3.toPeriod(chronology5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.Days days12 = duration10.toStandardDays();
        boolean boolean13 = periodType7.equals((java.lang.Object) duration10);
        boolean boolean14 = duration3.isEqual((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = period18.withSeconds((int) '4');
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) ' ', chronology22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType26);
        mutablePeriod27.setYears(0);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology32 = null;
        mutablePeriod27.setPeriod((org.joda.time.ReadableDuration) duration31, chronology32);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        org.joda.time.Interval interval54 = interval53.toInterval();
        org.joda.time.DateTime dateTime55 = interval54.getEnd();
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime44, (org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant60 = null;
        java.lang.Object obj61 = null;
        org.joda.time.Duration duration62 = new org.joda.time.Duration(obj61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant60, (org.joda.time.ReadableDuration) duration62);
        boolean boolean64 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Interval interval66 = duration62.toIntervalTo(readableInstant65);
        org.joda.time.Interval interval67 = interval66.toInterval();
        org.joda.time.DateTime dateTime68 = interval67.getEnd();
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType71 = periodType70.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(periodType71);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(10L, periodType71);
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime44, (org.joda.time.ReadableInstant) dateTime68, periodType71);
        org.joda.time.Duration duration75 = mutablePeriod23.toDurationFrom((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Duration duration76 = period20.toDurationFrom((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Interval interval77 = duration3.toIntervalTo((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.DateTime dateTime78 = interval77.getEnd();
        org.joda.time.Days days80 = org.joda.time.Days.days((int) '#');
        org.joda.time.Duration duration81 = days80.toStandardDuration();
        org.joda.time.Period period82 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime78, (org.joda.time.ReadableDuration) duration81);
        org.joda.time.Period period83 = new org.joda.time.Period(readableDuration0, (org.joda.time.ReadableInstant) dateTime78);
        org.joda.time.Chronology chronology84 = dateTime78.getChronology();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(interval67);
        org.junit.Assert.assertNotNull(dateTime68);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(dateTime78);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(chronology84);
    }

    @Test
    public void test13532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13532");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (long) 100);
        org.joda.time.Weeks weeks3 = period2.toStandardWeeks();
        org.joda.time.Weeks weeks5 = weeks3.multipliedBy((int) (byte) 1);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks8 = weeks7.negated();
        int int9 = weeks7.getWeeks();
        org.joda.time.Weeks weeks11 = weeks7.minus(3);
        org.joda.time.Period period13 = new org.joda.time.Period((long) (byte) 1);
        boolean boolean14 = weeks7.equals((java.lang.Object) (byte) 1);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks17 = weeks16.negated();
        int int18 = weeks16.getWeeks();
        org.joda.time.Weeks weeks20 = weeks16.minus(3);
        boolean boolean21 = weeks7.isGreaterThan(weeks20);
        boolean boolean22 = weeks3.isGreaterThan(weeks20);
        org.joda.time.Duration duration23 = weeks20.toStandardDuration();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks26 = weeks25.negated();
        int int27 = weeks25.getWeeks();
        org.joda.time.Weeks weeks29 = weeks25.minus(3);
        org.joda.time.Weeks weeks31 = weeks29.minus(0);
        boolean boolean32 = weeks20.isLessThan(weeks29);
        org.joda.time.Weeks weeks34 = weeks29.multipliedBy((-9));
        org.joda.time.Weeks weeks36 = weeks29.minus(33);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
    }

    @Test
    public void test13533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13533");
        org.joda.time.Days days0 = org.joda.time.Days.FOUR;
        org.joda.time.Days days2 = days0.dividedBy((int) '#');
        java.lang.String str3 = days2.toString();
        java.lang.String str4 = days2.toString();
        org.joda.time.Days days6 = days2.plus(52114);
        org.joda.time.Duration duration7 = days6.toStandardDuration();
        org.joda.time.Duration duration9 = duration7.plus(1644572336460L);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "P0D" + "'", str3, "P0D");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P0D" + "'", str4, "P0D");
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
    }

    @Test
    public void test13534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13534");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(36, (int) ' ', 0, 456368756, 36, (-9550), 10, 2147483639);
    }

    @Test
    public void test13535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13535");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType3 = minutes2.getPeriodType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period5 = new org.joda.time.Period((java.lang.Object) minutes4);
        boolean boolean6 = minutes2.isGreaterThan(minutes4);
        org.joda.time.Minutes minutes8 = minutes2.minus(8);
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Duration duration13 = duration10.withDurationAdded(1644572078660L, 0);
        org.joda.time.Minutes minutes14 = duration13.toStandardMinutes();
        org.joda.time.Minutes minutes16 = minutes14.minus(9);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.PeriodType periodType18 = minutes17.getPeriodType();
        org.joda.time.Duration duration21 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = duration21.toPeriodFrom(readableInstant22);
        org.joda.time.Period period25 = period23.minusSeconds((int) '4');
        org.joda.time.Minutes minutes26 = period23.toStandardMinutes();
        org.joda.time.Minutes minutes27 = minutes17.plus(minutes26);
        org.joda.time.Minutes minutes29 = minutes17.minus(0);
        org.joda.time.Minutes minutes31 = minutes29.dividedBy((-963));
        org.joda.time.Minutes minutes33 = minutes29.dividedBy(10);
        org.joda.time.Minutes minutes34 = minutes16.minus(minutes33);
        org.joda.time.Minutes minutes35 = minutes2.minus(minutes33);
        org.joda.time.MutablePeriod mutablePeriod36 = minutes2.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
    }

    @Test
    public void test13536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13536");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        boolean boolean7 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Interval interval9 = duration5.toIntervalTo(readableInstant8);
        org.joda.time.Interval interval10 = interval9.toInterval();
        org.joda.time.Chronology chronology11 = interval10.getChronology();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval10);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.Period period14 = interval10.toPeriod(periodType13);
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1644572091852L, periodType13);
        int int16 = mutablePeriod15.getDays();
        mutablePeriod15.addMinutes(9);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(chronology11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 19034 + "'", int16 == 19034);
    }

    @Test
    public void test13537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13537");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType5 = periodType4.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(periodType4);
        java.lang.String str7 = mutablePeriod6.toString();
        org.joda.time.PeriodType periodType8 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.standard();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) (byte) 0, periodType11);
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod();
        mutablePeriod13.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod13, periodType17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        org.joda.time.Interval interval28 = interval27.toInterval();
        org.joda.time.DateTime dateTime29 = interval28.getEnd();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.DateTime dateTime40 = interval39.getEnd();
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime29, (org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        org.joda.time.Interval interval51 = interval50.toInterval();
        org.joda.time.DateTime dateTime52 = interval51.getEnd();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        org.joda.time.Interval interval62 = interval61.toInterval();
        org.joda.time.DateTime dateTime63 = interval62.getEnd();
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime52, (org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.DurationFieldType durationFieldType66 = minutes65.getFieldType();
        int int67 = mutablePeriod13.get(durationFieldType66);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant72 = null;
        java.lang.Object obj73 = null;
        org.joda.time.Duration duration74 = new org.joda.time.Duration(obj73);
        org.joda.time.Period period75 = new org.joda.time.Period(readableInstant72, (org.joda.time.ReadableDuration) duration74);
        boolean boolean76 = duration71.isShorterThan((org.joda.time.ReadableDuration) duration74);
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Interval interval78 = duration74.toIntervalTo(readableInstant77);
        org.joda.time.Interval interval79 = interval78.toInterval();
        org.joda.time.Chronology chronology80 = interval79.getChronology();
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod((-1L), chronology80);
        mutablePeriod13.add((-1L), chronology80);
        org.joda.time.Period period83 = new org.joda.time.Period((java.lang.Object) mutablePeriod6, periodType11, chronology80);
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.Period period85 = new org.joda.time.Period((long) 36, 1644572102780L, periodType11, chronology84);
        org.joda.time.Period period86 = new org.joda.time.Period(1644572237246L, 1644572589759L, periodType11);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0S" + "'", str7, "PT0S");
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(dateTime29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(dateTime52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(dateTime63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(interval79);
        org.junit.Assert.assertNotNull(chronology80);
    }

    @Test
    public void test13538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13538");
        org.joda.time.Period period1 = new org.joda.time.Period(35999903L);
        int int2 = period1.getMinutes();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 59 + "'", int2 == 59);
    }

    @Test
    public void test13539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13539");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(1644572175844L);
        int int2 = mutablePeriod1.getWeeks();
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType4 = periodType3.withMonthsRemoved();
        org.joda.time.Days days5 = org.joda.time.Days.ONE;
        org.joda.time.Days days6 = days5.negated();
        org.joda.time.Days days7 = org.joda.time.Days.ONE;
        org.joda.time.Days days8 = days7.negated();
        org.joda.time.Days days9 = org.joda.time.Days.ONE;
        org.joda.time.Days days10 = days9.negated();
        boolean boolean11 = days8.isGreaterThan(days10);
        org.joda.time.Days days12 = days5.plus(days10);
        org.joda.time.Days days13 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days5);
        org.joda.time.DurationFieldType durationFieldType14 = days13.getFieldType();
        boolean boolean15 = periodType4.isSupported(durationFieldType14);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period16 = new org.joda.time.Period((java.lang.Object) int2, periodType4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test13540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13540");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Chronology chronology10 = interval9.getChronology();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        org.joda.time.Duration duration13 = weeks11.toStandardDuration();
        org.joda.time.Weeks weeks14 = weeks11.negated();
        org.joda.time.Weeks weeks16 = weeks11.dividedBy(539);
        org.joda.time.Duration duration17 = weeks11.toStandardDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(chronology10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(duration17);
    }

    @Test
    public void test13541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13541");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(727, (-4), 90, (-648));
    }

    @Test
    public void test13542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13542");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        mutablePeriod9.addDays(0);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) (short) 100, chronology18);
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.eras();
        boolean boolean21 = period19.isSupported(durationFieldType20);
        int int22 = periodType16.indexOf(durationFieldType20);
        int int23 = mutablePeriod9.get(durationFieldType20);
        mutablePeriod9.add(35999L);
        int int26 = mutablePeriod9.getYears();
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test13543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13543");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        long long9 = interval8.getStartMillis();
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology18 = null;
        mutablePeriod13.setPeriod((org.joda.time.ReadableDuration) duration17, chronology18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        org.joda.time.Interval interval29 = interval28.toInterval();
        org.joda.time.DateTime dateTime30 = interval29.getEnd();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        boolean boolean37 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration35.toIntervalTo(readableInstant38);
        org.joda.time.Interval interval40 = interval39.toInterval();
        org.joda.time.DateTime dateTime41 = interval40.getEnd();
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime30, (org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, (org.joda.time.ReadableInstant) dateTime30);
        boolean boolean44 = interval8.isBefore((org.joda.time.ReadableInstant) dateTime30);
        org.joda.time.Duration duration45 = interval8.toDuration();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval8);
        org.joda.time.DateTime dateTime47 = interval8.getStart();
        long long48 = interval8.toDurationMillis();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardSeconds(1644572087663L);
        org.joda.time.ReadableInstant readableInstant51 = null;
        java.lang.Object obj52 = null;
        org.joda.time.Duration duration53 = new org.joda.time.Duration(obj52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration53, readableInstant55);
        org.joda.time.Duration duration58 = org.joda.time.Duration.millis((long) '4');
        long long59 = duration58.getStandardDays();
        boolean boolean60 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType62 = periodType61.withHoursRemoved();
        org.joda.time.Period period63 = duration58.toPeriod(periodType61);
        org.joda.time.Period period64 = duration50.toPeriod(periodType61);
        long long65 = duration50.getStandardSeconds();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant68 = null;
        java.lang.Object obj69 = null;
        org.joda.time.Duration duration70 = new org.joda.time.Duration(obj69);
        org.joda.time.Period period71 = new org.joda.time.Period(readableInstant68, (org.joda.time.ReadableDuration) duration70);
        boolean boolean72 = duration67.isShorterThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Interval interval74 = duration70.toIntervalTo(readableInstant73);
        org.joda.time.Interval interval75 = interval74.toInterval();
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant78 = null;
        java.lang.Object obj79 = null;
        org.joda.time.Duration duration80 = new org.joda.time.Duration(obj79);
        org.joda.time.Period period81 = new org.joda.time.Period(readableInstant78, (org.joda.time.ReadableDuration) duration80);
        boolean boolean82 = duration77.isShorterThan((org.joda.time.ReadableDuration) duration80);
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.Interval interval84 = duration80.toIntervalTo(readableInstant83);
        boolean boolean85 = interval75.isAfter((org.joda.time.ReadableInterval) interval84);
        org.joda.time.DateTime dateTime86 = interval75.getStart();
        org.joda.time.ReadableInstant readableInstant87 = null;
        boolean boolean88 = interval75.isAfter(readableInstant87);
        org.joda.time.Weeks weeks89 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval75);
        org.joda.time.DateTime dateTime90 = interval75.getStart();
        org.joda.time.Period period91 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, (org.joda.time.ReadableInstant) dateTime90);
        org.joda.time.Chronology chronology92 = dateTime90.getChronology();
        boolean boolean93 = interval8.isAfter((org.joda.time.ReadableInstant) dateTime90);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1644572615526L + "'", long9 == 1644572615526L);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(dateTime30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1644572087663L + "'", long65 == 1644572087663L);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(interval74);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(interval84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(dateTime86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(dateTime90);
        org.junit.Assert.assertNotNull(chronology92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test13544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13544");
        org.joda.time.Period period1 = new org.joda.time.Period((long) (byte) 1);
        org.joda.time.Period period3 = period1.minusMillis(3);
        int int4 = period1.getSeconds();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test13545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13545");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks5 = weeks2.plus((int) ' ');
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks11 = weeks8.plus((int) ' ');
        boolean boolean12 = weeks2.isGreaterThan(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks13.minus(weeks14);
        org.joda.time.Weeks weeks17 = weeks14.minus((int) (short) -1);
        org.joda.time.Weeks weeks18 = null;
        boolean boolean19 = weeks14.isGreaterThan(weeks18);
        boolean boolean20 = weeks8.isGreaterThan(weeks14);
        org.joda.time.Weeks weeks22 = weeks8.dividedBy((-9700));
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks23.plus((int) '4');
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean29 = weeks26.isGreaterThan(weeks28);
        org.joda.time.DurationFieldType durationFieldType30 = weeks28.getFieldType();
        boolean boolean31 = weeks23.isGreaterThan(weeks28);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks(36);
        org.joda.time.Weeks weeks35 = weeks33.plus(0);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.weeks(36);
        org.joda.time.Weeks weeks39 = weeks37.plus(0);
        org.joda.time.Weeks weeks40 = weeks33.minus(weeks37);
        org.joda.time.Weeks weeks42 = weeks37.dividedBy(30);
        org.joda.time.Weeks weeks44 = weeks42.minus((int) '#');
        org.joda.time.Weeks weeks45 = weeks28.plus(weeks44);
        org.joda.time.Weeks weeks46 = weeks22.minus(weeks28);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
    }

    @Test
    public void test13546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13546");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Chronology chronology10 = interval9.getChronology();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        org.joda.time.PeriodType periodType13 = weeks11.getPeriodType();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(chronology10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test13547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13547");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        mutablePeriod9.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod13);
        mutablePeriod9.addHours((int) (byte) 1);
        mutablePeriod9.addSeconds((-101));
        mutablePeriod9.addMillis((int) '#');
        org.joda.time.Period period24 = new org.joda.time.Period(1L);
        int int25 = period24.getWeeks();
        org.joda.time.Period period27 = period24.plusMonths((int) '#');
        org.joda.time.Period period29 = period27.minusDays(100);
        org.joda.time.Period period31 = period29.minusMinutes((int) '#');
        mutablePeriod9.add((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.Hours hours43 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval42);
        org.joda.time.Hours hours44 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval42);
        org.joda.time.DurationFieldType durationFieldType45 = hours44.getFieldType();
        org.joda.time.Hours hours47 = hours44.minus(1);
        org.joda.time.Duration duration50 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = duration50.toPeriodFrom(readableInstant51);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration50.toPeriod(chronology53);
        org.joda.time.Period period56 = period54.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval57 = null;
        org.joda.time.Hours hours58 = org.joda.time.Hours.hoursIn(readableInterval57);
        org.joda.time.Period period59 = period56.minus((org.joda.time.ReadablePeriod) hours58);
        org.joda.time.Hours hours60 = hours58.negated();
        org.joda.time.Hours hours61 = hours47.plus(hours60);
        org.joda.time.DurationFieldType durationFieldType62 = hours60.getFieldType();
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) hours60);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant68 = null;
        java.lang.Object obj69 = null;
        org.joda.time.Duration duration70 = new org.joda.time.Duration(obj69);
        org.joda.time.Period period71 = new org.joda.time.Period(readableInstant68, (org.joda.time.ReadableDuration) duration70);
        boolean boolean72 = duration67.isShorterThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Interval interval74 = duration70.toIntervalTo(readableInstant73);
        org.joda.time.Interval interval75 = interval74.toInterval();
        org.joda.time.Hours hours76 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval75);
        org.joda.time.Hours hours78 = hours76.dividedBy(1);
        org.joda.time.Hours hours80 = hours76.minus((int) (short) 1);
        org.joda.time.PeriodType periodType81 = hours76.getPeriodType();
        org.joda.time.PeriodType periodType82 = hours76.getPeriodType();
        org.joda.time.PeriodType periodType83 = periodType82.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(1644572186536L, 1644572131234L, periodType82);
        mutablePeriod9.add((org.joda.time.ReadablePeriod) mutablePeriod84);
        int int86 = mutablePeriod84.getSeconds();
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(interval74);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test13548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13548");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        mutablePeriod3.setWeeks((int) (short) -1);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration12.toIntervalTo(readableInstant15);
        mutablePeriod3.setPeriod((org.joda.time.ReadableInterval) interval16);
        org.joda.time.Interval interval18 = interval16.toInterval();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration21.toPeriod(chronology23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        org.joda.time.Days days30 = duration28.toStandardDays();
        boolean boolean31 = periodType25.equals((java.lang.Object) duration28);
        boolean boolean32 = duration21.isEqual((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration38 = duration35.minus((long) '4');
        org.joda.time.Duration duration39 = duration21.minus((org.joda.time.ReadableDuration) duration35);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType41 = periodType40.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(periodType41);
        org.joda.time.Period period43 = duration35.toPeriod(periodType41);
        org.joda.time.Period period44 = interval16.toPeriod(periodType41);
        int int45 = period44.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period47 = period44.minusMonths((-800));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test13549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13549");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, periodType7, chronology8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.millis((long) '4');
        long long12 = duration11.getStandardDays();
        boolean boolean13 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration14 = duration1.toDuration();
        org.joda.time.Seconds seconds15 = duration1.toStandardSeconds();
        org.joda.time.Seconds seconds17 = seconds15.minus(36000);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
    }

    @Test
    public void test13550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13550");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType2 = periodType1.withMillisRemoved();
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Days days7 = duration5.toStandardDays();
        org.joda.time.Duration duration9 = org.joda.time.Duration.millis((long) '4');
        long long10 = duration9.getMillis();
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType13);
        mutablePeriod14.setYears(0);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology19 = null;
        mutablePeriod14.setPeriod((org.joda.time.ReadableDuration) duration18, chronology19);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.DateTime dateTime31 = interval30.getEnd();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        org.joda.time.Interval interval41 = interval40.toInterval();
        org.joda.time.DateTime dateTime42 = interval41.getEnd();
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, (org.joda.time.ReadableInstant) dateTime31);
        java.lang.String str45 = dateTime31.toString();
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, (org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        org.joda.time.Interval interval56 = interval55.toInterval();
        org.joda.time.DateTime dateTime57 = interval56.getEnd();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant60 = null;
        java.lang.Object obj61 = null;
        org.joda.time.Duration duration62 = new org.joda.time.Duration(obj61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant60, (org.joda.time.ReadableDuration) duration62);
        boolean boolean64 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Interval interval66 = duration62.toIntervalTo(readableInstant65);
        org.joda.time.Interval interval67 = interval66.toInterval();
        org.joda.time.DateTime dateTime68 = interval67.getEnd();
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime57, (org.joda.time.ReadableInstant) dateTime68);
        org.joda.time.Days days70 = org.joda.time.Days.daysBetween((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableInstant) dateTime68);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant73 = null;
        java.lang.Object obj74 = null;
        org.joda.time.Duration duration75 = new org.joda.time.Duration(obj74);
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant73, (org.joda.time.ReadableDuration) duration75);
        boolean boolean77 = duration72.isShorterThan((org.joda.time.ReadableDuration) duration75);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Interval interval79 = duration75.toIntervalTo(readableInstant78);
        org.joda.time.Interval interval80 = interval79.toInterval();
        org.joda.time.DateTime dateTime81 = interval80.getEnd();
        boolean boolean82 = dateTime31.isEqual((org.joda.time.ReadableInstant) dateTime81);
        org.joda.time.DateTimeFieldType dateTimeFieldType83 = null;
        boolean boolean84 = dateTime31.isSupported(dateTimeFieldType83);
        org.joda.time.PeriodType periodType85 = org.joda.time.PeriodType.dayTime();
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime31, periodType85);
        long long87 = dateTime31.getMillis();
        org.joda.time.Chronology chronology88 = dateTime31.getChronology();
        org.joda.time.Period period89 = new org.joda.time.Period((long) 456368756, periodType1, chronology88);
        org.joda.time.PeriodType periodType90 = periodType1.withHoursRemoved();
        org.joda.time.PeriodType periodType91 = periodType90.withMillisRemoved();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 52L + "'", long10 == 52L);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(dateTime42);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "2022-02-11T09:43:35.723Z" + "'", str45, "2022-02-11T09:43:35.723Z");
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(interval67);
        org.junit.Assert.assertNotNull(dateTime68);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(interval79);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(dateTime81);
// flaky:         org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(periodType85);
// flaky:         org.junit.Assert.assertTrue("'" + long87 + "' != '" + 1644572615723L + "'", long87 == 1644572615723L);
        org.junit.Assert.assertNotNull(chronology88);
        org.junit.Assert.assertNotNull(periodType90);
        org.junit.Assert.assertNotNull(periodType91);
    }

    @Test
    public void test13551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13551");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (-28), 1644572607841L);
    }

    @Test
    public void test13552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13552");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        java.lang.String str37 = dateTime23.toString();
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType40 = periodType39.withSecondsRemoved();
        org.joda.time.PeriodType periodType41 = periodType40.withMillisRemoved();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        long long51 = interval50.getStartMillis();
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval50);
        org.joda.time.DurationFieldType durationFieldType53 = org.joda.time.DurationFieldType.years();
        int int54 = minutes52.get(durationFieldType53);
        boolean boolean55 = periodType40.isSupported(durationFieldType53);
        int int56 = period38.get(durationFieldType53);
        org.joda.time.Period period58 = period38.withYears((int) ' ');
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period38);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Interval interval68 = duration64.toIntervalTo(readableInstant67);
        long long69 = interval68.getStartMillis();
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval68);
        org.joda.time.DurationFieldType durationFieldType71 = org.joda.time.DurationFieldType.years();
        int int72 = minutes70.get(durationFieldType71);
        org.joda.time.Minutes minutes73 = minutes70.negated();
        org.joda.time.Minutes minutes75 = minutes70.multipliedBy((int) ' ');
        boolean boolean76 = minutes59.isLessThan(minutes70);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "2022-02-11T09:43:35.785Z" + "'", str37, "2022-02-11T09:43:35.785Z");
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
// flaky:         org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1644572615785L + "'", long51 == 1644572615785L);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(interval68);
// flaky:         org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1644572615785L + "'", long69 == 1644572615785L);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test13553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13553");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis((long) '4');
        long long8 = duration7.getStandardDays();
        boolean boolean9 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.DateTime dateTime27 = interval26.getEnd();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.DateTime dateTime38 = interval37.getEnd();
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.minutesIn(readableInterval48);
        java.lang.String str50 = minutes49.toString();
        org.joda.time.PeriodType periodType51 = minutes49.getPeriodType();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant47, periodType51);
        org.joda.time.PeriodType periodType53 = periodType51.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, (org.joda.time.ReadableInstant) dateTime38, periodType53);
        org.joda.time.Interval interval55 = duration2.toIntervalFrom((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.PeriodType periodType58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType58);
        mutablePeriod59.setYears(0);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology64 = null;
        mutablePeriod59.setPeriod((org.joda.time.ReadableDuration) duration63, chronology64);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant68 = null;
        java.lang.Object obj69 = null;
        org.joda.time.Duration duration70 = new org.joda.time.Duration(obj69);
        org.joda.time.Period period71 = new org.joda.time.Period(readableInstant68, (org.joda.time.ReadableDuration) duration70);
        boolean boolean72 = duration67.isShorterThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Interval interval74 = duration70.toIntervalTo(readableInstant73);
        org.joda.time.Interval interval75 = interval74.toInterval();
        org.joda.time.DateTime dateTime76 = interval75.getEnd();
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant79 = null;
        java.lang.Object obj80 = null;
        org.joda.time.Duration duration81 = new org.joda.time.Duration(obj80);
        org.joda.time.Period period82 = new org.joda.time.Period(readableInstant79, (org.joda.time.ReadableDuration) duration81);
        boolean boolean83 = duration78.isShorterThan((org.joda.time.ReadableDuration) duration81);
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Interval interval85 = duration81.toIntervalTo(readableInstant84);
        org.joda.time.Interval interval86 = interval85.toInterval();
        org.joda.time.DateTime dateTime87 = interval86.getEnd();
        org.joda.time.Period period88 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime76, (org.joda.time.ReadableInstant) dateTime87);
        org.joda.time.Period period89 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, (org.joda.time.ReadableInstant) dateTime76);
        java.lang.String str90 = dateTime76.toString();
        org.joda.time.Period period91 = duration2.toPeriodTo((org.joda.time.ReadableInstant) dateTime76);
        org.joda.time.Period period92 = period91.toPeriod();
        int int93 = period91.getMonths();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT0M" + "'", str50, "PT0M");
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(interval74);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(dateTime76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(interval85);
        org.junit.Assert.assertNotNull(interval86);
        org.junit.Assert.assertNotNull(dateTime87);
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "2022-02-11T09:43:35.825Z" + "'", str90, "2022-02-11T09:43:35.825Z");
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertNotNull(period92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test13554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13554");
        org.joda.time.Period period2 = new org.joda.time.Period(1644572256094L, 1644572156935L);
        org.joda.time.Minutes minutes3 = period2.toStandardMinutes();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((long) (short) 100, chronology5);
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.eras();
        boolean boolean8 = period6.isSupported(durationFieldType7);
        org.joda.time.Period period10 = period6.plusHours((int) (byte) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.millis((long) '4');
        long long13 = duration12.getMillis();
        org.joda.time.Minutes minutes14 = duration12.toStandardMinutes();
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Minutes minutes16 = minutes14.negated();
        org.joda.time.Minutes minutes17 = minutes14.negated();
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((long) (short) 100, chronology20);
        org.joda.time.DurationFieldType durationFieldType22 = org.joda.time.DurationFieldType.eras();
        boolean boolean23 = period21.isSupported(durationFieldType22);
        int int24 = periodType18.indexOf(durationFieldType22);
        boolean boolean25 = minutes17.isSupported(durationFieldType22);
        boolean boolean26 = period10.isSupported(durationFieldType22);
        int int27 = minutes3.get(durationFieldType22);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 52L + "'", long13 == 52L);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test13555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13555");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("2022-02-11T09:38:43.896Z/2022-02-11T09:38:43.896Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:38:43.896Z/2022-02...\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13556");
        org.joda.time.Period period2 = org.joda.time.Period.millis((int) (short) -1);
        org.joda.time.Period period3 = period2.toPeriod();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.TWO;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        boolean boolean13 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Interval interval15 = duration11.toIntervalTo(readableInstant14);
        org.joda.time.Interval interval16 = interval15.toInterval();
        org.joda.time.DateTime dateTime17 = interval16.getEnd();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        org.joda.time.Interval interval27 = interval26.toInterval();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        boolean boolean37 = interval27.isAfter((org.joda.time.ReadableInterval) interval36);
        boolean boolean38 = interval16.contains((org.joda.time.ReadableInterval) interval27);
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType41);
        mutablePeriod42.setYears(0);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology47 = null;
        mutablePeriod42.setPeriod((org.joda.time.ReadableDuration) duration46, chronology47);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant51 = null;
        java.lang.Object obj52 = null;
        org.joda.time.Duration duration53 = new org.joda.time.Duration(obj52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        boolean boolean55 = duration50.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Interval interval57 = duration53.toIntervalTo(readableInstant56);
        org.joda.time.Interval interval58 = interval57.toInterval();
        org.joda.time.DateTime dateTime59 = interval58.getEnd();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Interval interval68 = duration64.toIntervalTo(readableInstant67);
        org.joda.time.Interval interval69 = interval68.toInterval();
        org.joda.time.DateTime dateTime70 = interval69.getEnd();
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime59, (org.joda.time.ReadableInstant) dateTime70);
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, (org.joda.time.ReadableInstant) dateTime59);
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant75 = null;
        java.lang.Object obj76 = null;
        org.joda.time.Duration duration77 = new org.joda.time.Duration(obj76);
        org.joda.time.Period period78 = new org.joda.time.Period(readableInstant75, (org.joda.time.ReadableDuration) duration77);
        boolean boolean79 = duration74.isShorterThan((org.joda.time.ReadableDuration) duration77);
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.Interval interval81 = duration77.toIntervalTo(readableInstant80);
        org.joda.time.Interval interval82 = interval81.toInterval();
        org.joda.time.DateTime dateTime83 = interval82.getEnd();
        org.joda.time.PeriodType periodType85 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType86 = periodType85.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod(periodType86);
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod(10L, periodType86);
        org.joda.time.Period period89 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime59, (org.joda.time.ReadableInstant) dateTime83, periodType86);
        boolean boolean90 = interval27.isAfter((org.joda.time.ReadableInstant) dateTime59);
        org.joda.time.Chronology chronology91 = dateTime59.getChronology();
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod(0L, chronology91);
        org.joda.time.DurationField durationField93 = durationFieldType5.getField(chronology91);
        org.joda.time.Period period94 = new org.joda.time.Period((java.lang.Object) period3, chronology91);
        org.joda.time.Period period95 = new org.joda.time.Period(1644572186255L, chronology91);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(dateTime59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(dateTime70);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(interval81);
        org.junit.Assert.assertNotNull(interval82);
        org.junit.Assert.assertNotNull(dateTime83);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(chronology91);
        org.junit.Assert.assertNotNull(durationField93);
    }

    @Test
    public void test13557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13557");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        boolean boolean4 = days1.isGreaterThan(days3);
        org.joda.time.Days days6 = days3.plus((int) (short) 10);
        org.joda.time.Duration duration7 = days3.toStandardDuration();
        org.joda.time.Duration duration9 = new org.joda.time.Duration(1644572076849L);
        org.joda.time.Duration duration10 = duration7.plus((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration12 = duration9.plus(1644572487947L);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test13558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13558");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) ' ', chronology1);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.DateTime dateTime47 = interval46.getEnd();
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType50 = periodType49.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(periodType50);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(10L, periodType50);
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime47, periodType50);
        org.joda.time.Duration duration54 = mutablePeriod2.toDurationFrom((org.joda.time.ReadableInstant) dateTime23);
        mutablePeriod2.setPeriod(360000L);
        mutablePeriod2.setDays(9);
        org.joda.time.Hours hours60 = org.joda.time.Hours.hours((int) 'a');
        org.joda.time.Duration duration61 = hours60.toStandardDuration();
        org.joda.time.Hours hours63 = hours60.multipliedBy((-2));
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) hours60);
        int int65 = mutablePeriod2.getSeconds();
        mutablePeriod2.addHours(474);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test13559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13559");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withMillisRemoved();
        java.lang.String str4 = periodType3.getName();
        org.joda.time.Period period5 = new org.joda.time.Period(1644572113474L, 1644572094383L, periodType3);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period7 = period5.minusWeeks(52114);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MillisNoMillis" + "'", str4, "MillisNoMillis");
    }

    @Test
    public void test13560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13560");
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType3);
        mutablePeriod4.setYears(0);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology9 = null;
        mutablePeriod4.setPeriod((org.joda.time.ReadableDuration) duration8, chronology9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration16 = duration13.minus((long) '4');
        mutablePeriod4.add((org.joda.time.ReadableDuration) duration16);
        mutablePeriod4.setWeeks(2147483647);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((java.lang.Object) duration25, periodType31, chronology32);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.Chronology chronology44 = interval43.getChronology();
        org.joda.time.Period period45 = new org.joda.time.Period((long) 1, (long) '#', periodType31, chronology44);
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(0L, chronology44);
        mutablePeriod4.setPeriod(35999L, chronology44);
        org.joda.time.Period period48 = new org.joda.time.Period(1644572295235L, chronology44);
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks50.minus(weeks51);
        org.joda.time.Weeks weeks54 = weeks52.multipliedBy(100);
        org.joda.time.MutablePeriod mutablePeriod55 = weeks54.toMutablePeriod();
        mutablePeriod55.setSeconds(0);
        org.joda.time.Period period64 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period66 = period64.plusYears((int) (byte) 10);
        org.joda.time.Duration duration67 = period64.toStandardDuration();
        long long68 = duration67.getStandardSeconds();
        org.joda.time.Duration duration69 = duration67.toDuration();
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks74 = weeks72.minus(weeks73);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.dayTime();
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((java.lang.Object) weeks74, periodType75);
        org.joda.time.Duration duration79 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant80 = null;
        java.lang.Object obj81 = null;
        org.joda.time.Duration duration82 = new org.joda.time.Duration(obj81);
        org.joda.time.Period period83 = new org.joda.time.Period(readableInstant80, (org.joda.time.ReadableDuration) duration82);
        boolean boolean84 = duration79.isShorterThan((org.joda.time.ReadableDuration) duration82);
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.Interval interval86 = duration82.toIntervalTo(readableInstant85);
        org.joda.time.Interval interval87 = interval86.toInterval();
        org.joda.time.Chronology chronology88 = interval87.getChronology();
        org.joda.time.Period period89 = new org.joda.time.Period(1644572086619L, chronology88);
        org.joda.time.Period period90 = new org.joda.time.Period((long) (byte) 0, 1644572092263L, periodType75, chronology88);
        org.joda.time.Period period91 = duration67.toPeriod(chronology88);
        mutablePeriod55.setPeriod((long) (-34), 1644572364688L, chronology88);
        org.joda.time.Period period93 = new org.joda.time.Period((java.lang.Object) period48, periodType49, chronology88);
        org.joda.time.Period period95 = period48.plusMonths((-53));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(chronology44);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 700L + "'", long68 == 700L);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(interval86);
        org.junit.Assert.assertNotNull(interval87);
        org.junit.Assert.assertNotNull(chronology88);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertNotNull(period95);
    }

    @Test
    public void test13561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13561");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.plus((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = seconds4.plus(seconds5);
        org.joda.time.Seconds seconds8 = seconds0.minus(seconds5);
        org.joda.time.PeriodType periodType9 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.Seconds seconds12 = seconds10.multipliedBy((int) '#');
        org.joda.time.DurationFieldType durationFieldType13 = seconds10.getFieldType();
        org.joda.time.Seconds seconds15 = seconds10.minus(90);
        org.joda.time.Seconds seconds16 = seconds10.negated();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2S" + "'", str6, "PT2S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
    }

    @Test
    public void test13562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13562");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        mutablePeriod9.addMillis((-1));
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod9);
        mutablePeriod5.setDays((int) ' ');
        int int15 = mutablePeriod5.size();
        org.joda.time.MutablePeriod mutablePeriod16 = mutablePeriod5.copy();
        mutablePeriod16.setWeeks((int) (short) 0);
        mutablePeriod16.addMinutes(0);
        mutablePeriod16.addYears(36000000);
        int int23 = mutablePeriod16.getMinutes();
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test13563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13563");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) -1);
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Weeks weeks3 = period2.toStandardWeeks();
        org.joda.time.Weeks weeks5 = weeks3.plus((-44));
        org.joda.time.Weeks weeks7 = weeks3.multipliedBy((-869));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
    }

    @Test
    public void test13564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13564");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.minus(weeks1);
        org.joda.time.Weeks weeks4 = weeks2.multipliedBy(100);
        org.joda.time.Weeks weeks6 = weeks4.multipliedBy((int) (short) 10);
        org.joda.time.Period period7 = weeks6.toPeriod();
        org.joda.time.Weeks weeks9 = weeks6.minus(648);
        java.lang.String str10 = weeks9.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "P-648W" + "'", str10, "P-648W");
    }

    @Test
    public void test13565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13565");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.Period period3 = new org.joda.time.Period((java.lang.Object) duration1);
        org.joda.time.Duration duration4 = period3.toStandardDuration();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration10 = duration7.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration13 = duration10.withDurationAdded(1644572117257L, (int) 'a');
        org.joda.time.Duration duration15 = duration4.withDurationAdded((org.joda.time.ReadableDuration) duration10, 2);
        long long16 = duration4.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test13566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13566");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Hours hours12 = hours10.dividedBy(1);
        org.joda.time.Hours hours14 = hours10.minus((int) (short) 1);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.Hours hours25 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval24);
        org.joda.time.Hours hours27 = hours25.dividedBy(1);
        org.joda.time.DurationFieldType durationFieldType28 = org.joda.time.DurationFieldType.seconds();
        int int29 = hours27.get(durationFieldType28);
        int int30 = hours14.get(durationFieldType28);
        org.joda.time.Duration duration31 = hours14.toStandardDuration();
        org.joda.time.Hours hours33 = hours14.minus(37);
        org.joda.time.PeriodType periodType34 = hours33.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            int int36 = hours33.getValue(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(periodType34);
    }

    @Test
    public void test13567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13567");
        java.lang.Object obj0 = null;
        org.joda.time.Duration duration1 = new org.joda.time.Duration(obj0);
        org.joda.time.Hours hours2 = duration1.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType3 = hours2.getFieldType();
        org.joda.time.Hours hours4 = hours2.negated();
        org.joda.time.Hours hours6 = hours4.minus(10);
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        int int8 = mutablePeriod7.getYears();
        mutablePeriod7.addMonths(0);
        int int11 = mutablePeriod7.getYears();
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test13568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13568");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        boolean boolean30 = interval20.isAfter((org.joda.time.ReadableInterval) interval29);
        boolean boolean31 = interval9.contains((org.joda.time.ReadableInterval) interval20);
        org.joda.time.Hours hours32 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant45 = null;
        java.lang.Object obj46 = null;
        org.joda.time.Duration duration47 = new org.joda.time.Duration(obj46);
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration47);
        boolean boolean49 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Interval interval51 = duration47.toIntervalTo(readableInstant50);
        boolean boolean52 = interval42.isAfter((org.joda.time.ReadableInterval) interval51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant64 = null;
        java.lang.Object obj65 = null;
        org.joda.time.Duration duration66 = new org.joda.time.Duration(obj65);
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant64, (org.joda.time.ReadableDuration) duration66);
        boolean boolean68 = duration63.isShorterThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Interval interval70 = duration66.toIntervalTo(readableInstant69);
        org.joda.time.Interval interval71 = interval70.toInterval();
        org.joda.time.Hours hours72 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval71);
        org.joda.time.Hours hours73 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval71);
        boolean boolean74 = interval61.overlaps((org.joda.time.ReadableInterval) interval71);
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant77 = null;
        java.lang.Object obj78 = null;
        org.joda.time.Duration duration79 = new org.joda.time.Duration(obj78);
        org.joda.time.Period period80 = new org.joda.time.Period(readableInstant77, (org.joda.time.ReadableDuration) duration79);
        boolean boolean81 = duration76.isShorterThan((org.joda.time.ReadableDuration) duration79);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.Interval interval83 = duration79.toIntervalTo(readableInstant82);
        org.joda.time.Interval interval84 = interval83.toInterval();
        org.joda.time.Hours hours85 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval84);
        boolean boolean86 = interval71.contains((org.joda.time.ReadableInterval) interval84);
        boolean boolean87 = interval51.contains((org.joda.time.ReadableInterval) interval71);
        boolean boolean88 = interval9.overlaps((org.joda.time.ReadableInterval) interval71);
        org.joda.time.MutableInterval mutableInterval89 = interval71.toMutableInterval();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(interval70);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(interval83);
        org.junit.Assert.assertNotNull(interval84);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(mutableInterval89);
    }

    @Test
    public void test13569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13569");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        mutablePeriod9.setPeriod((org.joda.time.ReadableInterval) interval22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.millis((long) '4');
        long long26 = duration25.getMillis();
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType29);
        mutablePeriod30.setYears(0);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology35 = null;
        mutablePeriod30.setPeriod((org.joda.time.ReadableDuration) duration34, chronology35);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.DateTime dateTime47 = interval46.getEnd();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        boolean boolean54 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Interval interval56 = duration52.toIntervalTo(readableInstant55);
        org.joda.time.Interval interval57 = interval56.toInterval();
        org.joda.time.DateTime dateTime58 = interval57.getEnd();
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime47, (org.joda.time.ReadableInstant) dateTime58);
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, (org.joda.time.ReadableInstant) dateTime47);
        java.lang.String str61 = dateTime47.toString();
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, (org.joda.time.ReadableInstant) dateTime47);
        boolean boolean63 = interval22.isAfter((org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.Period period64 = interval22.toPeriod();
        org.joda.time.Period period65 = period64.normalizedStandard();
        org.joda.time.Period period67 = period65.withMinutes((-9699));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 52L + "'", long26 == 52L);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(dateTime58);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "2022-02-11T09:43:36.267Z" + "'", str61, "2022-02-11T09:43:36.267Z");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period67);
    }

    @Test
    public void test13570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13570");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.minutesIn(readableInterval8);
        java.lang.String str10 = minutes9.toString();
        org.joda.time.PeriodType periodType11 = minutes9.getPeriodType();
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant7, periodType11);
        org.joda.time.Duration duration14 = duration4.withMillis((long) 'a');
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.DateTime dateTime32 = interval31.getEnd();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.DateTime dateTime43 = interval42.getEnd();
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.minutesIn(readableInterval53);
        java.lang.String str55 = minutes54.toString();
        org.joda.time.PeriodType periodType56 = minutes54.getPeriodType();
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant52, periodType56);
        org.joda.time.PeriodType periodType58 = periodType56.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, (org.joda.time.ReadableInstant) dateTime43, periodType58);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((java.lang.Object) duration61, periodType67, chronology68);
        org.joda.time.Duration duration71 = org.joda.time.Duration.millis((long) '4');
        long long72 = duration71.getStandardDays();
        boolean boolean73 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime43, (org.joda.time.ReadableDuration) duration71);
        org.joda.time.Interval interval75 = duration14.toIntervalTo((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Duration duration76 = org.joda.time.Duration.ZERO;
        boolean boolean77 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.Minutes minutes80 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes82 = minutes80.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType83 = minutes82.getPeriodType();
        org.joda.time.PeriodType periodType84 = periodType83.withYearsRemoved();
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.Period period86 = new org.joda.time.Period((long) '#', periodType83, chronology85);
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType83);
        org.joda.time.PeriodType periodType88 = mutablePeriod87.getPeriodType();
        org.joda.time.Period period89 = duration76.toPeriod(periodType88);
        org.joda.time.MutablePeriod mutablePeriod90 = period89.toMutablePeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0M" + "'", str10, "PT0M");
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT0M" + "'", str55, "PT0M");
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(mutablePeriod90);
    }

    @Test
    public void test13571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13571");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.plus((int) '4');
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks3.minus(weeks4);
        org.joda.time.Weeks weeks6 = weeks0.minus(weeks3);
        org.joda.time.PeriodType periodType7 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks8 = weeks0.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(weeks8);
    }

    @Test
    public void test13572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13572");
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType10 = periodType9.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(periodType10);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(10L, periodType10);
        org.joda.time.PeriodType periodType13 = periodType10.withMinutesRemoved();
        org.joda.time.PeriodType periodType14 = periodType13.withWeeksRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period15 = new org.joda.time.Period((int) ' ', (-13), 10, (-4), 29, 0, (int) '4', 54, periodType14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
    }

    @Test
    public void test13573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13573");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Period period1 = minutes0.toPeriod();
        org.joda.time.Hours hours2 = minutes0.toStandardHours();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours4 = hours2.multipliedBy((-68));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 35791394 * -68");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test13574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13574");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.plus((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = seconds4.plus(seconds5);
        org.joda.time.Seconds seconds8 = seconds0.minus(seconds5);
        org.joda.time.Seconds seconds10 = seconds8.dividedBy(3);
        org.joda.time.Seconds seconds12 = seconds10.plus((-97));
        org.joda.time.Seconds seconds14 = seconds10.minus((int) ' ');
        org.joda.time.DurationFieldType durationFieldType15 = seconds10.getFieldType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2S" + "'", str6, "PT2S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(durationFieldType15);
    }

    @Test
    public void test13575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13575");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572288284L, periodType1);
        int int3 = mutablePeriod2.getMillis();
        org.joda.time.Hours hours4 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 284 + "'", int3 == 284);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test13576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13576");
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.Duration duration9 = org.joda.time.Duration.millis((long) '4');
        long long10 = duration9.getStandardDays();
        boolean boolean11 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType13 = periodType12.withHoursRemoved();
        org.joda.time.Period period14 = duration9.toPeriod(periodType12);
        org.joda.time.PeriodType periodType15 = periodType12.withMinutesRemoved();
        org.joda.time.PeriodType periodType16 = periodType15.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 0, 1644572101212L, periodType16);
        int int18 = mutablePeriod17.getHours();
        int int19 = mutablePeriod17.getSeconds();
        int int20 = mutablePeriod17.size();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod17.setHours((-840));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test13577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13577");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(97, (int) (byte) 100, 1, (-963), (int) ' ', (-1), 18, 52);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType13);
        mutablePeriod14.setYears(0);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology19 = null;
        mutablePeriod14.setPeriod((org.joda.time.ReadableDuration) duration18, chronology19);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.DateTime dateTime31 = interval30.getEnd();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        org.joda.time.Interval interval41 = interval40.toInterval();
        org.joda.time.DateTime dateTime42 = interval41.getEnd();
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, (org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period46 = duration10.toPeriodTo((org.joda.time.ReadableInstant) dateTime31, periodType45);
        org.joda.time.Hours hours47 = duration10.toStandardHours();
        org.joda.time.Hours hours48 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours49 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours50 = hours48.minus(hours49);
        java.lang.String str51 = hours48.toString();
        org.joda.time.Hours hours52 = hours47.minus(hours48);
        int int53 = hours52.size();
        org.joda.time.Hours hours54 = org.joda.time.Hours.ONE;
        int int55 = hours54.getHours();
        org.joda.time.Hours hours56 = hours54.negated();
        org.joda.time.Hours hours57 = hours52.plus(hours56);
        org.joda.time.Hours hours58 = hours52.negated();
        org.joda.time.DurationFieldType durationFieldType59 = hours58.getFieldType();
        mutablePeriod8.set(durationFieldType59, 17);
        int int62 = mutablePeriod8.getMinutes();
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PT2147483647H" + "'", str51, "PT2147483647H");
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test13578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13578");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT2M");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13579");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType3 = seconds2.getFieldType();
        org.joda.time.Seconds seconds5 = seconds2.plus((-1));
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.TWO;
        java.lang.String str7 = seconds6.toString();
        org.joda.time.Seconds seconds8 = seconds5.plus(seconds6);
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds6);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.Seconds seconds12 = seconds6.plus(seconds11);
        org.joda.time.Period period13 = new org.joda.time.Period((java.lang.Object) seconds12);
        org.joda.time.PeriodType periodType14 = seconds12.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1644572187090L, periodType14);
        boolean boolean17 = periodType14.equals((java.lang.Object) 1644572358777L);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2S" + "'", str7, "PT2S");
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test13580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13580");
        org.joda.time.Period period1 = org.joda.time.Period.months(586);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13581");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572369474L);
    }

    @Test
    public void test13582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13582");
        org.joda.time.Duration duration9 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration11 = duration9.plus(1644572076849L);
        org.joda.time.Duration duration13 = org.joda.time.Duration.millis(9L);
        org.joda.time.Duration duration14 = duration9.plus((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Seconds seconds15 = duration14.toStandardSeconds();
        org.joda.time.Seconds seconds16 = seconds15.negated();
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((-1), (-97), (int) (short) -1, (-101), (int) (byte) 100, 9, (-101), (int) (byte) 100);
        org.joda.time.format.PeriodFormatter periodFormatter26 = null;
        java.lang.String str27 = mutablePeriod25.toString(periodFormatter26);
        int int28 = mutablePeriod25.getYears();
        org.joda.time.MutablePeriod mutablePeriod29 = mutablePeriod25.copy();
        org.joda.time.PeriodType periodType30 = mutablePeriod29.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((java.lang.Object) seconds16, periodType30);
        org.joda.time.Period period32 = new org.joda.time.Period(903, 1932735283, 2147483642, (-44), 0, (-30), 41, 586, periodType30);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-1Y-97M-1W-101DT100H9M-100.900S" + "'", str27, "P-1Y-97M-1W-101DT100H9M-100.900S");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test13583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13583");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) 2);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(1644572183716L);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        boolean boolean10 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((java.lang.Object) duration5, periodType11, chronology12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.millis((long) '4');
        long long16 = duration15.getStandardDays();
        boolean boolean17 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration15);
        long long18 = duration5.getMillis();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        org.joda.time.Interval interval28 = interval27.toInterval();
        org.joda.time.Chronology chronology29 = interval28.getChronology();
        org.joda.time.Period period30 = duration5.toPeriod(chronology29);
        org.joda.time.Period period31 = duration5.toPeriod();
        org.joda.time.Duration duration32 = duration3.plus((org.joda.time.ReadableDuration) duration5);
        long long33 = duration5.getStandardHours();
        org.joda.time.Minutes minutes34 = duration5.toStandardMinutes();
        boolean boolean35 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 36000000L + "'", long18 == 36000000L);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(chronology29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10L + "'", long33 == 10L);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test13584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13584");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Period period24 = period22.plusMinutes((int) (byte) -1);
        int int25 = period24.getWeeks();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks26.minus(weeks27);
        org.joda.time.Weeks weeks30 = weeks28.multipliedBy(100);
        org.joda.time.Period period31 = weeks30.toPeriod();
        org.joda.time.Period period32 = period24.withFields((org.joda.time.ReadablePeriod) weeks30);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
    }

    @Test
    public void test13585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13585");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Period period9 = period4.multipliedBy((int) (byte) 100);
        org.joda.time.Period period11 = period9.withHours((int) (short) 0);
        java.lang.String str12 = period9.toString();
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = duration15.toPeriodFrom(readableInstant16);
        org.joda.time.Period period19 = period17.minusSeconds((int) '4');
        org.joda.time.Period period21 = period17.minusSeconds(10);
        org.joda.time.Period period22 = period17.normalizedStandard();
        org.joda.time.Period period23 = period9.minus((org.joda.time.ReadablePeriod) period17);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.yearDay();
        boolean boolean25 = period17.equals((java.lang.Object) periodType24);
        org.joda.time.Period period27 = period17.minusSeconds((-101));
        org.joda.time.Period period29 = period27.plusYears(1);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((java.lang.Object) period29);
        int int31 = period29.getMillis();
        int int32 = period29.getHours();
        org.joda.time.Period period33 = period29.toPeriod();
        int int34 = period29.getMonths();
        org.joda.time.Period period36 = period29.plusDays(16);
        int int37 = period29.getMinutes();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT-9.700S" + "'", str12, "PT-9.700S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-97) + "'", int31 == (-97));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test13586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13586");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        mutablePeriod9.addDays(0);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) (short) 100, chronology18);
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.eras();
        boolean boolean21 = period19.isSupported(durationFieldType20);
        int int22 = periodType16.indexOf(durationFieldType20);
        int int23 = mutablePeriod9.get(durationFieldType20);
        int int24 = mutablePeriod9.getWeeks();
        int int25 = mutablePeriod9.getYears();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration40.toIntervalTo(readableInstant43);
        org.joda.time.Interval interval45 = interval44.toInterval();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        boolean boolean55 = interval45.isAfter((org.joda.time.ReadableInterval) interval54);
        org.joda.time.Period period56 = interval54.toPeriod();
        boolean boolean57 = interval35.isBefore((org.joda.time.ReadableInterval) interval54);
        org.joda.time.Period period58 = interval35.toPeriod();
        org.joda.time.Chronology chronology59 = interval35.getChronology();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period60 = new org.joda.time.Period((java.lang.Object) int25, chronology59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(chronology59);
    }

    @Test
    public void test13587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13587");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        mutablePeriod9.addMillis((-1));
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod9);
        int int13 = mutablePeriod5.getYears();
        mutablePeriod5.setSeconds(100);
        int int16 = mutablePeriod5.getHours();
        int int17 = mutablePeriod5.getWeeks();
        mutablePeriod5.setDays(2147483647);
        int[] intArray20 = mutablePeriod5.getValues();
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0, 0, 2147483647, 0, 0, 100, -2]");
    }

    @Test
    public void test13588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13588");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.Minutes minutes3 = duration1.toStandardMinutes();
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.Minutes minutes6 = minutes3.negated();
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) (short) 100, chronology9);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.eras();
        boolean boolean12 = period10.isSupported(durationFieldType11);
        int int13 = periodType7.indexOf(durationFieldType11);
        boolean boolean14 = minutes6.isSupported(durationFieldType11);
        org.joda.time.Minutes minutes16 = minutes6.multipliedBy((-101));
        org.joda.time.DurationFieldType durationFieldType17 = minutes6.getFieldType();
        org.joda.time.DurationFieldType durationFieldType18 = minutes6.getFieldType();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(durationFieldType18);
    }

    @Test
    public void test13589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13589");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration4 = duration1.plus(1644572107180L);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = seconds5.plus((-1));
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds9.multipliedBy((int) (byte) 1);
        int int12 = seconds11.size();
        org.joda.time.Period period14 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period16 = period14.minusMillis((-1));
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period16);
        boolean boolean18 = seconds11.isGreaterThan(seconds17);
        boolean boolean19 = seconds5.isGreaterThan(seconds11);
        org.joda.time.Seconds seconds21 = seconds5.multipliedBy(8);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType24 = seconds23.getFieldType();
        org.joda.time.Seconds seconds26 = seconds23.plus((-1));
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.TWO;
        java.lang.String str28 = seconds27.toString();
        org.joda.time.Seconds seconds29 = seconds26.plus(seconds27);
        org.joda.time.Seconds seconds30 = seconds22.minus(seconds27);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn(readableInterval31);
        org.joda.time.Seconds seconds33 = seconds27.plus(seconds32);
        org.joda.time.Seconds seconds34 = seconds5.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds34.negated();
        boolean boolean36 = duration1.equals((java.lang.Object) seconds34);
        org.joda.time.Seconds seconds38 = seconds34.plus(34);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        org.joda.time.Seconds seconds43 = period42.toStandardSeconds();
        org.joda.time.Seconds seconds44 = period42.toStandardSeconds();
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType47 = seconds46.getFieldType();
        org.joda.time.Seconds seconds49 = seconds46.plus((-1));
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.TWO;
        java.lang.String str51 = seconds50.toString();
        org.joda.time.Seconds seconds52 = seconds49.plus(seconds50);
        org.joda.time.Seconds seconds53 = seconds45.minus(seconds50);
        org.joda.time.PeriodType periodType54 = seconds45.getPeriodType();
        org.joda.time.Seconds seconds55 = seconds44.plus(seconds45);
        boolean boolean56 = seconds38.isGreaterThan(seconds55);
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType59 = seconds58.getFieldType();
        org.joda.time.Seconds seconds61 = seconds58.plus((-1));
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.TWO;
        java.lang.String str63 = seconds62.toString();
        org.joda.time.Seconds seconds64 = seconds61.plus(seconds62);
        org.joda.time.Seconds seconds65 = seconds57.minus(seconds62);
        org.joda.time.ReadableInterval readableInterval66 = null;
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.secondsIn(readableInterval66);
        org.joda.time.Seconds seconds68 = seconds62.plus(seconds67);
        org.joda.time.Seconds seconds70 = seconds68.minus((-97));
        boolean boolean71 = seconds55.isLessThan(seconds70);
        org.joda.time.MutablePeriod mutablePeriod72 = seconds70.toMutablePeriod();
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.seconds((int) '#');
        org.joda.time.DurationFieldType durationFieldType75 = seconds74.getFieldType();
        org.joda.time.Seconds seconds77 = seconds74.plus(2);
        org.joda.time.Seconds seconds79 = seconds74.plus(2);
        org.joda.time.DurationFieldType durationFieldType80 = seconds74.getFieldType();
        int int81 = mutablePeriod72.get(durationFieldType80);
        mutablePeriod72.setMinutes(8);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT2S" + "'", str28, "PT2S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PT2S" + "'", str51, "PT2S");
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "PT2S" + "'", str63, "PT2S");
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(mutablePeriod72);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 99 + "'", int81 == 99);
    }

    @Test
    public void test13590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13590");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration3 = duration1.plus(1644572076849L);
        org.joda.time.Days days4 = duration1.toStandardDays();
        org.joda.time.Period period5 = days4.toPeriod();
        org.joda.time.Period period7 = period5.plusDays(35);
        org.joda.time.Period period9 = period7.minusWeeks((int) (short) 10);
        org.joda.time.Period period10 = period9.toPeriod();
        org.joda.time.Period period12 = period9.minusMinutes(213044);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test13591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13591");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(34);
        org.joda.time.PeriodType periodType2 = hours1.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration3 = new org.joda.time.Duration((java.lang.Object) periodType2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test13592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13592");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.dayTime();
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(periodType0);
        org.joda.time.PeriodType periodType2 = periodType0.withMinutesRemoved();
        org.joda.time.PeriodType periodType3 = periodType2.withMonthsRemoved();
        org.joda.time.DurationFieldType durationFieldType5 = periodType2.getFieldType(1);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType8 = seconds7.getFieldType();
        org.joda.time.Seconds seconds10 = seconds7.plus((-1));
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.TWO;
        java.lang.String str12 = seconds11.toString();
        org.joda.time.Seconds seconds13 = seconds10.plus(seconds11);
        org.joda.time.Seconds seconds14 = seconds6.minus(seconds11);
        org.joda.time.Seconds seconds16 = seconds14.dividedBy(3);
        org.joda.time.Period period17 = new org.joda.time.Period((java.lang.Object) seconds14);
        org.joda.time.PeriodType periodType18 = seconds14.getPeriodType();
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.plus((-1));
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds25 = seconds23.multipliedBy((int) (byte) 1);
        int int26 = seconds25.size();
        org.joda.time.Period period28 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period30 = period28.minusMillis((-1));
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period30);
        boolean boolean32 = seconds25.isGreaterThan(seconds31);
        boolean boolean33 = seconds19.isGreaterThan(seconds25);
        org.joda.time.Seconds seconds35 = seconds25.minus(0);
        org.joda.time.DurationFieldType durationFieldType36 = seconds35.getFieldType();
        org.joda.time.PeriodType periodType37 = seconds35.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType38 = seconds35.getFieldType();
        boolean boolean39 = periodType18.isSupported(durationFieldType38);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Interval interval48 = duration44.toIntervalTo(readableInstant47);
        org.joda.time.Interval interval49 = interval48.toInterval();
        org.joda.time.Period period50 = interval49.toPeriod();
        java.lang.String str51 = interval49.toString();
        boolean boolean53 = interval49.equals((java.lang.Object) 1644572111064L);
        long long54 = interval49.toDurationMillis();
        org.joda.time.Chronology chronology55 = interval49.getChronology();
        boolean boolean56 = durationFieldType38.isSupported(chronology55);
        boolean boolean57 = durationFieldType5.isSupported(chronology55);
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2S" + "'", str12, "PT2S");
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(period50);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "2022-02-11T09:43:36.776Z/2022-02-11T09:43:36.776Z" + "'", str51, "2022-02-11T09:43:36.776Z/2022-02-11T09:43:36.776Z");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNotNull(chronology55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test13593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13593");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(10L);
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardSeconds((long) (byte) 0);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType7);
        mutablePeriod8.setYears(0);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology13 = null;
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration12, chronology13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.DateTime dateTime25 = interval24.getEnd();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime25);
        java.lang.String str39 = dateTime25.toString();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType44);
        mutablePeriod45.setYears(0);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology50 = null;
        mutablePeriod45.setPeriod((org.joda.time.ReadableDuration) duration49, chronology50);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant54 = null;
        java.lang.Object obj55 = null;
        org.joda.time.Duration duration56 = new org.joda.time.Duration(obj55);
        org.joda.time.Period period57 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        boolean boolean58 = duration53.isShorterThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Interval interval60 = duration56.toIntervalTo(readableInstant59);
        org.joda.time.Interval interval61 = interval60.toInterval();
        org.joda.time.DateTime dateTime62 = interval61.getEnd();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant65 = null;
        java.lang.Object obj66 = null;
        org.joda.time.Duration duration67 = new org.joda.time.Duration(obj66);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant65, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = duration64.isShorterThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Interval interval71 = duration67.toIntervalTo(readableInstant70);
        org.joda.time.Interval interval72 = interval71.toInterval();
        org.joda.time.DateTime dateTime73 = interval72.getEnd();
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime62, (org.joda.time.ReadableInstant) dateTime73);
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, (org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period77 = duration41.toPeriodTo((org.joda.time.ReadableInstant) dateTime62, periodType76);
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.PeriodType periodType79 = org.joda.time.PeriodType.dayTime();
        org.joda.time.PeriodType periodType80 = periodType79.withMonthsRemoved();
        org.joda.time.PeriodType periodType81 = periodType79.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, (org.joda.time.ReadableInstant) dateTime62, periodType81);
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(readableDuration2, (org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.Interval interval84 = duration1.toIntervalTo((org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.Period period85 = new org.joda.time.Period((java.lang.Object) interval84);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "2022-02-11T09:43:36.803Z" + "'", str39, "2022-02-11T09:43:36.803Z");
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(dateTime62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(dateTime73);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(interval84);
    }

    @Test
    public void test13594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13594");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType4);
        mutablePeriod5.setYears(0);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration9, chronology10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.DateTime dateTime22 = interval21.getEnd();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, (org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period37 = duration1.toPeriodTo((org.joda.time.ReadableInstant) dateTime22, periodType36);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant40 = null;
        java.lang.Object obj41 = null;
        org.joda.time.Duration duration42 = new org.joda.time.Duration(obj41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean44 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Interval interval46 = duration42.toIntervalTo(readableInstant45);
        org.joda.time.Interval interval47 = interval46.toInterval();
        org.joda.time.DateTime dateTime48 = interval47.getEnd();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant51 = null;
        java.lang.Object obj52 = null;
        org.joda.time.Duration duration53 = new org.joda.time.Duration(obj52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        boolean boolean55 = duration50.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Interval interval57 = duration53.toIntervalTo(readableInstant56);
        org.joda.time.Interval interval58 = interval57.toInterval();
        org.joda.time.DateTime dateTime59 = interval58.getEnd();
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime48, (org.joda.time.ReadableInstant) dateTime59);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant63 = null;
        java.lang.Object obj64 = null;
        org.joda.time.Duration duration65 = new org.joda.time.Duration(obj64);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant63, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = duration62.isShorterThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Interval interval69 = duration65.toIntervalTo(readableInstant68);
        org.joda.time.Interval interval70 = interval69.toInterval();
        org.joda.time.DateTime dateTime71 = interval70.getEnd();
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant74 = null;
        java.lang.Object obj75 = null;
        org.joda.time.Duration duration76 = new org.joda.time.Duration(obj75);
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant74, (org.joda.time.ReadableDuration) duration76);
        boolean boolean78 = duration73.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Interval interval80 = duration76.toIntervalTo(readableInstant79);
        org.joda.time.Interval interval81 = interval80.toInterval();
        org.joda.time.DateTime dateTime82 = interval81.getEnd();
        org.joda.time.Period period83 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime71, (org.joda.time.ReadableInstant) dateTime82);
        org.joda.time.Minutes minutes84 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime59, (org.joda.time.ReadableInstant) dateTime82);
        org.joda.time.Duration duration85 = period37.toDurationFrom((org.joda.time.ReadableInstant) dateTime82);
        org.joda.time.Period period87 = period37.minusYears((int) 'a');
        org.joda.time.Period period88 = period87.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period90 = period87.withSeconds(17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(dateTime59);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(interval70);
        org.junit.Assert.assertNotNull(dateTime71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(interval81);
        org.junit.Assert.assertNotNull(dateTime82);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(period88);
    }

    @Test
    public void test13595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13595");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType1 = periodType0.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(periodType0);
        java.lang.String str3 = mutablePeriod2.toString();
        org.joda.time.PeriodType periodType4 = mutablePeriod2.getPeriodType();
        org.joda.time.DurationFieldType[] durationFieldTypeArray5 = mutablePeriod2.getFieldTypes();
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.forFields(durationFieldTypeArray5);
        org.joda.time.PeriodType periodType7 = periodType6.withYearsRemoved();
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0S" + "'", str3, "PT0S");
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(durationFieldTypeArray5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test13596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13596");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(1644572595400L, 1644572549277L);
    }

    @Test
    public void test13597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13597");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(1644572254270L);
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(seconds2);
    }

    @Test
    public void test13598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13598");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(0, 52114, 27409535, (int) (short) 1, 2719, 592, 4, (-58));
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardSeconds((long) (-9700));
        long long11 = duration10.getStandardSeconds();
        long long12 = duration10.getStandardHours();
        mutablePeriod8.add((org.joda.time.ReadableDuration) duration10);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-9700L) + "'", long11 == (-9700L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-2L) + "'", long12 == (-2L));
    }

    @Test
    public void test13599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13599");
        org.joda.time.Period period4 = new org.joda.time.Period((-869), 0, 703, (-9700));
        org.joda.time.Period period5 = period4.toPeriod();
        org.joda.time.Period period6 = period4.toPeriod();
        org.joda.time.Period period8 = period4.minusMinutes(37);
        org.joda.time.MutablePeriod mutablePeriod9 = period8.toMutablePeriod();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test13600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13600");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Duration duration5 = duration2.minus((long) '4');
        org.joda.time.Minutes minutes6 = duration2.toStandardMinutes();
        org.joda.time.Period period7 = duration2.toPeriod();
        org.joda.time.Period period9 = period7.minusHours(703);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        mutablePeriod13.setPeriod((long) 100, 100L);
        mutablePeriod13.setPeriod((long) (-97));
        org.joda.time.DurationFieldType[] durationFieldTypeArray21 = mutablePeriod13.getFieldTypes();
        mutablePeriod13.addMonths(97);
        mutablePeriod13.setWeeks((int) ' ');
        org.joda.time.Period period26 = period7.plus((org.joda.time.ReadablePeriod) mutablePeriod13);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldTypeArray21);
        org.junit.Assert.assertNotNull(period26);
    }

    @Test
    public void test13601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13601");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Seconds seconds5 = duration2.toStandardSeconds();
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType9 = periodType8.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((long) (-840), (-86400L), periodType9);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.months();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((java.lang.Object) duration13, periodType19, chronology20);
        org.joda.time.Duration duration23 = org.joda.time.Duration.millis((long) '4');
        long long24 = duration23.getStandardDays();
        boolean boolean25 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration23);
        long long26 = duration13.getMillis();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        org.joda.time.Interval interval36 = interval35.toInterval();
        org.joda.time.Chronology chronology37 = interval36.getChronology();
        org.joda.time.Period period38 = duration13.toPeriod(chronology37);
        org.joda.time.DurationField durationField39 = durationFieldType11.getField(chronology37);
        org.joda.time.Period period40 = new org.joda.time.Period((java.lang.Object) seconds5, periodType9, chronology37);
        org.joda.time.Seconds seconds41 = seconds5.negated();
        java.lang.String str42 = seconds5.toString();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 36000000L + "'", long26 == 36000000L);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(chronology37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(durationField39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT0S" + "'", str42, "PT0S");
    }

    @Test
    public void test13602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13602");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        int int3 = weeks1.getWeeks();
        org.joda.time.Weeks weeks5 = weeks1.minus(3);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.MAX_VALUE;
        boolean boolean7 = weeks1.isLessThan(weeks6);
        org.joda.time.Weeks weeks8 = weeks1.negated();
        org.joda.time.Period period9 = weeks1.toPeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test13603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13603");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean3 = weeks0.isGreaterThan(weeks2);
        org.joda.time.DurationFieldType durationFieldType4 = weeks2.getFieldType();
        int int5 = weeks2.getWeeks();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Period period9 = weeks8.toPeriod();
        boolean boolean10 = weeks2.isGreaterThan(weeks8);
        int int11 = weeks2.getWeeks();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.DateTime dateTime22 = interval21.getEnd();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        boolean boolean42 = interval32.isAfter((org.joda.time.ReadableInterval) interval41);
        boolean boolean43 = interval21.contains((org.joda.time.ReadableInterval) interval32);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval21);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval21);
        int int46 = weeks45.getWeeks();
        org.joda.time.Weeks weeks47 = weeks2.minus(weeks45);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant53 = null;
        java.lang.Object obj54 = null;
        org.joda.time.Duration duration55 = new org.joda.time.Duration(obj54);
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant53, (org.joda.time.ReadableDuration) duration55);
        boolean boolean57 = duration52.isShorterThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Interval interval59 = duration55.toIntervalTo(readableInstant58);
        org.joda.time.Interval interval60 = interval59.toInterval();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant63 = null;
        java.lang.Object obj64 = null;
        org.joda.time.Duration duration65 = new org.joda.time.Duration(obj64);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant63, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = duration62.isShorterThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Interval interval69 = duration65.toIntervalTo(readableInstant68);
        boolean boolean70 = interval60.isAfter((org.joda.time.ReadableInterval) interval69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval69);
        org.joda.time.Weeks weeks72 = weeks49.plus(weeks71);
        org.joda.time.Period period73 = weeks71.toPeriod();
        int int74 = weeks47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks71);
        org.joda.time.Weeks weeks75 = weeks71.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(weeks75);
    }

    @Test
    public void test13604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13604");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.parse("2022-02-11T09:42:56.155Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:42:56.155Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13605");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        java.lang.String str37 = dateTime23.toString();
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Period period40 = period38.plusMinutes((-97));
        org.joda.time.Minutes minutes41 = period40.toStandardMinutes();
        org.joda.time.Period period43 = period40.withHours(142);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardSeconds(1644572096050L);
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(1644572081298L, (long) (byte) 1);
        boolean boolean49 = duration45.equals((java.lang.Object) mutablePeriod48);
        int int50 = mutablePeriod48.getYears();
        org.joda.time.Period period51 = period40.withFields((org.joda.time.ReadablePeriod) mutablePeriod48);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.weeks(0);
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.PeriodType periodType55 = weeks54.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period56 = period40.withPeriodType(periodType55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "2022-02-11T09:43:37.061Z" + "'", str37, "2022-02-11T09:43:37.061Z");
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-52) + "'", int50 == (-52));
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(periodType55);
    }

    @Test
    public void test13606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13606");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(0);
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.minusHours((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray5 = period1.getFieldTypes();
        org.joda.time.Duration duration6 = period1.toStandardDuration();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldTypeArray5);
        org.junit.Assert.assertNotNull(duration6);
    }

    @Test
    public void test13607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13607");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Period period23 = new org.joda.time.Period(0L, (long) 100);
        org.joda.time.Weeks weeks24 = period23.toStandardWeeks();
        boolean boolean25 = weeks20.isGreaterThan(weeks24);
        java.lang.String str26 = weeks20.toString();
        org.joda.time.Weeks weeks28 = weeks20.dividedBy((int) (byte) 1);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        int int30 = weeks29.size();
        org.joda.time.Duration duration31 = weeks29.toStandardDuration();
        java.lang.String str32 = weeks29.toString();
        org.joda.time.Weeks weeks34 = weeks29.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks36 = weeks34.multipliedBy(3);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks39 = weeks38.negated();
        int int40 = weeks38.getWeeks();
        org.joda.time.Weeks weeks41 = weeks34.minus(weeks38);
        java.lang.String str42 = weeks38.toString();
        boolean boolean43 = weeks28.isGreaterThan(weeks38);
        org.joda.time.DurationFieldType durationFieldType44 = weeks38.getFieldType();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P0W" + "'", str26, "P0W");
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P3W" + "'", str32, "P3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P-1W" + "'", str42, "P-1W");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(durationFieldType44);
    }

    @Test
    public void test13608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13608");
        java.lang.Object obj0 = null;
        org.joda.time.Days days1 = org.joda.time.Days.FOUR;
        org.joda.time.Period period2 = days1.toPeriod();
        org.joda.time.PeriodType periodType3 = period2.getPeriodType();
        org.joda.time.PeriodType periodType4 = periodType3.withMinutesRemoved();
        org.joda.time.Period period5 = new org.joda.time.Period(obj0, periodType4);
        org.joda.time.Period period7 = period5.plusYears(0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test13609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13609");
        org.joda.time.Period period1 = org.joda.time.Period.years((-1));
        org.joda.time.Period period3 = period1.withDays((-2147483648));
        org.joda.time.Period period5 = period1.minusSeconds(0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test13610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13610");
        org.joda.time.Period period1 = org.joda.time.Period.millis(36);
        int int2 = period1.getSeconds();
        org.joda.time.PeriodType periodType3 = period1.getPeriodType();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test13611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13611");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("2022-02-11T09:40:04.724Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:40:04.724Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13612");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Period period9 = period4.multipliedBy((int) (byte) 100);
        org.joda.time.Period period11 = period9.multipliedBy(0);
        org.joda.time.Period period13 = period9.withHours(0);
        org.joda.time.Period period15 = period9.minusMillis((-101));
        org.joda.time.Period period17 = period9.plusMinutes(52);
        org.joda.time.Period period19 = period17.withMonths(456);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test13613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13613");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        boolean boolean13 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Interval interval15 = duration11.toIntervalTo(readableInstant14);
        org.joda.time.Interval interval16 = interval15.toInterval();
        org.joda.time.DateTime dateTime17 = interval16.getEnd();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        org.joda.time.Interval interval27 = interval26.toInterval();
        org.joda.time.DateTime dateTime28 = interval27.getEnd();
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime17, (org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.minutesIn(readableInterval38);
        java.lang.String str40 = minutes39.toString();
        org.joda.time.PeriodType periodType41 = minutes39.getPeriodType();
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant37, periodType41);
        org.joda.time.PeriodType periodType43 = periodType41.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, (org.joda.time.ReadableInstant) dateTime28, periodType43);
        org.joda.time.PeriodType periodType45 = periodType43.withSecondsRemoved();
        org.joda.time.PeriodType periodType46 = periodType43.withMinutesRemoved();
        org.joda.time.PeriodType periodType47 = periodType46.withWeeksRemoved();
        org.joda.time.PeriodType periodType48 = periodType47.withSecondsRemoved();
        org.joda.time.PeriodType periodType49 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((java.lang.Object) periodType48, periodType49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(dateTime28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT0M" + "'", str40, "PT0M");
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType48);
    }

    @Test
    public void test13614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13614");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = org.joda.time.Period.days((int) (short) 1);
        org.joda.time.Period period7 = period6.toPeriod();
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType10);
        mutablePeriod11.setYears(0);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology16 = null;
        mutablePeriod11.setPeriod((org.joda.time.ReadableDuration) duration15, chronology16);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        org.joda.time.Interval interval27 = interval26.toInterval();
        org.joda.time.DateTime dateTime28 = interval27.getEnd();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.DateTime dateTime39 = interval38.getEnd();
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime28, (org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, (org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.Duration duration42 = period6.toDurationFrom((org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration47 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration50 = duration47.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration52 = duration44.withDurationAdded((org.joda.time.ReadableDuration) duration47, (int) (short) 1);
        org.joda.time.Duration duration55 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration58 = duration55.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration60 = duration44.withDurationAdded((org.joda.time.ReadableDuration) duration58, (int) (short) 100);
        org.joda.time.Duration duration62 = duration58.plus(1644572094383L);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.dayTime();
        org.joda.time.PeriodType periodType64 = periodType63.withMonthsRemoved();
        org.joda.time.PeriodType periodType65 = periodType63.withMillisRemoved();
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime28, (org.joda.time.ReadableDuration) duration62, periodType65);
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.Duration duration69 = duration62.withDurationAdded(readableDuration67, 6);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType71 = periodType70.withMillisRemoved();
        java.lang.String str72 = periodType71.getName();
        org.joda.time.PeriodType periodType73 = periodType71.withYearsRemoved();
        org.joda.time.Period period74 = duration62.toPeriod(periodType73);
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant77 = null;
        java.lang.Object obj78 = null;
        org.joda.time.Duration duration79 = new org.joda.time.Duration(obj78);
        org.joda.time.Period period80 = new org.joda.time.Period(readableInstant77, (org.joda.time.ReadableDuration) duration79);
        boolean boolean81 = duration76.isShorterThan((org.joda.time.ReadableDuration) duration79);
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod((java.lang.Object) duration76, periodType82, chronology83);
        org.joda.time.Duration duration86 = org.joda.time.Duration.millis((long) '4');
        long long87 = duration86.getStandardDays();
        boolean boolean88 = duration76.isLongerThan((org.joda.time.ReadableDuration) duration86);
        long long89 = duration76.getMillis();
        org.joda.time.Duration duration91 = duration76.plus(1644572107048L);
        org.joda.time.Duration duration92 = duration62.minus((org.joda.time.ReadableDuration) duration91);
        boolean boolean93 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration91);
        org.joda.time.Duration duration95 = duration91.minus(1644572533354L);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(dateTime28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "MillisNoMillis" + "'", str72, "MillisNoMillis");
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 0L + "'", long87 == 0L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 36000000L + "'", long89 == 36000000L);
        org.junit.Assert.assertNotNull(duration91);
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(duration95);
    }

    @Test
    public void test13615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13615");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Seconds seconds7 = duration5.toStandardSeconds();
        org.joda.time.Seconds seconds9 = seconds7.minus((-2147483646));
        org.joda.time.MutablePeriod mutablePeriod10 = seconds7.toMutablePeriod();
        org.joda.time.Seconds seconds12 = seconds7.dividedBy((-9700));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(seconds12);
    }

    @Test
    public void test13616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13616");
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType11 = periodType10.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(periodType10);
        org.joda.time.Period period13 = new org.joda.time.Period(1644572280262L, 1644572126513L, periodType10);
        org.joda.time.PeriodType periodType14 = periodType10.withHoursRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period15 = new org.joda.time.Period((-13), 34, 218, (-59), 298, (-400), 3, 0, periodType10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType14);
    }

    @Test
    public void test13617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13617");
        org.joda.time.Days days4 = org.joda.time.Days.FOUR;
        org.joda.time.Days days6 = days4.dividedBy((int) '#');
        org.joda.time.PeriodType periodType7 = days4.getPeriodType();
        org.joda.time.Period period8 = new org.joda.time.Period(0L, 1644572078660L, periodType7);
        org.joda.time.PeriodType periodType9 = periodType7.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1644572113592L, 0L, periodType7);
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(periodType7);
        mutablePeriod11.clear();
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType9);
    }

    @Test
    public void test13618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13618");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks5 = weeks2.plus((int) ' ');
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks11 = weeks8.plus((int) ' ');
        boolean boolean12 = weeks2.isGreaterThan(weeks8);
        org.joda.time.MutablePeriod mutablePeriod13 = weeks2.toMutablePeriod();
        mutablePeriod13.add(1644572551905L);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(mutablePeriod13);
    }

    @Test
    public void test13619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13619");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Chronology chronology10 = interval9.getChronology();
        org.joda.time.Days days11 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Days days12 = days11.negated();
        org.joda.time.Days days14 = days12.plus((-52));
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.Chronology chronology25 = interval24.getChronology();
        org.joda.time.Days days26 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval24);
        org.joda.time.Days days27 = days26.negated();
        org.joda.time.Duration duration28 = days27.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType29 = days27.getFieldType();
        org.joda.time.Days days30 = days12.minus(days27);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(chronology10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(chronology25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(days30);
    }

    @Test
    public void test13620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13620");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((-101));
        org.joda.time.Period period3 = period1.withMinutes((-4));
        org.joda.time.Period period5 = period1.withMillis(4);
        int int6 = period1.getSeconds();
        org.joda.time.Period period8 = period1.minusYears(213044);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test13621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13621");
        org.joda.time.Period period1 = new org.joda.time.Period((-1L));
        org.joda.time.Seconds seconds2 = period1.toStandardSeconds();
        int int3 = seconds2.getSeconds();
        org.joda.time.PeriodType periodType4 = seconds2.getPeriodType();
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test13622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13622");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) 'a');
        org.joda.time.Period period3 = period1.minusMillis((int) (byte) 100);
        org.joda.time.Period period5 = period3.minusYears((-4));
        org.joda.time.Period period7 = period5.plusMillis((int) 'a');
        org.joda.time.Period period9 = period5.minusMinutes((int) '#');
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test13623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13623");
        org.joda.time.Period period1 = new org.joda.time.Period(27409534794L);
        org.joda.time.Minutes minutes2 = period1.toStandardMinutes();
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test13624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13624");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        boolean boolean30 = interval20.isAfter((org.joda.time.ReadableInterval) interval29);
        boolean boolean31 = interval9.contains((org.joda.time.ReadableInterval) interval20);
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType34);
        mutablePeriod35.setYears(0);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology40 = null;
        mutablePeriod35.setPeriod((org.joda.time.ReadableDuration) duration39, chronology40);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        org.joda.time.Interval interval51 = interval50.toInterval();
        org.joda.time.DateTime dateTime52 = interval51.getEnd();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        org.joda.time.Interval interval62 = interval61.toInterval();
        org.joda.time.DateTime dateTime63 = interval62.getEnd();
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime52, (org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, (org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant68 = null;
        java.lang.Object obj69 = null;
        org.joda.time.Duration duration70 = new org.joda.time.Duration(obj69);
        org.joda.time.Period period71 = new org.joda.time.Period(readableInstant68, (org.joda.time.ReadableDuration) duration70);
        boolean boolean72 = duration67.isShorterThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Interval interval74 = duration70.toIntervalTo(readableInstant73);
        org.joda.time.Interval interval75 = interval74.toInterval();
        org.joda.time.DateTime dateTime76 = interval75.getEnd();
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType79 = periodType78.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod(periodType79);
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(10L, periodType79);
        org.joda.time.Period period82 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime52, (org.joda.time.ReadableInstant) dateTime76, periodType79);
        boolean boolean83 = interval20.isAfter((org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.Chronology chronology84 = dateTime52.getChronology();
        long long85 = dateTime52.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(dateTime52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(dateTime63);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(interval74);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(dateTime76);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(chronology84);
// flaky:         org.junit.Assert.assertTrue("'" + long85 + "' != '" + 1644572617447L + "'", long85 == 1644572617447L);
    }

    @Test
    public void test13625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13625");
        org.joda.time.Period period1 = org.joda.time.Period.months(231);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13626");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours2 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours3 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours4 = hours2.minus(hours3);
        int int5 = hours2.getHours();
        org.joda.time.Hours hours6 = hours1.minus(hours2);
        org.joda.time.Hours hours8 = hours2.minus(456368756);
        org.joda.time.Duration duration9 = hours2.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2147483647 + "'", int5 == 2147483647);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(duration9);
    }

    @Test
    public void test13627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13627");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.Period period9 = period6.toPeriod();
        org.joda.time.Period period10 = period6.toPeriod();
        int int11 = period6.getMillis();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = duration14.toPeriodFrom(readableInstant15);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration14.toPeriod(chronology17);
        org.joda.time.Period period20 = period18.withYears((int) (byte) 10);
        org.joda.time.Period period22 = period18.minusMonths(100);
        org.joda.time.Period period24 = period18.plusYears(100);
        org.joda.time.Period period26 = period24.minusMinutes((int) (byte) 100);
        org.joda.time.Period period27 = period6.withFields((org.joda.time.ReadablePeriod) period24);
        org.joda.time.Period period29 = period24.plusWeeks((int) ' ');
        org.joda.time.Period period31 = period29.withSeconds((int) (byte) 10);
        org.joda.time.Period period33 = period29.minusSeconds((int) (short) -1);
        int int34 = period33.getYears();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration35 = period33.toStandardDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Duration as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-97) + "'", int11 == (-97));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
    }

    @Test
    public void test13628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13628");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((-101));
        org.joda.time.Period period3 = org.joda.time.Period.days((-97));
        org.joda.time.Period period4 = period1.minus((org.joda.time.ReadablePeriod) period3);
        org.joda.time.Period period6 = period3.multipliedBy(56);
        org.joda.time.Seconds seconds7 = period3.toStandardSeconds();
        org.joda.time.Period period9 = new org.joda.time.Period((-1L));
        org.joda.time.Seconds seconds10 = period9.toStandardSeconds();
        org.joda.time.Seconds seconds12 = seconds10.dividedBy(1);
        boolean boolean13 = seconds7.isGreaterThan(seconds12);
        org.joda.time.Seconds seconds15 = seconds12.multipliedBy((-10886400));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(seconds15);
    }

    @Test
    public void test13629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13629");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        java.lang.String str7 = period6.toString();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        long long18 = interval17.getStartMillis();
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval17);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval17);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval17);
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy(2719);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        long long33 = interval32.getStartMillis();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval32);
        org.joda.time.DurationFieldType durationFieldType35 = org.joda.time.DurationFieldType.years();
        int int36 = minutes34.get(durationFieldType35);
        org.joda.time.Minutes minutes37 = minutes34.negated();
        org.joda.time.Minutes minutes39 = minutes34.multipliedBy((int) ' ');
        org.joda.time.Minutes minutes41 = minutes34.multipliedBy((int) ' ');
        org.joda.time.Minutes minutes43 = minutes34.plus(727);
        boolean boolean44 = minutes21.isGreaterThan(minutes43);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0.097S" + "'", str7, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572617553L + "'", long18 == 1644572617553L);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
// flaky:         org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1644572617553L + "'", long33 == 1644572617553L);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test13630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13630");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572129649L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        boolean boolean21 = interval11.isAfter((org.joda.time.ReadableInterval) interval20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval20);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        boolean boolean42 = interval32.isAfter((org.joda.time.ReadableInterval) interval41);
        org.joda.time.Period period43 = interval41.toPeriod();
        boolean boolean44 = interval20.isAfter((org.joda.time.ReadableInterval) interval41);
        org.joda.time.DateTime dateTime45 = interval20.getEnd();
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = null;
        boolean boolean47 = dateTime45.isSupported(dateTimeFieldType46);
        org.joda.time.DateTimeFieldType dateTimeFieldType48 = null;
        boolean boolean49 = dateTime45.isSupported(dateTimeFieldType48);
        org.joda.time.Period period50 = duration1.toPeriodFrom((org.joda.time.ReadableInstant) dateTime45);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period52 = period50.plusMonths(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 1 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(period50);
    }

    @Test
    public void test13631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13631");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Period period9 = period4.multipliedBy((int) (byte) 100);
        org.joda.time.Period period11 = period9.withHours((int) (short) 0);
        int int12 = period11.getYears();
        org.joda.time.Period period14 = period11.minusMinutes(5);
        org.joda.time.Period period16 = period11.minusMillis((-520));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test13632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13632");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        org.joda.time.Seconds seconds3 = seconds0.plus((-1));
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds4.multipliedBy((int) (byte) 1);
        int int7 = seconds6.size();
        org.joda.time.Period period9 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period11 = period9.minusMillis((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period11);
        boolean boolean13 = seconds6.isGreaterThan(seconds12);
        boolean boolean14 = seconds0.isGreaterThan(seconds6);
        org.joda.time.Seconds seconds16 = seconds0.multipliedBy(8);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        org.joda.time.Seconds seconds21 = seconds18.plus((-1));
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.TWO;
        java.lang.String str23 = seconds22.toString();
        org.joda.time.Seconds seconds24 = seconds21.plus(seconds22);
        org.joda.time.Seconds seconds25 = seconds17.minus(seconds22);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.Seconds seconds28 = seconds22.plus(seconds27);
        org.joda.time.Seconds seconds29 = seconds0.minus(seconds27);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.Seconds seconds32 = seconds29.multipliedBy((-9700));
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2S" + "'", str23, "PT2S");
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds32);
    }

    @Test
    public void test13633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13633");
        org.joda.time.Period period1 = new org.joda.time.Period(1L);
        org.joda.time.Period period3 = period1.minusMonths((-101));
        org.joda.time.Period period5 = period1.plusMillis(3);
        org.joda.time.Period period7 = period5.minusDays((int) ' ');
        org.joda.time.Hours hours8 = period7.toStandardHours();
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = duration12.toPeriodFrom(readableInstant13);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration12.toPeriod(chronology15);
        org.joda.time.Period period18 = period16.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Hours hours20 = org.joda.time.Hours.hoursIn(readableInterval19);
        org.joda.time.Period period21 = period18.minus((org.joda.time.ReadablePeriod) hours20);
        org.joda.time.Hours hours23 = hours20.minus((int) '4');
        org.joda.time.Hours hours25 = hours23.plus((int) (short) 10);
        org.joda.time.Duration duration28 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = duration28.toPeriodFrom(readableInstant29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration28.toPeriod(chronology31);
        org.joda.time.Period period34 = period32.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Hours hours36 = org.joda.time.Hours.hoursIn(readableInterval35);
        org.joda.time.Period period37 = period34.minus((org.joda.time.ReadablePeriod) hours36);
        org.joda.time.Hours hours38 = hours36.negated();
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = duration41.toPeriodFrom(readableInstant42);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration41.toPeriod(chronology44);
        org.joda.time.Period period47 = period45.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Hours hours49 = org.joda.time.Hours.hoursIn(readableInterval48);
        org.joda.time.Period period50 = period47.minus((org.joda.time.ReadablePeriod) hours49);
        org.joda.time.Hours hours51 = hours49.negated();
        org.joda.time.Hours hours52 = hours36.minus(hours49);
        org.joda.time.Hours hours53 = hours25.minus(hours49);
        org.joda.time.DurationFieldType durationFieldType54 = hours49.getFieldType();
        org.joda.time.Hours hours56 = hours49.plus(2147483647);
        boolean boolean57 = hours8.isGreaterThan(hours49);
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Hours hours59 = org.joda.time.Hours.hoursIn(readableInterval58);
        org.joda.time.Hours hours61 = hours59.minus((int) (byte) 100);
        org.joda.time.Duration duration64 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = duration64.toPeriodFrom(readableInstant65);
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration64.toPeriod(chronology67);
        org.joda.time.Period period70 = period68.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval71 = null;
        org.joda.time.Hours hours72 = org.joda.time.Hours.hoursIn(readableInterval71);
        org.joda.time.Period period73 = period70.minus((org.joda.time.ReadablePeriod) hours72);
        org.joda.time.Hours hours75 = hours72.minus((int) '4');
        org.joda.time.Hours hours77 = hours75.plus((int) '#');
        org.joda.time.Hours hours78 = hours61.minus(hours75);
        org.joda.time.Hours hours79 = hours75.negated();
        org.joda.time.PeriodType periodType80 = hours79.getPeriodType();
        org.joda.time.Hours hours82 = hours79.minus((-53));
        boolean boolean83 = hours49.isLessThan(hours79);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test13634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13634");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        mutablePeriod9.setPeriod((org.joda.time.ReadableInterval) interval22);
        mutablePeriod9.add((long) (byte) 0);
        mutablePeriod9.addDays((int) (byte) -1);
        mutablePeriod9.setDays((int) (short) 100);
        java.lang.String str30 = mutablePeriod9.toString();
        mutablePeriod9.setMinutes((-2));
        org.joda.time.MutablePeriod mutablePeriod33 = mutablePeriod9.copy();
        mutablePeriod33.addYears(9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "P100D" + "'", str30, "P100D");
        org.junit.Assert.assertNotNull(mutablePeriod33);
    }

    @Test
    public void test13635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13635");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(1644572454553L);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
    }

    @Test
    public void test13636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13636");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Chronology chronology10 = interval9.getChronology();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval9);
        java.lang.String str12 = interval9.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(chronology10);
        org.junit.Assert.assertNotNull(seconds11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "2022-02-11T09:43:37.766Z/2022-02-11T09:43:37.766Z" + "'", str12, "2022-02-11T09:43:37.766Z/2022-02-11T09:43:37.766Z");
    }

    @Test
    public void test13637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13637");
        org.joda.time.Period period1 = new org.joda.time.Period(1644572102137L);
        org.joda.time.Period period3 = period1.withDays(100);
        org.joda.time.Duration duration5 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration7 = duration5.plus(1644572076849L);
        org.joda.time.Days days8 = duration5.toStandardDays();
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.eras();
        java.lang.String str10 = durationFieldType9.getName();
        boolean boolean11 = days8.isSupported(durationFieldType9);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration19 = duration16.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration21 = duration13.withDurationAdded((org.joda.time.ReadableDuration) duration16, (int) (short) 1);
        org.joda.time.Days days22 = duration21.toStandardDays();
        org.joda.time.Days days23 = days8.plus(days22);
        org.joda.time.Days days25 = days23.dividedBy((-9700));
        org.joda.time.Days days27 = days23.minus((int) ' ');
        org.joda.time.DurationFieldType durationFieldType28 = days23.getFieldType();
        int int29 = period3.get(durationFieldType28);
        org.joda.time.Period period31 = period3.withSeconds(52114);
        org.joda.time.Period period33 = period31.withSeconds(12);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "eras" + "'", str10, "eras");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
    }

    @Test
    public void test13638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13638");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (short) 1, (long) (byte) -1);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant7 = null;
        java.lang.Object obj8 = null;
        org.joda.time.Duration duration9 = new org.joda.time.Duration(obj8);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration9);
        boolean boolean11 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Interval interval13 = duration9.toIntervalTo(readableInstant12);
        org.joda.time.Interval interval14 = interval13.toInterval();
        org.joda.time.Chronology chronology15 = interval14.getChronology();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((-1L), chronology15);
        mutablePeriod2.add(1644572099705L, chronology15);
        mutablePeriod2.setPeriod(1644572165275L);
        mutablePeriod2.setMonths((-97));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(chronology15);
    }

    @Test
    public void test13639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13639");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        org.joda.time.Duration duration3 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = duration3.toPeriodFrom(readableInstant4);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration3.toPeriod(chronology6);
        org.joda.time.Period period9 = period7.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Hours hours11 = org.joda.time.Hours.hoursIn(readableInterval10);
        org.joda.time.Period period12 = period9.minus((org.joda.time.ReadablePeriod) hours11);
        org.joda.time.Hours hours14 = hours11.minus((int) '4');
        org.joda.time.Hours hours15 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours16 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours17 = hours15.minus(hours16);
        org.joda.time.Hours hours18 = hours11.minus(hours17);
        org.joda.time.Hours hours20 = hours11.plus(0);
        org.joda.time.Hours hours21 = hours0.plus(hours11);
        int int22 = hours21.getHours();
        org.joda.time.Hours hours24 = hours21.minus(298);
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod26 = mutablePeriod25.toMutablePeriod();
        mutablePeriod25.addHours((-715827882));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
    }

    @Test
    public void test13640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13640");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("2022-02-11T09:40:42.243Z/2022-02-11T09:40:42.243Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:40:42.243Z/2022-02...\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13641");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        mutablePeriod9.addMillis((-1));
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod9);
        int int13 = mutablePeriod5.getYears();
        mutablePeriod5.setSeconds(100);
        mutablePeriod5.add(1644572214457L);
        org.joda.time.ReadablePeriod readablePeriod18 = null;
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.standardMinutesIn(readablePeriod18);
        java.lang.String str20 = minutes19.toString();
        org.joda.time.Duration duration21 = minutes19.toStandardDuration();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration26 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration29 = duration26.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration31 = duration23.withDurationAdded((org.joda.time.ReadableDuration) duration26, (int) (short) 1);
        org.joda.time.Duration duration34 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration37 = duration34.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration39 = duration23.withDurationAdded((org.joda.time.ReadableDuration) duration37, (int) (short) 100);
        org.joda.time.Minutes minutes40 = duration37.toStandardMinutes();
        org.joda.time.Period period41 = duration37.toPeriod();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (byte) 100);
        int int44 = duration37.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration37.toDuration();
        org.joda.time.Duration duration48 = duration37.withDurationAdded(1644572271009L, 0);
        org.joda.time.Duration duration50 = duration21.withDurationAdded((org.joda.time.ReadableDuration) duration37, (-2147483646));
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType55);
        mutablePeriod56.setYears(0);
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology61 = null;
        mutablePeriod56.setPeriod((org.joda.time.ReadableDuration) duration60, chronology61);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant65 = null;
        java.lang.Object obj66 = null;
        org.joda.time.Duration duration67 = new org.joda.time.Duration(obj66);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant65, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = duration64.isShorterThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Interval interval71 = duration67.toIntervalTo(readableInstant70);
        org.joda.time.Interval interval72 = interval71.toInterval();
        org.joda.time.DateTime dateTime73 = interval72.getEnd();
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant76 = null;
        java.lang.Object obj77 = null;
        org.joda.time.Duration duration78 = new org.joda.time.Duration(obj77);
        org.joda.time.Period period79 = new org.joda.time.Period(readableInstant76, (org.joda.time.ReadableDuration) duration78);
        boolean boolean80 = duration75.isShorterThan((org.joda.time.ReadableDuration) duration78);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Interval interval82 = duration78.toIntervalTo(readableInstant81);
        org.joda.time.Interval interval83 = interval82.toInterval();
        org.joda.time.DateTime dateTime84 = interval83.getEnd();
        org.joda.time.Period period85 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime73, (org.joda.time.ReadableInstant) dateTime84);
        org.joda.time.Period period86 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration60, (org.joda.time.ReadableInstant) dateTime73);
        org.joda.time.PeriodType periodType87 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period88 = duration52.toPeriodTo((org.joda.time.ReadableInstant) dateTime73, periodType87);
        org.joda.time.DateTimeZone dateTimeZone89 = dateTime73.getZone();
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration50, (org.joda.time.ReadableInstant) dateTime73);
        org.joda.time.Duration duration91 = mutablePeriod5.toDurationTo((org.joda.time.ReadableInstant) dateTime73);
        java.lang.String str92 = dateTime73.toString();
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT0M" + "'", str20, "PT0M");
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(dateTime73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(interval82);
        org.junit.Assert.assertNotNull(interval83);
        org.junit.Assert.assertNotNull(dateTime84);
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(dateTimeZone89);
        org.junit.Assert.assertNotNull(duration91);
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "2022-02-11T09:43:37.864Z" + "'", str92, "2022-02-11T09:43:37.864Z");
    }

    @Test
    public void test13642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13642");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.dividedBy((int) ' ');
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(periodType7);
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(10L, periodType7);
        int int10 = mutablePeriod9.getMillis();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration18 = duration15.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration20 = duration12.withDurationAdded((org.joda.time.ReadableDuration) duration15, (int) (short) 1);
        org.joda.time.Duration duration23 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration26 = duration23.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration28 = duration12.withDurationAdded((org.joda.time.ReadableDuration) duration26, (int) (short) 100);
        mutablePeriod9.add((org.joda.time.ReadableDuration) duration28);
        mutablePeriod9.addDays(0);
        boolean boolean32 = hours1.equals((java.lang.Object) mutablePeriod9);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.Hours hours43 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval42);
        org.joda.time.Hours hours44 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval42);
        org.joda.time.DurationFieldType durationFieldType45 = hours44.getFieldType();
        org.joda.time.Hours hours47 = hours44.minus(1);
        org.joda.time.Duration duration50 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = duration50.toPeriodFrom(readableInstant51);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration50.toPeriod(chronology53);
        org.joda.time.Period period56 = period54.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval57 = null;
        org.joda.time.Hours hours58 = org.joda.time.Hours.hoursIn(readableInterval57);
        org.joda.time.Period period59 = period56.minus((org.joda.time.ReadablePeriod) hours58);
        org.joda.time.Hours hours60 = hours58.negated();
        org.joda.time.Hours hours61 = hours47.plus(hours60);
        org.joda.time.Hours hours62 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours63 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours64 = hours62.minus(hours63);
        org.joda.time.DurationFieldType durationFieldType65 = hours63.getFieldType();
        boolean boolean66 = hours61.isLessThan(hours63);
        org.joda.time.ReadableInterval readableInterval67 = null;
        org.joda.time.Hours hours68 = org.joda.time.Hours.hoursIn(readableInterval67);
        org.joda.time.Hours hours70 = hours68.minus((int) (byte) 100);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant73 = null;
        java.lang.Object obj74 = null;
        org.joda.time.Duration duration75 = new org.joda.time.Duration(obj74);
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant73, (org.joda.time.ReadableDuration) duration75);
        boolean boolean77 = duration72.isShorterThan((org.joda.time.ReadableDuration) duration75);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Interval interval79 = duration75.toIntervalTo(readableInstant78);
        org.joda.time.Interval interval80 = interval79.toInterval();
        org.joda.time.Hours hours81 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval80);
        org.joda.time.Hours hours83 = hours81.dividedBy(1);
        org.joda.time.Hours hours85 = hours81.minus((int) (short) 1);
        boolean boolean86 = hours68.isGreaterThan(hours85);
        org.joda.time.Hours hours88 = hours68.plus(32);
        org.joda.time.Hours hours89 = hours63.plus(hours68);
        org.joda.time.Hours hours90 = hours1.plus(hours68);
        org.joda.time.Period period91 = hours68.toPeriod();
        int int92 = hours68.getHours();
        java.lang.String str93 = hours68.toString();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(interval79);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "PT0H" + "'", str93, "PT0H");
    }

    @Test
    public void test13643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13643");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("2022-02-11T09:40:46.009Z/2022-02-11T09:40:46.009Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:40:46.009Z/2022-02...\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13644");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.plusYears((int) (byte) 10);
        org.joda.time.Period period8 = period6.withMillis((int) '#');
        org.joda.time.Period period10 = period8.minusHours((int) (byte) -1);
        org.joda.time.Period period12 = period8.withDays(34);
        int[] intArray13 = period12.getValues();
        org.joda.time.Period period15 = period12.minusMonths(134);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 0, 0, 34, 0, 10, 100, 35]");
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test13645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13645");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration7 = duration5.withMillis((long) (byte) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration13 = duration10.plus((long) 'a');
        org.joda.time.Duration duration15 = duration7.withDurationAdded((org.joda.time.ReadableDuration) duration13, (int) '4');
        org.joda.time.Duration duration17 = duration7.withMillis(1644572190952L);
        org.joda.time.Duration duration19 = duration7.minus(1644572192335L);
        org.joda.time.Duration duration21 = duration19.plus(1644572271009L);
        long long22 = duration21.getStandardSeconds();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 78L + "'", long22 == 78L);
    }

    @Test
    public void test13646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13646");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        org.joda.time.Days days4 = org.joda.time.Days.ONE;
        org.joda.time.Days days5 = days4.negated();
        boolean boolean6 = days3.isGreaterThan(days5);
        org.joda.time.Days days7 = days0.plus(days5);
        int int8 = days0.getDays();
        org.joda.time.Days days10 = days0.minus(2147483647);
        org.joda.time.Days days12 = days0.plus(35);
        org.joda.time.Days days14 = days12.plus(8);
        java.lang.String str15 = days14.toString();
        org.joda.time.Days days16 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days18 = days16.multipliedBy(8);
        org.joda.time.Days days19 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days18);
        int int20 = days19.size();
        boolean boolean21 = days14.isGreaterThan(days19);
        int int22 = days19.size();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P44D" + "'", str15, "P44D");
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test13647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13647");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean3 = weeks0.isGreaterThan(weeks2);
        org.joda.time.DurationFieldType durationFieldType4 = weeks2.getFieldType();
        int int5 = weeks2.getWeeks();
        org.joda.time.Weeks weeks7 = weeks2.plus((int) (byte) 10);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((-869));
        org.joda.time.DurationFieldType durationFieldType10 = weeks7.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(durationFieldType10);
    }

    @Test
    public void test13648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13648");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (byte) 0);
        org.joda.time.Duration duration2 = hours1.toStandardDuration();
        org.joda.time.PeriodType periodType3 = hours1.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType4 = hours1.getFieldType();
        org.joda.time.Duration duration5 = hours1.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(duration5);
    }

    @Test
    public void test13649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13649");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.plus((int) '4');
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean6 = weeks3.isGreaterThan(weeks5);
        org.joda.time.DurationFieldType durationFieldType7 = weeks5.getFieldType();
        boolean boolean8 = weeks0.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean12 = weeks9.isGreaterThan(weeks11);
        java.lang.String str13 = weeks9.toString();
        org.joda.time.Weeks weeks14 = weeks0.plus(weeks9);
        org.joda.time.PeriodType periodType15 = weeks14.getPeriodType();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks16.plus((-101));
        org.joda.time.Weeks weeks20 = weeks18.dividedBy((int) (byte) 10);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = weeks20.plus(weeks22);
        org.joda.time.Weeks weeks25 = weeks14.minus(weeks24);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-2147483648W" + "'", str13, "P-2147483648W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
    }

    @Test
    public void test13650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13650");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Chronology chronology10 = interval9.getChronology();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        boolean boolean41 = interval31.isAfter((org.joda.time.ReadableInterval) interval40);
        boolean boolean42 = interval20.contains((org.joda.time.ReadableInterval) interval31);
        org.joda.time.PeriodType periodType45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType45);
        mutablePeriod46.setYears(0);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology51 = null;
        mutablePeriod46.setPeriod((org.joda.time.ReadableDuration) duration50, chronology51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        org.joda.time.Interval interval62 = interval61.toInterval();
        org.joda.time.DateTime dateTime63 = interval62.getEnd();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant66 = null;
        java.lang.Object obj67 = null;
        org.joda.time.Duration duration68 = new org.joda.time.Duration(obj67);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant66, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = duration65.isShorterThan((org.joda.time.ReadableDuration) duration68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Interval interval72 = duration68.toIntervalTo(readableInstant71);
        org.joda.time.Interval interval73 = interval72.toInterval();
        org.joda.time.DateTime dateTime74 = interval73.getEnd();
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableInstant) dateTime74);
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, (org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant79 = null;
        java.lang.Object obj80 = null;
        org.joda.time.Duration duration81 = new org.joda.time.Duration(obj80);
        org.joda.time.Period period82 = new org.joda.time.Period(readableInstant79, (org.joda.time.ReadableDuration) duration81);
        boolean boolean83 = duration78.isShorterThan((org.joda.time.ReadableDuration) duration81);
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Interval interval85 = duration81.toIntervalTo(readableInstant84);
        org.joda.time.Interval interval86 = interval85.toInterval();
        org.joda.time.DateTime dateTime87 = interval86.getEnd();
        org.joda.time.PeriodType periodType89 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType90 = periodType89.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod(periodType90);
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod(10L, periodType90);
        org.joda.time.Period period93 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableInstant) dateTime87, periodType90);
        boolean boolean94 = interval31.isAfter((org.joda.time.ReadableInstant) dateTime63);
        boolean boolean95 = interval9.isBefore((org.joda.time.ReadableInterval) interval31);
        org.joda.time.Period period96 = interval31.toPeriod();
        org.joda.time.Minutes minutes97 = period96.toStandardMinutes();
        int int98 = minutes97.getMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(chronology10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(dateTime63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(interval85);
        org.junit.Assert.assertNotNull(interval86);
        org.junit.Assert.assertNotNull(dateTime87);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(periodType90);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(period96);
        org.junit.Assert.assertNotNull(minutes97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
    }

    @Test
    public void test13651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13651");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT0.101S");
        mutablePeriod1.setPeriod(1L, 1644572096265L);
        org.joda.time.Duration duration6 = org.joda.time.Duration.millis((-604800L));
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.seconds();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        org.joda.time.Chronology chronology24 = interval23.getChronology();
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((-1L), chronology24);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology24);
        org.joda.time.Period period27 = new org.joda.time.Period((long) (byte) 100, periodType10, chronology24);
        org.joda.time.Period period28 = new org.joda.time.Period(0L, 1644572113566L, chronology24);
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration6, chronology24);
        int int30 = mutablePeriod1.getWeeks();
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(chronology24);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test13652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13652");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Period period21 = new org.joda.time.Period((java.lang.Object) interval18);
        org.joda.time.Period period23 = period21.minusWeeks(0);
        int int24 = period21.getMonths();
        int int25 = period21.getMinutes();
        org.joda.time.Period period27 = period21.minusMinutes(0);
        org.joda.time.Period period29 = period21.withMonths(1015);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
    }

    @Test
    public void test13653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13653");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT2S");
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType4);
        mutablePeriod5.setYears(0);
        mutablePeriod5.setWeeks((int) (short) -1);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        mutablePeriod5.setPeriod((org.joda.time.ReadableInterval) interval18);
        mutablePeriod1.setPeriod((org.joda.time.ReadableInterval) interval18);
        org.joda.time.DateTime dateTime21 = interval18.getEnd();
        org.joda.time.Chronology chronology22 = dateTime21.getChronology();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours(1644572246653L);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks27 = weeks26.negated();
        int int28 = weeks26.getWeeks();
        org.joda.time.Duration duration29 = weeks26.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.millis((long) '4');
        long long38 = duration37.getStandardDays();
        boolean boolean39 = duration32.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType41 = periodType40.withHoursRemoved();
        org.joda.time.Period period42 = duration37.toPeriod(periodType40);
        org.joda.time.PeriodType periodType43 = periodType40.withMinutesRemoved();
        boolean boolean44 = duration29.equals((java.lang.Object) periodType40);
        org.joda.time.Duration duration45 = duration29.toDuration();
        org.joda.time.Duration duration46 = duration24.plus((org.joda.time.ReadableDuration) duration29);
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableDuration) duration29);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(chronology22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration46);
    }

    @Test
    public void test13654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13654");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(31, 456368756, 7, 55);
    }

    @Test
    public void test13655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13655");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572136663L, (long) 52);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        boolean boolean9 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Interval interval11 = duration7.toIntervalTo(readableInstant10);
        org.joda.time.Interval interval12 = interval11.toInterval();
        org.joda.time.DateTime dateTime13 = interval12.getEnd();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        org.joda.time.DateTime dateTime24 = interval23.getEnd();
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime13, (org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        boolean boolean27 = dateTime13.isEqual(readableInstant26);
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = null;
        boolean boolean29 = dateTime13.isSupported(dateTimeFieldType28);
        org.joda.time.Duration duration31 = new org.joda.time.Duration(1644572076849L);
        long long32 = duration31.getStandardSeconds();
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime13, (org.joda.time.ReadableDuration) duration31);
        org.joda.time.Chronology chronology34 = dateTime13.getChronology();
        org.joda.time.Duration duration35 = mutablePeriod2.toDurationTo((org.joda.time.ReadableInstant) dateTime13);
        mutablePeriod2.addYears(727);
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(600, (-9700), 36, (-2147483648), (-869), 90, 187, 601);
        org.joda.time.Duration duration49 = new org.joda.time.Duration(1644572160229L);
        org.joda.time.Period period60 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period62 = period60.plusDays(1);
        org.joda.time.ReadableInstant readableInstant63 = null;
        java.lang.Object obj64 = null;
        org.joda.time.Duration duration65 = new org.joda.time.Duration(obj64);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant63, (org.joda.time.ReadableDuration) duration65);
        org.joda.time.Days days67 = duration65.toStandardDays();
        org.joda.time.Days days68 = days67.negated();
        org.joda.time.Period period69 = period62.plus((org.joda.time.ReadablePeriod) days67);
        org.joda.time.Days days71 = days67.minus((int) (short) 1);
        org.joda.time.Days days75 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.PeriodType periodType76 = days75.getPeriodType();
        org.joda.time.Period period77 = new org.joda.time.Period((long) (-97), 1644572085189L, periodType76);
        org.joda.time.Period period78 = new org.joda.time.Period((java.lang.Object) days71, periodType76);
        org.joda.time.DurationFieldType durationFieldType80 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant83 = null;
        java.lang.Object obj84 = null;
        org.joda.time.Duration duration85 = new org.joda.time.Duration(obj84);
        org.joda.time.Period period86 = new org.joda.time.Period(readableInstant83, (org.joda.time.ReadableDuration) duration85);
        boolean boolean87 = duration82.isShorterThan((org.joda.time.ReadableDuration) duration85);
        org.joda.time.ReadableInstant readableInstant88 = null;
        org.joda.time.Interval interval89 = duration85.toIntervalTo(readableInstant88);
        org.joda.time.Interval interval90 = interval89.toInterval();
        org.joda.time.Chronology chronology91 = interval90.getChronology();
        org.joda.time.DurationField durationField92 = durationFieldType80.getField(chronology91);
        org.joda.time.Period period93 = new org.joda.time.Period(36000L, chronology91);
        org.joda.time.Period period94 = new org.joda.time.Period(1644572116727L, 1644572113566L, periodType76, chronology91);
        org.joda.time.Period period95 = new org.joda.time.Period(1644572132349L, 1644572143465L, chronology91);
        org.joda.time.Period period96 = new org.joda.time.Period((long) 601, 1644572108183L, chronology91);
        mutablePeriod47.setPeriod((org.joda.time.ReadableDuration) duration49, chronology91);
        mutablePeriod2.setPeriod(1644572284547L, chronology91);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(dateTime13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572076L + "'", long32 == 1644572076L);
        org.junit.Assert.assertNotNull(chronology34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(interval89);
        org.junit.Assert.assertNotNull(interval90);
        org.junit.Assert.assertNotNull(chronology91);
        org.junit.Assert.assertNotNull(durationField92);
    }

    @Test
    public void test13656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13656");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration7 = duration4.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration9 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration4, (int) (short) 1);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration15 = duration12.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration17 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration15, (int) (short) 100);
        org.joda.time.Minutes minutes18 = duration15.toStandardMinutes();
        org.joda.time.Period period19 = duration15.toPeriod();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (byte) 100);
        int int22 = duration15.compareTo((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration25, readableInstant27);
        long long29 = duration25.getMillis();
        long long30 = duration25.getStandardDays();
        java.lang.String str31 = duration25.toString();
        boolean boolean32 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Minutes minutes33 = duration25.toStandardMinutes();
        org.joda.time.Duration duration35 = duration25.plus(1644572525145L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT0S" + "'", str31, "PT0S");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(duration35);
    }

    @Test
    public void test13657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13657");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType2 = periodType1.withHoursRemoved();
        org.joda.time.PeriodType periodType3 = periodType2.withSecondsRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1644572098650L, periodType2, chronology4);
        org.joda.time.PeriodType periodType6 = mutablePeriod5.getPeriodType();
        org.joda.time.PeriodType periodType7 = mutablePeriod5.getPeriodType();
        org.joda.time.PeriodType periodType8 = periodType7.withMillisRemoved();
        org.joda.time.Period period10 = new org.joda.time.Period(1L);
        int int11 = period10.getWeeks();
        org.joda.time.Period period13 = period10.plusMonths((int) '#');
        org.joda.time.Period period15 = period10.withMillis(2147483647);
        int int16 = period10.getYears();
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = duration19.toPeriodFrom(readableInstant20);
        org.joda.time.Period period23 = period21.withMinutes(0);
        int int25 = period23.getValue((int) (short) 1);
        org.joda.time.Period period27 = period23.plusMillis(36);
        org.joda.time.Period period29 = period27.withMillis((int) 'a');
        org.joda.time.Days days30 = org.joda.time.Days.ONE;
        org.joda.time.Days days31 = days30.negated();
        org.joda.time.Days days33 = days31.multipliedBy((-1));
        org.joda.time.Days days34 = days31.negated();
        org.joda.time.DurationFieldType durationFieldType35 = days34.getFieldType();
        org.joda.time.Period period37 = period27.withField(durationFieldType35, 4);
        boolean boolean38 = period10.isSupported(durationFieldType35);
        int int39 = periodType8.indexOf(durationFieldType35);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    }

    @Test
    public void test13658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13658");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        org.joda.time.Days days4 = org.joda.time.Days.ONE;
        org.joda.time.Days days5 = days4.negated();
        boolean boolean6 = days3.isGreaterThan(days5);
        org.joda.time.Days days7 = days0.plus(days5);
        java.lang.String str8 = days5.toString();
        org.joda.time.DurationFieldType durationFieldType9 = days5.getFieldType();
        int int10 = days5.getDays();
        org.joda.time.Period period11 = days5.toPeriod();
        org.joda.time.Days days12 = org.joda.time.Days.ONE;
        org.joda.time.Days days13 = days12.negated();
        org.joda.time.Days days14 = org.joda.time.Days.ONE;
        org.joda.time.Days days15 = days14.negated();
        org.joda.time.Days days16 = org.joda.time.Days.ONE;
        org.joda.time.Days days17 = days16.negated();
        boolean boolean18 = days15.isGreaterThan(days17);
        org.joda.time.Days days19 = days12.plus(days17);
        int int20 = days12.getDays();
        int int21 = days12.getDays();
        org.joda.time.Days days23 = days12.plus(52);
        boolean boolean24 = days5.isGreaterThan(days23);
        org.joda.time.Days days25 = org.joda.time.Days.ONE;
        org.joda.time.Days days26 = days25.negated();
        org.joda.time.Days days27 = org.joda.time.Days.ONE;
        org.joda.time.Days days28 = days27.negated();
        org.joda.time.Days days29 = org.joda.time.Days.ONE;
        org.joda.time.Days days30 = days29.negated();
        boolean boolean31 = days28.isGreaterThan(days30);
        org.joda.time.Days days32 = days25.plus(days30);
        org.joda.time.Days days34 = days32.plus((-1));
        org.joda.time.Days days35 = days5.plus(days32);
        org.joda.time.Duration duration36 = days32.toStandardDuration();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-1D" + "'", str8, "P-1D");
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(duration36);
    }

    @Test
    public void test13659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13659");
        org.joda.time.Period period1 = org.joda.time.Period.millis(2147483647);
        org.joda.time.MutablePeriod mutablePeriod2 = period1.toMutablePeriod();
        org.joda.time.Period period3 = period1.toPeriod();
        org.joda.time.Period period5 = period1.minusWeeks((int) (short) 0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test13660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13660");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572192873L);
    }

    @Test
    public void test13661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13661");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(1644572111064L);
        mutablePeriod1.setPeriod(0L, (-10080L));
        org.joda.time.DurationFieldType durationFieldType10 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Chronology chronology21 = interval20.getChronology();
        org.joda.time.DurationField durationField22 = durationFieldType10.getField(chronology21);
        org.joda.time.Period period23 = new org.joda.time.Period(36000L, chronology21);
        org.joda.time.Period period24 = new org.joda.time.Period(1644572093963L, 0L, chronology21);
        org.joda.time.Period period26 = period24.plusHours((-101));
        org.joda.time.Period period29 = new org.joda.time.Period((long) (byte) 10, (long) (byte) 0);
        org.joda.time.Period period31 = period29.minusWeeks((int) ' ');
        org.joda.time.Period period32 = period24.minus((org.joda.time.ReadablePeriod) period29);
        org.joda.time.DurationFieldType[] durationFieldTypeArray33 = period29.getFieldTypes();
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.forFields(durationFieldTypeArray33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.forFields(durationFieldTypeArray33);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1644572403712L, 19034399L, periodType35);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((java.lang.Object) (-10080L), periodType35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(chronology21);
        org.junit.Assert.assertNotNull(durationField22);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(durationFieldTypeArray33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType35);
    }

    @Test
    public void test13662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13662");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration3 = duration1.plus(1644572076849L);
        org.joda.time.Days days4 = duration1.toStandardDays();
        org.joda.time.Period period5 = days4.toPeriod();
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType14);
        mutablePeriod15.addMillis((-1));
        mutablePeriod11.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod15);
        mutablePeriod11.setDays((int) ' ');
        org.joda.time.Duration duration22 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration24 = duration22.plus(1644572076849L);
        org.joda.time.Days days25 = duration22.toStandardDays();
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.eras();
        java.lang.String str27 = durationFieldType26.getName();
        boolean boolean28 = days25.isSupported(durationFieldType26);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration33 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration36 = duration33.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration38 = duration30.withDurationAdded((org.joda.time.ReadableDuration) duration33, (int) (short) 1);
        org.joda.time.Days days39 = duration38.toStandardDays();
        org.joda.time.Days days40 = days25.plus(days39);
        org.joda.time.Days days42 = days40.dividedBy((-9700));
        org.joda.time.Days days44 = days40.minus((int) ' ');
        org.joda.time.Days days45 = org.joda.time.Days.ONE;
        org.joda.time.Days days46 = days45.negated();
        org.joda.time.Days days47 = org.joda.time.Days.ONE;
        org.joda.time.Days days48 = days47.negated();
        org.joda.time.Days days49 = org.joda.time.Days.ONE;
        org.joda.time.Days days50 = days49.negated();
        boolean boolean51 = days48.isGreaterThan(days50);
        org.joda.time.Days days52 = days45.plus(days50);
        org.joda.time.Days days53 = null;
        boolean boolean54 = days45.isGreaterThan(days53);
        org.joda.time.Days days56 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.PeriodType periodType57 = days56.getPeriodType();
        boolean boolean58 = days45.isGreaterThan(days56);
        org.joda.time.Days days59 = days40.minus(days56);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) days40);
        org.joda.time.Days days61 = days4.plus(days40);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "eras" + "'", str27, "eras");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertNotNull(days61);
    }

    @Test
    public void test13663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13663");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Interval interval18 = interval17.toInterval();
        org.joda.time.Hours hours19 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Hours hours20 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval18);
        boolean boolean21 = interval8.overlaps((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.Hours hours32 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval31);
        boolean boolean33 = interval18.contains((org.joda.time.ReadableInterval) interval31);
        long long34 = interval31.getEndMillis();
        org.joda.time.MutableInterval mutableInterval35 = interval31.toMutableInterval();
        java.lang.String str36 = interval31.toString();
        org.joda.time.DateTime dateTime37 = interval31.getStart();
        org.joda.time.Hours hours38 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval31);
        org.joda.time.Period period39 = hours38.toPeriod();
        org.joda.time.PeriodType periodType40 = period39.getPeriodType();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1644572618450L + "'", long34 == 1644572618450L);
        org.junit.Assert.assertNotNull(mutableInterval35);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "2022-02-11T09:43:38.450Z/2022-02-11T09:43:38.450Z" + "'", str36, "2022-02-11T09:43:38.450Z/2022-02-11T09:43:38.450Z");
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType40);
    }

    @Test
    public void test13664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13664");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        int int9 = period8.getYears();
        int int10 = period8.getWeeks();
        org.joda.time.Period period11 = period8.normalizedStandard();
        org.joda.time.Period period13 = period11.minusSeconds(369700);
        org.joda.time.Period period15 = period11.plusMillis((int) (byte) -1);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test13665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13665");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        mutablePeriod9.addMillis((-1));
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod9);
        int int13 = mutablePeriod5.getYears();
        mutablePeriod5.setSeconds(100);
        org.joda.time.format.PeriodFormatter periodFormatter16 = null;
        java.lang.String str17 = mutablePeriod5.toString(periodFormatter16);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((java.lang.Object) duration22, periodType28, chronology29);
        java.lang.String str31 = duration22.toString();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks35.minus(weeks36);
        org.joda.time.Period period38 = new org.joda.time.Period((java.lang.Object) weeks37);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.years();
        org.joda.time.DurationFieldType durationFieldType46 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        org.joda.time.Interval interval56 = interval55.toInterval();
        org.joda.time.Chronology chronology57 = interval56.getChronology();
        org.joda.time.DurationField durationField58 = durationFieldType46.getField(chronology57);
        org.joda.time.Period period59 = new org.joda.time.Period(36000L, chronology57);
        org.joda.time.Period period60 = new org.joda.time.Period(1644572093963L, 0L, chronology57);
        org.joda.time.Period period61 = new org.joda.time.Period((-86400L), chronology57);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((long) 1, (long) 2147483647, periodType41, chronology57);
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod((java.lang.Object) weeks37, chronology57);
        mutablePeriod32.setPeriod(1644572156014L, (long) 246, chronology57);
        mutablePeriod5.setPeriod((long) (byte) 1, 1644572171117L, chronology57);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType67 = mutablePeriod5.getFieldType((-68));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT99.998S" + "'", str17, "PT99.998S");
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT36000S" + "'", str31, "PT36000S");
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(chronology57);
        org.junit.Assert.assertNotNull(durationField58);
    }

    @Test
    public void test13666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13666");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.Period period9 = period6.toPeriod();
        org.joda.time.Period period10 = period6.toPeriod();
        int int11 = period6.getMillis();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = duration14.toPeriodFrom(readableInstant15);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration14.toPeriod(chronology17);
        org.joda.time.Period period20 = period18.withYears((int) (byte) 10);
        org.joda.time.Period period22 = period18.minusMonths(100);
        org.joda.time.Period period24 = period18.plusYears(100);
        org.joda.time.Period period26 = period24.minusMinutes((int) (byte) 100);
        org.joda.time.Period period27 = period6.withFields((org.joda.time.ReadablePeriod) period24);
        org.joda.time.Period period29 = period27.withMinutes(32);
        int int30 = period27.getHours();
        org.joda.time.Period period32 = period27.minusSeconds(601);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-97) + "'", int11 == (-97));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(period32);
    }

    @Test
    public void test13667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13667");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Duration duration11 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean12 = duration4.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes13 = duration4.toStandardMinutes();
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = duration17.toPeriodFrom(readableInstant18);
        org.joda.time.Period period21 = period19.minusSeconds((int) '4');
        org.joda.time.Minutes minutes22 = period19.toStandardMinutes();
        boolean boolean23 = minutes13.isLessThan(minutes22);
        org.joda.time.Minutes minutes25 = minutes13.minus((int) (short) 0);
        org.joda.time.Minutes minutes27 = minutes13.plus(100);
        org.joda.time.Duration duration30 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = duration30.toPeriodFrom(readableInstant31);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration30.toPeriod(chronology33);
        org.joda.time.Period period36 = period34.minusYears((int) (byte) -1);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType39 = minutes38.getFieldType();
        org.joda.time.Period period40 = period34.minus((org.joda.time.ReadablePeriod) minutes38);
        org.joda.time.Minutes minutes41 = minutes27.plus(minutes38);
        org.joda.time.Minutes minutes43 = minutes27.dividedBy(8);
        org.joda.time.DurationFieldType durationFieldType44 = minutes43.getFieldType();
        org.joda.time.Minutes minutes45 = minutes43.negated();
        org.joda.time.Minutes minutes46 = minutes43.negated();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
    }

    @Test
    public void test13668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13668");
        org.joda.time.Period period1 = org.joda.time.Period.hours((-4));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13669");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        boolean boolean7 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Interval interval9 = duration5.toIntervalTo(readableInstant8);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean13 = duration5.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes14 = duration5.toStandardMinutes();
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        org.joda.time.Interval interval27 = interval26.toInterval();
        org.joda.time.Chronology chronology28 = interval27.getChronology();
        org.joda.time.DurationField durationField29 = durationFieldType17.getField(chronology28);
        org.joda.time.Period period30 = new org.joda.time.Period(36000L, chronology28);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((java.lang.Object) minutes15, chronology28);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(0L, chronology28);
        mutablePeriod32.addSeconds(369700);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(chronology28);
        org.junit.Assert.assertNotNull(durationField29);
    }

    @Test
    public void test13670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13670");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType5 = periodType4.withMillisRemoved();
        java.lang.String str6 = periodType5.getName();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) 100, 36000L, periodType5);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod();
        mutablePeriod8.setPeriod(100L, (long) (-1));
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        boolean boolean22 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Interval interval24 = duration20.toIntervalTo(readableInstant23);
        org.joda.time.Interval interval25 = interval24.toInterval();
        org.joda.time.Chronology chronology26 = interval25.getChronology();
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((-1L), chronology26);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology26);
        mutablePeriod8.setPeriod((long) 100, chronology26);
        org.joda.time.Period period30 = new org.joda.time.Period((long) 100, 1644572102665L, periodType5, chronology26);
        org.joda.time.Period period32 = period30.multipliedBy((int) (short) -1);
        int int33 = period32.size();
        org.joda.time.Period period34 = period32.normalizedStandard();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        boolean boolean54 = interval44.isAfter((org.joda.time.ReadableInterval) interval53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval53);
        org.joda.time.Period period58 = new org.joda.time.Period(0L, (long) 100);
        org.joda.time.Weeks weeks59 = period58.toStandardWeeks();
        boolean boolean60 = weeks55.isGreaterThan(weeks59);
        java.lang.String str61 = weeks55.toString();
        org.joda.time.Weeks weeks62 = weeks55.negated();
        org.joda.time.Period period63 = period34.plus((org.joda.time.ReadablePeriod) weeks55);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        int int65 = weeks64.size();
        org.joda.time.Duration duration66 = weeks64.toStandardDuration();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        int int68 = weeks67.size();
        org.joda.time.Duration duration69 = weeks67.toStandardDuration();
        java.lang.String str70 = weeks67.toString();
        org.joda.time.Weeks weeks72 = weeks67.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks74 = weeks72.multipliedBy(3);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.weeks((-1));
        boolean boolean77 = weeks72.isGreaterThan(weeks76);
        org.joda.time.Weeks weeks78 = weeks64.minus(weeks76);
        org.joda.time.Weeks weeks80 = weeks78.minus(2);
        org.joda.time.Weeks weeks81 = weeks55.plus(weeks80);
        org.joda.time.Weeks weeks83 = weeks80.multipliedBy(36000000);
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.weeks((int) (byte) 0);
        org.joda.time.Weeks weeks86 = weeks85.negated();
        org.joda.time.Weeks weeks87 = weeks83.plus(weeks85);
        org.joda.time.Weeks weeks88 = weeks85.negated();
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "MillisNoMillis" + "'", str6, "MillisNoMillis");
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(chronology26);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "P0W" + "'", str61, "P0W");
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "P3W" + "'", str70, "P3W");
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks88);
    }

    @Test
    public void test13671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13671");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        int int9 = period8.getYears();
        int int10 = period8.getWeeks();
        org.joda.time.Period period11 = period8.normalizedStandard();
        org.joda.time.Period period12 = period8.toPeriod();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test13672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13672");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.minusYears((int) (byte) -1);
        org.joda.time.Period period10 = period6.plusMinutes((-1));
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType13 = seconds12.getFieldType();
        org.joda.time.Seconds seconds15 = seconds12.plus((-1));
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.TWO;
        java.lang.String str17 = seconds16.toString();
        org.joda.time.Seconds seconds18 = seconds15.plus(seconds16);
        org.joda.time.Seconds seconds19 = seconds11.minus(seconds16);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        org.joda.time.Seconds seconds22 = seconds16.plus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds21);
        org.joda.time.Period period25 = new org.joda.time.Period((-1L));
        org.joda.time.Seconds seconds26 = period25.toStandardSeconds();
        org.joda.time.Seconds seconds27 = seconds26.negated();
        boolean boolean28 = seconds21.isLessThan(seconds27);
        org.joda.time.DurationFieldType durationFieldType29 = seconds21.getFieldType();
        org.joda.time.Period period31 = period10.withField(durationFieldType29, 8);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2S" + "'", str17, "PT2S");
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(period31);
    }

    @Test
    public void test13673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13673");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        long long3 = duration1.getStandardMinutes();
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.Duration duration5 = duration1.plus(readableDuration4);
        long long6 = duration1.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test13674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13674");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        mutablePeriod9.setPeriod((org.joda.time.ReadableInterval) interval22);
        mutablePeriod9.add((long) (byte) 0);
        mutablePeriod9.addDays((int) (byte) -1);
        java.lang.String str28 = mutablePeriod9.toString();
        int int29 = mutablePeriod9.getSeconds();
        org.joda.time.Period period31 = org.joda.time.Period.millis((int) (short) -1);
        org.joda.time.Period period32 = period31.toPeriod();
        org.joda.time.Period period34 = period31.plusMonths(8);
        mutablePeriod9.mergePeriod((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Period period37 = period31.plusSeconds(0);
        org.joda.time.Period period39 = period31.withWeeks((-41));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-1D" + "'", str28, "P-1D");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
    }

    @Test
    public void test13675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13675");
        org.joda.time.format.PeriodFormatter periodFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod2 = org.joda.time.MutablePeriod.parse("2022-02-11T09:35:32.003Z", periodFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13676");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 14);
        org.joda.time.Duration duration3 = duration1.plus((long) 139579);
        org.joda.time.Duration duration5 = org.joda.time.Duration.millis((long) '4');
        long long6 = duration5.getMillis();
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType9);
        mutablePeriod10.setYears(0);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology15 = null;
        mutablePeriod10.setPeriod((org.joda.time.ReadableDuration) duration14, chronology15);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.DateTime dateTime27 = interval26.getEnd();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.DateTime dateTime38 = interval37.getEnd();
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, (org.joda.time.ReadableInstant) dateTime27);
        java.lang.String str41 = dateTime27.toString();
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant45 = null;
        java.lang.Object obj46 = null;
        org.joda.time.Duration duration47 = new org.joda.time.Duration(obj46);
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration47);
        boolean boolean49 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Interval interval51 = duration47.toIntervalTo(readableInstant50);
        org.joda.time.Duration duration54 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean55 = duration47.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes56 = duration47.toStandardMinutes();
        org.joda.time.Duration duration57 = duration5.plus((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration59 = duration5.minus((long) 100);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration64 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration67 = duration64.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration69 = duration61.withDurationAdded((org.joda.time.ReadableDuration) duration64, (int) (short) 1);
        org.joda.time.Duration duration72 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration75 = duration72.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration77 = duration61.withDurationAdded((org.joda.time.ReadableDuration) duration75, (int) (short) 100);
        boolean boolean78 = duration59.isLongerThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration80 = duration61.plus((long) (byte) 0);
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration84 = duration82.minus(1644572107048L);
        boolean boolean85 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration84);
        org.joda.time.Duration duration88 = duration61.withDurationAdded(1644572527165L, (-520));
        org.joda.time.Duration duration90 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration61, 0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 52L + "'", long6 == 52L);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(dateTime38);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "2022-02-11T09:43:38.744Z" + "'", str41, "2022-02-11T09:43:38.744Z");
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(duration90);
    }

    @Test
    public void test13677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13677");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks5 = weeks2.plus((int) ' ');
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks11 = weeks8.plus((int) ' ');
        boolean boolean12 = weeks2.isGreaterThan(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.ONE;
        boolean boolean14 = weeks2.isLessThan(weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks15.plus((int) '4');
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean21 = weeks18.isGreaterThan(weeks20);
        org.joda.time.DurationFieldType durationFieldType22 = weeks20.getFieldType();
        boolean boolean23 = weeks15.isGreaterThan(weeks20);
        org.joda.time.Weeks weeks24 = weeks15.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks25.plus((int) '4');
        org.joda.time.Weeks weeks29 = weeks27.multipliedBy((int) ' ');
        boolean boolean30 = weeks15.isGreaterThan(weeks29);
        org.joda.time.Weeks weeks32 = weeks15.plus((int) '4');
        org.joda.time.Weeks weeks33 = weeks13.minus(weeks15);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.weeks(36);
        org.joda.time.Weeks weeks37 = weeks35.plus(0);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.weeks(36);
        org.joda.time.Weeks weeks41 = weeks39.plus(0);
        org.joda.time.Weeks weeks42 = weeks35.minus(weeks39);
        boolean boolean43 = weeks15.isLessThan(weeks35);
        org.joda.time.Weeks weeks44 = weeks35.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks50 = weeks47.plus((int) ' ');
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.Weeks weeks56 = weeks53.plus((int) ' ');
        boolean boolean57 = weeks47.isGreaterThan(weeks53);
        org.joda.time.DurationFieldType durationFieldType58 = weeks47.getFieldType();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks59.plus((int) '4');
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks64 = weeks62.minus(weeks63);
        org.joda.time.Weeks weeks65 = weeks59.minus(weeks62);
        boolean boolean66 = weeks47.isGreaterThan(weeks59);
        org.joda.time.DurationFieldType durationFieldType67 = weeks59.getFieldType();
        org.joda.time.Weeks weeks69 = weeks59.multipliedBy(443);
        boolean boolean70 = weeks44.isGreaterThan(weeks59);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test13678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13678");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.plusYears((int) (byte) 10);
        org.joda.time.Period period8 = period6.minusWeeks(30);
        org.joda.time.Period period10 = period8.minusDays(916);
        int int11 = period10.getYears();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
    }

    @Test
    public void test13679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13679");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) ' ', chronology1);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.DateTime dateTime47 = interval46.getEnd();
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType50 = periodType49.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(periodType50);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(10L, periodType50);
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime47, periodType50);
        org.joda.time.Duration duration54 = mutablePeriod2.toDurationFrom((org.joda.time.ReadableInstant) dateTime23);
        mutablePeriod2.setPeriod(360000L);
        mutablePeriod2.setDays(9);
        org.joda.time.Hours hours60 = org.joda.time.Hours.hours((int) 'a');
        org.joda.time.Duration duration61 = hours60.toStandardDuration();
        org.joda.time.Hours hours63 = hours60.multipliedBy((-2));
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) hours60);
        org.joda.time.Hours hours66 = hours60.multipliedBy((-9700));
        org.joda.time.Hours hours68 = hours60.plus(32);
        org.joda.time.Hours hours70 = hours60.multipliedBy((-1));
        org.joda.time.Hours hours71 = org.joda.time.Hours.EIGHT;
        org.joda.time.Duration duration74 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Period period76 = duration74.toPeriodFrom(readableInstant75);
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.Period period78 = duration74.toPeriod(chronology77);
        org.joda.time.Period period80 = period78.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval81 = null;
        org.joda.time.Hours hours82 = org.joda.time.Hours.hoursIn(readableInterval81);
        org.joda.time.Period period83 = period80.minus((org.joda.time.ReadablePeriod) hours82);
        org.joda.time.Hours hours85 = hours82.minus((int) '4');
        org.joda.time.Hours hours86 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours87 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours88 = hours86.minus(hours87);
        org.joda.time.Hours hours89 = hours82.minus(hours88);
        org.joda.time.Hours hours91 = hours82.plus(0);
        org.joda.time.Hours hours92 = hours71.plus(hours82);
        org.joda.time.Hours hours93 = hours60.plus(hours92);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertNotNull(hours86);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertNotNull(hours91);
        org.junit.Assert.assertNotNull(hours92);
        org.junit.Assert.assertNotNull(hours93);
    }

    @Test
    public void test13680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13680");
        org.joda.time.Days days1 = org.joda.time.Days.days(42);
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test13681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13681");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType2 = periodType1.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(periodType1);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.weeks();
        java.lang.String str5 = durationFieldType4.toString();
        boolean boolean6 = periodType1.isSupported(durationFieldType4);
        org.joda.time.Period period7 = new org.joda.time.Period((long) 8, periodType1);
        org.joda.time.Period period16 = new org.joda.time.Period((-97), 0, 9, 3, (int) (short) 100, 0, 10, 32);
        org.joda.time.Period period18 = period16.plusDays((int) ' ');
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.Hours hours38 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval37);
        org.joda.time.Hours hours39 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval37);
        boolean boolean40 = interval27.overlaps((org.joda.time.ReadableInterval) interval37);
        org.joda.time.DateTime dateTime41 = interval27.getStart();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        org.joda.time.Interval interval51 = interval50.toInterval();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant54 = null;
        java.lang.Object obj55 = null;
        org.joda.time.Duration duration56 = new org.joda.time.Duration(obj55);
        org.joda.time.Period period57 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        boolean boolean58 = duration53.isShorterThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Interval interval60 = duration56.toIntervalTo(readableInstant59);
        boolean boolean61 = interval51.isAfter((org.joda.time.ReadableInterval) interval60);
        org.joda.time.DateTime dateTime62 = interval51.getStart();
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime41, (org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.Duration duration64 = period16.toDurationFrom((org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.Duration duration65 = period7.toDurationFrom((org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType68 = periodType67.withMillisRemoved();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((long) (short) 1, periodType68, chronology69);
        org.joda.time.Period period71 = duration65.toPeriod(periodType68);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period73 = period71.minusMinutes(36);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "weeks" + "'", str5, "weeks");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(dateTime62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(period71);
    }

    @Test
    public void test13682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13682");
        org.joda.time.Period period1 = org.joda.time.Period.years((-100));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13683");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Period period5 = period3.withSeconds((int) '4');
        org.joda.time.Period period7 = period3.plusWeeks(10);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType10 = periodType9.withMillisRemoved();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) (short) 1, periodType10, chronology11);
        org.joda.time.PeriodType periodType13 = periodType10.withYearsRemoved();
        org.joda.time.PeriodType periodType14 = periodType10.withMillisRemoved();
        org.joda.time.Period period15 = period7.normalizedStandard(periodType14);
        org.joda.time.Period period16 = period7.normalizedStandard();
        org.joda.time.Period period18 = period16.minusMillis((-2147483646));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test13684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13684");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("2022-02-11T09:38:46.646Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:38:46.646Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13685");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn(readableInterval9);
        org.joda.time.Period period11 = period8.minus((org.joda.time.ReadablePeriod) hours10);
        org.joda.time.Hours hours12 = hours10.negated();
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = duration15.toPeriodFrom(readableInstant16);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration15.toPeriod(chronology18);
        org.joda.time.Period period21 = period19.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Hours hours23 = org.joda.time.Hours.hoursIn(readableInterval22);
        org.joda.time.Period period24 = period21.minus((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours25 = hours23.negated();
        org.joda.time.Hours hours26 = hours10.minus(hours23);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        org.joda.time.Interval interval36 = interval35.toInterval();
        org.joda.time.Hours hours37 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval36);
        boolean boolean38 = hours23.isLessThan(hours37);
        org.joda.time.Hours hours40 = hours37.multipliedBy(0);
        java.lang.String str41 = hours37.toString();
        org.joda.time.Duration duration42 = hours37.toStandardDuration();
        org.joda.time.Duration duration44 = duration42.minus(1644572533714L);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT0H" + "'", str41, "PT0H");
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
    }

    @Test
    public void test13686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13686");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        boolean boolean29 = interval19.isAfter((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Period period30 = interval28.toPeriod();
        boolean boolean31 = interval9.isBefore((org.joda.time.ReadableInterval) interval28);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.Duration duration39 = org.joda.time.Duration.millis((long) '4');
        long long40 = duration39.getStandardDays();
        boolean boolean41 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant51 = null;
        java.lang.Object obj52 = null;
        org.joda.time.Duration duration53 = new org.joda.time.Duration(obj52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        boolean boolean55 = duration50.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Interval interval57 = duration53.toIntervalTo(readableInstant56);
        org.joda.time.Interval interval58 = interval57.toInterval();
        org.joda.time.DateTime dateTime59 = interval58.getEnd();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Interval interval68 = duration64.toIntervalTo(readableInstant67);
        org.joda.time.Interval interval69 = interval68.toInterval();
        org.joda.time.DateTime dateTime70 = interval69.getEnd();
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime59, (org.joda.time.ReadableInstant) dateTime70);
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant74 = null;
        java.lang.Object obj75 = null;
        org.joda.time.Duration duration76 = new org.joda.time.Duration(obj75);
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant74, (org.joda.time.ReadableDuration) duration76);
        boolean boolean78 = duration73.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.ReadableInterval readableInterval80 = null;
        org.joda.time.Minutes minutes81 = org.joda.time.Minutes.minutesIn(readableInterval80);
        java.lang.String str82 = minutes81.toString();
        org.joda.time.PeriodType periodType83 = minutes81.getPeriodType();
        org.joda.time.Period period84 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration76, readableInstant79, periodType83);
        org.joda.time.PeriodType periodType85 = periodType83.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration46, (org.joda.time.ReadableInstant) dateTime70, periodType85);
        org.joda.time.Interval interval87 = duration34.toIntervalFrom((org.joda.time.ReadableInstant) dateTime70);
        boolean boolean88 = interval28.overlaps((org.joda.time.ReadableInterval) interval87);
        org.joda.time.MutableInterval mutableInterval89 = interval87.toMutableInterval();
        org.joda.time.Period period90 = mutableInterval89.toPeriod();
        long long91 = mutableInterval89.toDurationMillis();
        java.lang.String str92 = mutableInterval89.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(dateTime59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(dateTime70);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "PT0M" + "'", str82, "PT0M");
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(interval87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(mutableInterval89);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "2022-02-11T09:43:39.159Z/2022-02-11T09:43:39.159Z" + "'", str92, "2022-02-11T09:43:39.159Z/2022-02-11T09:43:39.159Z");
    }

    @Test
    public void test13687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13687");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("2022-02-11T09:34:58.114Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:34:58.114Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13688");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(1644572096050L);
        org.joda.time.Duration duration3 = duration1.minus(1644572107117L);
        org.joda.time.Duration duration5 = org.joda.time.Duration.millis((long) '4');
        long long6 = duration5.getMillis();
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType9);
        mutablePeriod10.setYears(0);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology15 = null;
        mutablePeriod10.setPeriod((org.joda.time.ReadableDuration) duration14, chronology15);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.DateTime dateTime27 = interval26.getEnd();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.DateTime dateTime38 = interval37.getEnd();
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, (org.joda.time.ReadableInstant) dateTime27);
        java.lang.String str41 = dateTime27.toString();
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.Period period44 = period42.minusHours(10);
        org.joda.time.Minutes minutes45 = period44.toStandardMinutes();
        org.joda.time.Minutes minutes46 = minutes45.negated();
        org.joda.time.Minutes minutes48 = minutes45.plus(30);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.minutes((int) (byte) 10);
        boolean boolean51 = minutes48.isGreaterThan(minutes50);
        org.joda.time.Duration duration52 = minutes50.toStandardDuration();
        boolean boolean53 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration52);
        long long54 = duration52.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 52L + "'", long6 == 52L);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(dateTime38);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "2022-02-11T09:43:39.216Z" + "'", str41, "2022-02-11T09:43:39.216Z");
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 600000L + "'", long54 == 600000L);
    }

    @Test
    public void test13689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13689");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.plusDays(1);
        org.joda.time.ReadableInstant readableInstant7 = null;
        java.lang.Object obj8 = null;
        org.joda.time.Duration duration9 = new org.joda.time.Duration(obj8);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.Days days11 = duration9.toStandardDays();
        org.joda.time.Days days12 = days11.negated();
        org.joda.time.Period period13 = period6.plus((org.joda.time.ReadablePeriod) days11);
        org.joda.time.Days days15 = days11.minus((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod16 = days11.toMutablePeriod();
        org.joda.time.Duration duration17 = days11.toStandardDuration();
        org.joda.time.Days days18 = org.joda.time.Days.ONE;
        org.joda.time.Days days19 = days18.negated();
        org.joda.time.Days days21 = days19.multipliedBy((-1));
        org.joda.time.Days days22 = days19.negated();
        org.joda.time.Days days23 = days11.plus(days19);
        org.joda.time.Days days24 = org.joda.time.Days.SIX;
        org.joda.time.Days days26 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.Days days27 = days24.plus(days26);
        org.joda.time.Period period28 = days26.toPeriod();
        org.joda.time.DurationFieldType durationFieldType29 = days26.getFieldType();
        org.joda.time.Days days30 = days23.minus(days26);
        org.joda.time.Days days32 = days30.plus((int) (short) 100);
        org.joda.time.Days days34 = days30.dividedBy(33);
        org.joda.time.Days days35 = org.joda.time.Days.ONE;
        org.joda.time.Days days36 = days35.negated();
        org.joda.time.Days days37 = days30.plus(days36);
        org.joda.time.Days days39 = days36.multipliedBy(37);
        org.joda.time.Days days40 = org.joda.time.Days.FOUR;
        org.joda.time.Days days42 = days40.dividedBy((int) '#');
        org.joda.time.Days days43 = days39.plus(days42);
        org.joda.time.Days days45 = days39.multipliedBy(56);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
    }

    @Test
    public void test13690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13690");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration3 = duration1.plus(1644572076849L);
        org.joda.time.Days days4 = duration1.toStandardDays();
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.eras();
        java.lang.String str6 = durationFieldType5.getName();
        boolean boolean7 = days4.isSupported(durationFieldType5);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration15 = duration12.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration17 = duration9.withDurationAdded((org.joda.time.ReadableDuration) duration12, (int) (short) 1);
        org.joda.time.Days days18 = duration17.toStandardDays();
        org.joda.time.Days days19 = days4.plus(days18);
        java.lang.String str20 = days4.toString();
        org.joda.time.Days days22 = days4.plus(187);
        org.joda.time.Days days24 = days4.minus(54);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "eras" + "'", str6, "eras");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P0D" + "'", str20, "P0D");
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
    }

    @Test
    public void test13691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13691");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        boolean boolean29 = interval19.isAfter((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Interval interval30 = interval19.toInterval();
        boolean boolean31 = interval8.overlaps((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Interval interval32 = interval8.toInterval();
        org.joda.time.Period period33 = interval32.toPeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(period33);
    }

    @Test
    public void test13692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13692");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes(1644572076884L);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        boolean boolean10 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration11 = duration3.minus((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.Hours hours31 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval30);
        boolean boolean33 = interval20.overlaps((org.joda.time.ReadableInterval) interval30);
        org.joda.time.DateTime dateTime34 = interval20.getStart();
        org.joda.time.Period period35 = duration11.toPeriodFrom((org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration40.toIntervalTo(readableInstant43);
        org.joda.time.Interval interval45 = interval44.toInterval();
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType48);
        mutablePeriod49.setYears(0);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology54 = null;
        mutablePeriod49.setPeriod((org.joda.time.ReadableDuration) duration53, chronology54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        java.lang.Object obj57 = null;
        org.joda.time.Duration duration58 = new org.joda.time.Duration(obj57);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant56, (org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration61 = duration58.minus((long) '4');
        mutablePeriod49.add((org.joda.time.ReadableDuration) duration61);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType64 = periodType63.withHoursRemoved();
        org.joda.time.PeriodType periodType65 = periodType64.withSecondsRemoved();
        boolean boolean66 = mutablePeriod49.equals((java.lang.Object) periodType64);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant69 = null;
        java.lang.Object obj70 = null;
        org.joda.time.Duration duration71 = new org.joda.time.Duration(obj70);
        org.joda.time.Period period72 = new org.joda.time.Period(readableInstant69, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = duration68.isShorterThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Interval interval75 = duration71.toIntervalTo(readableInstant74);
        org.joda.time.Interval interval76 = interval75.toInterval();
        org.joda.time.Chronology chronology77 = interval76.getChronology();
        org.joda.time.Period period78 = new org.joda.time.Period((java.lang.Object) interval44, periodType64, chronology77);
        org.joda.time.Period period79 = duration11.toPeriod(chronology77);
        org.joda.time.Period period80 = new org.joda.time.Period(1644572494224L, 1644572488818L, chronology77);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(chronology77);
        org.junit.Assert.assertNotNull(period79);
    }

    @Test
    public void test13693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13693");
        org.joda.time.Period period2 = new org.joda.time.Period(1644572269457L, 1644572186536L);
        org.joda.time.Period period4 = period2.minusMonths(0);
        int int5 = period2.getMinutes();
        int int6 = period2.getSeconds();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-22) + "'", int6 == (-22));
    }

    @Test
    public void test13694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13694");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Period period21 = interval18.toPeriod();
        int int22 = period21.getSeconds();
        org.joda.time.Period period24 = period21.minusDays(0);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) (short) 100, chronology26);
        org.joda.time.DurationFieldType durationFieldType28 = org.joda.time.DurationFieldType.eras();
        boolean boolean29 = period27.isSupported(durationFieldType28);
        org.joda.time.Period period31 = period27.minusMonths((-52));
        org.joda.time.PeriodType periodType32 = period31.getPeriodType();
        org.joda.time.PeriodType periodType33 = periodType32.withSecondsRemoved();
        org.joda.time.Period period34 = period24.normalizedStandard(periodType32);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period34);
    }

    @Test
    public void test13695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13695");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.withMinutes(0);
        org.joda.time.Period period8 = period6.minusYears((int) (short) 100);
        org.joda.time.Period period10 = period8.withMillis(100);
        org.joda.time.Period period12 = period8.plusMonths((-68));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test13696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13696");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        int int3 = weeks1.getWeeks();
        org.joda.time.Weeks weeks5 = weeks1.minus(3);
        org.joda.time.Weeks weeks7 = weeks5.minus(0);
        org.joda.time.PeriodType periodType8 = weeks5.getPeriodType();
        org.joda.time.Weeks weeks10 = weeks5.plus(876);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardSeconds(1644572106070L);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType15);
        mutablePeriod16.setYears(0);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology21 = null;
        mutablePeriod16.setPeriod((org.joda.time.ReadableDuration) duration20, chronology21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, (org.joda.time.ReadableInstant) dateTime33);
        java.lang.String str47 = dateTime33.toString();
        org.joda.time.Duration duration49 = new org.joda.time.Duration((-86400L));
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration49);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType52 = periodType51.withHoursRemoved();
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime33, periodType52);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.weeks((-2));
        org.joda.time.DurationFieldType durationFieldType56 = weeks55.getFieldType();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Interval interval68 = duration64.toIntervalTo(readableInstant67);
        org.joda.time.Interval interval69 = interval68.toInterval();
        org.joda.time.Chronology chronology70 = interval69.getChronology();
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((-1L), chronology70);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology70);
        org.joda.time.DurationField durationField73 = durationFieldType56.getField(chronology70);
        boolean boolean74 = periodType52.isSupported(durationFieldType56);
        boolean boolean75 = weeks10.isSupported(durationFieldType56);
        org.joda.time.Chronology chronology76 = null;
        boolean boolean77 = durationFieldType56.isSupported(chronology76);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "2022-02-11T09:43:39.465Z" + "'", str47, "2022-02-11T09:43:39.465Z");
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(durationField73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test13697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13697");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.plus((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = seconds4.plus(seconds5);
        org.joda.time.Seconds seconds8 = seconds0.minus(seconds5);
        org.joda.time.Seconds seconds10 = seconds5.dividedBy((-4));
        org.joda.time.Seconds seconds11 = seconds5.negated();
        org.joda.time.Seconds seconds12 = seconds11.negated();
        org.joda.time.DurationFieldType durationFieldType13 = seconds12.getFieldType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2S" + "'", str6, "PT2S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
    }

    @Test
    public void test13698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13698");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        long long9 = interval8.getStartMillis();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval8);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.Minutes minutes13 = minutes10.negated();
        org.joda.time.Duration duration14 = minutes10.toStandardDuration();
        java.lang.String str15 = minutes10.toString();
        org.joda.time.MutablePeriod mutablePeriod16 = minutes10.toMutablePeriod();
        org.joda.time.Duration duration17 = minutes10.toStandardDuration();
        boolean boolean19 = duration17.equals((java.lang.Object) 1644572183459L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1644572619535L + "'", long9 == 1644572619535L);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT0M" + "'", str15, "PT0M");
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test13699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13699");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-1), (-97), (int) (short) -1, (-101), (int) (byte) 100, 9, (-101), (int) (byte) 100);
        org.joda.time.format.PeriodFormatter periodFormatter9 = null;
        java.lang.String str10 = mutablePeriod8.toString(periodFormatter9);
        int int11 = mutablePeriod8.getYears();
        int int12 = mutablePeriod8.getSeconds();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType14 = mutablePeriod8.getFieldType((-840));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -840");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "P-1Y-97M-1W-101DT100H9M-100.900S" + "'", str10, "P-1Y-97M-1W-101DT100H9M-100.900S");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-101) + "'", int12 == (-101));
    }

    @Test
    public void test13700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13700");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        org.joda.time.Seconds seconds3 = seconds0.plus((-1));
        org.joda.time.Duration duration4 = seconds0.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(duration4);
    }

    @Test
    public void test13701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13701");
        java.lang.Object obj0 = null;
        org.joda.time.Duration duration1 = new org.joda.time.Duration(obj0);
        org.joda.time.Duration duration4 = duration1.withDurationAdded(1644572078660L, 0);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration9 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration12 = duration9.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration14 = duration6.withDurationAdded((org.joda.time.ReadableDuration) duration9, (int) (short) 1);
        org.joda.time.ReadableDuration readableDuration15 = null;
        boolean boolean16 = duration6.isLongerThan(readableDuration15);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.DateTime dateTime27 = interval26.getEnd();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.DateTime dateTime38 = interval37.getEnd();
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableDuration15, (org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType43 = seconds42.getFieldType();
        org.joda.time.Seconds seconds45 = seconds42.plus((-1));
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.TWO;
        java.lang.String str47 = seconds46.toString();
        org.joda.time.Seconds seconds48 = seconds45.plus(seconds46);
        org.joda.time.Seconds seconds49 = seconds41.minus(seconds46);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.secondsIn(readableInterval50);
        org.joda.time.Seconds seconds52 = seconds46.plus(seconds51);
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds51);
        int int54 = seconds51.getSeconds();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType57 = seconds56.getFieldType();
        org.joda.time.Seconds seconds59 = seconds56.plus((-1));
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.TWO;
        java.lang.String str61 = seconds60.toString();
        org.joda.time.Seconds seconds62 = seconds59.plus(seconds60);
        org.joda.time.Seconds seconds63 = seconds55.minus(seconds60);
        org.joda.time.ReadableInterval readableInterval64 = null;
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.secondsIn(readableInterval64);
        org.joda.time.Seconds seconds66 = seconds60.plus(seconds65);
        boolean boolean67 = seconds51.isGreaterThan(seconds66);
        org.joda.time.DurationFieldType durationFieldType68 = seconds51.getFieldType();
        org.joda.time.Duration duration69 = seconds51.toStandardDuration();
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableDuration) duration69);
        long long71 = dateTime27.getMillis();
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, (org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant75 = null;
        java.lang.Object obj76 = null;
        org.joda.time.Duration duration77 = new org.joda.time.Duration(obj76);
        org.joda.time.Period period78 = new org.joda.time.Period(readableInstant75, (org.joda.time.ReadableDuration) duration77);
        boolean boolean79 = duration74.isShorterThan((org.joda.time.ReadableDuration) duration77);
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.Interval interval81 = duration77.toIntervalTo(readableInstant80);
        org.joda.time.Interval interval82 = interval81.toInterval();
        org.joda.time.DateTime dateTime83 = interval82.getEnd();
        org.joda.time.Instant instant84 = dateTime83.toInstant();
        boolean boolean85 = dateTime27.isBefore((org.joda.time.ReadableInstant) instant84);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT2S" + "'", str47, "PT2S");
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT2S" + "'", str61, "PT2S");
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertNotNull(duration69);
// flaky:         org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1644572619589L + "'", long71 == 1644572619589L);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(interval81);
        org.junit.Assert.assertNotNull(interval82);
        org.junit.Assert.assertNotNull(dateTime83);
        org.junit.Assert.assertNotNull(instant84);
// flaky:         org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test13702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13702");
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType6 = minutes5.getPeriodType();
        org.joda.time.Period period7 = new org.joda.time.Period(0L, 1644572150750L, periodType6);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(periodType6);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType15 = minutes14.getFieldType();
        org.joda.time.Minutes minutes16 = minutes14.negated();
        org.joda.time.PeriodType periodType17 = minutes14.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1644572089958L, 360000L, periodType17);
        org.joda.time.PeriodType periodType19 = periodType17.withSecondsRemoved();
        java.lang.String str20 = periodType19.getName();
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(0L);
        mutablePeriod24.addMinutes((int) (short) 1);
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) 1);
        mutablePeriod36.setPeriod((org.joda.time.ReadablePeriod) minutes39);
        boolean boolean41 = mutablePeriod24.equals((java.lang.Object) minutes39);
        org.joda.time.Period period42 = minutes39.toPeriod();
        org.joda.time.DurationFieldType durationFieldType43 = minutes39.getFieldType();
        java.lang.String str44 = durationFieldType43.toString();
        java.lang.String str45 = durationFieldType43.getName();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        org.joda.time.Duration duration57 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean58 = duration50.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes59 = duration50.toStandardMinutes();
        org.joda.time.Minutes minutes60 = minutes59.negated();
        org.joda.time.DurationFieldType durationFieldType62 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant65 = null;
        java.lang.Object obj66 = null;
        org.joda.time.Duration duration67 = new org.joda.time.Duration(obj66);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant65, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = duration64.isShorterThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Interval interval71 = duration67.toIntervalTo(readableInstant70);
        org.joda.time.Interval interval72 = interval71.toInterval();
        org.joda.time.Chronology chronology73 = interval72.getChronology();
        org.joda.time.DurationField durationField74 = durationFieldType62.getField(chronology73);
        org.joda.time.Period period75 = new org.joda.time.Period(36000L, chronology73);
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((java.lang.Object) minutes60, chronology73);
        org.joda.time.DurationField durationField77 = durationFieldType43.getField(chronology73);
        org.joda.time.Period period78 = new org.joda.time.Period(1644572122713L, 1644572118718L, chronology73);
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod(1644572295957L, 1644572250612L, periodType19, chronology73);
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod(1644572182013L, periodType6, chronology73);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Minutes" + "'", str20, "Minutes");
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "minutes" + "'", str44, "minutes");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "minutes" + "'", str45, "minutes");
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertNotNull(durationField77);
    }

    @Test
    public void test13703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13703");
        org.joda.time.Period period6 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period8 = period6.minusHours((-1));
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((java.lang.Object) duration10, periodType16, chronology17);
        org.joda.time.Period period19 = period6.normalizedStandard(periodType16);
        org.joda.time.PeriodType periodType20 = periodType16.withHoursRemoved();
        org.joda.time.Period period21 = new org.joda.time.Period(1644572444627L, 1644572396916L, periodType16);
        org.joda.time.Duration duration22 = new org.joda.time.Duration((java.lang.Object) 1644572396916L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType20);
    }

    @Test
    public void test13704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13704");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.addMillis((-1));
        mutablePeriod3.setHours((int) '4');
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration13 = duration10.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Period period14 = duration13.toPeriod();
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        boolean boolean22 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Interval interval24 = duration20.toIntervalTo(readableInstant23);
        org.joda.time.Interval interval25 = interval24.toInterval();
        org.joda.time.DateTime dateTime26 = interval25.getEnd();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        org.joda.time.Interval interval36 = interval35.toInterval();
        org.joda.time.DateTime dateTime37 = interval36.getEnd();
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime26, (org.joda.time.ReadableInstant) dateTime37);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration43 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration46 = duration43.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration48 = duration40.withDurationAdded((org.joda.time.ReadableDuration) duration43, (int) (short) 1);
        long long49 = duration40.getStandardDays();
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.dayTime();
        org.joda.time.PeriodType periodType51 = periodType50.withMonthsRemoved();
        int int52 = periodType50.size();
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableDuration) duration40, periodType50);
        org.joda.time.Duration duration54 = duration13.minus((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Duration duration56 = duration13.withMillis(1644572303227L);
        org.joda.time.Seconds seconds57 = duration13.toStandardSeconds();
        org.joda.time.MutablePeriod mutablePeriod58 = seconds57.toMutablePeriod();
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(dateTime26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
    }

    @Test
    public void test13705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13705");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period1 = new org.joda.time.Period((java.lang.Object) minutes0);
        org.joda.time.Minutes minutes3 = minutes0.multipliedBy(8);
        java.lang.String str4 = minutes3.toString();
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType7 = periodType6.withHoursRemoved();
        org.joda.time.PeriodType periodType8 = periodType7.withSecondsRemoved();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1644572098650L, periodType7, chronology9);
        org.joda.time.PeriodType periodType11 = mutablePeriod10.getPeriodType();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((java.lang.Object) str4, periodType11, chronology12);
        org.joda.time.PeriodType periodType14 = periodType11.withMonthsRemoved();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT0M" + "'", str4, "PT0M");
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType14);
    }

    @Test
    public void test13706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13706");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Seconds seconds4 = period3.toStandardSeconds();
        org.joda.time.Seconds seconds5 = period3.toStandardSeconds();
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType8 = seconds7.getFieldType();
        org.joda.time.Seconds seconds10 = seconds7.plus((-1));
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.TWO;
        java.lang.String str12 = seconds11.toString();
        org.joda.time.Seconds seconds13 = seconds10.plus(seconds11);
        org.joda.time.Seconds seconds14 = seconds6.minus(seconds11);
        org.joda.time.PeriodType periodType15 = seconds6.getPeriodType();
        org.joda.time.Seconds seconds16 = seconds5.plus(seconds6);
        int int17 = seconds16.getSeconds();
        org.joda.time.Seconds seconds18 = seconds16.negated();
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds20 = seconds16.plus(seconds19);
        org.joda.time.Period period22 = org.joda.time.Period.seconds(1);
        org.joda.time.Period period24 = period22.withSeconds((-9700));
        org.joda.time.Period period26 = period24.minusHours((int) (byte) 100);
        org.joda.time.Seconds seconds27 = period26.toStandardSeconds();
        boolean boolean28 = seconds19.isLessThan(seconds27);
        org.joda.time.DurationFieldType durationFieldType29 = seconds27.getFieldType();
        org.joda.time.Seconds seconds31 = seconds27.plus((int) (short) -1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2S" + "'", str12, "PT2S");
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(seconds31);
    }

    @Test
    public void test13707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13707");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("2022-02-11T09:39:58.496Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:39:58.496Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13708");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        long long23 = dateTime21.getMillis();
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration29 = duration26.minus((long) '4');
        org.joda.time.Duration duration31 = org.joda.time.Duration.millis((long) '4');
        long long32 = duration31.getMillis();
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType35);
        mutablePeriod36.setYears(0);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology41 = null;
        mutablePeriod36.setPeriod((org.joda.time.ReadableDuration) duration40, chronology41);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant45 = null;
        java.lang.Object obj46 = null;
        org.joda.time.Duration duration47 = new org.joda.time.Duration(obj46);
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration47);
        boolean boolean49 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Interval interval51 = duration47.toIntervalTo(readableInstant50);
        org.joda.time.Interval interval52 = interval51.toInterval();
        org.joda.time.DateTime dateTime53 = interval52.getEnd();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant56 = null;
        java.lang.Object obj57 = null;
        org.joda.time.Duration duration58 = new org.joda.time.Duration(obj57);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant56, (org.joda.time.ReadableDuration) duration58);
        boolean boolean60 = duration55.isShorterThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Interval interval62 = duration58.toIntervalTo(readableInstant61);
        org.joda.time.Interval interval63 = interval62.toInterval();
        org.joda.time.DateTime dateTime64 = interval63.getEnd();
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime53, (org.joda.time.ReadableInstant) dateTime64);
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, (org.joda.time.ReadableInstant) dateTime53);
        java.lang.String str67 = dateTime53.toString();
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, (org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.Duration duration70 = new org.joda.time.Duration((long) (byte) 1);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType73 = periodType72.withMillisRemoved();
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((long) (short) 1, periodType73, chronology74);
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime53, (org.joda.time.ReadableDuration) duration70, periodType73);
        org.joda.time.Period period77 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableDuration) duration29, periodType73);
        org.joda.time.ReadableDuration readableDuration78 = null;
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime21, readableDuration78);
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardMinutes((long) 32);
        org.joda.time.Period period82 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableDuration) duration81);
        org.joda.time.Duration duration83 = period82.toStandardDuration();
        org.joda.time.Duration duration85 = duration83.withMillis((long) (-2147483612));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572619784L + "'", long23 == 1644572619784L);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 52L + "'", long32 == 52L);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(dateTime53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(dateTime64);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "2022-02-11T09:43:39.784Z" + "'", str67, "2022-02-11T09:43:39.784Z");
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertNotNull(duration85);
    }

    @Test
    public void test13709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13709");
        org.joda.time.Period period1 = org.joda.time.Period.millis(1);
        org.joda.time.Period period3 = period1.minusMinutes((int) (short) -1);
        org.joda.time.Period period5 = period3.minusWeeks(54);
        int int6 = period5.getHours();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test13710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13710");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        java.lang.String str7 = period6.toString();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        long long18 = interval17.getStartMillis();
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval17);
        mutablePeriod8.setDays((int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.millis((long) '4');
        long long24 = duration23.getMillis();
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType27);
        mutablePeriod28.setYears(0);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology33 = null;
        mutablePeriod28.setPeriod((org.joda.time.ReadableDuration) duration32, chronology33);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.DateTime dateTime45 = interval44.getEnd();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        org.joda.time.Interval interval55 = interval54.toInterval();
        org.joda.time.DateTime dateTime56 = interval55.getEnd();
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime45, (org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, (org.joda.time.ReadableInstant) dateTime45);
        java.lang.String str59 = dateTime45.toString();
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, (org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant63 = null;
        java.lang.Object obj64 = null;
        org.joda.time.Duration duration65 = new org.joda.time.Duration(obj64);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant63, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = duration62.isShorterThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Interval interval69 = duration65.toIntervalTo(readableInstant68);
        org.joda.time.Duration duration72 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean73 = duration65.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes74 = duration65.toStandardMinutes();
        org.joda.time.Duration duration75 = duration23.plus((org.joda.time.ReadableDuration) duration65);
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration75);
        mutablePeriod8.setMillis(3);
        int int79 = mutablePeriod8.getMinutes();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0.097S" + "'", str7, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572619863L + "'", long18 == 1644572619863L);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 52L + "'", long24 == 52L);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(dateTime56);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "2022-02-11T09:43:39.863Z" + "'", str59, "2022-02-11T09:43:39.863Z");
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }

    @Test
    public void test13711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13711");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (-59));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test13712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13712");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration5 = duration3.plus(1644572076849L);
        long long6 = duration3.getMillis();
        long long7 = duration3.getStandardHours();
        boolean boolean8 = duration1.isEqual((org.joda.time.ReadableDuration) duration3);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.millis((long) '4');
        long long17 = duration16.getStandardDays();
        boolean boolean18 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration19 = duration3.minus((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = duration3.toDuration();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType25 = minutes24.getPeriodType();
        org.joda.time.PeriodType periodType26 = periodType25.withYearsRemoved();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((long) '#', periodType25, chronology27);
        org.joda.time.PeriodType periodType29 = periodType25.withHoursRemoved();
        int int30 = periodType29.size();
        org.joda.time.PeriodType periodType31 = periodType29.withMinutesRemoved();
        org.joda.time.PeriodType periodType32 = periodType29.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((java.lang.Object) duration20, periodType29);
        int int34 = mutablePeriod33.getDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 52L + "'", long6 == 52L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test13713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13713");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.Days days3 = days0.plus(days2);
        org.joda.time.Period period4 = days2.toPeriod();
        org.joda.time.Days days6 = days2.dividedBy((-101));
        org.joda.time.Days days7 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days6);
        int int8 = days7.size();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test13714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13714");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        org.joda.time.PeriodType periodType2 = hours1.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withMillisRemoved();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test13715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13715");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT0.100S");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13716");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(90, (-2147483646), (int) (short) 1, 600);
    }

    @Test
    public void test13717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13717");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours2 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours3 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours4 = hours2.minus(hours3);
        int int5 = hours2.getHours();
        org.joda.time.Hours hours6 = hours1.minus(hours2);
        org.joda.time.Duration duration9 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = duration9.toPeriodFrom(readableInstant10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration9.toPeriod(chronology12);
        org.joda.time.Period period15 = period13.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        org.joda.time.Period period18 = period15.minus((org.joda.time.ReadablePeriod) hours17);
        org.joda.time.Hours hours19 = hours17.negated();
        org.joda.time.Duration duration22 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = duration22.toPeriodFrom(readableInstant23);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration22.toPeriod(chronology25);
        org.joda.time.Period period28 = period26.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Hours hours30 = org.joda.time.Hours.hoursIn(readableInterval29);
        org.joda.time.Period period31 = period28.minus((org.joda.time.ReadablePeriod) hours30);
        org.joda.time.Hours hours32 = hours30.negated();
        org.joda.time.Hours hours33 = hours17.minus(hours30);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.Hours hours44 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval43);
        org.joda.time.Hours hours45 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval43);
        org.joda.time.Hours hours47 = hours45.minus(8);
        boolean boolean48 = hours17.isLessThan(hours45);
        org.joda.time.Hours hours49 = hours2.plus(hours45);
        org.joda.time.Hours hours51 = hours45.multipliedBy(32);
        org.joda.time.DurationFieldType durationFieldType52 = hours45.getFieldType();
        java.lang.String str53 = durationFieldType52.toString();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2147483647 + "'", int5 == 2147483647);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hours" + "'", str53, "hours");
    }

    @Test
    public void test13718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13718");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.minutesIn(readableInterval2);
        java.lang.String str4 = minutes3.toString();
        org.joda.time.PeriodType periodType5 = minutes3.getPeriodType();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) (short) 10, (long) (byte) -1, periodType5, chronology6);
        org.joda.time.PeriodType periodType8 = period7.getPeriodType();
        int int9 = period7.getDays();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period11 = period7.minusDays(703);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT0M" + "'", str4, "PT0M");
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test13719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13719");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) ' ', chronology1);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.DateTime dateTime47 = interval46.getEnd();
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType50 = periodType49.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(periodType50);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(10L, periodType50);
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime47, periodType50);
        org.joda.time.Duration duration54 = mutablePeriod2.toDurationFrom((org.joda.time.ReadableInstant) dateTime23);
        mutablePeriod2.addMonths((int) '#');
        mutablePeriod2.setDays((int) (short) 0);
        int int59 = mutablePeriod2.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod60 = mutablePeriod2.toMutablePeriod();
        mutablePeriod2.addDays((int) (byte) 10);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant65 = null;
        java.lang.Object obj66 = null;
        org.joda.time.Duration duration67 = new org.joda.time.Duration(obj66);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant65, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = duration64.isShorterThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Interval interval71 = duration67.toIntervalTo(readableInstant70);
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant74 = null;
        java.lang.Object obj75 = null;
        org.joda.time.Duration duration76 = new org.joda.time.Duration(obj75);
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant74, (org.joda.time.ReadableDuration) duration76);
        boolean boolean78 = duration73.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Interval interval80 = duration76.toIntervalTo(readableInstant79);
        org.joda.time.Interval interval81 = interval80.toInterval();
        org.joda.time.Hours hours82 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval81);
        org.joda.time.Hours hours83 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval81);
        boolean boolean84 = interval71.overlaps((org.joda.time.ReadableInterval) interval81);
        org.joda.time.MutableInterval mutableInterval85 = interval81.toMutableInterval();
        mutablePeriod2.add((org.joda.time.ReadableInterval) interval81);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(interval81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(mutableInterval85);
    }

    @Test
    public void test13720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13720");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572088216L);
        org.joda.time.Duration duration3 = duration1.minus(1644572149218L);
        org.joda.time.Duration duration6 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = duration6.toPeriodFrom(readableInstant7);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration6.toPeriod(chronology9);
        java.lang.String str11 = period10.toString();
        org.joda.time.MutablePeriod mutablePeriod12 = period10.toMutablePeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        long long22 = interval21.getStartMillis();
        mutablePeriod12.setPeriod((org.joda.time.ReadableInterval) interval21);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval21);
        org.joda.time.DateTime dateTime25 = interval21.getStart();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardSeconds(1644572105679L);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType29 = periodType28.withDaysRemoved();
        org.joda.time.PeriodType periodType30 = periodType29.withMinutesRemoved();
        int int31 = periodType29.size();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableDuration) duration27, periodType29);
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, (org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.Period period36 = new org.joda.time.Period((-2L), 1644572190374L);
        mutablePeriod33.mergePeriod((org.joda.time.ReadablePeriod) period36);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT0.097S" + "'", str11, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572620182L + "'", long22 == 1644572620182L);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test13721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13721");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(3, 703, 36000, 0);
    }

    @Test
    public void test13722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13722");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        mutablePeriod3.setWeeks((int) (short) -1);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration12.toIntervalTo(readableInstant15);
        mutablePeriod3.setPeriod((org.joda.time.ReadableInterval) interval16);
        org.joda.time.ReadableDuration readableDuration18 = null;
        mutablePeriod3.setPeriod(readableDuration18);
        mutablePeriod3.setWeeks(32);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        boolean boolean41 = interval31.isAfter((org.joda.time.ReadableInterval) interval40);
        org.joda.time.Period period42 = interval40.toPeriod();
        org.joda.time.Period period43 = interval40.toPeriod();
        org.joda.time.Period period45 = period43.minusMillis((int) (byte) 1);
        org.joda.time.Duration duration48 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = duration48.toPeriodFrom(readableInstant49);
        org.joda.time.Period period52 = period50.minusSeconds((int) '4');
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType57 = mutablePeriod55.getFieldType(1);
        org.joda.time.Period period59 = period50.withField(durationFieldType57, (int) (byte) 100);
        int int60 = period45.get(durationFieldType57);
        org.joda.time.Period period62 = period45.plusSeconds(246);
        org.joda.time.Period period64 = period62.plusDays(3);
        org.joda.time.Period period65 = period64.toPeriod();
        mutablePeriod3.add((org.joda.time.ReadablePeriod) period64);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period65);
    }

    @Test
    public void test13723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13723");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        int int2 = minutes1.getMinutes();
        org.joda.time.DurationFieldType durationFieldType3 = minutes1.getFieldType();
        org.joda.time.Minutes minutes5 = minutes1.plus(7);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes5);
    }

    @Test
    public void test13724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13724");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572427496L);
    }

    @Test
    public void test13725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13725");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.dividedBy((int) ' ');
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(periodType7);
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(10L, periodType7);
        int int10 = mutablePeriod9.getMillis();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration18 = duration15.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration20 = duration12.withDurationAdded((org.joda.time.ReadableDuration) duration15, (int) (short) 1);
        org.joda.time.Duration duration23 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration26 = duration23.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration28 = duration12.withDurationAdded((org.joda.time.ReadableDuration) duration26, (int) (short) 100);
        mutablePeriod9.add((org.joda.time.ReadableDuration) duration28);
        mutablePeriod9.addDays(0);
        boolean boolean32 = hours1.equals((java.lang.Object) mutablePeriod9);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.Hours hours43 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval42);
        org.joda.time.Hours hours44 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval42);
        org.joda.time.DurationFieldType durationFieldType45 = hours44.getFieldType();
        org.joda.time.Hours hours47 = hours44.minus(1);
        org.joda.time.Duration duration50 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = duration50.toPeriodFrom(readableInstant51);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration50.toPeriod(chronology53);
        org.joda.time.Period period56 = period54.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval57 = null;
        org.joda.time.Hours hours58 = org.joda.time.Hours.hoursIn(readableInterval57);
        org.joda.time.Period period59 = period56.minus((org.joda.time.ReadablePeriod) hours58);
        org.joda.time.Hours hours60 = hours58.negated();
        org.joda.time.Hours hours61 = hours47.plus(hours60);
        org.joda.time.Hours hours62 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours63 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours64 = hours62.minus(hours63);
        org.joda.time.DurationFieldType durationFieldType65 = hours63.getFieldType();
        boolean boolean66 = hours61.isLessThan(hours63);
        org.joda.time.ReadableInterval readableInterval67 = null;
        org.joda.time.Hours hours68 = org.joda.time.Hours.hoursIn(readableInterval67);
        org.joda.time.Hours hours70 = hours68.minus((int) (byte) 100);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant73 = null;
        java.lang.Object obj74 = null;
        org.joda.time.Duration duration75 = new org.joda.time.Duration(obj74);
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant73, (org.joda.time.ReadableDuration) duration75);
        boolean boolean77 = duration72.isShorterThan((org.joda.time.ReadableDuration) duration75);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Interval interval79 = duration75.toIntervalTo(readableInstant78);
        org.joda.time.Interval interval80 = interval79.toInterval();
        org.joda.time.Hours hours81 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval80);
        org.joda.time.Hours hours83 = hours81.dividedBy(1);
        org.joda.time.Hours hours85 = hours81.minus((int) (short) 1);
        boolean boolean86 = hours68.isGreaterThan(hours85);
        org.joda.time.Hours hours88 = hours68.plus(32);
        org.joda.time.Hours hours89 = hours63.plus(hours68);
        org.joda.time.Hours hours90 = hours1.plus(hours68);
        org.joda.time.Period period91 = hours68.toPeriod();
        int int92 = period91.getDays();
        org.joda.time.Period period94 = org.joda.time.Period.days((int) ' ');
        org.joda.time.Period period95 = period91.plus((org.joda.time.ReadablePeriod) period94);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(interval79);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(period94);
        org.junit.Assert.assertNotNull(period95);
    }

    @Test
    public void test13726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13726");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, periodType7, chronology8);
        org.joda.time.DurationFieldType[] durationFieldTypeArray10 = mutablePeriod9.getFieldTypes();
        org.joda.time.Duration duration13 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = duration13.toPeriodFrom(readableInstant14);
        org.joda.time.Duration duration17 = duration13.plus((-1L));
        org.joda.time.Chronology chronology18 = null;
        mutablePeriod9.setPeriod((org.joda.time.ReadableDuration) duration17, chronology18);
        org.joda.time.Seconds seconds20 = duration17.toStandardSeconds();
        org.joda.time.Seconds seconds21 = duration17.toStandardSeconds();
        org.joda.time.Duration duration22 = seconds21.toStandardDuration();
        org.joda.time.Seconds seconds24 = seconds21.minus(40);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(durationFieldTypeArray10);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(seconds24);
    }

    @Test
    public void test13727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13727");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) ' ', chronology1);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.DateTime dateTime47 = interval46.getEnd();
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType50 = periodType49.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(periodType50);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(10L, periodType50);
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime47, periodType50);
        org.joda.time.Duration duration54 = mutablePeriod2.toDurationFrom((org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant57 = null;
        java.lang.Object obj58 = null;
        org.joda.time.Duration duration59 = new org.joda.time.Duration(obj58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant57, (org.joda.time.ReadableDuration) duration59);
        boolean boolean61 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration59.toIntervalTo(readableInstant62);
        org.joda.time.Interval interval64 = interval63.toInterval();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant67 = null;
        java.lang.Object obj68 = null;
        org.joda.time.Duration duration69 = new org.joda.time.Duration(obj68);
        org.joda.time.Period period70 = new org.joda.time.Period(readableInstant67, (org.joda.time.ReadableDuration) duration69);
        boolean boolean71 = duration66.isShorterThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Interval interval73 = duration69.toIntervalTo(readableInstant72);
        boolean boolean74 = interval64.isAfter((org.joda.time.ReadableInterval) interval73);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval73);
        org.joda.time.Period period76 = new org.joda.time.Period((java.lang.Object) interval73);
        org.joda.time.Period period78 = period76.minusWeeks(0);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) period78);
        org.joda.time.Period period81 = period78.plusYears(648);
        org.joda.time.Period period83 = period81.minusWeeks(246);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period83);
    }

    @Test
    public void test13728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13728");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572376986L);
    }

    @Test
    public void test13729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13729");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        mutablePeriod9.addMillis((-1));
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod9);
        mutablePeriod5.setDays((int) ' ');
        int int15 = mutablePeriod5.size();
        org.joda.time.MutablePeriod mutablePeriod16 = mutablePeriod5.copy();
        mutablePeriod16.setWeeks((int) (short) 0);
        org.joda.time.Duration duration20 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration22 = duration20.plus(1644572076849L);
        long long23 = duration20.getMillis();
        long long24 = duration20.getStandardHours();
        mutablePeriod16.add((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Period period27 = org.joda.time.Period.millis(36);
        org.joda.time.Period period28 = period27.normalizedStandard();
        org.joda.time.Period period30 = period28.plusMillis((int) (short) -1);
        boolean boolean31 = mutablePeriod16.equals((java.lang.Object) period30);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 52L + "'", long23 == 52L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test13730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13730");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        mutablePeriod9.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod13);
        mutablePeriod13.setWeeks((int) (byte) 10);
        mutablePeriod13.addWeeks((int) (short) 1);
        mutablePeriod13.addMinutes((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        mutablePeriod28.addWeeks((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray31 = mutablePeriod28.getFieldTypes();
        mutablePeriod28.addMillis((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod();
        mutablePeriod35.setPeriod(100L, (long) (-1));
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant45 = null;
        java.lang.Object obj46 = null;
        org.joda.time.Duration duration47 = new org.joda.time.Duration(obj46);
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration47);
        boolean boolean49 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Interval interval51 = duration47.toIntervalTo(readableInstant50);
        org.joda.time.Interval interval52 = interval51.toInterval();
        org.joda.time.Chronology chronology53 = interval52.getChronology();
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((-1L), chronology53);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology53);
        mutablePeriod35.setPeriod((long) 100, chronology53);
        mutablePeriod28.setPeriod(1644572118718L, chronology53);
        org.joda.time.Period period58 = new org.joda.time.Period(1644572105679L, chronology53);
        mutablePeriod13.setPeriod(1644572166323L, 1644572131521L, chronology53);
        mutablePeriod13.setWeeks((int) (byte) 1);
        org.joda.time.MutablePeriod mutablePeriod62 = mutablePeriod13.toMutablePeriod();
        org.joda.time.Period period63 = mutablePeriod62.toPeriod();
        org.junit.Assert.assertNotNull(durationFieldTypeArray31);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(chronology53);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(period63);
    }

    @Test
    public void test13731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13731");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572425347L);
    }

    @Test
    public void test13732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13732");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 14);
        org.joda.time.Duration duration3 = duration1.plus((long) 139579);
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1644572097900L, 1644572106070L);
        org.joda.time.Period period8 = new org.joda.time.Period(1L);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Period period11 = period8.plus((org.joda.time.ReadablePeriod) weeks10);
        int int12 = period11.getMinutes();
        int[] intArray13 = period11.getValues();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period11);
        org.joda.time.Period period16 = period11.withDays((-101));
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        int int18 = weeks17.size();
        org.joda.time.Duration duration19 = weeks17.toStandardDuration();
        org.joda.time.Period period20 = period16.minus((org.joda.time.ReadablePeriod) weeks17);
        mutablePeriod6.mergePeriod((org.joda.time.ReadablePeriod) period20);
        mutablePeriod6.addSeconds((int) 'a');
        org.joda.time.Duration duration25 = org.joda.time.Duration.millis((long) 35);
        org.joda.time.Period period26 = new org.joda.time.Period((java.lang.Object) duration25);
        mutablePeriod6.add((org.joda.time.ReadableDuration) duration25);
        boolean boolean28 = duration1.isEqual((org.joda.time.ReadableDuration) duration25);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0, -1, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test13733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13733");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.hours();
        org.joda.time.PeriodType periodType1 = periodType0.withMonthsRemoved();
        org.joda.time.Period period6 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period8 = period6.plusDays(1);
        org.joda.time.Period period10 = period8.minusYears((int) (short) -1);
        int int11 = period10.getSeconds();
        boolean boolean12 = periodType0.equals((java.lang.Object) period10);
        org.joda.time.Period period14 = period10.minusMinutes((int) (short) 0);
        int int15 = period14.size();
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
    }

    @Test
    public void test13734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13734");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((-2147483648));
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = duration4.toPeriodFrom(readableInstant5);
        org.joda.time.Period period8 = period6.minusSeconds((int) '4');
        org.joda.time.Minutes minutes9 = period6.toStandardMinutes();
        org.joda.time.Period period11 = period6.multipliedBy((int) (byte) 100);
        org.joda.time.Period period13 = period11.withHours((int) (short) 0);
        org.joda.time.Period period15 = period11.withHours((int) (short) 1);
        org.joda.time.Minutes minutes16 = period15.toStandardMinutes();
        org.joda.time.Period period18 = period15.plusWeeks((int) (short) 1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Minutes minutes20 = minutes19.negated();
        org.joda.time.Period period21 = period1.plus((org.joda.time.ReadablePeriod) minutes19);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test13735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13735");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        mutablePeriod9.addMillis((-1));
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod9);
        mutablePeriod5.setDays((int) ' ');
        int int15 = mutablePeriod5.size();
        org.joda.time.MutablePeriod mutablePeriod16 = mutablePeriod5.copy();
        int int17 = mutablePeriod16.getMillis();
        org.joda.time.Period period19 = new org.joda.time.Period((-1L));
        org.joda.time.Seconds seconds20 = period19.toStandardSeconds();
        org.joda.time.Seconds seconds21 = seconds20.negated();
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType23 = seconds22.getFieldType();
        org.joda.time.Seconds seconds25 = seconds22.plus((-1));
        org.joda.time.Seconds seconds26 = seconds21.plus(seconds25);
        mutablePeriod16.setPeriod((org.joda.time.ReadablePeriod) seconds25);
        int int28 = mutablePeriod16.getMonths();
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-2) + "'", int17 == (-2));
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test13736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13736");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (short) -1);
        mutablePeriod1.addMinutes((-2));
        mutablePeriod1.setMonths((-242));
        mutablePeriod1.setYears(952);
        mutablePeriod1.setHours(369701);
    }

    @Test
    public void test13737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13737");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        java.lang.String str7 = period6.toString();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        long long18 = interval17.getStartMillis();
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval17);
        mutablePeriod8.setDays((int) (short) 10);
        int int22 = mutablePeriod8.getSeconds();
        mutablePeriod8.setPeriod((-52L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0.097S" + "'", str7, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572620623L + "'", long18 == 1644572620623L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test13738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13738");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) 10);
        java.lang.String str2 = duration1.toString();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        boolean boolean9 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.minutesIn(readableInterval11);
        java.lang.String str13 = minutes12.toString();
        org.joda.time.PeriodType periodType14 = minutes12.getPeriodType();
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant10, periodType14);
        org.joda.time.Duration duration17 = duration7.withMillis((long) 'a');
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        org.joda.time.Interval interval34 = interval33.toInterval();
        org.joda.time.DateTime dateTime35 = interval34.getEnd();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration40.toIntervalTo(readableInstant43);
        org.joda.time.Interval interval45 = interval44.toInterval();
        org.joda.time.DateTime dateTime46 = interval45.getEnd();
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime35, (org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        boolean boolean54 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableInterval readableInterval56 = null;
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.minutesIn(readableInterval56);
        java.lang.String str58 = minutes57.toString();
        org.joda.time.PeriodType periodType59 = minutes57.getPeriodType();
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant55, periodType59);
        org.joda.time.PeriodType periodType61 = periodType59.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime46, periodType61);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant65 = null;
        java.lang.Object obj66 = null;
        org.joda.time.Duration duration67 = new org.joda.time.Duration(obj66);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant65, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = duration64.isShorterThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((java.lang.Object) duration64, periodType70, chronology71);
        org.joda.time.Duration duration74 = org.joda.time.Duration.millis((long) '4');
        long long75 = duration74.getStandardDays();
        boolean boolean76 = duration64.isLongerThan((org.joda.time.ReadableDuration) duration74);
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime46, (org.joda.time.ReadableDuration) duration74);
        org.joda.time.Interval interval78 = duration17.toIntervalTo((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.Chronology chronology79 = dateTime46.getChronology();
        org.joda.time.Chronology chronology80 = dateTime46.getChronology();
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime46);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT600S" + "'", str2, "PT600S");
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT0M" + "'", str13, "PT0M");
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "PT0M" + "'", str58, "PT0M");
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(chronology79);
        org.junit.Assert.assertNotNull(chronology80);
    }

    @Test
    public void test13739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13739");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        boolean boolean7 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Interval interval9 = duration5.toIntervalTo(readableInstant8);
        org.joda.time.Interval interval10 = interval9.toInterval();
        org.joda.time.Hours hours11 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval10);
        org.joda.time.Hours hours13 = hours11.dividedBy(1);
        org.joda.time.Hours hours15 = hours11.minus((int) (short) 1);
        org.joda.time.PeriodType periodType16 = hours11.getPeriodType();
        org.joda.time.PeriodType periodType17 = hours11.getPeriodType();
        org.joda.time.PeriodType periodType18 = periodType17.withDaysRemoved();
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType20 = periodType19.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(periodType19);
        java.lang.String str22 = mutablePeriod21.toString();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((java.lang.Object) duration47, periodType53, chronology54);
        org.joda.time.Duration duration57 = org.joda.time.Duration.millis((long) '4');
        long long58 = duration57.getStandardDays();
        boolean boolean59 = duration47.isLongerThan((org.joda.time.ReadableDuration) duration57);
        long long60 = duration47.getMillis();
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime44, (org.joda.time.ReadableDuration) duration47, periodType61);
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant66 = null;
        java.lang.Object obj67 = null;
        org.joda.time.Duration duration68 = new org.joda.time.Duration(obj67);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant66, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = duration65.isShorterThan((org.joda.time.ReadableDuration) duration68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Interval interval72 = duration68.toIntervalTo(readableInstant71);
        org.joda.time.Interval interval73 = interval72.toInterval();
        org.joda.time.Chronology chronology74 = interval73.getChronology();
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod((-1L), chronology74);
        mutablePeriod21.setPeriod((org.joda.time.ReadableDuration) duration47, chronology74);
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod(1644572165234L, periodType18, chronology74);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod77.setMillis(586);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT0S" + "'", str22, "PT0S");
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 36000000L + "'", long60 == 36000000L);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(chronology74);
    }

    @Test
    public void test13740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13740");
        org.joda.time.Period period1 = org.joda.time.Period.years(2147483639);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13741");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Duration duration5 = duration2.plus((long) 'a');
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.millis((long) '4');
        long long14 = duration13.getStandardDays();
        boolean boolean15 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        boolean boolean22 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.minutesIn(readableInterval54);
        java.lang.String str56 = minutes55.toString();
        org.joda.time.PeriodType periodType57 = minutes55.getPeriodType();
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant53, periodType57);
        org.joda.time.PeriodType periodType59 = periodType57.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration20, (org.joda.time.ReadableInstant) dateTime44, periodType59);
        org.joda.time.Interval interval61 = duration8.toIntervalFrom((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Interval interval62 = duration2.toIntervalFrom((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Period period63 = interval62.toPeriod();
        org.joda.time.Duration duration64 = interval62.toDuration();
        org.joda.time.MutableInterval mutableInterval65 = interval62.toMutableInterval();
        org.joda.time.Period period66 = new org.joda.time.Period((java.lang.Object) interval62);
        org.joda.time.PeriodType periodType67 = period66.getPeriodType();
        int int68 = periodType67.size();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PT0M" + "'", str56, "PT0M");
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(mutableInterval65);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 8 + "'", int68 == 8);
    }

    @Test
    public void test13742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13742");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        boolean boolean7 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Interval interval9 = duration5.toIntervalTo(readableInstant8);
        org.joda.time.Interval interval10 = interval9.toInterval();
        org.joda.time.DateTime dateTime11 = interval10.getEnd();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.DateTime dateTime22 = interval21.getEnd();
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime11, (org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.DateTime dateTime45 = interval44.getEnd();
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.DurationFieldType durationFieldType48 = minutes47.getFieldType();
        org.joda.time.Minutes minutes49 = minutes47.negated();
        boolean boolean50 = minutes0.isLessThan(minutes47);
        org.joda.time.PeriodType periodType51 = minutes47.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(dateTime11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(periodType51);
    }

    @Test
    public void test13743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13743");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        boolean boolean7 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Interval interval9 = duration5.toIntervalTo(readableInstant8);
        org.joda.time.Interval interval10 = interval9.toInterval();
        org.joda.time.DateTime dateTime11 = interval10.getEnd();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        boolean boolean31 = interval21.isAfter((org.joda.time.ReadableInterval) interval30);
        boolean boolean32 = interval10.contains((org.joda.time.ReadableInterval) interval21);
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType35);
        mutablePeriod36.setYears(0);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology41 = null;
        mutablePeriod36.setPeriod((org.joda.time.ReadableDuration) duration40, chronology41);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant45 = null;
        java.lang.Object obj46 = null;
        org.joda.time.Duration duration47 = new org.joda.time.Duration(obj46);
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration47);
        boolean boolean49 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Interval interval51 = duration47.toIntervalTo(readableInstant50);
        org.joda.time.Interval interval52 = interval51.toInterval();
        org.joda.time.DateTime dateTime53 = interval52.getEnd();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant56 = null;
        java.lang.Object obj57 = null;
        org.joda.time.Duration duration58 = new org.joda.time.Duration(obj57);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant56, (org.joda.time.ReadableDuration) duration58);
        boolean boolean60 = duration55.isShorterThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Interval interval62 = duration58.toIntervalTo(readableInstant61);
        org.joda.time.Interval interval63 = interval62.toInterval();
        org.joda.time.DateTime dateTime64 = interval63.getEnd();
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime53, (org.joda.time.ReadableInstant) dateTime64);
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, (org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant69 = null;
        java.lang.Object obj70 = null;
        org.joda.time.Duration duration71 = new org.joda.time.Duration(obj70);
        org.joda.time.Period period72 = new org.joda.time.Period(readableInstant69, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = duration68.isShorterThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Interval interval75 = duration71.toIntervalTo(readableInstant74);
        org.joda.time.Interval interval76 = interval75.toInterval();
        org.joda.time.DateTime dateTime77 = interval76.getEnd();
        org.joda.time.PeriodType periodType79 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType80 = periodType79.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(periodType80);
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(10L, periodType80);
        org.joda.time.Period period83 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime53, (org.joda.time.ReadableInstant) dateTime77, periodType80);
        boolean boolean84 = interval21.isAfter((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.Chronology chronology85 = dateTime53.getChronology();
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod((long) '4', chronology85);
        mutablePeriod86.setPeriod((long) 0);
        mutablePeriod86.setMinutes(21262214);
        mutablePeriod86.setWeeks(41);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(dateTime11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(dateTime53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(dateTime64);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(dateTime77);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(chronology85);
    }

    @Test
    public void test13744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13744");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (byte) 0, chronology1);
        int int3 = mutablePeriod2.getHours();
        org.joda.time.DurationFieldType[] durationFieldTypeArray4 = mutablePeriod2.getFieldTypes();
        mutablePeriod2.addYears(592);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(durationFieldTypeArray4);
    }

    @Test
    public void test13745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13745");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology18 = null;
        mutablePeriod13.setPeriod((org.joda.time.ReadableDuration) duration17, chronology18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration25 = duration22.minus((long) '4');
        mutablePeriod13.add((org.joda.time.ReadableDuration) duration25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType28 = periodType27.withHoursRemoved();
        org.joda.time.PeriodType periodType29 = periodType28.withSecondsRemoved();
        boolean boolean30 = mutablePeriod13.equals((java.lang.Object) periodType28);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        boolean boolean37 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration35.toIntervalTo(readableInstant38);
        org.joda.time.Interval interval40 = interval39.toInterval();
        org.joda.time.Chronology chronology41 = interval40.getChronology();
        org.joda.time.Period period42 = new org.joda.time.Period((java.lang.Object) interval8, periodType28, chronology41);
        org.joda.time.format.PeriodFormatter periodFormatter43 = null;
        java.lang.String str44 = period42.toString(periodFormatter43);
        int int45 = period42.getDays();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period47 = period42.withMonths(1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(chronology41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT0S" + "'", str44, "PT0S");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test13746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13746");
        org.joda.time.Hours hours0 = org.joda.time.Hours.FOUR;
        java.lang.String str1 = hours0.toString();
        org.joda.time.Hours hours3 = hours0.dividedBy((int) '4');
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "PT4H" + "'", str1, "PT4H");
        org.junit.Assert.assertNotNull(hours3);
    }

    @Test
    public void test13747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13747");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(2147483647, 592, (-97), (int) ' ', (int) ' ', 56, (-840), 903);
        mutablePeriod8.addHours(134);
    }

    @Test
    public void test13748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13748");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.dayTime();
        org.joda.time.PeriodType periodType5 = periodType4.withMonthsRemoved();
        org.joda.time.PeriodType periodType6 = periodType4.withMillisRemoved();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Chronology chronology20 = interval19.getChronology();
        org.joda.time.Period period21 = new org.joda.time.Period(1644572086619L, chronology20);
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1644572115073L, 0L, chronology20);
        org.joda.time.Period period23 = new org.joda.time.Period(0L, (long) 6, periodType4, chronology20);
        org.joda.time.Period period24 = new org.joda.time.Period(1644572309455L, 1644572145040L, periodType4);
        org.joda.time.Days days25 = period24.toStandardDays();
        org.joda.time.Period period27 = period24.multipliedBy((-53));
        org.joda.time.Period period29 = period24.minusSeconds((int) (byte) -1);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(chronology20);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
    }

    @Test
    public void test13749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13749");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.plusDays(1);
        org.joda.time.ReadableInstant readableInstant7 = null;
        java.lang.Object obj8 = null;
        org.joda.time.Duration duration9 = new org.joda.time.Duration(obj8);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.Days days11 = duration9.toStandardDays();
        org.joda.time.Days days12 = days11.negated();
        org.joda.time.Period period13 = period6.plus((org.joda.time.ReadablePeriod) days11);
        org.joda.time.Period period15 = period13.plusDays((-1));
        org.joda.time.Period period17 = period15.minusYears((int) (byte) 0);
        org.joda.time.Period period19 = period15.plusMonths(456);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test13750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13750");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 52);
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType5 = seconds4.getFieldType();
        org.joda.time.Seconds seconds7 = seconds4.plus((-1));
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.TWO;
        java.lang.String str9 = seconds8.toString();
        org.joda.time.Seconds seconds10 = seconds7.plus(seconds8);
        org.joda.time.Seconds seconds11 = seconds3.minus(seconds8);
        org.joda.time.ReadablePeriod readablePeriod12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.standardSecondsIn(readablePeriod12);
        org.joda.time.Seconds seconds14 = seconds11.plus(seconds13);
        int int15 = seconds11.getSeconds();
        org.joda.time.Duration duration16 = seconds11.toStandardDuration();
        boolean boolean17 = duration1.isEqual((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration19 = duration16.withMillis(1644572418222L);
        java.lang.Class<?> wildcardClass20 = duration16.getClass();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT2S" + "'", str9, "PT2S");
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test13751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13751");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) ' ', chronology1);
        int int3 = mutablePeriod2.getMillis();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        boolean boolean10 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Interval interval12 = duration8.toIntervalTo(readableInstant11);
        org.joda.time.Interval interval13 = interval12.toInterval();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        boolean boolean23 = interval13.isAfter((org.joda.time.ReadableInterval) interval22);
        org.joda.time.DateTime dateTime24 = interval13.getStart();
        org.joda.time.ReadableInstant readableInstant25 = null;
        boolean boolean26 = interval13.isAfter(readableInstant25);
        org.joda.time.Duration duration27 = interval13.toDuration();
        mutablePeriod2.add((org.joda.time.ReadableInterval) interval13);
        mutablePeriod2.setMonths((-35));
        mutablePeriod2.setHours(7);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration27);
    }

    @Test
    public void test13752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13752");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.millis((long) '4');
        long long9 = duration8.getMillis();
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology18 = null;
        mutablePeriod13.setPeriod((org.joda.time.ReadableDuration) duration17, chronology18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        org.joda.time.Interval interval29 = interval28.toInterval();
        org.joda.time.DateTime dateTime30 = interval29.getEnd();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        boolean boolean37 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration35.toIntervalTo(readableInstant38);
        org.joda.time.Interval interval40 = interval39.toInterval();
        org.joda.time.DateTime dateTime41 = interval40.getEnd();
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime30, (org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, (org.joda.time.ReadableInstant) dateTime30);
        java.lang.String str44 = dateTime30.toString();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, (org.joda.time.ReadableInstant) dateTime30);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        org.joda.time.Interval interval55 = interval54.toInterval();
        org.joda.time.DateTime dateTime56 = interval55.getEnd();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant59 = null;
        java.lang.Object obj60 = null;
        org.joda.time.Duration duration61 = new org.joda.time.Duration(obj60);
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant59, (org.joda.time.ReadableDuration) duration61);
        boolean boolean63 = duration58.isShorterThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration61.toIntervalTo(readableInstant64);
        org.joda.time.Interval interval66 = interval65.toInterval();
        org.joda.time.DateTime dateTime67 = interval66.getEnd();
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime56, (org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime30, (org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.Chronology chronology70 = dateTime30.getChronology();
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime30);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType74 = seconds73.getFieldType();
        org.joda.time.Seconds seconds76 = seconds73.plus((-1));
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.TWO;
        java.lang.String str78 = seconds77.toString();
        org.joda.time.Seconds seconds79 = seconds76.plus(seconds77);
        org.joda.time.Seconds seconds80 = seconds72.minus(seconds77);
        org.joda.time.ReadableInterval readableInterval81 = null;
        org.joda.time.Seconds seconds82 = org.joda.time.Seconds.secondsIn(readableInterval81);
        org.joda.time.Seconds seconds83 = seconds77.plus(seconds82);
        org.joda.time.Seconds seconds84 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds82);
        int int85 = seconds82.getSeconds();
        org.joda.time.Duration duration86 = seconds82.toStandardDuration();
        long long87 = duration86.getStandardHours();
        org.joda.time.Period period88 = duration86.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime30, (org.joda.time.ReadableDuration) duration86);
        long long90 = duration86.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 52L + "'", long9 == 52L);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(dateTime30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(dateTime41);
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "2022-02-11T09:43:41.029Z" + "'", str44, "2022-02-11T09:43:41.029Z");
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(dateTime56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(dateTime67);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "PT2S" + "'", str78, "PT2S");
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 0L + "'", long87 == 0L);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
    }

    @Test
    public void test13753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13753");
        org.joda.time.Days days1 = org.joda.time.Days.ONE;
        org.joda.time.Days days2 = days1.negated();
        org.joda.time.Days days3 = org.joda.time.Days.ONE;
        org.joda.time.Days days4 = days3.negated();
        org.joda.time.Days days5 = org.joda.time.Days.ONE;
        org.joda.time.Days days6 = days5.negated();
        boolean boolean7 = days4.isGreaterThan(days6);
        org.joda.time.Days days8 = days1.plus(days6);
        org.joda.time.PeriodType periodType9 = days8.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withMinutesRemoved();
        org.joda.time.PeriodType periodType11 = periodType10.withMonthsRemoved();
        org.joda.time.PeriodType periodType12 = periodType11.withHoursRemoved();
        org.joda.time.Period period13 = new org.joda.time.Period(1644572394520L, periodType11);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
    }

    @Test
    public void test13754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13754");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Period period8 = period6.withSeconds(1);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.Days days13 = duration11.toStandardDays();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours(1644572080830L);
        int int16 = duration11.compareTo((org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = period8.equals((java.lang.Object) int16);
        org.joda.time.Period period19 = period8.minusWeeks(52);
        org.joda.time.Period period21 = period19.withHours(0);
        org.joda.time.Period period23 = period21.minusMillis(0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test13755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13755");
        org.joda.time.format.PeriodFormatter periodFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod2 = org.joda.time.MutablePeriod.parse("2022-02-11T09:37:59.042Z", periodFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13756");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.Period period9 = period6.toPeriod();
        org.joda.time.Period period11 = period9.minusMinutes((int) ' ');
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds12.multipliedBy((int) (byte) 1);
        java.lang.String str15 = seconds12.toString();
        org.joda.time.PeriodType periodType16 = seconds12.getPeriodType();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.plus((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.TWO;
        java.lang.String str22 = seconds21.toString();
        org.joda.time.Seconds seconds23 = seconds20.plus(seconds21);
        org.joda.time.Seconds seconds24 = seconds12.minus(seconds20);
        org.joda.time.DurationFieldType durationFieldType25 = seconds24.getFieldType();
        org.joda.time.Period period27 = period11.withField(durationFieldType25, (int) 'a');
        org.joda.time.Period period29 = period11.withHours(9);
        org.joda.time.Period period31 = period29.plusWeeks(52114);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT3S" + "'", str15, "PT3S");
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT2S" + "'", str22, "PT2S");
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
    }

    @Test
    public void test13757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13757");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(54, 456825, (-2147483648), 54);
    }

    @Test
    public void test13758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13758");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.Period period9 = period6.toPeriod();
        org.joda.time.Period period11 = period9.withMonths((int) '4');
        org.joda.time.Period period12 = period9.normalizedStandard();
        org.joda.time.Period period14 = period12.plusDays(592);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = period12.getValue((-9700));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -9700");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test13759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13759");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(107);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13760");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.years();
        org.joda.time.PeriodType periodType2 = periodType1.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(periodType1);
        org.joda.time.PeriodType periodType4 = periodType1.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((int) (byte) -1, (int) (byte) -1, 10, 10, (int) ' ', (int) (byte) 1, 0, (int) 'a');
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        boolean boolean22 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.minutesIn(readableInterval54);
        java.lang.String str56 = minutes55.toString();
        org.joda.time.PeriodType periodType57 = minutes55.getPeriodType();
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant53, periodType57);
        org.joda.time.PeriodType periodType59 = periodType57.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration20, (org.joda.time.ReadableInstant) dateTime44, periodType59);
        org.joda.time.PeriodType periodType61 = periodType59.withSecondsRemoved();
        boolean boolean62 = mutablePeriod15.equals((java.lang.Object) periodType61);
        org.joda.time.PeriodType periodType63 = periodType61.withMonthsRemoved();
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.hours();
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant73 = null;
        java.lang.Object obj74 = null;
        org.joda.time.Duration duration75 = new org.joda.time.Duration(obj74);
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant73, (org.joda.time.ReadableDuration) duration75);
        boolean boolean77 = duration72.isShorterThan((org.joda.time.ReadableDuration) duration75);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Interval interval79 = duration75.toIntervalTo(readableInstant78);
        org.joda.time.Interval interval80 = interval79.toInterval();
        org.joda.time.Chronology chronology81 = interval80.getChronology();
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((long) 9, chronology81);
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(10L, 1644572107117L, periodType69, chronology81);
        org.joda.time.Period period84 = new org.joda.time.Period(36000L, chronology81);
        org.joda.time.Period period85 = new org.joda.time.Period(1644572213488L, 1644572225773L, chronology81);
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod(1644572206510L, periodType63, chronology81);
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod(1644572088216L, chronology81);
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod(1644572108933L, periodType1, chronology81);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod88.addHours(2719);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PT0M" + "'", str56, "PT0M");
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(interval79);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(chronology81);
    }

    @Test
    public void test13761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13761");
        org.joda.time.Period period8 = new org.joda.time.Period(2, (int) '4', (-3), 0, (-963), 456825, 0, (int) (byte) 10);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) (short) 10, 1644572077926L, chronology11);
        org.joda.time.Period period14 = period12.withDays((int) (byte) 10);
        int int15 = period12.size();
        int[] intArray16 = period12.getValues();
        org.joda.time.Period period18 = period12.minusMillis((int) (short) 10);
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType21);
        mutablePeriod22.setYears(0);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology27 = null;
        mutablePeriod22.setPeriod((org.joda.time.ReadableDuration) duration26, chronology27);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.DateTime dateTime39 = interval38.getEnd();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Interval interval48 = duration44.toIntervalTo(readableInstant47);
        org.joda.time.Interval interval49 = interval48.toInterval();
        org.joda.time.DateTime dateTime50 = interval49.getEnd();
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableInstant) dateTime50);
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, (org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(1644572081298L, (long) (byte) 1);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration60 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration63 = duration60.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration65 = duration57.withDurationAdded((org.joda.time.ReadableDuration) duration60, (int) (short) 1);
        org.joda.time.Days days66 = duration65.toStandardDays();
        mutablePeriod55.add((org.joda.time.ReadableDuration) duration65);
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableDuration) duration65);
        mutablePeriod68.setMillis((int) (byte) -1);
        mutablePeriod68.setWeeks(97);
        org.joda.time.Period period73 = period18.plus((org.joda.time.ReadablePeriod) mutablePeriod68);
        org.joda.time.Days days74 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) mutablePeriod68);
        mutablePeriod68.addMonths((int) '#');
        org.joda.time.Period period77 = period8.minus((org.joda.time.ReadablePeriod) mutablePeriod68);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52, 1, 1, 3, 9, 34, 37, 916]");
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(dateTime50);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(period77);
    }

    @Test
    public void test13762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13762");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = duration2.toPeriod(chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration13 = duration10.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration15 = duration7.withDurationAdded((org.joda.time.ReadableDuration) duration10, (int) (short) 1);
        boolean boolean16 = duration2.isEqual((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = duration19.toPeriodFrom(readableInstant20);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration19.toPeriod(chronology22);
        org.joda.time.Period period25 = period23.minusYears((int) (byte) -1);
        org.joda.time.Period period27 = period23.plusMinutes((-1));
        org.joda.time.Period period29 = period23.withMonths(3);
        int int31 = period23.getValue(0);
        org.joda.time.Hours hours32 = period23.toStandardHours();
        boolean boolean33 = duration15.equals((java.lang.Object) period23);
        org.joda.time.Period period35 = period23.plusWeeks((int) (short) 0);
        org.joda.time.Period period36 = period35.toPeriod();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
    }

    @Test
    public void test13763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13763");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Period period3 = weeks2.toPeriod();
        org.joda.time.Period period5 = org.joda.time.Period.years((int) (short) 0);
        java.lang.String str6 = period5.toString();
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period9 = period5.withField(durationFieldType7, (int) 'a');
        org.joda.time.Period period10 = period3.minus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.PeriodType periodType11 = period9.getPeriodType();
        org.joda.time.PeriodType periodType12 = periodType11.withHoursRemoved();
        org.joda.time.PeriodType periodType13 = periodType12.withDaysRemoved();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test13764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13764");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn(readableInterval9);
        org.joda.time.Period period11 = period8.minus((org.joda.time.ReadablePeriod) hours10);
        org.joda.time.Hours hours13 = hours10.dividedBy((int) '4');
        org.joda.time.Duration duration14 = hours13.toStandardDuration();
        org.joda.time.Hours hours16 = org.joda.time.Hours.hours((-1));
        org.joda.time.Period period17 = hours16.toPeriod();
        org.joda.time.DurationFieldType durationFieldType18 = hours16.getFieldType();
        org.joda.time.Hours hours20 = hours16.plus((-369700));
        org.joda.time.Hours hours21 = hours13.minus(hours20);
        org.joda.time.Hours hours22 = null;
        boolean boolean23 = hours13.isGreaterThan(hours22);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test13765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13765");
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.millis((long) '4');
        long long12 = duration11.getStandardDays();
        boolean boolean13 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.DateTime dateTime31 = interval30.getEnd();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        org.joda.time.Interval interval41 = interval40.toInterval();
        org.joda.time.DateTime dateTime42 = interval41.getEnd();
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant46 = null;
        java.lang.Object obj47 = null;
        org.joda.time.Duration duration48 = new org.joda.time.Duration(obj47);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant46, (org.joda.time.ReadableDuration) duration48);
        boolean boolean50 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.minutesIn(readableInterval52);
        java.lang.String str54 = minutes53.toString();
        org.joda.time.PeriodType periodType55 = minutes53.getPeriodType();
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant51, periodType55);
        org.joda.time.PeriodType periodType57 = periodType55.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration18, (org.joda.time.ReadableInstant) dateTime42, periodType57);
        org.joda.time.Interval interval59 = duration6.toIntervalFrom((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration64 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration67 = duration64.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration69 = duration61.withDurationAdded((org.joda.time.ReadableDuration) duration64, (int) (short) 1);
        org.joda.time.Duration duration72 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration75 = duration72.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration77 = duration61.withDurationAdded((org.joda.time.ReadableDuration) duration75, (int) (short) 100);
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime42, (org.joda.time.ReadableDuration) duration77);
        org.joda.time.Chronology chronology79 = dateTime42.getChronology();
        org.joda.time.Chronology chronology80 = dateTime42.getChronology();
        org.joda.time.Period period81 = new org.joda.time.Period(0L, 1644572088907L, chronology80);
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(1644572307440L, 1644572268710L, chronology80);
        mutablePeriod82.setMillis(11);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "PT0M" + "'", str54, "PT0M");
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(chronology79);
        org.junit.Assert.assertNotNull(chronology80);
    }

    @Test
    public void test13766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13766");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 0);
        org.joda.time.format.PeriodFormatter periodFormatter2 = null;
        java.lang.String str3 = period1.toString(periodFormatter2);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutesIn(readableInterval4);
        java.lang.String str6 = minutes5.toString();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType10 = minutes9.getPeriodType();
        org.joda.time.PeriodType periodType11 = periodType10.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.eras();
        boolean boolean13 = periodType10.isSupported(durationFieldType12);
        int int14 = minutes5.get(durationFieldType12);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.minutesIn(readableInterval15);
        org.joda.time.Minutes minutes17 = minutes5.minus(minutes16);
        org.joda.time.Duration duration18 = minutes5.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType19 = minutes5.getFieldType();
        int int20 = period1.get(durationFieldType19);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period1);
        int int22 = period1.getYears();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0S" + "'", str3, "PT0S");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0M" + "'", str6, "PT0M");
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test13767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13767");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        mutablePeriod9.setPeriod((org.joda.time.ReadableInterval) interval22);
        org.joda.time.DateTime dateTime24 = interval22.getStart();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes(1644572194576L);
        org.joda.time.Duration duration28 = duration26.withMillis(1644572143374L);
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime24, (org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean42 = duration34.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes43 = duration34.toStandardMinutes();
        org.joda.time.Minutes minutes44 = minutes43.negated();
        org.joda.time.Duration duration47 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = duration47.toPeriodFrom(readableInstant48);
        org.joda.time.Period period51 = period49.minusSeconds((int) '4');
        org.joda.time.Minutes minutes52 = period49.toStandardMinutes();
        boolean boolean53 = minutes43.isLessThan(minutes52);
        org.joda.time.Minutes minutes55 = minutes43.minus((int) (short) 0);
        org.joda.time.PeriodType periodType56 = minutes43.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType57 = minutes43.getFieldType();
        mutablePeriod29.set(durationFieldType57, 40);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(durationFieldType57);
    }

    @Test
    public void test13768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13768");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 100, (int) (byte) 10, (int) (short) 0, (int) (short) 10);
        org.joda.time.format.PeriodFormatter periodFormatter5 = null;
        java.lang.String str6 = mutablePeriod4.toString(periodFormatter5);
        mutablePeriod4.addHours(13);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod4.copy();
        org.joda.time.MutablePeriod mutablePeriod10 = mutablePeriod9.toMutablePeriod();
        mutablePeriod10.add(1644572241653L);
        mutablePeriod10.addHours((-22));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT100H10M0.010S" + "'", str6, "PT100H10M0.010S");
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
    }

    @Test
    public void test13769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13769");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType2 = periodType1.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(periodType1);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.weeks();
        java.lang.String str5 = durationFieldType4.toString();
        boolean boolean6 = periodType1.isSupported(durationFieldType4);
        org.joda.time.Period period7 = new org.joda.time.Period((long) 8, periodType1);
        org.joda.time.PeriodType periodType8 = periodType1.withDaysRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withYearsRemoved();
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours12 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours13 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours14 = hours12.minus(hours13);
        int int15 = hours12.getHours();
        org.joda.time.Hours hours16 = hours11.minus(hours12);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = duration19.toPeriodFrom(readableInstant20);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration19.toPeriod(chronology22);
        org.joda.time.Period period25 = period23.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Hours hours27 = org.joda.time.Hours.hoursIn(readableInterval26);
        org.joda.time.Period period28 = period25.minus((org.joda.time.ReadablePeriod) hours27);
        org.joda.time.Hours hours29 = hours27.negated();
        org.joda.time.Duration duration32 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = duration32.toPeriodFrom(readableInstant33);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration32.toPeriod(chronology35);
        org.joda.time.Period period38 = period36.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Hours hours40 = org.joda.time.Hours.hoursIn(readableInterval39);
        org.joda.time.Period period41 = period38.minus((org.joda.time.ReadablePeriod) hours40);
        org.joda.time.Hours hours42 = hours40.negated();
        org.joda.time.Hours hours43 = hours27.minus(hours40);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant46 = null;
        java.lang.Object obj47 = null;
        org.joda.time.Duration duration48 = new org.joda.time.Duration(obj47);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant46, (org.joda.time.ReadableDuration) duration48);
        boolean boolean50 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Interval interval52 = duration48.toIntervalTo(readableInstant51);
        org.joda.time.Interval interval53 = interval52.toInterval();
        org.joda.time.Hours hours54 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval53);
        org.joda.time.Hours hours55 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval53);
        org.joda.time.Hours hours57 = hours55.minus(8);
        boolean boolean58 = hours27.isLessThan(hours55);
        org.joda.time.Hours hours59 = hours12.plus(hours55);
        org.joda.time.Hours hours61 = hours55.multipliedBy(32);
        org.joda.time.DurationFieldType durationFieldType62 = hours55.getFieldType();
        int int63 = periodType8.indexOf(durationFieldType62);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "weeks" + "'", str5, "weeks");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test13770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13770");
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.TWO;
        java.lang.String str9 = seconds8.toString();
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        org.joda.time.Seconds seconds14 = seconds11.plus((-1));
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.TWO;
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Seconds seconds17 = seconds14.plus(seconds15);
        org.joda.time.Seconds seconds18 = seconds10.minus(seconds15);
        org.joda.time.PeriodType periodType19 = seconds10.getPeriodType();
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds10);
        org.joda.time.Seconds seconds22 = seconds20.multipliedBy((int) '#');
        org.joda.time.Seconds seconds23 = seconds8.plus(seconds22);
        org.joda.time.PeriodType periodType24 = seconds23.getPeriodType();
        org.joda.time.Duration duration27 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = duration27.toPeriodFrom(readableInstant28);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration27.toPeriod(chronology30);
        long long32 = duration27.getStandardSeconds();
        boolean boolean33 = periodType24.equals((java.lang.Object) long32);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period34 = new org.joda.time.Period(213044, (-41), (-27409538), 456368756, 284, (-9700), (-97), (-13), periodType24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT2S" + "'", str9, "PT2S");
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2S" + "'", str16, "PT2S");
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test13771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13771");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(600L);
        org.joda.time.Days days2 = duration1.toStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test13772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13772");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(142);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13773");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 0, 8, 53, 369700);
        int int5 = mutablePeriod4.getWeeks();
        org.joda.time.DurationFieldType durationFieldType7 = mutablePeriod4.getFieldType(0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
    }

    @Test
    public void test13774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13774");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 0);
        java.lang.String str2 = period1.toString();
        org.joda.time.Period period4 = period1.withMonths(35);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration6 = period4.toDurationFrom(readableInstant5);
        org.joda.time.Duration duration8 = duration6.minus(1644572105679L);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0S" + "'", str2, "PT0S");
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration8);
    }

    @Test
    public void test13775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13775");
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks2.plus((int) '4');
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean8 = weeks5.isGreaterThan(weeks7);
        org.joda.time.DurationFieldType durationFieldType9 = weeks7.getFieldType();
        boolean boolean10 = weeks2.isGreaterThan(weeks7);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean14 = weeks11.isGreaterThan(weeks13);
        java.lang.String str15 = weeks11.toString();
        org.joda.time.Weeks weeks16 = weeks2.plus(weeks11);
        org.joda.time.PeriodType periodType17 = weeks16.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1644572131521L, 1644572184071L, periodType17);
        org.joda.time.Period period19 = mutablePeriod18.toPeriod();
        int int20 = mutablePeriod18.getYears();
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-2147483648W" + "'", str15, "P-2147483648W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test13776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13776");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.Days days3 = days1.plus(36);
        org.joda.time.PeriodType periodType4 = days1.getPeriodType();
        org.joda.time.Days days6 = org.joda.time.Days.days(32);
        boolean boolean7 = days1.isGreaterThan(days6);
        org.joda.time.Duration duration9 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration11 = duration9.plus(1644572076849L);
        org.joda.time.Days days12 = duration9.toStandardDays();
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.eras();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = days12.isSupported(durationFieldType13);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration23 = duration20.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration25 = duration17.withDurationAdded((org.joda.time.ReadableDuration) duration20, (int) (short) 1);
        org.joda.time.Days days26 = duration25.toStandardDays();
        org.joda.time.Days days27 = days12.plus(days26);
        org.joda.time.DurationFieldType durationFieldType28 = days12.getFieldType();
        boolean boolean29 = days6.isGreaterThan(days12);
        org.joda.time.Days days31 = days12.plus(218);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "eras" + "'", str14, "eras");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(days31);
    }

    @Test
    public void test13777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13777");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Period period20 = interval18.toPeriod();
        org.joda.time.Period period21 = interval18.toPeriod();
        org.joda.time.Period period23 = period21.minusMillis((int) (byte) 1);
        org.joda.time.Duration duration26 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = duration26.toPeriodFrom(readableInstant27);
        org.joda.time.Period period30 = period28.minusSeconds((int) '4');
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType35 = mutablePeriod33.getFieldType(1);
        org.joda.time.Period period37 = period28.withField(durationFieldType35, (int) (byte) 100);
        int int38 = period23.get(durationFieldType35);
        org.joda.time.Period period40 = period23.plusSeconds(246);
        org.joda.time.Period period42 = period40.withWeeks(17);
        org.joda.time.Period period44 = period40.minusWeeks(456368756);
        org.joda.time.Period period46 = new org.joda.time.Period(1L);
        org.joda.time.Period period48 = period46.minusMonths((-101));
        org.joda.time.Period period50 = period46.plusMillis(3);
        org.joda.time.Period period52 = period50.multipliedBy(2);
        org.joda.time.Period period54 = period50.withWeeks(10);
        org.joda.time.Duration duration55 = period50.toStandardDuration();
        org.joda.time.Period period57 = period50.withYears(601);
        org.joda.time.DurationFieldType durationFieldType59 = period57.getFieldType((int) (short) 0);
        org.joda.time.ReadableInstant readableInstant61 = null;
        java.lang.Object obj62 = null;
        org.joda.time.Duration duration63 = new org.joda.time.Duration(obj62);
        org.joda.time.Period period64 = new org.joda.time.Period(readableInstant61, (org.joda.time.ReadableDuration) duration63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration63, readableInstant65);
        org.joda.time.Duration duration68 = org.joda.time.Duration.millis((long) '4');
        long long69 = duration68.getStandardDays();
        boolean boolean70 = duration63.isLongerThan((org.joda.time.ReadableDuration) duration68);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType72 = periodType71.withHoursRemoved();
        org.joda.time.Period period73 = duration68.toPeriod(periodType71);
        org.joda.time.PeriodType periodType74 = periodType71.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((long) (short) 1, (long) (byte) -1);
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant82 = null;
        java.lang.Object obj83 = null;
        org.joda.time.Duration duration84 = new org.joda.time.Duration(obj83);
        org.joda.time.Period period85 = new org.joda.time.Period(readableInstant82, (org.joda.time.ReadableDuration) duration84);
        boolean boolean86 = duration81.isShorterThan((org.joda.time.ReadableDuration) duration84);
        org.joda.time.ReadableInstant readableInstant87 = null;
        org.joda.time.Interval interval88 = duration84.toIntervalTo(readableInstant87);
        org.joda.time.Interval interval89 = interval88.toInterval();
        org.joda.time.Chronology chronology90 = interval89.getChronology();
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod((-1L), chronology90);
        mutablePeriod77.add(1644572099705L, chronology90);
        org.joda.time.Period period93 = new org.joda.time.Period(1644572206976L, periodType74, chronology90);
        boolean boolean94 = durationFieldType59.isSupported(chronology90);
        int int95 = period44.get(durationFieldType59);
        int int96 = period44.getHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(interval88);
        org.junit.Assert.assertNotNull(interval89);
        org.junit.Assert.assertNotNull(chronology90);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test13778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13778");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(36000000L, 0L);
        mutablePeriod2.setWeeks(52);
        mutablePeriod2.setHours((int) (byte) 1);
        int int7 = mutablePeriod2.getYears();
        org.joda.time.ReadablePeriod readablePeriod8 = null;
        mutablePeriod2.setPeriod(readablePeriod8);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test13779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13779");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.standard();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (short) 100, (-1L), periodType2);
        org.joda.time.Days days4 = org.joda.time.Days.ONE;
        org.joda.time.Days days5 = days4.negated();
        org.joda.time.Days days6 = org.joda.time.Days.ONE;
        org.joda.time.Days days7 = days6.negated();
        org.joda.time.Days days8 = org.joda.time.Days.ONE;
        org.joda.time.Days days9 = days8.negated();
        boolean boolean10 = days7.isGreaterThan(days9);
        org.joda.time.Days days11 = days4.plus(days9);
        int int12 = days4.getDays();
        int int13 = days4.getDays();
        mutablePeriod3.mergePeriod((org.joda.time.ReadablePeriod) days4);
        int int15 = mutablePeriod3.getDays();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test13780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13780");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) '#');
        int int2 = seconds1.getSeconds();
        int int3 = seconds1.getSeconds();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (short) 10);
        org.joda.time.Seconds seconds7 = seconds5.minus((-9700));
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType10 = seconds9.getFieldType();
        org.joda.time.Seconds seconds12 = seconds9.plus((-1));
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.TWO;
        java.lang.String str14 = seconds13.toString();
        org.joda.time.Seconds seconds15 = seconds12.plus(seconds13);
        org.joda.time.Seconds seconds16 = seconds8.minus(seconds13);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.secondsIn(readableInterval17);
        org.joda.time.Seconds seconds19 = seconds13.plus(seconds18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        org.joda.time.Seconds seconds24 = seconds21.plus((-1));
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.TWO;
        java.lang.String str26 = seconds25.toString();
        org.joda.time.Seconds seconds27 = seconds24.plus(seconds25);
        org.joda.time.Seconds seconds28 = seconds20.minus(seconds25);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.Seconds seconds31 = seconds25.plus(seconds30);
        org.joda.time.Seconds seconds32 = seconds13.plus(seconds30);
        org.joda.time.Seconds seconds33 = seconds7.plus(seconds32);
        org.joda.time.DurationFieldType durationFieldType34 = seconds33.getFieldType();
        org.joda.time.PeriodType periodType35 = seconds33.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 35 + "'", int2 == 35);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 35 + "'", int3 == 35);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT2S" + "'", str14, "PT2S");
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2S" + "'", str26, "PT2S");
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(periodType35);
    }

    @Test
    public void test13781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13781");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.Period period3 = new org.joda.time.Period((java.lang.Object) duration1);
        org.joda.time.Duration duration4 = period3.toStandardDuration();
        org.joda.time.Period period6 = period3.plusMonths(298);
        int int7 = period6.size();
        org.joda.time.Period period9 = period6.plusDays(100);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test13782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13782");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        mutablePeriod9.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod13);
        mutablePeriod13.setPeriod((long) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod19 = mutablePeriod13.copy();
        int int20 = mutablePeriod13.getSeconds();
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) 1);
        mutablePeriod30.setPeriod((org.joda.time.ReadablePeriod) minutes33);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        mutablePeriod30.setPeriod((org.joda.time.ReadableInterval) interval43);
        mutablePeriod13.setPeriod((org.joda.time.ReadableInterval) interval43);
        long long46 = interval43.getStartMillis();
        org.joda.time.Interval interval47 = interval43.toInterval();
        long long48 = interval47.toDurationMillis();
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
// flaky:         org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1644572621741L + "'", long46 == 1644572621741L);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
    }

    @Test
    public void test13783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13783");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        boolean boolean29 = interval19.isAfter((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Period period30 = interval28.toPeriod();
        boolean boolean31 = interval9.isBefore((org.joda.time.ReadableInterval) interval28);
        java.lang.String str32 = interval28.toString();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Period period35 = new org.joda.time.Period(1644572109169L);
        boolean boolean36 = interval28.equals((java.lang.Object) period35);
        org.joda.time.Chronology chronology37 = interval28.getChronology();
        long long38 = interval28.getStartMillis();
        org.joda.time.Period period39 = interval28.toPeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "2022-02-11T09:43:41.759Z/2022-02-11T09:43:41.759Z" + "'", str32, "2022-02-11T09:43:41.759Z/2022-02-11T09:43:41.759Z");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(chronology37);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572621759L + "'", long38 == 1644572621759L);
        org.junit.Assert.assertNotNull(period39);
    }

    @Test
    public void test13784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13784");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Period period4 = new org.joda.time.Period(0L, (long) 100);
        org.joda.time.Weeks weeks5 = period4.toStandardWeeks();
        org.joda.time.Weeks weeks7 = weeks5.multipliedBy((int) (byte) 1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks10 = weeks9.negated();
        int int11 = weeks9.getWeeks();
        org.joda.time.Weeks weeks13 = weeks9.minus(3);
        org.joda.time.Period period15 = new org.joda.time.Period((long) (byte) 1);
        boolean boolean16 = weeks9.equals((java.lang.Object) (byte) 1);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks19 = weeks18.negated();
        int int20 = weeks18.getWeeks();
        org.joda.time.Weeks weeks22 = weeks18.minus(3);
        boolean boolean23 = weeks9.isGreaterThan(weeks22);
        boolean boolean24 = weeks5.isGreaterThan(weeks22);
        org.joda.time.Weeks weeks26 = weeks22.dividedBy(298);
        boolean boolean27 = weeks1.isGreaterThan(weeks22);
        org.joda.time.PeriodType periodType28 = weeks1.getPeriodType();
        org.joda.time.PeriodType periodType29 = periodType28.withWeeksRemoved();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
    }

    @Test
    public void test13785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13785");
        org.joda.time.format.PeriodFormatter periodFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period2 = org.joda.time.Period.parse("2022-02-11T09:41:24.350Z", periodFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13786");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.plus((int) '4');
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean6 = weeks3.isGreaterThan(weeks5);
        org.joda.time.DurationFieldType durationFieldType7 = weeks5.getFieldType();
        boolean boolean8 = weeks0.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean12 = weeks9.isGreaterThan(weeks11);
        java.lang.String str13 = weeks9.toString();
        org.joda.time.Weeks weeks14 = weeks0.plus(weeks9);
        org.joda.time.PeriodType periodType15 = weeks9.getPeriodType();
        org.joda.time.Duration duration16 = weeks9.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-2147483648W" + "'", str13, "P-2147483648W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(duration16);
    }

    @Test
    public void test13787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13787");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType11 = periodType10.withSecondsRemoved();
        org.joda.time.PeriodType periodType12 = periodType11.withMillisRemoved();
        boolean boolean14 = periodType12.equals((java.lang.Object) "2022-02-11T09:34:47.506Z");
        org.joda.time.Period period15 = interval8.toPeriod(periodType12);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval8);
        int int17 = seconds16.getSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test13788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13788");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = duration4.toPeriodFrom(readableInstant7);
        org.joda.time.Period period10 = period8.plusMillis(90);
        org.joda.time.Period period12 = period10.plusWeeks((int) (short) 10);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test13789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13789");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        mutablePeriod2.addWeeks((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray5 = mutablePeriod2.getFieldTypes();
        int int6 = mutablePeriod2.getWeeks();
        org.joda.time.Period period8 = org.joda.time.Period.weeks((-1));
        mutablePeriod2.add((org.joda.time.ReadablePeriod) period8);
        org.joda.time.MutablePeriod mutablePeriod10 = period8.toMutablePeriod();
        mutablePeriod10.add(1644572289108L);
        org.junit.Assert.assertNotNull(durationFieldTypeArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(mutablePeriod10);
    }

    @Test
    public void test13790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13790");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Seconds seconds4 = period3.toStandardSeconds();
        org.joda.time.Seconds seconds5 = period3.toStandardSeconds();
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType8 = seconds7.getFieldType();
        org.joda.time.Seconds seconds10 = seconds7.plus((-1));
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.TWO;
        java.lang.String str12 = seconds11.toString();
        org.joda.time.Seconds seconds13 = seconds10.plus(seconds11);
        org.joda.time.Seconds seconds14 = seconds6.minus(seconds11);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.secondsIn(readableInterval15);
        org.joda.time.Seconds seconds17 = seconds11.plus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds16);
        int int19 = seconds16.getSeconds();
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        org.joda.time.Seconds seconds24 = seconds21.plus((-1));
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.TWO;
        java.lang.String str26 = seconds25.toString();
        org.joda.time.Seconds seconds27 = seconds24.plus(seconds25);
        org.joda.time.Seconds seconds28 = seconds20.minus(seconds25);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.Seconds seconds31 = seconds25.plus(seconds30);
        boolean boolean32 = seconds16.isGreaterThan(seconds31);
        org.joda.time.Seconds seconds33 = seconds5.minus(seconds31);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.seconds((int) (byte) 100);
        java.lang.String str36 = seconds35.toString();
        org.joda.time.Seconds seconds38 = seconds35.dividedBy(2719);
        org.joda.time.Seconds seconds39 = seconds5.minus(seconds35);
        org.joda.time.Duration duration40 = seconds39.toStandardDuration();
        long long41 = duration40.getMillis();
        long long42 = duration40.getStandardSeconds();
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2S" + "'", str12, "PT2S");
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2S" + "'", str26, "PT2S");
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT100S" + "'", str36, "PT100S");
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-100000L) + "'", long41 == (-100000L));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-100L) + "'", long42 == (-100L));
    }

    @Test
    public void test13791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13791");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(1644572555560L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test13792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13792");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(34);
        org.joda.time.Days days2 = hours1.toStandardDays();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test13793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13793");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-100), (-8380800), 29, 798);
    }

    @Test
    public void test13794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13794");
        org.joda.time.Days days3 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.PeriodType periodType4 = days3.getPeriodType();
        org.joda.time.Period period5 = new org.joda.time.Period((long) (-97), 1644572085189L, periodType4);
        java.lang.String str6 = periodType4.getName();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(periodType4);
        mutablePeriod7.add((long) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod7.addMillis(727);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Days" + "'", str6, "Days");
    }

    @Test
    public void test13795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13795");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-35));
        org.joda.time.Period period3 = period1.withMonths(685);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test13796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13796");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        mutablePeriod0.addMinutes(2147483647);
        int int3 = mutablePeriod0.getMillis();
        mutablePeriod0.setWeeks((int) (short) 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test13797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13797");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) 100, chronology1);
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.eras();
        boolean boolean4 = period2.isSupported(durationFieldType3);
        org.joda.time.Period period6 = period2.plusHours((int) (byte) 10);
        org.joda.time.Duration duration8 = org.joda.time.Duration.millis((long) '4');
        long long9 = duration8.getMillis();
        org.joda.time.Minutes minutes10 = duration8.toStandardMinutes();
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        org.joda.time.Minutes minutes13 = minutes10.negated();
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((long) (short) 100, chronology16);
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.eras();
        boolean boolean19 = period17.isSupported(durationFieldType18);
        int int20 = periodType14.indexOf(durationFieldType18);
        boolean boolean21 = minutes13.isSupported(durationFieldType18);
        boolean boolean22 = period6.isSupported(durationFieldType18);
        int int23 = period6.getHours();
        org.joda.time.Period period25 = period6.withWeeks(100);
        int int26 = period6.size();
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 52L + "'", long9 == 52L);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8 + "'", int26 == 8);
    }

    @Test
    public void test13798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13798");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        int int1 = weeks0.size();
        org.joda.time.Duration duration2 = weeks0.toStandardDuration();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        int int4 = weeks3.size();
        org.joda.time.Duration duration5 = weeks3.toStandardDuration();
        java.lang.String str6 = weeks3.toString();
        org.joda.time.Weeks weeks8 = weeks3.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks10 = weeks8.multipliedBy(3);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.weeks((-1));
        boolean boolean13 = weeks8.isGreaterThan(weeks12);
        org.joda.time.Weeks weeks14 = weeks0.minus(weeks12);
        int int15 = weeks14.getWeeks();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks17 = weeks14.plus(weeks16);
        org.joda.time.PeriodType periodType18 = weeks14.getPeriodType();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks24 = weeks21.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType25 = weeks24.getPeriodType();
        org.joda.time.Weeks weeks27 = weeks24.dividedBy((int) (byte) 1);
        org.joda.time.PeriodType periodType28 = weeks27.getPeriodType();
        org.joda.time.Weeks weeks29 = weeks14.plus(weeks27);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P3W" + "'", str6, "P3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(weeks29);
    }

    @Test
    public void test13799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13799");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration4 = duration1.plus(1644572107180L);
        org.joda.time.Duration duration6 = duration1.plus(1644572208674L);
        org.joda.time.Duration duration10 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration12 = duration10.plus(1644572076849L);
        org.joda.time.Days days13 = duration10.toStandardDays();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((java.lang.Object) days13);
        org.joda.time.MutablePeriod mutablePeriod15 = mutablePeriod14.copy();
        org.joda.time.PeriodType periodType16 = mutablePeriod14.getPeriodType();
        java.lang.String str17 = periodType16.toString();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period(1644572179626L, 1644572198766L, periodType16, chronology18);
        org.joda.time.Duration duration24 = org.joda.time.Duration.millis(1644572139243L);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        org.joda.time.Interval interval34 = interval33.toInterval();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        boolean boolean44 = interval34.isAfter((org.joda.time.ReadableInterval) interval43);
        org.joda.time.Period period45 = interval43.toPeriod();
        org.joda.time.DateTime dateTime46 = interval43.getStart();
        org.joda.time.Period period48 = org.joda.time.Period.millis(1);
        org.joda.time.Period period50 = period48.minusMinutes((int) (short) -1);
        org.joda.time.Period period52 = period50.withDays(10);
        org.joda.time.PeriodType periodType53 = period52.getPeriodType();
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, (org.joda.time.ReadableInstant) dateTime46, periodType53);
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((long) (short) 1, (long) (byte) -1);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Interval interval68 = duration64.toIntervalTo(readableInstant67);
        org.joda.time.Interval interval69 = interval68.toInterval();
        org.joda.time.Chronology chronology70 = interval69.getChronology();
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((-1L), chronology70);
        mutablePeriod57.add(1644572099705L, chronology70);
        org.joda.time.Period period73 = new org.joda.time.Period(1644572213557L, 1644572278584L, periodType53, chronology70);
        org.joda.time.Period period74 = new org.joda.time.Period(1644572164269L, chronology70);
        org.joda.time.Period period75 = duration1.toPeriod(periodType16, chronology70);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PeriodType[Days]" + "'", str17, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(period75);
    }

    @Test
    public void test13800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13800");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) '4');
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.Seconds seconds6 = period5.toStandardSeconds();
        org.joda.time.Seconds seconds7 = period5.toStandardSeconds();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType10 = seconds9.getFieldType();
        org.joda.time.Seconds seconds12 = seconds9.plus((-1));
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.TWO;
        java.lang.String str14 = seconds13.toString();
        org.joda.time.Seconds seconds15 = seconds12.plus(seconds13);
        org.joda.time.Seconds seconds16 = seconds8.minus(seconds13);
        org.joda.time.PeriodType periodType17 = seconds8.getPeriodType();
        org.joda.time.Seconds seconds18 = seconds7.plus(seconds8);
        boolean boolean19 = seconds1.isGreaterThan(seconds8);
        org.joda.time.Seconds seconds21 = seconds8.plus((-869));
        org.joda.time.Seconds seconds23 = seconds8.minus((-400));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT2S" + "'", str14, "PT2S");
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
    }

    @Test
    public void test13801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13801");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Period period21 = interval20.toPeriod();
        boolean boolean22 = interval9.overlaps((org.joda.time.ReadableInterval) interval20);
        org.joda.time.Period period23 = interval9.toPeriod();
        org.joda.time.Period period25 = period23.plusMonths(906);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test13802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13802");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-10));
        org.joda.time.Period period3 = period1.plusMinutes(33);
        org.joda.time.Days days4 = period3.toStandardDays();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(days4);
    }

    @Test
    public void test13803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13803");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (-101));
        boolean boolean9 = duration4.isEqual((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration10 = duration4.toDuration();
        org.joda.time.Duration duration12 = duration10.withMillis(1644572291748L);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes(1644572076884L);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration22 = duration14.minus((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        org.joda.time.Interval interval41 = interval40.toInterval();
        org.joda.time.Hours hours42 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval41);
        org.joda.time.Hours hours43 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval41);
        boolean boolean44 = interval31.overlaps((org.joda.time.ReadableInterval) interval41);
        org.joda.time.DateTime dateTime45 = interval31.getStart();
        org.joda.time.Period period46 = duration22.toPeriodFrom((org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        org.joda.time.Interval interval56 = interval55.toInterval();
        org.joda.time.PeriodType periodType59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType59);
        mutablePeriod60.setYears(0);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology65 = null;
        mutablePeriod60.setPeriod((org.joda.time.ReadableDuration) duration64, chronology65);
        org.joda.time.ReadableInstant readableInstant67 = null;
        java.lang.Object obj68 = null;
        org.joda.time.Duration duration69 = new org.joda.time.Duration(obj68);
        org.joda.time.Period period70 = new org.joda.time.Period(readableInstant67, (org.joda.time.ReadableDuration) duration69);
        org.joda.time.Duration duration72 = duration69.minus((long) '4');
        mutablePeriod60.add((org.joda.time.ReadableDuration) duration72);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType75 = periodType74.withHoursRemoved();
        org.joda.time.PeriodType periodType76 = periodType75.withSecondsRemoved();
        boolean boolean77 = mutablePeriod60.equals((java.lang.Object) periodType75);
        org.joda.time.Duration duration79 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant80 = null;
        java.lang.Object obj81 = null;
        org.joda.time.Duration duration82 = new org.joda.time.Duration(obj81);
        org.joda.time.Period period83 = new org.joda.time.Period(readableInstant80, (org.joda.time.ReadableDuration) duration82);
        boolean boolean84 = duration79.isShorterThan((org.joda.time.ReadableDuration) duration82);
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.Interval interval86 = duration82.toIntervalTo(readableInstant85);
        org.joda.time.Interval interval87 = interval86.toInterval();
        org.joda.time.Chronology chronology88 = interval87.getChronology();
        org.joda.time.Period period89 = new org.joda.time.Period((java.lang.Object) interval55, periodType75, chronology88);
        org.joda.time.Period period90 = duration22.toPeriod(chronology88);
        org.joda.time.Period period91 = duration12.toPeriod(chronology88);
        int int92 = period91.getSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(interval86);
        org.junit.Assert.assertNotNull(interval87);
        org.junit.Assert.assertNotNull(chronology88);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 11 + "'", int92 == 11);
    }

    @Test
    public void test13804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13804");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        int int3 = weeks1.getWeeks();
        org.joda.time.Weeks weeks5 = weeks1.minus(3);
        org.joda.time.Period period7 = new org.joda.time.Period((long) (byte) 1);
        boolean boolean8 = weeks1.equals((java.lang.Object) (byte) 1);
        org.joda.time.Duration duration9 = weeks1.toStandardDuration();
        org.joda.time.Duration duration12 = duration9.withDurationAdded(0L, 100);
        org.joda.time.Duration duration14 = duration12.plus(1644572183876L);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks15.minus(weeks16);
        org.joda.time.Period period18 = new org.joda.time.Period((java.lang.Object) weeks17);
        int int19 = period18.getMonths();
        org.joda.time.DurationFieldType[] durationFieldTypeArray20 = period18.getFieldTypes();
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.forFields(durationFieldTypeArray20);
        org.joda.time.PeriodType periodType22 = periodType21.withDaysRemoved();
        org.joda.time.Period period23 = duration12.toPeriod(periodType22);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldTypeArray20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test13805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13805");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(34);
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test13806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13806");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(1644572360767L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.millis((long) '4');
        long long12 = duration11.getStandardDays();
        boolean boolean13 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType15 = periodType14.withHoursRemoved();
        org.joda.time.Period period16 = duration11.toPeriod(periodType14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.millis((long) '4');
        long long19 = duration18.getMillis();
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType22);
        mutablePeriod23.setYears(0);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology28 = null;
        mutablePeriod23.setPeriod((org.joda.time.ReadableDuration) duration27, chronology28);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.DateTime dateTime40 = interval39.getEnd();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant43 = null;
        java.lang.Object obj44 = null;
        org.joda.time.Duration duration45 = new org.joda.time.Duration(obj44);
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration45);
        boolean boolean47 = duration42.isShorterThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Interval interval49 = duration45.toIntervalTo(readableInstant48);
        org.joda.time.Interval interval50 = interval49.toInterval();
        org.joda.time.DateTime dateTime51 = interval50.getEnd();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, (org.joda.time.ReadableInstant) dateTime40);
        java.lang.String str54 = dateTime40.toString();
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, (org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.Duration duration57 = new org.joda.time.Duration((long) (byte) 1);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType60 = periodType59.withMillisRemoved();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((long) (short) 1, periodType60, chronology61);
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableDuration) duration57, periodType60);
        org.joda.time.ReadableInstant readableInstant64 = null;
        java.lang.Object obj65 = null;
        org.joda.time.Duration duration66 = new org.joda.time.Duration(obj65);
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant64, (org.joda.time.ReadableDuration) duration66);
        org.joda.time.Period period69 = period67.withSeconds((int) '4');
        org.joda.time.Period period71 = period67.plusWeeks(10);
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType74 = periodType73.withMillisRemoved();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.Period period76 = new org.joda.time.Period((long) (short) 1, periodType74, chronology75);
        org.joda.time.PeriodType periodType77 = periodType74.withYearsRemoved();
        org.joda.time.PeriodType periodType78 = periodType74.withMillisRemoved();
        org.joda.time.Period period79 = period71.normalizedStandard(periodType78);
        org.joda.time.PeriodType periodType80 = periodType78.withMillisRemoved();
        org.joda.time.PeriodType periodType81 = periodType78.withWeeksRemoved();
        org.joda.time.PeriodType periodType82 = periodType81.withMinutesRemoved();
        org.joda.time.Period period83 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, (org.joda.time.ReadableInstant) dateTime40, periodType81);
        org.joda.time.Interval interval84 = duration3.toIntervalTo((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime40);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 52L + "'", long19 == 52L);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(dateTime51);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "2022-02-11T09:43:42.287Z" + "'", str54, "2022-02-11T09:43:42.287Z");
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(interval84);
    }

    @Test
    public void test13807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13807");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        java.lang.String str37 = dateTime23.toString();
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration41.toPeriod(chronology43);
        org.joda.time.Minutes minutes45 = duration41.toStandardMinutes();
        org.joda.time.Duration duration46 = duration41.toDuration();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.minutesIn(readableInterval55);
        java.lang.String str57 = minutes56.toString();
        org.joda.time.PeriodType periodType58 = minutes56.getPeriodType();
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant54, periodType58);
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableDuration) duration41, periodType58);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration65 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration68 = duration65.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration70 = duration62.withDurationAdded((org.joda.time.ReadableDuration) duration65, (int) (short) 1);
        org.joda.time.Duration duration73 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration76 = duration73.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration78 = duration62.withDurationAdded((org.joda.time.ReadableDuration) duration76, (int) (short) 100);
        org.joda.time.Minutes minutes79 = duration76.toStandardMinutes();
        org.joda.time.Period period80 = duration76.toPeriod();
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardHours((long) (byte) 100);
        int int83 = duration76.compareTo((org.joda.time.ReadableDuration) duration82);
        org.joda.time.ReadableInstant readableInstant84 = null;
        java.lang.Object obj85 = null;
        org.joda.time.Duration duration86 = new org.joda.time.Duration(obj85);
        org.joda.time.Period period87 = new org.joda.time.Period(readableInstant84, (org.joda.time.ReadableDuration) duration86);
        org.joda.time.ReadableInstant readableInstant88 = null;
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration86, readableInstant88);
        long long90 = duration86.getMillis();
        long long91 = duration86.getStandardDays();
        java.lang.String str92 = duration86.toString();
        boolean boolean93 = duration82.isShorterThan((org.joda.time.ReadableDuration) duration86);
        org.joda.time.Minutes minutes94 = duration86.toStandardMinutes();
        org.joda.time.Duration duration96 = duration41.withDurationAdded((org.joda.time.ReadableDuration) duration86, 539);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "2022-02-11T09:43:42.348Z" + "'", str37, "2022-02-11T09:43:42.348Z");
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT0M" + "'", str57, "PT0M");
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "PT0S" + "'", str92, "PT0S");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(minutes94);
        org.junit.Assert.assertNotNull(duration96);
    }

    @Test
    public void test13808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13808");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        java.lang.String str37 = dateTime23.toString();
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Period period40 = period38.minusHours(10);
        org.joda.time.Minutes minutes41 = period40.toStandardMinutes();
        org.joda.time.Minutes minutes42 = minutes41.negated();
        org.joda.time.Minutes minutes44 = minutes41.plus(30);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.minutes((int) (byte) 10);
        boolean boolean47 = minutes44.isGreaterThan(minutes46);
        org.joda.time.Duration duration48 = minutes46.toStandardDuration();
        org.joda.time.Minutes minutes50 = minutes46.plus(369700);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "2022-02-11T09:43:42.431Z" + "'", str37, "2022-02-11T09:43:42.431Z");
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(minutes50);
    }

    @Test
    public void test13809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13809");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT2S");
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType4);
        mutablePeriod5.setYears(0);
        mutablePeriod5.setWeeks((int) (short) -1);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        mutablePeriod5.setPeriod((org.joda.time.ReadableInterval) interval18);
        mutablePeriod1.setPeriod((org.joda.time.ReadableInterval) interval18);
        mutablePeriod1.addYears(2);
        org.joda.time.PeriodType periodType23 = mutablePeriod1.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod24 = mutablePeriod1.copy();
        org.joda.time.Days days25 = org.joda.time.Days.FOUR;
        org.joda.time.Days days27 = days25.multipliedBy((-1));
        org.joda.time.Days days29 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.PeriodType periodType30 = days29.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod31 = days29.toMutablePeriod();
        org.joda.time.Days days32 = days27.plus(days29);
        org.joda.time.Duration duration34 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration36 = duration34.plus(1644572076849L);
        org.joda.time.Days days37 = duration34.toStandardDays();
        org.joda.time.Period period38 = days37.toPeriod();
        java.lang.String str39 = days37.toString();
        org.joda.time.Days days40 = org.joda.time.Days.FOUR;
        org.joda.time.Days days42 = days40.multipliedBy((-1));
        boolean boolean43 = days37.isGreaterThan(days42);
        boolean boolean44 = days32.isGreaterThan(days37);
        org.joda.time.Days days46 = days32.minus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.months();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        boolean boolean54 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((java.lang.Object) duration49, periodType55, chronology56);
        org.joda.time.Duration duration59 = org.joda.time.Duration.millis((long) '4');
        long long60 = duration59.getStandardDays();
        boolean boolean61 = duration49.isLongerThan((org.joda.time.ReadableDuration) duration59);
        long long62 = duration49.getMillis();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant65 = null;
        java.lang.Object obj66 = null;
        org.joda.time.Duration duration67 = new org.joda.time.Duration(obj66);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant65, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = duration64.isShorterThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Interval interval71 = duration67.toIntervalTo(readableInstant70);
        org.joda.time.Interval interval72 = interval71.toInterval();
        org.joda.time.Chronology chronology73 = interval72.getChronology();
        org.joda.time.Period period74 = duration49.toPeriod(chronology73);
        org.joda.time.DurationField durationField75 = durationFieldType47.getField(chronology73);
        int int76 = days32.get(durationFieldType47);
        int int77 = mutablePeriod1.indexOf(durationFieldType47);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P0D" + "'", str39, "P0D");
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 36000000L + "'", long62 == 36000000L);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(durationField75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
    }

    @Test
    public void test13810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13810");
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        boolean boolean29 = interval19.isAfter((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Period period30 = interval28.toPeriod();
        org.joda.time.Hours hours31 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval28);
        org.joda.time.PeriodType periodType32 = hours31.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        mutablePeriod39.addWeeks((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray42 = mutablePeriod39.getFieldTypes();
        mutablePeriod39.addMillis((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod();
        mutablePeriod46.setPeriod(100L, (long) (-1));
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant56 = null;
        java.lang.Object obj57 = null;
        org.joda.time.Duration duration58 = new org.joda.time.Duration(obj57);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant56, (org.joda.time.ReadableDuration) duration58);
        boolean boolean60 = duration55.isShorterThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Interval interval62 = duration58.toIntervalTo(readableInstant61);
        org.joda.time.Interval interval63 = interval62.toInterval();
        org.joda.time.Chronology chronology64 = interval63.getChronology();
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((-1L), chronology64);
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology64);
        mutablePeriod46.setPeriod((long) 100, chronology64);
        mutablePeriod39.setPeriod(1644572118718L, chronology64);
        org.joda.time.Period period69 = new org.joda.time.Period(1644572105679L, chronology64);
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(1644572122681L, 1644572157367L, chronology64);
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(1644572181672L, chronology64);
        org.joda.time.Period period72 = new org.joda.time.Period(441598L, 1644572276025L, periodType32, chronology64);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(685, 21, (-348), (-63), 369701, 586, (-4), 0, periodType32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(durationFieldTypeArray42);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(chronology64);
    }

    @Test
    public void test13811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13811");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-58));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13812");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days1 = org.joda.time.Days.parseDays("2022-02-11T09:41:18.556Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:41:18.556Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13813");
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.hours();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        boolean boolean13 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Interval interval15 = duration11.toIntervalTo(readableInstant14);
        org.joda.time.Interval interval16 = interval15.toInterval();
        org.joda.time.Chronology chronology17 = interval16.getChronology();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) 9, chronology17);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(10L, 1644572107117L, periodType5, chronology17);
        org.joda.time.Period period20 = new org.joda.time.Period(36000L, chronology17);
        org.joda.time.Period period21 = new org.joda.time.Period(1644572213488L, 1644572225773L, chronology17);
        org.joda.time.Period period22 = period21.negated();
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(chronology17);
        org.junit.Assert.assertNotNull(period22);
    }

    @Test
    public void test13814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13814");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        mutablePeriod9.addMillis((-1));
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod9);
        mutablePeriod5.setDays((int) ' ');
        int int15 = mutablePeriod5.size();
        int int16 = mutablePeriod5.size();
        mutablePeriod5.addMonths(456);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType20 = mutablePeriod5.getFieldType((-97));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -97");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8 + "'", int16 == 8);
    }

    @Test
    public void test13815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13815");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        mutablePeriod9.setPeriod((org.joda.time.ReadableInterval) interval22);
        mutablePeriod9.setPeriod((long) 1, 100L);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod9);
        mutablePeriod9.addHours(13);
        mutablePeriod9.setYears(90);
        mutablePeriod9.setYears(2147483647);
        mutablePeriod9.addDays(13);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.Duration duration43 = org.joda.time.Duration.millis((long) '4');
        long long44 = duration43.getStandardDays();
        boolean boolean45 = duration38.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType47 = periodType46.withHoursRemoved();
        org.joda.time.Period period48 = duration43.toPeriod(periodType46);
        org.joda.time.PeriodType periodType49 = periodType46.withMinutesRemoved();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant52 = null;
        java.lang.Object obj53 = null;
        org.joda.time.Duration duration54 = new org.joda.time.Duration(obj53);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant52, (org.joda.time.ReadableDuration) duration54);
        boolean boolean56 = duration51.isShorterThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Interval interval58 = duration54.toIntervalTo(readableInstant57);
        org.joda.time.Duration duration61 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean62 = duration54.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes63 = duration54.toStandardMinutes();
        org.joda.time.Minutes minutes65 = minutes63.multipliedBy((int) '4');
        org.joda.time.Minutes minutes67 = minutes65.multipliedBy((int) (short) 100);
        org.joda.time.DurationFieldType durationFieldType69 = minutes65.getFieldType((int) (short) 0);
        boolean boolean70 = periodType46.isSupported(durationFieldType69);
        java.lang.String str71 = durationFieldType69.getName();
        int int72 = mutablePeriod9.indexOf(durationFieldType69);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "minutes" + "'", str71, "minutes");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 5 + "'", int72 == 5);
    }

    @Test
    public void test13816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13816");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis((long) '4');
        long long8 = duration7.getStandardDays();
        boolean boolean9 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.DateTime dateTime27 = interval26.getEnd();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.DateTime dateTime38 = interval37.getEnd();
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.minutesIn(readableInterval48);
        java.lang.String str50 = minutes49.toString();
        org.joda.time.PeriodType periodType51 = minutes49.getPeriodType();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant47, periodType51);
        org.joda.time.PeriodType periodType53 = periodType51.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, (org.joda.time.ReadableInstant) dateTime38, periodType53);
        org.joda.time.Interval interval55 = duration2.toIntervalFrom((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.PeriodType periodType58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType58);
        mutablePeriod59.setYears(0);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology64 = null;
        mutablePeriod59.setPeriod((org.joda.time.ReadableDuration) duration63, chronology64);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant68 = null;
        java.lang.Object obj69 = null;
        org.joda.time.Duration duration70 = new org.joda.time.Duration(obj69);
        org.joda.time.Period period71 = new org.joda.time.Period(readableInstant68, (org.joda.time.ReadableDuration) duration70);
        boolean boolean72 = duration67.isShorterThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Interval interval74 = duration70.toIntervalTo(readableInstant73);
        org.joda.time.Interval interval75 = interval74.toInterval();
        org.joda.time.DateTime dateTime76 = interval75.getEnd();
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant79 = null;
        java.lang.Object obj80 = null;
        org.joda.time.Duration duration81 = new org.joda.time.Duration(obj80);
        org.joda.time.Period period82 = new org.joda.time.Period(readableInstant79, (org.joda.time.ReadableDuration) duration81);
        boolean boolean83 = duration78.isShorterThan((org.joda.time.ReadableDuration) duration81);
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Interval interval85 = duration81.toIntervalTo(readableInstant84);
        org.joda.time.Interval interval86 = interval85.toInterval();
        org.joda.time.DateTime dateTime87 = interval86.getEnd();
        org.joda.time.Period period88 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime76, (org.joda.time.ReadableInstant) dateTime87);
        org.joda.time.Period period89 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, (org.joda.time.ReadableInstant) dateTime76);
        java.lang.String str90 = dateTime76.toString();
        org.joda.time.Period period91 = duration2.toPeriodTo((org.joda.time.ReadableInstant) dateTime76);
        boolean boolean93 = dateTime76.equals((java.lang.Object) (byte) 1);
        org.joda.time.Instant instant94 = dateTime76.toInstant();
        org.joda.time.ReadableInstant readableInstant95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes96 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) instant94, readableInstant95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadableInstant objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT0M" + "'", str50, "PT0M");
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(interval74);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(dateTime76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(interval85);
        org.junit.Assert.assertNotNull(interval86);
        org.junit.Assert.assertNotNull(dateTime87);
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "2022-02-11T09:43:42.620Z" + "'", str90, "2022-02-11T09:43:42.620Z");
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(instant94);
    }

    @Test
    public void test13817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13817");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays(1644572608804L);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows a long: 1644572608804 * 86400000");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13818");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn(readableInterval9);
        org.joda.time.Period period11 = period8.minus((org.joda.time.ReadablePeriod) hours10);
        org.joda.time.Hours hours13 = hours10.minus((int) '4');
        org.joda.time.Hours hours15 = hours13.plus((int) '#');
        org.joda.time.Hours hours16 = hours13.negated();
        org.joda.time.Duration duration17 = hours16.toStandardDuration();
        org.joda.time.Hours hours18 = hours16.negated();
        org.joda.time.Period period19 = hours16.toPeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.SIX;
        boolean boolean21 = hours16.isGreaterThan(hours20);
        org.joda.time.Duration duration24 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = duration24.toPeriodFrom(readableInstant25);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration24.toPeriod(chronology27);
        org.joda.time.Period period30 = period28.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Hours hours32 = org.joda.time.Hours.hoursIn(readableInterval31);
        org.joda.time.Period period33 = period30.minus((org.joda.time.ReadablePeriod) hours32);
        org.joda.time.Hours hours35 = hours32.minus((int) '4');
        boolean boolean36 = hours20.isGreaterThan(hours35);
        org.joda.time.Hours hours38 = hours20.dividedBy((-13));
        java.lang.String str39 = hours38.toString();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT0H" + "'", str39, "PT0H");
    }

    @Test
    public void test13819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13819");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Chronology chronology10 = interval9.getChronology();
        org.joda.time.Days days11 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Period period13 = org.joda.time.Period.parse("PT0S");
        boolean boolean14 = days11.equals((java.lang.Object) period13);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(chronology10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test13820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13820");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.minutes(34);
        org.joda.time.PeriodType periodType3 = minutes2.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1644572220192L, periodType3);
        int int5 = mutablePeriod4.getMinutes();
        mutablePeriod4.setPeriod(1644572405393L, 1644572421748L);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 27409537 + "'", int5 == 27409537);
    }

    @Test
    public void test13821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13821");
        org.joda.time.Days days0 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days2 = days0.multipliedBy(8);
        org.joda.time.Days days3 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days2);
        int int4 = days3.size();
        org.joda.time.Days days5 = null;
        org.joda.time.Days days6 = days3.plus(days5);
        org.joda.time.PeriodType periodType7 = days3.getPeriodType();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test13822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13822");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        mutablePeriod0.setPeriod(100L, (long) (-1));
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration12.toIntervalTo(readableInstant15);
        org.joda.time.Interval interval17 = interval16.toInterval();
        org.joda.time.Chronology chronology18 = interval17.getChronology();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((-1L), chronology18);
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology18);
        mutablePeriod0.setPeriod((long) 100, chronology18);
        org.joda.time.MutablePeriod mutablePeriod22 = mutablePeriod0.copy();
        int int23 = mutablePeriod22.getMinutes();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        long long34 = interval32.toDurationMillis();
        mutablePeriod22.add((org.joda.time.ReadableInterval) interval32);
        mutablePeriod22.setHours(876);
        mutablePeriod22.add(1644572192934L);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(chronology18);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
    }

    @Test
    public void test13823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13823");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (byte) 0);
        int int2 = mutablePeriod1.getDays();
        mutablePeriod1.add(0, (int) (byte) -1, (int) '#', (-1), 100, (int) (short) 0, (int) (byte) 100, 35);
        mutablePeriod1.setWeeks((int) (byte) 1);
        mutablePeriod1.addHours((-869));
        java.lang.String str16 = mutablePeriod1.toString();
        int int17 = mutablePeriod1.getWeeks();
        mutablePeriod1.setHours(218);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes20 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot convert period to duration as months is not precise in the period P-1M1W-1DT218H100.035S");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-1M1W-1DT-769H100.035S" + "'", str16, "P-1M1W-1DT-769H100.035S");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test13824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13824");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(0L, (long) 100);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration5.toPeriod(chronology7);
        org.joda.time.Minutes minutes9 = duration5.toStandardMinutes();
        int int10 = duration2.compareTo((org.joda.time.ReadableDuration) duration5);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.dayTime();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(periodType11);
        org.joda.time.Period period13 = duration5.toPeriod(periodType11);
        org.joda.time.Period period15 = period13.plusMinutes((-3));
        org.joda.time.Period period17 = period15.withDays(21262214);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test13825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13825");
        org.joda.time.Days days1 = org.joda.time.Days.days(456368756);
        org.joda.time.Days days3 = days1.dividedBy(27409537);
        org.joda.time.Days days5 = days1.minus((-48));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes6 = days5.toStandardMinutes();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 456368804 * 1440");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
    }

    @Test
    public void test13826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13826");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        boolean boolean7 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Interval interval9 = duration5.toIntervalTo(readableInstant8);
        org.joda.time.Interval interval10 = interval9.toInterval();
        org.joda.time.DateTime dateTime11 = interval10.getEnd();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.DateTime dateTime22 = interval21.getEnd();
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime11, (org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.DateTime dateTime45 = interval44.getEnd();
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.DurationFieldType durationFieldType48 = minutes47.getFieldType();
        org.joda.time.Minutes minutes49 = minutes47.negated();
        boolean boolean50 = minutes0.isLessThan(minutes47);
        org.joda.time.Duration duration51 = minutes0.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(dateTime11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration51);
    }

    @Test
    public void test13827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13827");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        boolean boolean30 = interval20.isAfter((org.joda.time.ReadableInterval) interval29);
        boolean boolean31 = interval9.contains((org.joda.time.ReadableInterval) interval20);
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType34);
        mutablePeriod35.addMillis((-1));
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant40 = null;
        java.lang.Object obj41 = null;
        org.joda.time.Duration duration42 = new org.joda.time.Duration(obj41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean44 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Interval interval46 = duration42.toIntervalTo(readableInstant45);
        org.joda.time.Interval interval47 = interval46.toInterval();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        boolean boolean54 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Interval interval56 = duration52.toIntervalTo(readableInstant55);
        boolean boolean57 = interval47.isAfter((org.joda.time.ReadableInterval) interval56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval56);
        org.joda.time.Period period59 = interval56.toPeriod();
        mutablePeriod35.add((org.joda.time.ReadableInterval) interval56);
        long long61 = interval56.getEndMillis();
        boolean boolean62 = interval20.isAfter((org.joda.time.ReadableInterval) interval56);
        long long63 = interval56.getStartMillis();
        org.joda.time.Interval interval64 = interval56.toInterval();
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((java.lang.Object) interval56);
        mutablePeriod65.setDays((int) (byte) 0);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes(1644572109169L);
        org.joda.time.Duration duration71 = duration69.withMillis(1644572132233L);
        mutablePeriod65.add((org.joda.time.ReadableDuration) duration71);
        java.lang.String str73 = duration71.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(period59);
// flaky:         org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1644572622874L + "'", long61 == 1644572622874L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1644572622874L + "'", long63 == 1644572622874L);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "PT1644572132.233S" + "'", str73, "PT1644572132.233S");
    }

    @Test
    public void test13828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13828");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(4);
        org.joda.time.Period period3 = new org.joda.time.Period((-1L));
        org.joda.time.Seconds seconds4 = period3.toStandardSeconds();
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.Seconds seconds7 = seconds4.plus((-1));
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds7);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds9);
        org.joda.time.Seconds seconds11 = null;
        boolean boolean12 = seconds10.isLessThan(seconds11);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test13829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13829");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(35);
        org.joda.time.Period period3 = period1.minusYears((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod4 = period1.toMutablePeriod();
        org.joda.time.Period period6 = period1.withYears((int) (short) 0);
        org.joda.time.Weeks weeks7 = period1.toStandardWeeks();
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((-52));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
    }

    @Test
    public void test13830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13830");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        mutablePeriod2.addWeeks((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray5 = mutablePeriod2.getFieldTypes();
        int int6 = mutablePeriod2.getWeeks();
        org.joda.time.Period period8 = org.joda.time.Period.weeks((-1));
        mutablePeriod2.add((org.joda.time.ReadablePeriod) period8);
        mutablePeriod2.addMinutes(0);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        mutablePeriod16.addWeeks((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray19 = mutablePeriod16.getFieldTypes();
        mutablePeriod16.addMillis((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod();
        mutablePeriod23.setPeriod(100L, (long) (-1));
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        boolean boolean37 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration35.toIntervalTo(readableInstant38);
        org.joda.time.Interval interval40 = interval39.toInterval();
        org.joda.time.Chronology chronology41 = interval40.getChronology();
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((-1L), chronology41);
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology41);
        mutablePeriod23.setPeriod((long) 100, chronology41);
        mutablePeriod16.setPeriod(1644572118718L, chronology41);
        org.joda.time.Period period46 = new org.joda.time.Period(1644572105679L, chronology41);
        mutablePeriod2.setPeriod(1644572122681L, chronology41);
        mutablePeriod2.addHours(56);
        org.junit.Assert.assertNotNull(durationFieldTypeArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldTypeArray19);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(chronology41);
    }

    @Test
    public void test13831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13831");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("2022-02-11T09:43:13.066Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:43:13.066Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13832");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        java.lang.String str13 = hours11.toString();
        org.joda.time.Duration duration14 = hours11.toStandardDuration();
        org.joda.time.Period period17 = new org.joda.time.Period((long) (-97), (long) (short) 1);
        int int18 = period17.getYears();
        boolean boolean19 = hours11.equals((java.lang.Object) int18);
        org.joda.time.Hours hours21 = org.joda.time.Hours.hours(246);
        org.joda.time.Hours hours22 = hours11.minus(hours21);
        org.joda.time.Hours hours24 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours25 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours26 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours27 = hours25.minus(hours26);
        int int28 = hours25.getHours();
        org.joda.time.Hours hours29 = hours24.minus(hours25);
        org.joda.time.Duration duration32 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = duration32.toPeriodFrom(readableInstant33);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration32.toPeriod(chronology35);
        org.joda.time.Period period38 = period36.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Hours hours40 = org.joda.time.Hours.hoursIn(readableInterval39);
        org.joda.time.Period period41 = period38.minus((org.joda.time.ReadablePeriod) hours40);
        org.joda.time.Hours hours42 = hours40.negated();
        org.joda.time.Duration duration45 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = duration45.toPeriodFrom(readableInstant46);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration45.toPeriod(chronology48);
        org.joda.time.Period period51 = period49.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Hours hours53 = org.joda.time.Hours.hoursIn(readableInterval52);
        org.joda.time.Period period54 = period51.minus((org.joda.time.ReadablePeriod) hours53);
        org.joda.time.Hours hours55 = hours53.negated();
        org.joda.time.Hours hours56 = hours40.minus(hours53);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant59 = null;
        java.lang.Object obj60 = null;
        org.joda.time.Duration duration61 = new org.joda.time.Duration(obj60);
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant59, (org.joda.time.ReadableDuration) duration61);
        boolean boolean63 = duration58.isShorterThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration61.toIntervalTo(readableInstant64);
        org.joda.time.Interval interval66 = interval65.toInterval();
        org.joda.time.Hours hours67 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval66);
        org.joda.time.Hours hours68 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval66);
        org.joda.time.Hours hours70 = hours68.minus(8);
        boolean boolean71 = hours40.isLessThan(hours68);
        org.joda.time.Hours hours72 = hours25.plus(hours68);
        org.joda.time.Hours hours74 = hours68.multipliedBy(32);
        org.joda.time.DurationFieldType durationFieldType75 = hours68.getFieldType();
        boolean boolean76 = hours21.isGreaterThan(hours68);
        org.joda.time.Duration duration77 = hours21.toStandardDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT0H" + "'", str13, "PT0H");
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2147483647 + "'", int28 == 2147483647);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(duration77);
    }

    @Test
    public void test13833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13833");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.withMinutes(0);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutesIn(readableInterval9);
        java.lang.String str11 = minutes10.toString();
        org.joda.time.PeriodType periodType12 = minutes10.getPeriodType();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) (short) 10, (long) (byte) -1, periodType12, chronology13);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.eras();
        int int16 = period14.indexOf(durationFieldType15);
        int int17 = period6.get(durationFieldType15);
        org.joda.time.Period period19 = period6.withWeeks((int) (short) 100);
        int int20 = period19.getYears();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration21 = new org.joda.time.Duration((java.lang.Object) period19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: org.joda.time.Period");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT0M" + "'", str11, "PT0M");
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test13834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13834");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 27409537, 1644572323414L);
    }

    @Test
    public void test13835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13835");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration7, chronology8);
        mutablePeriod3.add(0, (-1), (int) (short) 1, (int) (byte) 0, (int) (byte) 0, 1, 10, (int) '4');
        int int19 = mutablePeriod3.getYears();
        mutablePeriod3.addMonths((int) (short) 0);
        mutablePeriod3.addMinutes((int) (byte) 10);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration28 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration31 = duration28.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration33 = duration25.withDurationAdded((org.joda.time.ReadableDuration) duration28, (int) (short) 1);
        org.joda.time.ReadableDuration readableDuration34 = null;
        boolean boolean35 = duration25.isLongerThan(readableDuration34);
        org.joda.time.Hours hours36 = duration25.toStandardHours();
        org.joda.time.Duration duration38 = org.joda.time.Duration.millis((long) 5);
        org.joda.time.Duration duration40 = duration25.withDurationAdded((org.joda.time.ReadableDuration) duration38, 30);
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Duration duration44 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = duration44.toPeriodFrom(readableInstant45);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration44.toPeriod(chronology47);
        org.joda.time.Period period50 = period48.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Hours hours52 = org.joda.time.Hours.hoursIn(readableInterval51);
        org.joda.time.Period period53 = period50.minus((org.joda.time.ReadablePeriod) hours52);
        int int54 = period53.getYears();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration59 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration62 = duration59.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration64 = duration56.withDurationAdded((org.joda.time.ReadableDuration) duration59, (int) (short) 1);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant67 = null;
        java.lang.Object obj68 = null;
        org.joda.time.Duration duration69 = new org.joda.time.Duration(obj68);
        org.joda.time.Period period70 = new org.joda.time.Period(readableInstant67, (org.joda.time.ReadableDuration) duration69);
        boolean boolean71 = duration66.isShorterThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Interval interval73 = duration69.toIntervalTo(readableInstant72);
        org.joda.time.Interval interval74 = interval73.toInterval();
        org.joda.time.DateTime dateTime75 = interval74.getEnd();
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType77 = periodType76.withSecondsRemoved();
        org.joda.time.PeriodType periodType78 = periodType77.withMillisRemoved();
        org.joda.time.Period period79 = duration56.toPeriodFrom((org.joda.time.ReadableInstant) dateTime75, periodType77);
        org.joda.time.Duration duration80 = period53.toDurationTo((org.joda.time.ReadableInstant) dateTime75);
        org.joda.time.ReadableInstant readableInstant81 = null;
        java.lang.Object obj82 = null;
        org.joda.time.Duration duration83 = new org.joda.time.Duration(obj82);
        org.joda.time.Period period84 = new org.joda.time.Period(readableInstant81, (org.joda.time.ReadableDuration) duration83);
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration83, readableInstant85);
        org.joda.time.Duration duration88 = org.joda.time.Duration.millis((long) '4');
        long long89 = duration88.getStandardDays();
        boolean boolean90 = duration83.isLongerThan((org.joda.time.ReadableDuration) duration88);
        org.joda.time.PeriodType periodType91 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType92 = periodType91.withHoursRemoved();
        org.joda.time.Period period93 = duration88.toPeriod(periodType91);
        org.joda.time.PeriodType periodType94 = periodType91.withMinutesRemoved();
        org.joda.time.PeriodType periodType95 = periodType94.withHoursRemoved();
        org.joda.time.PeriodType periodType96 = periodType95.withMillisRemoved();
        org.joda.time.Period period97 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, (org.joda.time.ReadableInstant) dateTime75, periodType95);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(interval74);
        org.junit.Assert.assertNotNull(dateTime75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(periodType91);
        org.junit.Assert.assertNotNull(periodType92);
        org.junit.Assert.assertNotNull(period93);
        org.junit.Assert.assertNotNull(periodType94);
        org.junit.Assert.assertNotNull(periodType95);
        org.junit.Assert.assertNotNull(periodType96);
    }

    @Test
    public void test13836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13836");
        org.joda.time.Days days0 = org.joda.time.Days.FOUR;
        org.joda.time.Days days2 = days0.dividedBy((int) '#');
        org.joda.time.PeriodType periodType3 = days0.getPeriodType();
        org.joda.time.Days days4 = null;
        boolean boolean5 = days0.isGreaterThan(days4);
        org.joda.time.Days days7 = days0.multipliedBy((int) (short) 0);
        org.joda.time.Days days8 = org.joda.time.Days.FOUR;
        org.joda.time.Days days10 = days8.multipliedBy((-1));
        org.joda.time.Days days12 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.PeriodType periodType13 = days12.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod14 = days12.toMutablePeriod();
        org.joda.time.Days days15 = days10.plus(days12);
        org.joda.time.Duration duration17 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration19 = duration17.plus(1644572076849L);
        org.joda.time.Days days20 = duration17.toStandardDays();
        org.joda.time.Period period21 = days20.toPeriod();
        java.lang.String str22 = days20.toString();
        org.joda.time.Days days23 = org.joda.time.Days.FOUR;
        org.joda.time.Days days25 = days23.multipliedBy((-1));
        boolean boolean26 = days20.isGreaterThan(days25);
        boolean boolean27 = days15.isGreaterThan(days20);
        org.joda.time.Days days29 = days15.minus((int) (byte) 10);
        org.joda.time.Days days30 = org.joda.time.Days.SIX;
        org.joda.time.Days days32 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.Days days33 = days30.plus(days32);
        org.joda.time.Duration duration34 = days33.toStandardDuration();
        boolean boolean35 = days29.isGreaterThan(days33);
        boolean boolean36 = days0.isLessThan(days29);
        org.joda.time.Duration duration37 = days0.toStandardDuration();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P0D" + "'", str22, "P0D");
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration37);
    }

    @Test
    public void test13837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13837");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572092997L, periodType1);
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod();
        mutablePeriod3.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod3, periodType7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Interval interval18 = interval17.toInterval();
        org.joda.time.DateTime dateTime19 = interval18.getEnd();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        org.joda.time.Interval interval29 = interval28.toInterval();
        org.joda.time.DateTime dateTime30 = interval29.getEnd();
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime19, (org.joda.time.ReadableInstant) dateTime30);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        org.joda.time.Interval interval41 = interval40.toInterval();
        org.joda.time.DateTime dateTime42 = interval41.getEnd();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant45 = null;
        java.lang.Object obj46 = null;
        org.joda.time.Duration duration47 = new org.joda.time.Duration(obj46);
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration47);
        boolean boolean49 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Interval interval51 = duration47.toIntervalTo(readableInstant50);
        org.joda.time.Interval interval52 = interval51.toInterval();
        org.joda.time.DateTime dateTime53 = interval52.getEnd();
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime42, (org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime30, (org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.DurationFieldType durationFieldType56 = minutes55.getFieldType();
        int int57 = mutablePeriod3.get(durationFieldType56);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Interval interval68 = duration64.toIntervalTo(readableInstant67);
        org.joda.time.Interval interval69 = interval68.toInterval();
        org.joda.time.Chronology chronology70 = interval69.getChronology();
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((-1L), chronology70);
        mutablePeriod3.add((-1L), chronology70);
        org.joda.time.MutablePeriod mutablePeriod73 = mutablePeriod3.copy();
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant76 = null;
        java.lang.Object obj77 = null;
        org.joda.time.Duration duration78 = new org.joda.time.Duration(obj77);
        org.joda.time.Period period79 = new org.joda.time.Period(readableInstant76, (org.joda.time.ReadableDuration) duration78);
        boolean boolean80 = duration75.isShorterThan((org.joda.time.ReadableDuration) duration78);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Interval interval82 = duration78.toIntervalTo(readableInstant81);
        org.joda.time.Interval interval83 = interval82.toInterval();
        mutablePeriod73.setPeriod((org.joda.time.ReadableInterval) interval82);
        mutablePeriod2.setPeriod((org.joda.time.ReadableInterval) interval82);
        long long86 = interval82.getEndMillis();
        long long87 = interval82.getEndMillis();
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(dateTime30);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(dateTime53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(mutablePeriod73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(interval82);
        org.junit.Assert.assertNotNull(interval83);
// flaky:         org.junit.Assert.assertTrue("'" + long86 + "' != '" + 1644572623163L + "'", long86 == 1644572623163L);
// flaky:         org.junit.Assert.assertTrue("'" + long87 + "' != '" + 1644572623163L + "'", long87 == 1644572623163L);
    }

    @Test
    public void test13838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13838");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(369700, (-101), 456825, 8);
        mutablePeriod4.addWeeks((int) (short) 10);
        mutablePeriod4.addSeconds((int) (byte) -1);
    }

    @Test
    public void test13839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13839");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType4 = minutes3.getPeriodType();
        org.joda.time.PeriodType periodType5 = periodType4.withYearsRemoved();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) '#', periodType4, chronology6);
        org.joda.time.PeriodType periodType8 = periodType4.withHoursRemoved();
        int int9 = periodType8.size();
        org.joda.time.PeriodType periodType10 = periodType8.withMinutesRemoved();
        org.joda.time.PeriodType periodType11 = periodType8.withDaysRemoved();
        org.joda.time.PeriodType periodType12 = periodType11.withHoursRemoved();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
    }

    @Test
    public void test13840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13840");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Period period20 = interval18.toPeriod();
        org.joda.time.Period period21 = interval18.toPeriod();
        org.joda.time.Interval interval22 = interval18.toInterval();
        org.joda.time.Days days23 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval22);
        org.joda.time.MutableInterval mutableInterval24 = interval22.toMutableInterval();
        org.joda.time.DateTime dateTime25 = mutableInterval24.getEnd();
        long long26 = mutableInterval24.toDurationMillis();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        long long36 = interval35.getStartMillis();
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType39);
        mutablePeriod40.setYears(0);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology45 = null;
        mutablePeriod40.setPeriod((org.joda.time.ReadableDuration) duration44, chronology45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        org.joda.time.Interval interval56 = interval55.toInterval();
        org.joda.time.DateTime dateTime57 = interval56.getEnd();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant60 = null;
        java.lang.Object obj61 = null;
        org.joda.time.Duration duration62 = new org.joda.time.Duration(obj61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant60, (org.joda.time.ReadableDuration) duration62);
        boolean boolean64 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Interval interval66 = duration62.toIntervalTo(readableInstant65);
        org.joda.time.Interval interval67 = interval66.toInterval();
        org.joda.time.DateTime dateTime68 = interval67.getEnd();
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime57, (org.joda.time.ReadableInstant) dateTime68);
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, (org.joda.time.ReadableInstant) dateTime57);
        boolean boolean71 = interval35.isBefore((org.joda.time.ReadableInstant) dateTime57);
        org.joda.time.Duration duration72 = interval35.toDuration();
        boolean boolean73 = mutableInterval24.isBefore((org.joda.time.ReadableInterval) interval35);
        org.joda.time.DateTime dateTime74 = interval35.getEnd();
        org.joda.time.DateTimeFieldType dateTimeFieldType75 = null;
        boolean boolean76 = dateTime74.isSupported(dateTimeFieldType75);
        org.joda.time.Instant instant77 = dateTime74.toInstant();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(mutableInterval24);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
// flaky:         org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1644572623234L + "'", long36 == 1644572623234L);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(interval67);
        org.junit.Assert.assertNotNull(dateTime68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(instant77);
    }

    @Test
    public void test13841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13841");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn(readableInterval9);
        org.joda.time.Period period11 = period8.minus((org.joda.time.ReadablePeriod) hours10);
        org.joda.time.Hours hours13 = hours10.minus((int) '4');
        org.joda.time.Hours hours15 = hours13.plus((int) '#');
        org.joda.time.Hours hours16 = hours13.negated();
        org.joda.time.Duration duration17 = hours16.toStandardDuration();
        org.joda.time.Hours hours18 = hours16.negated();
        org.joda.time.Hours hours20 = org.joda.time.Hours.hours((int) (byte) 100);
        org.joda.time.Duration duration21 = hours20.toStandardDuration();
        org.joda.time.Hours hours22 = hours16.minus(hours20);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = duration25.toPeriodFrom(readableInstant26);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration25.toPeriod(chronology28);
        org.joda.time.Period period31 = period29.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Hours hours33 = org.joda.time.Hours.hoursIn(readableInterval32);
        org.joda.time.Period period34 = period31.minus((org.joda.time.ReadablePeriod) hours33);
        org.joda.time.Hours hours36 = hours33.minus((int) '4');
        org.joda.time.Hours hours38 = hours36.plus((int) '#');
        org.joda.time.Hours hours39 = hours36.negated();
        org.joda.time.Duration duration40 = hours39.toStandardDuration();
        org.joda.time.Hours hours41 = hours39.negated();
        org.joda.time.Period period42 = hours39.toPeriod();
        org.joda.time.Hours hours44 = hours39.dividedBy((-2147483646));
        org.joda.time.Hours hours45 = hours39.negated();
        org.joda.time.Hours hours47 = hours45.multipliedBy(52);
        org.joda.time.Hours hours48 = hours20.plus(hours47);
        org.joda.time.Duration duration49 = hours47.toStandardDuration();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(duration49);
    }

    @Test
    public void test13842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13842");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.minus(weeks1);
        org.joda.time.Weeks weeks4 = weeks2.multipliedBy(100);
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) -1);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        boolean boolean13 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Interval interval15 = duration11.toIntervalTo(readableInstant14);
        org.joda.time.Interval interval16 = interval15.toInterval();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        boolean boolean26 = interval16.isAfter((org.joda.time.ReadableInterval) interval25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval25);
        org.joda.time.Period period30 = new org.joda.time.Period(0L, (long) 100);
        org.joda.time.Weeks weeks31 = period30.toStandardWeeks();
        boolean boolean32 = weeks27.isGreaterThan(weeks31);
        java.lang.String str33 = weeks27.toString();
        org.joda.time.Weeks weeks34 = weeks27.negated();
        boolean boolean35 = weeks6.isLessThan(weeks27);
        org.joda.time.Weeks weeks37 = weeks6.multipliedBy(2147483647);
        org.joda.time.Weeks weeks38 = weeks6.negated();
        java.lang.String str39 = weeks38.toString();
        org.joda.time.Duration duration40 = weeks38.toStandardDuration();
        org.joda.time.Weeks weeks42 = weeks38.plus(9);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P0W" + "'", str33, "P0W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P0W" + "'", str39, "P0W");
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(weeks42);
    }

    @Test
    public void test13843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13843");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(0, 19034, 0, (-9700), (-4), (-840), 246, 34);
        mutablePeriod8.addHours(0);
    }

    @Test
    public void test13844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13844");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.Days days1 = org.joda.time.Days.ONE;
        org.joda.time.Days days2 = days1.negated();
        int int3 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days1);
        int int4 = days0.getDays();
        org.joda.time.Days days6 = days0.dividedBy(35);
        org.joda.time.Days days8 = days6.plus((-2));
        org.joda.time.Days days10 = days6.dividedBy((int) (short) 10);
        org.joda.time.Duration duration11 = days6.toStandardDuration();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(duration11);
    }

    @Test
    public void test13845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13845");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        mutablePeriod5.add((-27409536L));
    }

    @Test
    public void test13846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13846");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("2022-02-11T09:41:18.556Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:41:18.556Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13847");
        org.joda.time.Duration duration0 = org.joda.time.Duration.ZERO;
        long long1 = duration0.getStandardDays();
        org.joda.time.Duration duration4 = duration0.withDurationAdded(0L, (int) (byte) 10);
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration7.toPeriodFrom(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration7.toPeriod(chronology10);
        java.lang.String str12 = period11.toString();
        org.joda.time.MutablePeriod mutablePeriod13 = period11.toMutablePeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        long long23 = interval22.getStartMillis();
        mutablePeriod13.setPeriod((org.joda.time.ReadableInterval) interval22);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval22);
        org.joda.time.DateTime dateTime26 = interval22.getStart();
        org.joda.time.Chronology chronology27 = dateTime26.getChronology();
        org.joda.time.Period period28 = duration4.toPeriod(chronology27);
        long long29 = duration4.getStandardDays();
        org.junit.Assert.assertNotNull(duration0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT0.097S" + "'", str12, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572623469L + "'", long23 == 1644572623469L);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(dateTime26);
        org.junit.Assert.assertNotNull(chronology27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
    }

    @Test
    public void test13848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13848");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.plus((int) '4');
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean6 = weeks3.isGreaterThan(weeks5);
        org.joda.time.DurationFieldType durationFieldType7 = weeks5.getFieldType();
        boolean boolean8 = weeks0.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks9 = weeks0.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks10.minus(weeks11);
        org.joda.time.Weeks weeks14 = weeks11.minus((int) (short) -1);
        org.joda.time.Weeks weeks15 = null;
        boolean boolean16 = weeks11.isGreaterThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks11.plus(876);
        org.joda.time.Weeks weeks19 = weeks9.minus(weeks18);
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
    }

    @Test
    public void test13849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13849");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((-9700));
        org.joda.time.Period period3 = period1.minusYears(27409535);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test13850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13850");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Duration duration1 = days0.toStandardDuration();
        org.joda.time.PeriodType periodType2 = days0.getPeriodType();
        org.joda.time.Seconds seconds3 = days0.toStandardSeconds();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds3);
    }

    @Test
    public void test13851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13851");
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.minutesIn(readableInterval3);
        java.lang.String str5 = minutes4.toString();
        org.joda.time.PeriodType periodType6 = minutes4.getPeriodType();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((long) (short) 10, (long) (byte) -1, periodType6, chronology7);
        org.joda.time.PeriodType periodType9 = period8.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(periodType9);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType15 = periodType14.withHoursRemoved();
        org.joda.time.PeriodType periodType16 = periodType15.withSecondsRemoved();
        org.joda.time.PeriodType periodType17 = periodType15.withYearsRemoved();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.minutesIn(readableInterval26);
        java.lang.String str28 = minutes27.toString();
        org.joda.time.PeriodType periodType29 = minutes27.getPeriodType();
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant25, periodType29);
        org.joda.time.Duration duration32 = duration22.withMillis((long) 'a');
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Interval interval48 = duration44.toIntervalTo(readableInstant47);
        org.joda.time.Interval interval49 = interval48.toInterval();
        org.joda.time.DateTime dateTime50 = interval49.getEnd();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant53 = null;
        java.lang.Object obj54 = null;
        org.joda.time.Duration duration55 = new org.joda.time.Duration(obj54);
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant53, (org.joda.time.ReadableDuration) duration55);
        boolean boolean57 = duration52.isShorterThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Interval interval59 = duration55.toIntervalTo(readableInstant58);
        org.joda.time.Interval interval60 = interval59.toInterval();
        org.joda.time.DateTime dateTime61 = interval60.getEnd();
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime50, (org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant65 = null;
        java.lang.Object obj66 = null;
        org.joda.time.Duration duration67 = new org.joda.time.Duration(obj66);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant65, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = duration64.isShorterThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.ReadableInterval readableInterval71 = null;
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.minutesIn(readableInterval71);
        java.lang.String str73 = minutes72.toString();
        org.joda.time.PeriodType periodType74 = minutes72.getPeriodType();
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration67, readableInstant70, periodType74);
        org.joda.time.PeriodType periodType76 = periodType74.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration37, (org.joda.time.ReadableInstant) dateTime61, periodType76);
        org.joda.time.Duration duration79 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant80 = null;
        java.lang.Object obj81 = null;
        org.joda.time.Duration duration82 = new org.joda.time.Duration(obj81);
        org.joda.time.Period period83 = new org.joda.time.Period(readableInstant80, (org.joda.time.ReadableDuration) duration82);
        boolean boolean84 = duration79.isShorterThan((org.joda.time.ReadableDuration) duration82);
        org.joda.time.PeriodType periodType85 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod((java.lang.Object) duration79, periodType85, chronology86);
        org.joda.time.Duration duration89 = org.joda.time.Duration.millis((long) '4');
        long long90 = duration89.getStandardDays();
        boolean boolean91 = duration79.isLongerThan((org.joda.time.ReadableDuration) duration89);
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime61, (org.joda.time.ReadableDuration) duration89);
        org.joda.time.Interval interval93 = duration32.toIntervalTo((org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.Chronology chronology94 = dateTime61.getChronology();
        org.joda.time.Period period95 = new org.joda.time.Period(1644572121496L, periodType17, chronology94);
        org.joda.time.Period period96 = new org.joda.time.Period(1644572297050L, (long) (byte) 0, chronology94);
        org.joda.time.Period period97 = new org.joda.time.Period(1644572541774L, periodType9, chronology94);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT0M" + "'", str5, "PT0M");
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT0M" + "'", str28, "PT0M");
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(dateTime50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(dateTime61);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "PT0M" + "'", str73, "PT0M");
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(interval93);
        org.junit.Assert.assertNotNull(chronology94);
    }

    @Test
    public void test13852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13852");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period1 = org.joda.time.Period.parse("2022-02-11T09:42:14.352Z/2022-02-11T09:42:14.352Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:42:14.352Z/2022-02...\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13853");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        java.lang.String str37 = dateTime23.toString();
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant41 = null;
        java.lang.Object obj42 = null;
        org.joda.time.Duration duration43 = new org.joda.time.Duration(obj42);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration43);
        boolean boolean45 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration43.toIntervalTo(readableInstant46);
        org.joda.time.Interval interval48 = interval47.toInterval();
        org.joda.time.DateTime dateTime49 = interval48.getEnd();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant52 = null;
        java.lang.Object obj53 = null;
        org.joda.time.Duration duration54 = new org.joda.time.Duration(obj53);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant52, (org.joda.time.ReadableDuration) duration54);
        boolean boolean56 = duration51.isShorterThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Interval interval58 = duration54.toIntervalTo(readableInstant57);
        org.joda.time.Interval interval59 = interval58.toInterval();
        org.joda.time.DateTime dateTime60 = interval59.getEnd();
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime49, (org.joda.time.ReadableInstant) dateTime60);
        org.joda.time.Days days62 = org.joda.time.Days.daysBetween((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime60);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant65 = null;
        java.lang.Object obj66 = null;
        org.joda.time.Duration duration67 = new org.joda.time.Duration(obj66);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant65, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = duration64.isShorterThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Interval interval71 = duration67.toIntervalTo(readableInstant70);
        org.joda.time.Interval interval72 = interval71.toInterval();
        org.joda.time.DateTime dateTime73 = interval72.getEnd();
        boolean boolean74 = dateTime23.isEqual((org.joda.time.ReadableInstant) dateTime73);
        org.joda.time.DateTimeFieldType dateTimeFieldType75 = null;
        boolean boolean76 = dateTime23.isSupported(dateTimeFieldType75);
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration81 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration84 = duration81.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration86 = duration78.withDurationAdded((org.joda.time.ReadableDuration) duration81, (int) (short) 1);
        org.joda.time.Period period87 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableDuration) duration86);
        org.joda.time.Period period88 = duration86.toPeriod();
        org.joda.time.Duration duration91 = duration86.withDurationAdded(1644572091852L, 90);
        org.joda.time.Duration duration93 = new org.joda.time.Duration((long) (-2147483646));
        org.joda.time.Duration duration94 = duration91.minus((org.joda.time.ReadableDuration) duration93);
        org.joda.time.Duration duration96 = duration93.minus(0L);
        long long97 = duration96.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "2022-02-11T09:43:43.625Z" + "'", str37, "2022-02-11T09:43:43.625Z");
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(dateTime60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(dateTime73);
// flaky:         org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(duration91);
        org.junit.Assert.assertNotNull(duration94);
        org.junit.Assert.assertNotNull(duration96);
        org.junit.Assert.assertTrue("'" + long97 + "' != '" + (-35791L) + "'", long97 == (-35791L));
    }

    @Test
    public void test13854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13854");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.parse("2022-02-11T09:40:27.547Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:40:27.547Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13855");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((java.lang.Object) duration13, periodType19, chronology20);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.Chronology chronology32 = interval31.getChronology();
        org.joda.time.Period period33 = new org.joda.time.Period((long) 1, (long) '#', periodType19, chronology32);
        org.joda.time.PeriodType periodType34 = periodType19.withDaysRemoved();
        org.joda.time.Period period35 = interval9.toPeriod(periodType19);
        long long36 = interval9.getStartMillis();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.Chronology chronology47 = interval46.getChronology();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval46);
        long long49 = interval46.toDurationMillis();
        org.joda.time.Interval interval50 = interval46.toInterval();
        boolean boolean51 = interval9.overlaps((org.joda.time.ReadableInterval) interval50);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(chronology32);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period35);
// flaky:         org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1644572623699L + "'", long36 == 1644572623699L);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(chronology47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test13856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13856");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration7, chronology8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration15 = duration12.minus((long) '4');
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration15);
        mutablePeriod3.setWeeks(2147483647);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((java.lang.Object) duration24, periodType30, chronology31);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.Chronology chronology43 = interval42.getChronology();
        org.joda.time.Period period44 = new org.joda.time.Period((long) 1, (long) '#', periodType30, chronology43);
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(0L, chronology43);
        mutablePeriod3.setPeriod(35999L, chronology43);
        mutablePeriod3.setDays(246);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) mutablePeriod3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(chronology43);
        org.junit.Assert.assertNotNull(seconds49);
    }

    @Test
    public void test13857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13857");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Period period9 = period4.multipliedBy((int) (byte) 100);
        org.joda.time.Period period11 = period9.withHours((int) (short) 0);
        org.joda.time.Period period13 = period9.withHours((int) (short) 1);
        org.joda.time.Period period15 = period9.withMinutes((-9700));
        org.joda.time.Period period17 = period9.plusHours(187);
        org.joda.time.Period period19 = period9.plusMonths((-869));
        org.joda.time.Period period21 = period9.plusWeeks((int) (short) 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test13858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13858");
        org.joda.time.Period period5 = org.joda.time.Period.years((int) (short) 0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis((long) '4');
        long long8 = duration7.getMillis();
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType11);
        mutablePeriod12.setYears(0);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology17 = null;
        mutablePeriod12.setPeriod((org.joda.time.ReadableDuration) duration16, chronology17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        org.joda.time.Interval interval28 = interval27.toInterval();
        org.joda.time.DateTime dateTime29 = interval28.getEnd();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.DateTime dateTime40 = interval39.getEnd();
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime29, (org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, (org.joda.time.ReadableInstant) dateTime29);
        java.lang.String str43 = dateTime29.toString();
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime29);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType47 = periodType46.withMillisRemoved();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((long) (short) 1, periodType47, chronology48);
        org.joda.time.PeriodType periodType50 = periodType47.withYearsRemoved();
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.standard();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant56 = null;
        java.lang.Object obj57 = null;
        org.joda.time.Duration duration58 = new org.joda.time.Duration(obj57);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant56, (org.joda.time.ReadableDuration) duration58);
        boolean boolean60 = duration55.isShorterThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Interval interval62 = duration58.toIntervalTo(readableInstant61);
        org.joda.time.Interval interval63 = interval62.toInterval();
        org.joda.time.Chronology chronology64 = interval63.getChronology();
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((long) (byte) -1, 52L, periodType53, chronology64);
        org.joda.time.Period period66 = duration7.toPeriod(periodType50, chronology64);
        org.joda.time.Period period67 = period5.normalizedStandard(periodType50);
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((long) (-2147483648), 1644572092263L, periodType50);
        org.joda.time.PeriodType periodType69 = periodType50.withSecondsRemoved();
        org.joda.time.Period period70 = new org.joda.time.Period(1644572414292L, 1644572383698L, periodType69);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 52L + "'", long8 == 52L);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(dateTime29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(dateTime40);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "2022-02-11T09:43:43.766Z" + "'", str43, "2022-02-11T09:43:43.766Z");
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(chronology64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(periodType69);
    }

    @Test
    public void test13859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13859");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        boolean boolean7 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutesIn(readableInterval9);
        java.lang.String str11 = minutes10.toString();
        org.joda.time.PeriodType periodType12 = minutes10.getPeriodType();
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant8, periodType12);
        org.joda.time.PeriodType periodType14 = periodType12.withMillisRemoved();
        org.joda.time.Period period15 = new org.joda.time.Period((long) 3, periodType14);
        org.joda.time.Period period16 = period15.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod17 = period16.toMutablePeriod();
        org.joda.time.Period period19 = period16.withMinutes(1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT0M" + "'", str11, "PT0M");
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test13860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13860");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.DurationFieldType durationFieldType2 = hours0.getFieldType();
        org.joda.time.Hours hours4 = hours0.multipliedBy(100);
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        java.lang.String str6 = durationFieldType5.getName();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hours" + "'", str6, "hours");
    }

    @Test
    public void test13861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13861");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType1 = periodType0.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(periodType0);
        java.lang.String str3 = mutablePeriod2.toString();
        org.joda.time.PeriodType periodType4 = mutablePeriod2.getPeriodType();
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.standard();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) (byte) 0, periodType7);
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod();
        mutablePeriod9.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod9, periodType13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.DateTime dateTime25 = interval24.getEnd();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant40 = null;
        java.lang.Object obj41 = null;
        org.joda.time.Duration duration42 = new org.joda.time.Duration(obj41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean44 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Interval interval46 = duration42.toIntervalTo(readableInstant45);
        org.joda.time.Interval interval47 = interval46.toInterval();
        org.joda.time.DateTime dateTime48 = interval47.getEnd();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant51 = null;
        java.lang.Object obj52 = null;
        org.joda.time.Duration duration53 = new org.joda.time.Duration(obj52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        boolean boolean55 = duration50.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Interval interval57 = duration53.toIntervalTo(readableInstant56);
        org.joda.time.Interval interval58 = interval57.toInterval();
        org.joda.time.DateTime dateTime59 = interval58.getEnd();
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime48, (org.joda.time.ReadableInstant) dateTime59);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableInstant) dateTime59);
        org.joda.time.DurationFieldType durationFieldType62 = minutes61.getFieldType();
        int int63 = mutablePeriod9.get(durationFieldType62);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant68 = null;
        java.lang.Object obj69 = null;
        org.joda.time.Duration duration70 = new org.joda.time.Duration(obj69);
        org.joda.time.Period period71 = new org.joda.time.Period(readableInstant68, (org.joda.time.ReadableDuration) duration70);
        boolean boolean72 = duration67.isShorterThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Interval interval74 = duration70.toIntervalTo(readableInstant73);
        org.joda.time.Interval interval75 = interval74.toInterval();
        org.joda.time.Chronology chronology76 = interval75.getChronology();
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((-1L), chronology76);
        mutablePeriod9.add((-1L), chronology76);
        org.joda.time.Period period79 = new org.joda.time.Period((java.lang.Object) mutablePeriod2, periodType7, chronology76);
        org.joda.time.Period period80 = mutablePeriod2.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray81 = mutablePeriod2.getFieldTypes();
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.forFields(durationFieldTypeArray81);
        org.joda.time.PeriodType periodType83 = org.joda.time.PeriodType.forFields(durationFieldTypeArray81);
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0S" + "'", str3, "PT0S");
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(dateTime59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(interval74);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(chronology76);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(durationFieldTypeArray81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType83);
    }

    @Test
    public void test13862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13862");
        org.joda.time.Period period1 = new org.joda.time.Period(1644572109169L);
        org.joda.time.Days days2 = period1.toStandardDays();
        org.joda.time.Period period4 = period1.plusMillis(1);
        org.joda.time.Period period6 = org.joda.time.Period.hours((int) (short) 1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray7 = period6.getFieldTypes();
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.forFields(durationFieldTypeArray7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.forFields(durationFieldTypeArray7);
        org.joda.time.DurationFieldType durationFieldType10 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Chronology chronology21 = interval20.getChronology();
        org.joda.time.DurationField durationField22 = durationFieldType10.getField(chronology21);
        boolean boolean23 = periodType9.isSupported(durationFieldType10);
        org.joda.time.PeriodType periodType24 = periodType9.withWeeksRemoved();
        org.joda.time.Period period25 = period4.withPeriodType(periodType24);
        org.joda.time.PeriodType periodType26 = periodType24.withWeeksRemoved();
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldTypeArray7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(chronology21);
        org.junit.Assert.assertNotNull(durationField22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(periodType26);
    }

    @Test
    public void test13863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13863");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn(readableInterval9);
        org.joda.time.Period period11 = period8.minus((org.joda.time.ReadablePeriod) hours10);
        org.joda.time.Hours hours13 = hours10.dividedBy((int) '4');
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = duration16.toPeriodFrom(readableInstant17);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration16.toPeriod(chronology19);
        org.joda.time.Period period22 = period20.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Hours hours24 = org.joda.time.Hours.hoursIn(readableInterval23);
        org.joda.time.Period period25 = period22.minus((org.joda.time.ReadablePeriod) hours24);
        org.joda.time.Hours hours27 = hours24.minus((int) '4');
        org.joda.time.Hours hours28 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours29 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours30 = hours28.minus(hours29);
        org.joda.time.Hours hours31 = hours24.minus(hours30);
        int int32 = hours30.getHours();
        org.joda.time.Hours hours34 = hours30.plus(0);
        java.lang.String str35 = hours30.toString();
        org.joda.time.Hours hours36 = hours10.plus(hours30);
        org.joda.time.DurationFieldType durationFieldType37 = hours30.getFieldType();
        org.joda.time.Duration duration38 = hours30.toStandardDuration();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483647 + "'", int32 == 2147483647);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "PT2147483647H" + "'", str35, "PT2147483647H");
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(duration38);
    }

    @Test
    public void test13864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13864");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.DurationFieldType durationFieldType47 = minutes46.getFieldType();
        org.joda.time.Minutes minutes49 = minutes46.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType50 = minutes49.getFieldType();
        org.joda.time.PeriodType periodType51 = minutes49.getPeriodType();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(periodType51);
    }

    @Test
    public void test13865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13865");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-12), 592, (int) (short) 10, 59, (-21262214), 46, 2147483639, (-648));
    }

    @Test
    public void test13866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13866");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.minus(weeks1);
        int int3 = weeks2.getWeeks();
        org.joda.time.PeriodType periodType4 = weeks2.getPeriodType();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks5.minus(weeks6);
        org.joda.time.PeriodType periodType8 = weeks7.getPeriodType();
        org.joda.time.Weeks weeks10 = weeks7.minus((int) (short) -1);
        boolean boolean11 = weeks2.isGreaterThan(weeks10);
        java.lang.Class<?> wildcardClass12 = weeks2.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test13867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13867");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Hours hours13 = hours11.minus(8);
        org.joda.time.Hours hours15 = hours13.plus(0);
        org.joda.time.Hours hours16 = hours13.negated();
        java.lang.String str17 = hours16.toString();
        org.joda.time.Duration duration18 = hours16.toStandardDuration();
        org.joda.time.Hours hours20 = hours16.plus(952);
        org.joda.time.PeriodType periodType21 = hours20.getPeriodType();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT8H" + "'", str17, "PT8H");
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
    }

    @Test
    public void test13868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13868");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (byte) 0, chronology1);
        mutablePeriod2.setDays((int) (short) 0);
        int int5 = mutablePeriod2.getMinutes();
        org.joda.time.ReadableInterval readableInterval6 = null;
        mutablePeriod2.add(readableInterval6);
        mutablePeriod2.add(1644572423766L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test13869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13869");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        mutablePeriod3.setPeriod((long) 100, 100L);
        mutablePeriod3.setPeriod((long) (-97));
        org.joda.time.DurationFieldType[] durationFieldTypeArray11 = mutablePeriod3.getFieldTypes();
        mutablePeriod3.setWeeks((int) (byte) 10);
        int int14 = mutablePeriod3.getMinutes();
        mutablePeriod3.add((int) (short) 100, (-1), 3, 36, 0, (int) '4', (int) (byte) 10, 56);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        boolean boolean43 = interval33.isAfter((org.joda.time.ReadableInterval) interval42);
        org.joda.time.DateTime dateTime44 = interval33.getStart();
        org.joda.time.Duration duration45 = interval33.toDuration();
        mutablePeriod3.add((org.joda.time.ReadableInterval) interval33);
        org.joda.time.ReadableInterval readableInterval47 = null;
        boolean boolean48 = interval33.isBefore(readableInterval47);
        org.joda.time.Duration duration50 = org.joda.time.Duration.millis((-604800L));
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes(1644572076884L);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Duration duration60 = duration52.minus((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant63 = null;
        java.lang.Object obj64 = null;
        org.joda.time.Duration duration65 = new org.joda.time.Duration(obj64);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant63, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = duration62.isShorterThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Interval interval69 = duration65.toIntervalTo(readableInstant68);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant72 = null;
        java.lang.Object obj73 = null;
        org.joda.time.Duration duration74 = new org.joda.time.Duration(obj73);
        org.joda.time.Period period75 = new org.joda.time.Period(readableInstant72, (org.joda.time.ReadableDuration) duration74);
        boolean boolean76 = duration71.isShorterThan((org.joda.time.ReadableDuration) duration74);
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Interval interval78 = duration74.toIntervalTo(readableInstant77);
        org.joda.time.Interval interval79 = interval78.toInterval();
        org.joda.time.Hours hours80 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval79);
        org.joda.time.Hours hours81 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval79);
        boolean boolean82 = interval69.overlaps((org.joda.time.ReadableInterval) interval79);
        org.joda.time.DateTime dateTime83 = interval69.getStart();
        org.joda.time.Period period84 = duration60.toPeriodFrom((org.joda.time.ReadableInstant) dateTime83);
        org.joda.time.Period period85 = duration50.toPeriodFrom((org.joda.time.ReadableInstant) dateTime83);
        long long86 = dateTime83.getMillis();
        org.joda.time.Instant instant87 = dateTime83.toInstant();
        boolean boolean88 = interval33.contains((org.joda.time.ReadableInstant) instant87);
        org.junit.Assert.assertNotNull(durationFieldTypeArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(interval79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(dateTime83);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(period85);
// flaky:         org.junit.Assert.assertTrue("'" + long86 + "' != '" + 1644572624071L + "'", long86 == 1644572624071L);
        org.junit.Assert.assertNotNull(instant87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test13870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13870");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.minus(weeks1);
        org.joda.time.Weeks weeks4 = weeks2.multipliedBy(100);
        org.joda.time.MutablePeriod mutablePeriod5 = weeks4.toMutablePeriod();
        mutablePeriod5.addMillis(34);
        int int8 = mutablePeriod5.getMinutes();
        org.joda.time.Period period10 = org.joda.time.Period.days(2147483647);
        mutablePeriod5.mergePeriod((org.joda.time.ReadablePeriod) period10);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test13871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13871");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.DateTime dateTime20 = interval9.getStart();
        org.joda.time.ReadableInstant readableInstant21 = null;
        boolean boolean22 = interval9.isAfter(readableInstant21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval9);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
    }

    @Test
    public void test13872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13872");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Period period10 = interval9.toPeriod();
        org.joda.time.Period period12 = period10.minusDays(0);
        org.joda.time.Period period14 = period12.withMillis((int) '4');
        org.joda.time.Hours hours15 = period12.toStandardHours();
        int int16 = period12.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test13873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13873");
        org.joda.time.Period period0 = org.joda.time.Period.ZERO;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        boolean boolean7 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Interval interval9 = duration5.toIntervalTo(readableInstant8);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean13 = duration5.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes14 = duration5.toStandardMinutes();
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Duration duration18 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = duration18.toPeriodFrom(readableInstant19);
        org.joda.time.Period period22 = period20.minusSeconds((int) '4');
        org.joda.time.Minutes minutes23 = period20.toStandardMinutes();
        boolean boolean24 = minutes14.isLessThan(minutes23);
        org.joda.time.Minutes minutes26 = minutes14.minus((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType27 = minutes26.getFieldType();
        org.joda.time.Period period29 = period0.withField(durationFieldType27, 2);
        org.joda.time.Period period31 = period29.minusWeeks(0);
        java.lang.String str32 = period31.toString();
        org.junit.Assert.assertNotNull(period0);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT2M" + "'", str32, "PT2M");
    }

    @Test
    public void test13874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13874");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Days days20 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval9);
        long long21 = interval9.toDurationMillis();
        org.joda.time.Days days22 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval9);
        long long23 = interval9.toDurationMillis();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        boolean boolean43 = interval33.isAfter((org.joda.time.ReadableInterval) interval42);
        org.joda.time.DateTime dateTime44 = interval33.getStart();
        org.joda.time.ReadableInstant readableInstant45 = null;
        boolean boolean46 = interval33.isAfter(readableInstant45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        org.joda.time.Interval interval56 = interval55.toInterval();
        org.joda.time.Chronology chronology57 = interval56.getChronology();
        boolean boolean58 = interval33.isBefore((org.joda.time.ReadableInterval) interval56);
        org.joda.time.Interval interval59 = interval56.toInterval();
        org.joda.time.Interval interval60 = interval56.toInterval();
        org.joda.time.DateTime dateTime61 = interval60.getEnd();
        boolean boolean62 = interval9.isAfter((org.joda.time.ReadableInterval) interval60);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(chronology57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(dateTime61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test13875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13875");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Period period9 = period4.multipliedBy((int) (byte) 100);
        org.joda.time.Period period11 = period9.withHours((int) (short) 0);
        java.lang.String str12 = period9.toString();
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = duration15.toPeriodFrom(readableInstant16);
        org.joda.time.Period period19 = period17.minusSeconds((int) '4');
        org.joda.time.Period period21 = period17.minusSeconds(10);
        org.joda.time.Period period22 = period17.normalizedStandard();
        org.joda.time.Period period23 = period9.minus((org.joda.time.ReadablePeriod) period17);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.yearDay();
        boolean boolean25 = period17.equals((java.lang.Object) periodType24);
        org.joda.time.Period period27 = period17.minusSeconds((-101));
        org.joda.time.Period period29 = period27.plusYears(1);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((java.lang.Object) period29);
        int int31 = period29.getMillis();
        int int32 = period29.getHours();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration33 = period29.toStandardDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Duration as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT-9.700S" + "'", str12, "PT-9.700S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-97) + "'", int31 == (-97));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test13876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13876");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572138187L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Hours hours21 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval20);
        org.joda.time.Hours hours22 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval20);
        boolean boolean23 = interval10.overlaps((org.joda.time.ReadableInterval) interval20);
        org.joda.time.DateTime dateTime24 = interval10.getStart();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        org.joda.time.Interval interval34 = interval33.toInterval();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        boolean boolean44 = interval34.isAfter((org.joda.time.ReadableInterval) interval43);
        org.joda.time.DateTime dateTime45 = interval34.getStart();
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime24, (org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.Duration duration48 = duration1.toDuration();
        long long49 = duration1.getStandardSeconds();
        org.joda.time.Duration duration52 = duration1.withDurationAdded(1644572170602L, 2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 1644572138L + "'", long49 == 1644572138L);
        org.junit.Assert.assertNotNull(duration52);
    }

    @Test
    public void test13877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13877");
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        org.joda.time.Days days4 = org.joda.time.Days.ONE;
        org.joda.time.Days days5 = days4.negated();
        org.joda.time.Days days6 = org.joda.time.Days.ONE;
        org.joda.time.Days days7 = days6.negated();
        boolean boolean8 = days5.isGreaterThan(days7);
        org.joda.time.Days days9 = days2.plus(days7);
        org.joda.time.PeriodType periodType10 = days9.getPeriodType();
        org.joda.time.PeriodType periodType11 = periodType10.withMinutesRemoved();
        org.joda.time.PeriodType periodType12 = periodType11.withMinutesRemoved();
        org.joda.time.Period period13 = new org.joda.time.Period(1644572571950L, 27409534912L, periodType12);
        java.lang.Class<?> wildcardClass14 = periodType12.getClass();
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test13878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13878");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.plusDays(1);
        org.joda.time.Period period8 = period6.minusYears((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray9 = period6.getFieldTypes();
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.forFields(durationFieldTypeArray9);
        org.joda.time.PeriodType periodType11 = periodType10.withHoursRemoved();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldTypeArray9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
    }

    @Test
    public void test13879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13879");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis((long) '4');
        long long8 = duration7.getMillis();
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType11);
        mutablePeriod12.setYears(0);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology17 = null;
        mutablePeriod12.setPeriod((org.joda.time.ReadableDuration) duration16, chronology17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        org.joda.time.Interval interval28 = interval27.toInterval();
        org.joda.time.DateTime dateTime29 = interval28.getEnd();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.DateTime dateTime40 = interval39.getEnd();
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime29, (org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, (org.joda.time.ReadableInstant) dateTime29);
        java.lang.String str43 = dateTime29.toString();
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime29);
        org.joda.time.Period period45 = duration5.toPeriodTo((org.joda.time.ReadableInstant) dateTime29);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType47 = seconds46.getFieldType();
        org.joda.time.Seconds seconds49 = seconds46.plus((-1));
        boolean boolean50 = duration5.equals((java.lang.Object) seconds46);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.PeriodType periodType52 = seconds51.getPeriodType();
        org.joda.time.Seconds seconds53 = seconds46.minus(seconds51);
        org.joda.time.Seconds seconds55 = seconds46.minus((int) (short) 1);
        int int56 = seconds46.getSeconds();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 52L + "'", long8 == 52L);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(dateTime29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(dateTime40);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "2022-02-11T09:43:44.352Z" + "'", str43, "2022-02-11T09:43:44.352Z");
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test13880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13880");
        org.joda.time.format.PeriodFormatter periodFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period2 = org.joda.time.Period.parse("PT18M", periodFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13881");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.minutesIn(readableInterval8);
        java.lang.String str10 = minutes9.toString();
        org.joda.time.PeriodType periodType11 = minutes9.getPeriodType();
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant7, periodType11);
        org.joda.time.Duration duration14 = duration4.withMillis((long) 'a');
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.DateTime dateTime32 = interval31.getEnd();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.DateTime dateTime43 = interval42.getEnd();
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.minutesIn(readableInterval53);
        java.lang.String str55 = minutes54.toString();
        org.joda.time.PeriodType periodType56 = minutes54.getPeriodType();
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant52, periodType56);
        org.joda.time.PeriodType periodType58 = periodType56.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, (org.joda.time.ReadableInstant) dateTime43, periodType58);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((java.lang.Object) duration61, periodType67, chronology68);
        org.joda.time.Duration duration71 = org.joda.time.Duration.millis((long) '4');
        long long72 = duration71.getStandardDays();
        boolean boolean73 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime43, (org.joda.time.ReadableDuration) duration71);
        org.joda.time.Interval interval75 = duration14.toIntervalTo((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.seconds();
        boolean boolean77 = dateTime43.equals((java.lang.Object) periodType76);
        long long78 = dateTime43.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0M" + "'", str10, "PT0M");
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT0M" + "'", str55, "PT0M");
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1644572624404L + "'", long78 == 1644572624404L);
    }

    @Test
    public void test13882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13882");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = weeks0.minus(weeks3);
        java.lang.String str6 = weeks5.toString();
        org.joda.time.Weeks weeks7 = weeks5.negated();
        java.lang.String str8 = weeks7.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P1W" + "'", str6, "P1W");
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-1W" + "'", str8, "P-1W");
    }

    @Test
    public void test13883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13883");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(1);
        org.joda.time.Period period3 = period1.withSeconds((-9700));
        org.joda.time.Period period5 = period3.plusWeeks(2147483647);
        java.lang.String str6 = period5.toString();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P2147483647WT-9700S" + "'", str6, "P2147483647WT-9700S");
    }

    @Test
    public void test13884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13884");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-59), 107, (-100), 10);
    }

    @Test
    public void test13885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13885");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration7, chronology8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.DateTime dateTime20 = interval19.getEnd();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.DateTime dateTime31 = interval30.getEnd();
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime20);
        java.lang.String str34 = dateTime20.toString();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration39 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration42 = duration39.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration44 = duration36.withDurationAdded((org.joda.time.ReadableDuration) duration39, (int) (short) 1);
        org.joda.time.Days days45 = duration44.toStandardDays();
        org.joda.time.Duration duration47 = duration44.minus((long) 10);
        org.joda.time.Days days48 = org.joda.time.Days.ONE;
        org.joda.time.Days days49 = days48.negated();
        org.joda.time.Days days50 = org.joda.time.Days.ONE;
        org.joda.time.Days days51 = days50.negated();
        org.joda.time.Days days52 = org.joda.time.Days.ONE;
        org.joda.time.Days days53 = days52.negated();
        boolean boolean54 = days51.isGreaterThan(days53);
        org.joda.time.Days days55 = days48.plus(days53);
        org.joda.time.PeriodType periodType56 = days55.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableDuration) duration47, periodType56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant58, (org.joda.time.ReadableDuration) duration60);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration60.toPeriod(chronology62);
        org.joda.time.Duration duration64 = duration47.plus((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Days days65 = duration64.toStandardDays();
        java.lang.String str66 = days65.toString();
        org.joda.time.Days days68 = days65.minus(876);
        org.joda.time.Days days69 = days68.negated();
        org.joda.time.Days days71 = days68.multipliedBy(703);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(dateTime31);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "2022-02-11T09:43:44.500Z" + "'", str34, "2022-02-11T09:43:44.500Z");
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P0D" + "'", str66, "P0D");
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertNotNull(days71);
    }

    @Test
    public void test13886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13886");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        long long9 = interval8.getStartMillis();
        org.joda.time.DateTime dateTime10 = interval8.getStart();
        org.joda.time.Instant instant11 = dateTime10.toInstant();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1644572624545L + "'", long9 == 1644572624545L);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(instant11);
    }

    @Test
    public void test13887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13887");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Chronology chronology10 = interval9.getChronology();
        org.joda.time.Days days11 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Interval interval12 = interval9.toInterval();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(chronology10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(interval12);
    }

    @Test
    public void test13888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13888");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(36000000);
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period3 = new org.joda.time.Period((java.lang.Object) minutes2);
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = minutes1.minus(minutes4);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        boolean boolean13 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Interval interval15 = duration11.toIntervalTo(readableInstant14);
        long long16 = interval15.getStartMillis();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval15);
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.years();
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.Minutes minutes20 = minutes17.negated();
        org.joda.time.Minutes minutes22 = minutes17.multipliedBy((int) ' ');
        org.joda.time.PeriodType periodType23 = minutes17.getPeriodType();
        org.joda.time.Minutes minutes25 = minutes17.dividedBy(54);
        boolean boolean26 = minutes4.isLessThan(minutes25);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(interval15);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572624585L + "'", long16 == 1644572624585L);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test13889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13889");
        org.joda.time.Days days1 = org.joda.time.Days.days(2147483639);
        org.joda.time.Days days3 = days1.dividedBy((-97));
        org.joda.time.Days days5 = org.joda.time.Days.days((-34));
        int int6 = days5.size();
        org.joda.time.Days days8 = org.joda.time.Days.days((int) (byte) 1);
        org.joda.time.Days days9 = days8.negated();
        boolean boolean10 = days5.isLessThan(days9);
        boolean boolean11 = days3.isLessThan(days5);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test13890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13890");
        org.joda.time.Period period1 = org.joda.time.Period.parse("PT0.097S");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType5 = minutes4.getPeriodType();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period7 = new org.joda.time.Period((java.lang.Object) minutes6);
        boolean boolean8 = minutes4.isGreaterThan(minutes6);
        org.joda.time.MutablePeriod mutablePeriod9 = minutes4.toMutablePeriod();
        mutablePeriod9.setDays((-963));
        org.joda.time.Period period12 = period1.minus((org.joda.time.ReadablePeriod) mutablePeriod9);
        int int13 = period1.getMonths();
        int[] intArray14 = period1.getValues();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0, 0, 0, 0, 0, 0, 97]");
    }

    @Test
    public void test13891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13891");
        org.joda.time.Period period1 = org.joda.time.Period.hours(2147483647);
        org.joda.time.Period period3 = period1.withYears(4);
        org.joda.time.Period period5 = period3.withMonths(2719);
        org.joda.time.Period period7 = period5.withYears((-97));
        org.joda.time.Period period9 = period7.withMonths((-3));
        org.joda.time.Period period10 = period7.normalizedStandard();
        org.joda.time.Period period12 = period7.plusDays(27409537);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test13892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13892");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((-101));
        org.joda.time.Period period3 = period1.withMinutes((-4));
        int[] intArray4 = period3.getValues();
        int int5 = period3.getMillis();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 0, 0, 0, 0, -4, 0, 0]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test13893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13893");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        mutablePeriod9.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod13);
        mutablePeriod13.setWeeks((int) (byte) 10);
        mutablePeriod13.addWeeks((int) (short) 1);
        mutablePeriod13.addMinutes((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        mutablePeriod28.addWeeks((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray31 = mutablePeriod28.getFieldTypes();
        mutablePeriod28.addMillis((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod();
        mutablePeriod35.setPeriod(100L, (long) (-1));
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant45 = null;
        java.lang.Object obj46 = null;
        org.joda.time.Duration duration47 = new org.joda.time.Duration(obj46);
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration47);
        boolean boolean49 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Interval interval51 = duration47.toIntervalTo(readableInstant50);
        org.joda.time.Interval interval52 = interval51.toInterval();
        org.joda.time.Chronology chronology53 = interval52.getChronology();
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((-1L), chronology53);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology53);
        mutablePeriod35.setPeriod((long) 100, chronology53);
        mutablePeriod28.setPeriod(1644572118718L, chronology53);
        org.joda.time.Period period58 = new org.joda.time.Period(1644572105679L, chronology53);
        mutablePeriod13.setPeriod(1644572166323L, 1644572131521L, chronology53);
        mutablePeriod13.setWeeks((int) (byte) 1);
        mutablePeriod13.addWeeks(10);
        int int64 = mutablePeriod13.getSeconds();
        int int65 = mutablePeriod13.getMinutes();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardSeconds((long) (byte) 0);
        java.lang.String str68 = duration67.toString();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Duration duration71 = weeks70.toStandardDuration();
        long long72 = duration71.getStandardMinutes();
        org.joda.time.Duration duration74 = duration71.plus(100L);
        org.joda.time.Duration duration76 = duration71.plus(1644572089958L);
        long long77 = duration71.getStandardSeconds();
        long long78 = duration71.getStandardMinutes();
        org.joda.time.Duration duration80 = duration67.withDurationAdded((org.joda.time.ReadableDuration) duration71, 53);
        mutablePeriod13.setPeriod((org.joda.time.ReadableDuration) duration80);
        org.junit.Assert.assertNotNull(durationFieldTypeArray31);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(chronology53);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-34) + "'", int64 == (-34));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "PT0S" + "'", str68, "PT0S");
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-10080L) + "'", long72 == (-10080L));
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-604800L) + "'", long77 == (-604800L));
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-10080L) + "'", long78 == (-10080L));
        org.junit.Assert.assertNotNull(duration80);
    }

    @Test
    public void test13894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13894");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(1644572194576L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType10);
        mutablePeriod11.addMillis((-1));
        mutablePeriod7.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod11);
        mutablePeriod7.setDays((int) ' ');
        int int17 = mutablePeriod7.size();
        org.joda.time.MutablePeriod mutablePeriod18 = mutablePeriod7.copy();
        mutablePeriod18.setWeeks((int) (short) 0);
        org.joda.time.Duration duration22 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration24 = duration22.plus(1644572076849L);
        long long25 = duration22.getMillis();
        long long26 = duration22.getStandardHours();
        mutablePeriod18.add((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration29 = duration22.plus((long) (-9700));
        long long30 = duration29.getStandardHours();
        org.joda.time.Hours hours31 = duration29.toStandardHours();
        org.joda.time.Duration duration32 = duration1.minus((org.joda.time.ReadableDuration) duration29);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 52L + "'", long25 == 52L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(duration32);
    }

    @Test
    public void test13895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13895");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Period period8 = period4.minusSeconds(10);
        org.joda.time.Period period10 = period4.withWeeks((int) (byte) -1);
        org.joda.time.Hours hours11 = period10.toStandardHours();
        org.joda.time.Period period13 = period10.minusSeconds((int) (short) 1);
        org.joda.time.Period period15 = period10.plusMonths(727);
        org.joda.time.Period period17 = period15.withMinutes(8);
        java.lang.String str18 = period17.toString();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P727M-1WT8M0.097S" + "'", str18, "P727M-1WT8M0.097S");
    }

    @Test
    public void test13896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13896");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.plus((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = seconds4.plus(seconds5);
        org.joda.time.Seconds seconds8 = seconds0.minus(seconds5);
        org.joda.time.ReadablePeriod readablePeriod9 = null;
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.standardSecondsIn(readablePeriod9);
        org.joda.time.Seconds seconds11 = seconds8.plus(seconds10);
        org.joda.time.Duration duration12 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds8.negated();
        int int14 = seconds8.size();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2S" + "'", str6, "PT2S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test13897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13897");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (byte) 0);
        org.joda.time.Duration duration2 = hours1.toStandardDuration();
        org.joda.time.Hours hours4 = hours1.multipliedBy((int) ' ');
        int int5 = hours4.size();
        org.joda.time.Hours hours6 = org.joda.time.Hours.FOUR;
        org.joda.time.Hours hours8 = hours6.dividedBy(32);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        boolean boolean29 = interval19.isAfter((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Period period30 = interval28.toPeriod();
        org.joda.time.Hours hours31 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval28);
        org.joda.time.PeriodType periodType32 = hours31.getPeriodType();
        boolean boolean33 = hours8.isGreaterThan(hours31);
        int int34 = hours31.getHours();
        org.joda.time.Hours hours35 = hours4.plus(hours31);
        org.joda.time.Hours hours37 = hours35.minus(2119021);
        org.joda.time.DurationFieldType durationFieldType38 = hours37.getFieldType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(durationFieldType38);
    }

    @Test
    public void test13898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13898");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays(1644572454256L);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows a long: 1644572454256 * 86400000");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13899");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(2);
        org.joda.time.Period period3 = period1.withWeeks(18);
        org.joda.time.Period period4 = period1.normalizedStandard();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period1);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
    }

    @Test
    public void test13900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13900");
        org.joda.time.Period period4 = org.joda.time.Period.days((int) ' ');
        int int5 = period4.getSeconds();
        org.joda.time.PeriodType periodType6 = period4.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(0L, periodType6);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.standard();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) (byte) 0, periodType11);
        int int13 = mutablePeriod12.getDays();
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType16);
        mutablePeriod17.setYears(0);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology22 = null;
        mutablePeriod17.setPeriod((org.joda.time.ReadableDuration) duration21, chronology22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.DateTime dateTime45 = interval44.getEnd();
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, (org.joda.time.ReadableInstant) dateTime34);
        java.lang.String str48 = dateTime34.toString();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType53);
        mutablePeriod54.setYears(0);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology59 = null;
        mutablePeriod54.setPeriod((org.joda.time.ReadableDuration) duration58, chronology59);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant63 = null;
        java.lang.Object obj64 = null;
        org.joda.time.Duration duration65 = new org.joda.time.Duration(obj64);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant63, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = duration62.isShorterThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Interval interval69 = duration65.toIntervalTo(readableInstant68);
        org.joda.time.Interval interval70 = interval69.toInterval();
        org.joda.time.DateTime dateTime71 = interval70.getEnd();
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant74 = null;
        java.lang.Object obj75 = null;
        org.joda.time.Duration duration76 = new org.joda.time.Duration(obj75);
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant74, (org.joda.time.ReadableDuration) duration76);
        boolean boolean78 = duration73.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Interval interval80 = duration76.toIntervalTo(readableInstant79);
        org.joda.time.Interval interval81 = interval80.toInterval();
        org.joda.time.DateTime dateTime82 = interval81.getEnd();
        org.joda.time.Period period83 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime71, (org.joda.time.ReadableInstant) dateTime82);
        org.joda.time.Period period84 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration58, (org.joda.time.ReadableInstant) dateTime71);
        org.joda.time.PeriodType periodType85 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period86 = duration50.toPeriodTo((org.joda.time.ReadableInstant) dateTime71, periodType85);
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableInstant) dateTime71);
        org.joda.time.Duration duration88 = mutablePeriod12.toDurationFrom((org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Chronology chronology89 = dateTime34.getChronology();
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod(1644572143600L, chronology89);
        org.joda.time.Period period91 = new org.joda.time.Period(1644572206113L, 1644572232602L, periodType6, chronology89);
        org.joda.time.Period period93 = period91.multipliedBy(16);
        org.joda.time.Period period94 = new org.joda.time.Period((java.lang.Object) period91);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(dateTime45);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "2022-02-11T09:43:44.874Z" + "'", str48, "2022-02-11T09:43:44.874Z");
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(interval70);
        org.junit.Assert.assertNotNull(dateTime71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(interval81);
        org.junit.Assert.assertNotNull(dateTime82);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(chronology89);
        org.junit.Assert.assertNotNull(period93);
    }

    @Test
    public void test13901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13901");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) ' ', chronology1);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.DateTime dateTime47 = interval46.getEnd();
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType50 = periodType49.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(periodType50);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(10L, periodType50);
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime47, periodType50);
        org.joda.time.Duration duration54 = mutablePeriod2.toDurationFrom((org.joda.time.ReadableInstant) dateTime23);
        mutablePeriod2.addMonths((int) '#');
        mutablePeriod2.setDays((int) (short) 0);
        mutablePeriod2.setPeriod(1644572114000L);
        mutablePeriod2.addYears(34);
        int int63 = mutablePeriod2.getMillis();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardSeconds((-1L));
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant68 = null;
        java.lang.Object obj69 = null;
        org.joda.time.Duration duration70 = new org.joda.time.Duration(obj69);
        org.joda.time.Period period71 = new org.joda.time.Period(readableInstant68, (org.joda.time.ReadableDuration) duration70);
        boolean boolean72 = duration67.isShorterThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Interval interval74 = duration70.toIntervalTo(readableInstant73);
        long long75 = interval74.getStartMillis();
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant78 = null;
        java.lang.Object obj79 = null;
        org.joda.time.Duration duration80 = new org.joda.time.Duration(obj79);
        org.joda.time.Period period81 = new org.joda.time.Period(readableInstant78, (org.joda.time.ReadableDuration) duration80);
        boolean boolean82 = duration77.isShorterThan((org.joda.time.ReadableDuration) duration80);
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.Interval interval84 = duration80.toIntervalTo(readableInstant83);
        org.joda.time.Interval interval85 = interval84.toInterval();
        org.joda.time.Hours hours86 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval85);
        org.joda.time.Hours hours87 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval85);
        boolean boolean88 = interval74.isBefore((org.joda.time.ReadableInterval) interval85);
        org.joda.time.DateTime dateTime89 = interval74.getStart();
        org.joda.time.Period period90 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration65, (org.joda.time.ReadableInstant) dateTime89);
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration65);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(interval74);
// flaky:         org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1644572624922L + "'", long75 == 1644572624922L);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(interval84);
        org.junit.Assert.assertNotNull(interval85);
        org.junit.Assert.assertNotNull(hours86);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(dateTime89);
    }

    @Test
    public void test13902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13902");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        int int1 = seconds0.getSeconds();
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType4 = seconds3.getFieldType();
        org.joda.time.Seconds seconds6 = seconds3.plus((-1));
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.TWO;
        java.lang.String str8 = seconds7.toString();
        org.joda.time.Seconds seconds9 = seconds6.plus(seconds7);
        org.joda.time.Seconds seconds10 = seconds2.minus(seconds7);
        org.joda.time.Seconds seconds12 = seconds10.multipliedBy((int) (byte) -1);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds13.multipliedBy((int) (byte) 1);
        java.lang.String str16 = seconds13.toString();
        org.joda.time.PeriodType periodType17 = seconds13.getPeriodType();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        org.joda.time.Seconds seconds21 = seconds18.plus((-1));
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.TWO;
        java.lang.String str23 = seconds22.toString();
        org.joda.time.Seconds seconds24 = seconds21.plus(seconds22);
        org.joda.time.Seconds seconds25 = seconds13.minus(seconds21);
        java.lang.String str26 = seconds13.toString();
        org.joda.time.Seconds seconds27 = seconds10.plus(seconds13);
        org.joda.time.Seconds seconds29 = seconds27.minus(246);
        int int30 = seconds29.size();
        org.joda.time.Seconds seconds32 = seconds29.multipliedBy(1);
        org.joda.time.Seconds seconds33 = seconds0.minus(seconds29);
        org.joda.time.Seconds seconds35 = seconds29.plus(0);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT2S" + "'", str8, "PT2S");
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT3S" + "'", str16, "PT3S");
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2S" + "'", str23, "PT2S");
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT3S" + "'", str26, "PT3S");
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
    }

    @Test
    public void test13903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13903");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        boolean boolean4 = days1.isGreaterThan(days3);
        int int5 = days3.size();
        int int6 = days3.getDays();
        org.joda.time.Days days8 = days3.multipliedBy(2147483647);
        org.joda.time.Days days9 = org.joda.time.Days.ZERO;
        org.joda.time.Days days10 = org.joda.time.Days.ONE;
        org.joda.time.Days days11 = days10.negated();
        int int12 = days9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days10);
        int int13 = days9.getDays();
        org.joda.time.Days days14 = org.joda.time.Days.ONE;
        org.joda.time.Days days15 = days14.negated();
        org.joda.time.Days days16 = org.joda.time.Days.ONE;
        org.joda.time.Days days17 = days16.negated();
        org.joda.time.Days days18 = org.joda.time.Days.ONE;
        org.joda.time.Days days19 = days18.negated();
        boolean boolean20 = days17.isGreaterThan(days19);
        org.joda.time.Days days21 = days14.plus(days19);
        int int22 = days14.getDays();
        org.joda.time.Days days24 = days14.minus(2147483647);
        org.joda.time.Days days26 = days24.dividedBy((-101));
        org.joda.time.Days days27 = days9.plus(days26);
        org.joda.time.Days days28 = days3.plus(days27);
        org.joda.time.Duration duration30 = org.joda.time.Duration.millis((long) '4');
        long long31 = duration30.getStandardDays();
        org.joda.time.Days days32 = duration30.toStandardDays();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration37 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration40 = duration37.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration42 = duration34.withDurationAdded((org.joda.time.ReadableDuration) duration37, (int) (short) 1);
        org.joda.time.Days days43 = duration42.toStandardDays();
        int int44 = days43.size();
        boolean boolean45 = days32.isLessThan(days43);
        boolean boolean46 = days28.isGreaterThan(days32);
        org.joda.time.PeriodType periodType47 = days28.getPeriodType();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(periodType47);
    }

    @Test
    public void test13904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13904");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        org.joda.time.Days days4 = org.joda.time.Days.ONE;
        org.joda.time.Days days5 = days4.negated();
        boolean boolean6 = days3.isGreaterThan(days5);
        org.joda.time.Days days7 = days0.plus(days5);
        int int8 = days0.getDays();
        org.joda.time.Days days10 = days0.minus(2147483647);
        org.joda.time.Days days12 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.PeriodType periodType13 = days12.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod14 = days12.toMutablePeriod();
        boolean boolean15 = days10.isLessThan(days12);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        org.joda.time.Days days20 = duration18.toStandardDays();
        org.joda.time.Days days21 = days20.negated();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration26 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration29 = duration26.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration31 = duration23.withDurationAdded((org.joda.time.ReadableDuration) duration26, (int) (short) 1);
        org.joda.time.Days days32 = duration31.toStandardDays();
        int int33 = days32.size();
        boolean boolean34 = days21.isGreaterThan(days32);
        org.joda.time.Days days36 = days32.dividedBy(4);
        org.joda.time.Days days37 = days12.minus(days36);
        int int38 = days37.getDays();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test13905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13905");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        mutablePeriod9.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod13);
        mutablePeriod13.setWeeks((int) (byte) 10);
        mutablePeriod13.setWeeks(35);
        int int21 = mutablePeriod13.getSeconds();
        mutablePeriod13.addYears((-63));
        mutablePeriod13.clear();
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test13906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13906");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(1644572558263L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test13907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13907");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds((long) 59);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant7 = null;
        java.lang.Object obj8 = null;
        org.joda.time.Duration duration9 = new org.joda.time.Duration(obj8);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration9);
        boolean boolean11 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((java.lang.Object) duration6, periodType12, chronology13);
        org.joda.time.DurationFieldType[] durationFieldTypeArray15 = mutablePeriod14.getFieldTypes();
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.forFields(durationFieldTypeArray15);
        org.joda.time.Period period17 = new org.joda.time.Period((long) 32, periodType16);
        org.joda.time.PeriodType periodType18 = periodType16.withDaysRemoved();
        org.joda.time.PeriodType periodType19 = periodType18.withDaysRemoved();
        org.joda.time.PeriodType periodType20 = periodType19.withSecondsRemoved();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        long long30 = interval29.getStartMillis();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval29);
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.years();
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.Minutes minutes34 = minutes31.negated();
        org.joda.time.Minutes minutes36 = minutes31.multipliedBy((int) ' ');
        org.joda.time.Minutes minutes38 = minutes31.multipliedBy((int) ' ');
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant43 = null;
        java.lang.Object obj44 = null;
        org.joda.time.Duration duration45 = new org.joda.time.Duration(obj44);
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration45);
        boolean boolean47 = duration42.isShorterThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((java.lang.Object) duration42, periodType48, chronology49);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant53 = null;
        java.lang.Object obj54 = null;
        org.joda.time.Duration duration55 = new org.joda.time.Duration(obj54);
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant53, (org.joda.time.ReadableDuration) duration55);
        boolean boolean57 = duration52.isShorterThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Interval interval59 = duration55.toIntervalTo(readableInstant58);
        org.joda.time.Interval interval60 = interval59.toInterval();
        org.joda.time.Chronology chronology61 = interval60.getChronology();
        org.joda.time.Period period62 = new org.joda.time.Period((long) 1, (long) '#', periodType48, chronology61);
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod((java.lang.Object) minutes31, chronology61);
        org.joda.time.Period period64 = duration3.toPeriod(periodType20, chronology61);
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(1644572353420L, 1644572200415L, chronology61);
        mutablePeriod65.addYears(369701);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(durationFieldTypeArray15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572625126L + "'", long30 == 1644572625126L);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(chronology61);
        org.junit.Assert.assertNotNull(period64);
    }

    @Test
    public void test13908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13908");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType2 = periodType1.withSecondsRemoved();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        boolean boolean9 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Interval interval11 = duration7.toIntervalTo(readableInstant10);
        org.joda.time.Interval interval12 = interval11.toInterval();
        org.joda.time.DateTime dateTime13 = interval12.getEnd();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        boolean boolean33 = interval23.isAfter((org.joda.time.ReadableInterval) interval32);
        boolean boolean34 = interval12.contains((org.joda.time.ReadableInterval) interval23);
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType37);
        mutablePeriod38.setYears(0);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology43 = null;
        mutablePeriod38.setPeriod((org.joda.time.ReadableDuration) duration42, chronology43);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        org.joda.time.Interval interval54 = interval53.toInterval();
        org.joda.time.DateTime dateTime55 = interval54.getEnd();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant58 = null;
        java.lang.Object obj59 = null;
        org.joda.time.Duration duration60 = new org.joda.time.Duration(obj59);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant58, (org.joda.time.ReadableDuration) duration60);
        boolean boolean62 = duration57.isShorterThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Interval interval64 = duration60.toIntervalTo(readableInstant63);
        org.joda.time.Interval interval65 = interval64.toInterval();
        org.joda.time.DateTime dateTime66 = interval65.getEnd();
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime55, (org.joda.time.ReadableInstant) dateTime66);
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, (org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant71 = null;
        java.lang.Object obj72 = null;
        org.joda.time.Duration duration73 = new org.joda.time.Duration(obj72);
        org.joda.time.Period period74 = new org.joda.time.Period(readableInstant71, (org.joda.time.ReadableDuration) duration73);
        boolean boolean75 = duration70.isShorterThan((org.joda.time.ReadableDuration) duration73);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Interval interval77 = duration73.toIntervalTo(readableInstant76);
        org.joda.time.Interval interval78 = interval77.toInterval();
        org.joda.time.DateTime dateTime79 = interval78.getEnd();
        org.joda.time.PeriodType periodType81 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType82 = periodType81.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(periodType82);
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(10L, periodType82);
        org.joda.time.Period period85 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime55, (org.joda.time.ReadableInstant) dateTime79, periodType82);
        boolean boolean86 = interval23.isAfter((org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.Chronology chronology87 = dateTime55.getChronology();
        org.joda.time.Period period88 = new org.joda.time.Period((long) (byte) 0, periodType2, chronology87);
        org.joda.time.Hours hours89 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period88);
        org.joda.time.Hours hours91 = hours89.dividedBy((-34));
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(dateTime13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(dateTime66);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(dateTime79);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(chronology87);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertNotNull(hours91);
    }

    @Test
    public void test13909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13909");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(32);
        int int2 = period1.getDays();
        org.joda.time.Period period4 = period1.withDays((int) (byte) 0);
        org.joda.time.Period period6 = period4.withWeeks((int) '4');
        org.joda.time.MutablePeriod mutablePeriod7 = period6.toMutablePeriod();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
    }

    @Test
    public void test13910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13910");
        org.joda.time.Period period1 = org.joda.time.Period.millis(601);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13911");
        org.joda.time.Period period4 = new org.joda.time.Period(97, (-9700), (int) (short) 100, 34);
        org.joda.time.Period period6 = period4.minusYears(0);
        org.joda.time.Period period8 = period6.withWeeks((-97));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test13912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13912");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(139579);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13913");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(53, (-3), 456368756, (int) (short) 10, 600, 727, 456368756, (-10886400));
        int int9 = mutablePeriod8.getMinutes();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 727 + "'", int9 == 727);
    }

    @Test
    public void test13914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13914");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.ReadablePeriod readablePeriod1 = null;
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.standardSecondsIn(readablePeriod1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.TWO;
        java.lang.String str4 = seconds3.toString();
        org.joda.time.Seconds seconds5 = seconds2.minus(seconds3);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds8 = seconds6.multipliedBy((int) (byte) 1);
        org.joda.time.Period period13 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period15 = period13.plusDays(1);
        org.joda.time.Period period17 = period15.minusYears((int) (short) -1);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period15);
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        boolean boolean20 = seconds8.isLessThan(seconds18);
        boolean boolean21 = seconds3.isLessThan(seconds8);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType23 = seconds22.getFieldType();
        org.joda.time.Seconds seconds25 = seconds22.plus((-1));
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds26.multipliedBy((int) (byte) 1);
        int int29 = seconds28.size();
        org.joda.time.Period period31 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period33 = period31.minusMillis((-1));
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period33);
        boolean boolean35 = seconds28.isGreaterThan(seconds34);
        boolean boolean36 = seconds22.isGreaterThan(seconds28);
        org.joda.time.Seconds seconds38 = seconds22.multipliedBy(8);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds39.multipliedBy((int) (byte) 1);
        java.lang.String str42 = seconds39.toString();
        org.joda.time.PeriodType periodType43 = seconds39.getPeriodType();
        org.joda.time.Seconds seconds44 = seconds38.plus(seconds39);
        boolean boolean45 = seconds3.isLessThan(seconds38);
        boolean boolean46 = seconds0.isLessThan(seconds3);
        org.joda.time.PeriodType periodType47 = seconds3.getPeriodType();
        org.joda.time.Seconds seconds49 = seconds3.minus(27409537);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2S" + "'", str4, "PT2S");
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT3S" + "'", str42, "PT3S");
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(seconds49);
    }

    @Test
    public void test13915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13915");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        boolean boolean29 = interval19.isAfter((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Period period30 = interval28.toPeriod();
        boolean boolean31 = interval9.isBefore((org.joda.time.ReadableInterval) interval28);
        java.lang.String str32 = interval28.toString();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Period period35 = new org.joda.time.Period(1644572109169L);
        boolean boolean36 = interval28.equals((java.lang.Object) period35);
        org.joda.time.Period period38 = period35.plusSeconds((int) (byte) 10);
        org.joda.time.Weeks weeks39 = period35.toStandardWeeks();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "2022-02-11T09:43:45.321Z/2022-02-11T09:43:45.321Z" + "'", str32, "2022-02-11T09:43:45.321Z/2022-02-11T09:43:45.321Z");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(weeks39);
    }

    @Test
    public void test13916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13916");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.DateTime dateTime20 = interval9.getStart();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.DateTime dateTime31 = interval30.getEnd();
        org.joda.time.Days days32 = org.joda.time.Days.ONE;
        org.joda.time.Days days33 = days32.negated();
        org.joda.time.Days days34 = org.joda.time.Days.ONE;
        org.joda.time.Days days35 = days34.negated();
        org.joda.time.Days days36 = org.joda.time.Days.ONE;
        org.joda.time.Days days37 = days36.negated();
        boolean boolean38 = days35.isGreaterThan(days37);
        org.joda.time.Days days39 = days32.plus(days37);
        org.joda.time.PeriodType periodType40 = days39.getPeriodType();
        org.joda.time.PeriodType periodType41 = periodType40.withMinutesRemoved();
        org.joda.time.PeriodType periodType42 = periodType40.withMillisRemoved();
        org.joda.time.Period period43 = interval30.toPeriod(periodType42);
        java.lang.String str44 = interval30.toString();
        org.joda.time.Duration duration45 = interval30.toDuration();
        org.joda.time.Duration duration47 = duration45.withMillis(1644572290335L);
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableDuration) duration45);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period43);
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "2022-02-11T09:43:45.344Z/2022-02-11T09:43:45.344Z" + "'", str44, "2022-02-11T09:43:45.344Z/2022-02-11T09:43:45.344Z");
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration47);
    }

    @Test
    public void test13917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13917");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.minutesIn(readableInterval8);
        java.lang.String str10 = minutes9.toString();
        org.joda.time.PeriodType periodType11 = minutes9.getPeriodType();
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant7, periodType11);
        org.joda.time.Duration duration13 = duration4.toDuration();
        org.joda.time.Duration duration16 = duration4.withDurationAdded(1644572459578L, 670);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0M" + "'", str10, "PT0M");
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration16);
    }

    @Test
    public void test13918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13918");
        org.joda.time.Days days0 = org.joda.time.Days.SIX;
        org.joda.time.Days days2 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.Days days3 = days0.plus(days2);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.Days days5 = org.joda.time.Days.ONE;
        org.joda.time.Days days6 = days5.negated();
        org.joda.time.Days days7 = org.joda.time.Days.ONE;
        org.joda.time.Days days8 = days7.negated();
        org.joda.time.Days days9 = org.joda.time.Days.ONE;
        org.joda.time.Days days10 = days9.negated();
        boolean boolean11 = days8.isGreaterThan(days10);
        org.joda.time.Days days12 = days5.plus(days10);
        boolean boolean13 = days4.isLessThan(days10);
        int int14 = days10.getDays();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration22 = duration19.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration24 = duration16.withDurationAdded((org.joda.time.ReadableDuration) duration19, (int) (short) 1);
        org.joda.time.Days days25 = duration24.toStandardDays();
        org.joda.time.Days days26 = duration24.toStandardDays();
        org.joda.time.Period period27 = days26.toPeriod();
        java.lang.String str28 = days26.toString();
        org.joda.time.Days days29 = days10.minus(days26);
        org.joda.time.Days days30 = days3.minus(days29);
        org.joda.time.Days days32 = days29.minus((-35));
        java.lang.String str33 = days32.toString();
        org.joda.time.PeriodType periodType34 = days32.getPeriodType();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P0D" + "'", str28, "P0D");
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P34D" + "'", str33, "P34D");
        org.junit.Assert.assertNotNull(periodType34);
    }

    @Test
    public void test13919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13919");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572088907L, (long) 3);
        mutablePeriod2.addMillis((int) '#');
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType15);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) 1);
        mutablePeriod16.setPeriod((org.joda.time.ReadablePeriod) minutes19);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        mutablePeriod16.setPeriod((org.joda.time.ReadableInterval) interval29);
        mutablePeriod16.add((long) (byte) 0);
        mutablePeriod16.addDays((int) (byte) -1);
        mutablePeriod16.setDays((int) (short) 100);
        java.lang.String str37 = mutablePeriod16.toString();
        mutablePeriod16.setMinutes((-2));
        org.joda.time.DurationFieldType durationFieldType45 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        org.joda.time.Interval interval55 = interval54.toInterval();
        org.joda.time.Chronology chronology56 = interval55.getChronology();
        org.joda.time.DurationField durationField57 = durationFieldType45.getField(chronology56);
        org.joda.time.Period period58 = new org.joda.time.Period(36000L, chronology56);
        org.joda.time.Period period59 = new org.joda.time.Period(1644572093963L, 0L, chronology56);
        mutablePeriod16.setPeriod(1644572232203L, 1644572248076L, chronology56);
        org.joda.time.Period period61 = new org.joda.time.Period(1644572358219L, chronology56);
        mutablePeriod2.setPeriod((long) 586, chronology56);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P100D" + "'", str37, "P100D");
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(chronology56);
        org.junit.Assert.assertNotNull(durationField57);
    }

    @Test
    public void test13920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13920");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period1 = org.joda.time.Period.parse("2022-02-11T09:35:34.708Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:35:34.708Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13921");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(916, (-9), (-41), (-53));
    }

    @Test
    public void test13922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13922");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration7 = duration4.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration9 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration4, (int) (short) 1);
        org.joda.time.Days days10 = duration9.toStandardDays();
        org.joda.time.Duration duration12 = duration9.withMillis(1644572226060L);
        org.joda.time.Days days13 = duration9.toStandardDays();
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.Duration duration15 = duration9.minus(readableDuration14);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(duration15);
    }

    @Test
    public void test13923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13923");
        org.joda.time.Days days0 = org.joda.time.Days.FOUR;
        org.joda.time.Days days2 = days0.multipliedBy((-1));
        org.joda.time.Days days4 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod6 = days4.toMutablePeriod();
        org.joda.time.Days days7 = days2.plus(days4);
        org.joda.time.Duration duration9 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration11 = duration9.plus(1644572076849L);
        org.joda.time.Days days12 = duration9.toStandardDays();
        org.joda.time.Period period13 = days12.toPeriod();
        java.lang.String str14 = days12.toString();
        org.joda.time.Days days15 = org.joda.time.Days.FOUR;
        org.joda.time.Days days17 = days15.multipliedBy((-1));
        boolean boolean18 = days12.isGreaterThan(days17);
        boolean boolean19 = days7.isGreaterThan(days12);
        org.joda.time.Days days21 = days7.minus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType22 = org.joda.time.DurationFieldType.months();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((java.lang.Object) duration24, periodType30, chronology31);
        org.joda.time.Duration duration34 = org.joda.time.Duration.millis((long) '4');
        long long35 = duration34.getStandardDays();
        boolean boolean36 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration34);
        long long37 = duration24.getMillis();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant40 = null;
        java.lang.Object obj41 = null;
        org.joda.time.Duration duration42 = new org.joda.time.Duration(obj41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean44 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Interval interval46 = duration42.toIntervalTo(readableInstant45);
        org.joda.time.Interval interval47 = interval46.toInterval();
        org.joda.time.Chronology chronology48 = interval47.getChronology();
        org.joda.time.Period period49 = duration24.toPeriod(chronology48);
        org.joda.time.DurationField durationField50 = durationFieldType22.getField(chronology48);
        int int51 = days7.get(durationFieldType22);
        java.lang.String str52 = durationFieldType22.toString();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P0D" + "'", str14, "P0D");
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 36000000L + "'", long37 == 36000000L);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(chronology48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(durationField50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "months" + "'", str52, "months");
    }

    @Test
    public void test13924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13924");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        long long3 = duration1.getStandardMinutes();
        org.joda.time.Duration duration6 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration9 = duration6.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes10 = duration9.toStandardMinutes();
        org.joda.time.Duration duration12 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration9, (-1));
        org.joda.time.Duration duration13 = duration9.toDuration();
        org.joda.time.Period period14 = duration13.toPeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test13925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13925");
        org.joda.time.Period period1 = org.joda.time.Period.days(19034);
        int int2 = period1.getMonths();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test13926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13926");
        org.joda.time.Period period4 = new org.joda.time.Period(2, 0, (int) '#', 36);
        org.joda.time.Period period6 = period4.withMillis((-2147483648));
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test13927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13927");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Seconds seconds5 = duration2.toStandardSeconds();
        org.joda.time.Seconds seconds6 = duration2.toStandardSeconds();
        org.joda.time.Seconds seconds8 = seconds6.multipliedBy(13);
        org.joda.time.Duration duration10 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Period period11 = duration10.toPeriod();
        org.joda.time.Duration duration13 = duration10.plus(1644572107180L);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType15 = seconds14.getFieldType();
        org.joda.time.Seconds seconds17 = seconds14.plus((-1));
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds18.multipliedBy((int) (byte) 1);
        int int21 = seconds20.size();
        org.joda.time.Period period23 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period25 = period23.minusMillis((-1));
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period25);
        boolean boolean27 = seconds20.isGreaterThan(seconds26);
        boolean boolean28 = seconds14.isGreaterThan(seconds20);
        org.joda.time.Seconds seconds30 = seconds14.multipliedBy(8);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType33 = seconds32.getFieldType();
        org.joda.time.Seconds seconds35 = seconds32.plus((-1));
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.TWO;
        java.lang.String str37 = seconds36.toString();
        org.joda.time.Seconds seconds38 = seconds35.plus(seconds36);
        org.joda.time.Seconds seconds39 = seconds31.minus(seconds36);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.secondsIn(readableInterval40);
        org.joda.time.Seconds seconds42 = seconds36.plus(seconds41);
        org.joda.time.Seconds seconds43 = seconds14.minus(seconds41);
        org.joda.time.Seconds seconds44 = seconds43.negated();
        boolean boolean45 = duration10.equals((java.lang.Object) seconds43);
        boolean boolean46 = seconds6.isGreaterThan(seconds43);
        int int47 = seconds6.getSeconds();
        org.joda.time.Duration duration48 = seconds6.toStandardDuration();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT2S" + "'", str37, "PT2S");
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(duration48);
    }

    @Test
    public void test13928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13928");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Period period21 = interval18.toPeriod();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval18);
        long long23 = interval18.toDurationMillis();
        org.joda.time.Duration duration26 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration29 = duration26.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration31 = org.joda.time.Duration.millis((long) '4');
        long long32 = duration31.getMillis();
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType35);
        mutablePeriod36.setYears(0);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology41 = null;
        mutablePeriod36.setPeriod((org.joda.time.ReadableDuration) duration40, chronology41);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant45 = null;
        java.lang.Object obj46 = null;
        org.joda.time.Duration duration47 = new org.joda.time.Duration(obj46);
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration47);
        boolean boolean49 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Interval interval51 = duration47.toIntervalTo(readableInstant50);
        org.joda.time.Interval interval52 = interval51.toInterval();
        org.joda.time.DateTime dateTime53 = interval52.getEnd();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant56 = null;
        java.lang.Object obj57 = null;
        org.joda.time.Duration duration58 = new org.joda.time.Duration(obj57);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant56, (org.joda.time.ReadableDuration) duration58);
        boolean boolean60 = duration55.isShorterThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Interval interval62 = duration58.toIntervalTo(readableInstant61);
        org.joda.time.Interval interval63 = interval62.toInterval();
        org.joda.time.DateTime dateTime64 = interval63.getEnd();
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime53, (org.joda.time.ReadableInstant) dateTime64);
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, (org.joda.time.ReadableInstant) dateTime53);
        java.lang.String str67 = dateTime53.toString();
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, (org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.Period period69 = duration29.toPeriodTo((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant72 = null;
        java.lang.Object obj73 = null;
        org.joda.time.Duration duration74 = new org.joda.time.Duration(obj73);
        org.joda.time.Period period75 = new org.joda.time.Period(readableInstant72, (org.joda.time.ReadableDuration) duration74);
        boolean boolean76 = duration71.isShorterThan((org.joda.time.ReadableDuration) duration74);
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Interval interval78 = duration74.toIntervalTo(readableInstant77);
        org.joda.time.Interval interval79 = interval78.toInterval();
        org.joda.time.DateTime dateTime80 = interval79.getEnd();
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant83 = null;
        java.lang.Object obj84 = null;
        org.joda.time.Duration duration85 = new org.joda.time.Duration(obj84);
        org.joda.time.Period period86 = new org.joda.time.Period(readableInstant83, (org.joda.time.ReadableDuration) duration85);
        boolean boolean87 = duration82.isShorterThan((org.joda.time.ReadableDuration) duration85);
        org.joda.time.ReadableInstant readableInstant88 = null;
        org.joda.time.Interval interval89 = duration85.toIntervalTo(readableInstant88);
        org.joda.time.Interval interval90 = interval89.toInterval();
        org.joda.time.DateTime dateTime91 = interval90.getEnd();
        org.joda.time.Period period92 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime80, (org.joda.time.ReadableInstant) dateTime91);
        org.joda.time.Duration duration93 = period69.toDurationTo((org.joda.time.ReadableInstant) dateTime80);
        long long94 = dateTime80.getMillis();
        boolean boolean95 = interval18.isBefore((org.joda.time.ReadableInstant) dateTime80);
        long long96 = interval18.getStartMillis();
        org.joda.time.Period period97 = interval18.toPeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 52L + "'", long32 == 52L);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(dateTime53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(dateTime64);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "2022-02-11T09:43:45.723Z" + "'", str67, "2022-02-11T09:43:45.723Z");
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(interval79);
        org.junit.Assert.assertNotNull(dateTime80);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(interval89);
        org.junit.Assert.assertNotNull(interval90);
        org.junit.Assert.assertNotNull(dateTime91);
        org.junit.Assert.assertNotNull(duration93);
// flaky:         org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1644572625723L + "'", long94 == 1644572625723L);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long96 + "' != '" + 1644572625723L + "'", long96 == 1644572625723L);
        org.junit.Assert.assertNotNull(period97);
    }

    @Test
    public void test13929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13929");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        mutablePeriod0.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod0, periodType4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        boolean boolean12 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration10.toIntervalTo(readableInstant13);
        org.joda.time.Interval interval15 = interval14.toInterval();
        org.joda.time.DateTime dateTime16 = interval15.getEnd();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.DateTime dateTime27 = interval26.getEnd();
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime16, (org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.DateTime dateTime39 = interval38.getEnd();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Interval interval48 = duration44.toIntervalTo(readableInstant47);
        org.joda.time.Interval interval49 = interval48.toInterval();
        org.joda.time.DateTime dateTime50 = interval49.getEnd();
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableInstant) dateTime50);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime50);
        org.joda.time.DurationFieldType durationFieldType53 = minutes52.getFieldType();
        int int54 = mutablePeriod0.get(durationFieldType53);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant59 = null;
        java.lang.Object obj60 = null;
        org.joda.time.Duration duration61 = new org.joda.time.Duration(obj60);
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant59, (org.joda.time.ReadableDuration) duration61);
        boolean boolean63 = duration58.isShorterThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration61.toIntervalTo(readableInstant64);
        org.joda.time.Interval interval66 = interval65.toInterval();
        org.joda.time.Chronology chronology67 = interval66.getChronology();
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((-1L), chronology67);
        mutablePeriod0.add((-1L), chronology67);
        org.joda.time.MutablePeriod mutablePeriod70 = mutablePeriod0.copy();
        org.joda.time.Period period71 = mutablePeriod70.toPeriod();
        org.joda.time.format.PeriodFormatter periodFormatter72 = null;
        java.lang.String str73 = mutablePeriod70.toString(periodFormatter72);
        mutablePeriod70.addWeeks(6);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(dateTime16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(dateTime50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "PT0.102S" + "'", str73, "PT0.102S");
    }

    @Test
    public void test13930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13930");
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.hours();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Chronology chronology21 = interval20.getChronology();
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((long) 9, chronology21);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(10L, 1644572107117L, periodType9, chronology21);
        org.joda.time.Period period24 = new org.joda.time.Period(36000L, chronology21);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) 2147483647, chronology21);
        org.joda.time.Period period26 = new org.joda.time.Period(1644572229589L, periodType4, chronology21);
        org.joda.time.Period period27 = new org.joda.time.Period(1644572453410L, chronology21);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(1644572103708L, 1644572361778L, chronology21);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(chronology21);
    }

    @Test
    public void test13931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13931");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean6 = weeks3.isGreaterThan(weeks5);
        org.joda.time.DurationFieldType durationFieldType7 = weeks5.getFieldType();
        boolean boolean8 = weeks2.isLessThan(weeks5);
        org.joda.time.Weeks weeks9 = weeks5.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean13 = weeks10.isGreaterThan(weeks12);
        org.joda.time.Weeks weeks14 = weeks5.minus(weeks12);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
    }

    @Test
    public void test13932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13932");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType4 = mutablePeriod2.getFieldType(1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod2);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        boolean boolean12 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration10.toIntervalTo(readableInstant13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.Hours hours25 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval24);
        boolean boolean27 = interval14.overlaps((org.joda.time.ReadableInterval) interval24);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.Hours hours38 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval37);
        boolean boolean39 = interval24.contains((org.joda.time.ReadableInterval) interval37);
        long long40 = interval37.getEndMillis();
        org.joda.time.MutableInterval mutableInterval41 = interval37.toMutableInterval();
        java.lang.String str42 = interval37.toString();
        mutablePeriod2.setPeriod((org.joda.time.ReadableInterval) interval37);
        org.joda.time.Period period44 = interval37.toPeriod();
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1644572625844L + "'", long40 == 1644572625844L);
        org.junit.Assert.assertNotNull(mutableInterval41);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "2022-02-11T09:43:45.844Z/2022-02-11T09:43:45.844Z" + "'", str42, "2022-02-11T09:43:45.844Z/2022-02-11T09:43:45.844Z");
        org.junit.Assert.assertNotNull(period44);
    }

    @Test
    public void test13933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13933");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        java.lang.String str37 = dateTime23.toString();
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType40 = periodType39.withSecondsRemoved();
        org.joda.time.PeriodType periodType41 = periodType40.withMillisRemoved();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        long long51 = interval50.getStartMillis();
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval50);
        org.joda.time.DurationFieldType durationFieldType53 = org.joda.time.DurationFieldType.years();
        int int54 = minutes52.get(durationFieldType53);
        boolean boolean55 = periodType40.isSupported(durationFieldType53);
        int int56 = period38.get(durationFieldType53);
        org.joda.time.Period period58 = period38.minusMillis((int) (short) 0);
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((java.lang.Object) period58);
        mutablePeriod59.setSeconds((int) (byte) 10);
        mutablePeriod59.add(1644572174234L);
        org.joda.time.Duration duration65 = org.joda.time.Duration.parse("PT0.008S");
        mutablePeriod59.setPeriod((org.joda.time.ReadableDuration) duration65);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "2022-02-11T09:43:45.872Z" + "'", str37, "2022-02-11T09:43:45.872Z");
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
// flaky:         org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1644572625872L + "'", long51 == 1644572625872L);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration65);
    }

    @Test
    public void test13934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13934");
        org.joda.time.Period period2 = new org.joda.time.Period((long) (byte) 10, (long) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        boolean boolean13 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Interval interval15 = duration11.toIntervalTo(readableInstant14);
        org.joda.time.Interval interval16 = interval15.toInterval();
        org.joda.time.Chronology chronology17 = interval16.getChronology();
        org.joda.time.DurationField durationField18 = durationFieldType6.getField(chronology17);
        org.joda.time.Period period19 = new org.joda.time.Period(36000L, chronology17);
        org.joda.time.Period period20 = new org.joda.time.Period(1644572093963L, 0L, chronology17);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((java.lang.Object) period2, chronology17);
        org.joda.time.MutablePeriod mutablePeriod22 = mutablePeriod21.copy();
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(chronology17);
        org.junit.Assert.assertNotNull(durationField18);
        org.junit.Assert.assertNotNull(mutablePeriod22);
    }

    @Test
    public void test13935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13935");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572096050L);
        org.joda.time.Hours hours2 = duration1.toStandardHours();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        boolean boolean9 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Interval interval11 = duration7.toIntervalTo(readableInstant10);
        org.joda.time.Interval interval12 = interval11.toInterval();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        boolean boolean22 = interval12.isAfter((org.joda.time.ReadableInterval) interval21);
        org.joda.time.Period period23 = interval21.toPeriod();
        org.joda.time.Period period24 = interval21.toPeriod();
        org.joda.time.Period period26 = period24.minusMillis((int) (byte) 1);
        org.joda.time.Duration duration29 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = duration29.toPeriodFrom(readableInstant30);
        org.joda.time.Period period33 = period31.minusSeconds((int) '4');
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType38 = mutablePeriod36.getFieldType(1);
        org.joda.time.Period period40 = period31.withField(durationFieldType38, (int) (byte) 100);
        int int41 = period26.get(durationFieldType38);
        org.joda.time.Hours hours42 = period26.toStandardHours();
        boolean boolean43 = hours2.isLessThan(hours42);
        org.joda.time.Hours hours44 = hours2.negated();
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Hours hours46 = org.joda.time.Hours.hoursIn(readableInterval45);
        org.joda.time.Hours hours48 = hours46.minus((int) (byte) 100);
        org.joda.time.Duration duration49 = hours46.toStandardDuration();
        int int50 = hours46.getHours();
        org.joda.time.DurationFieldType durationFieldType51 = hours46.getFieldType();
        org.joda.time.Hours hours52 = hours44.minus(hours46);
        int int53 = hours52.size();
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
    }

    @Test
    public void test13936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13936");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.withWeeks((int) (byte) 0);
        org.joda.time.MutablePeriod mutablePeriod7 = period6.toMutablePeriod();
        mutablePeriod7.addSeconds((int) ' ');
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((int) (short) -1, (-101), (int) (byte) 100, (int) '4');
        int int15 = mutablePeriod14.getMinutes();
        mutablePeriod14.clear();
        mutablePeriod7.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod14);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-101) + "'", int15 == (-101));
    }

    @Test
    public void test13937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13937");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.ReadablePeriod readablePeriod1 = null;
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.standardSecondsIn(readablePeriod1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.TWO;
        java.lang.String str4 = seconds3.toString();
        org.joda.time.Seconds seconds5 = seconds2.minus(seconds3);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds8 = seconds6.multipliedBy((int) (byte) 1);
        org.joda.time.Period period13 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period15 = period13.plusDays(1);
        org.joda.time.Period period17 = period15.minusYears((int) (short) -1);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period15);
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        boolean boolean20 = seconds8.isLessThan(seconds18);
        boolean boolean21 = seconds3.isLessThan(seconds8);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType23 = seconds22.getFieldType();
        org.joda.time.Seconds seconds25 = seconds22.plus((-1));
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds26.multipliedBy((int) (byte) 1);
        int int29 = seconds28.size();
        org.joda.time.Period period31 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period33 = period31.minusMillis((-1));
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period33);
        boolean boolean35 = seconds28.isGreaterThan(seconds34);
        boolean boolean36 = seconds22.isGreaterThan(seconds28);
        org.joda.time.Seconds seconds38 = seconds22.multipliedBy(8);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds39.multipliedBy((int) (byte) 1);
        java.lang.String str42 = seconds39.toString();
        org.joda.time.PeriodType periodType43 = seconds39.getPeriodType();
        org.joda.time.Seconds seconds44 = seconds38.plus(seconds39);
        boolean boolean45 = seconds3.isLessThan(seconds38);
        boolean boolean46 = seconds0.isLessThan(seconds3);
        org.joda.time.PeriodType periodType47 = seconds3.getPeriodType();
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType49 = seconds48.getFieldType();
        org.joda.time.Seconds seconds51 = seconds48.plus((-1));
        org.joda.time.DurationFieldType durationFieldType52 = seconds48.getFieldType();
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType55 = seconds54.getFieldType();
        org.joda.time.Seconds seconds57 = seconds54.plus((-1));
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.TWO;
        java.lang.String str59 = seconds58.toString();
        org.joda.time.Seconds seconds60 = seconds57.plus(seconds58);
        org.joda.time.Seconds seconds61 = seconds53.minus(seconds58);
        org.joda.time.Seconds seconds62 = seconds48.plus(seconds53);
        org.joda.time.Seconds seconds64 = seconds53.dividedBy(8);
        java.lang.String str65 = seconds53.toString();
        boolean boolean66 = seconds3.isLessThan(seconds53);
        java.lang.String str67 = seconds3.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2S" + "'", str4, "PT2S");
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT3S" + "'", str42, "PT3S");
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "PT2S" + "'", str59, "PT2S");
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "PT3S" + "'", str65, "PT3S");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "PT2S" + "'", str67, "PT2S");
    }

    @Test
    public void test13938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13938");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        boolean boolean9 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Interval interval11 = duration7.toIntervalTo(readableInstant10);
        org.joda.time.Interval interval12 = interval11.toInterval();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        boolean boolean22 = interval12.isAfter((org.joda.time.ReadableInterval) interval21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval21);
        org.joda.time.Weeks weeks24 = weeks1.plus(weeks23);
        org.joda.time.Period period25 = weeks23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        boolean boolean56 = interval46.isAfter((org.joda.time.ReadableInterval) interval55);
        boolean boolean57 = interval35.contains((org.joda.time.ReadableInterval) interval46);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval35);
        org.joda.time.PeriodType periodType61 = null;
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType61);
        mutablePeriod62.setYears(0);
        mutablePeriod62.setWeeks((int) (short) -1);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant69 = null;
        java.lang.Object obj70 = null;
        org.joda.time.Duration duration71 = new org.joda.time.Duration(obj70);
        org.joda.time.Period period72 = new org.joda.time.Period(readableInstant69, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = duration68.isShorterThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Interval interval75 = duration71.toIntervalTo(readableInstant74);
        mutablePeriod62.setPeriod((org.joda.time.ReadableInterval) interval75);
        org.joda.time.ReadableDuration readableDuration77 = null;
        mutablePeriod62.setPeriod(readableDuration77);
        int int79 = mutablePeriod62.size();
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks82 = weeks81.negated();
        org.joda.time.Period period83 = weeks82.toPeriod();
        org.joda.time.Weeks weeks85 = weeks82.minus((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType86 = weeks85.getFieldType();
        org.joda.time.Weeks weeks88 = weeks85.dividedBy((int) (byte) -1);
        mutablePeriod62.add((org.joda.time.ReadablePeriod) weeks88);
        org.joda.time.Weeks weeks90 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks91 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks92 = weeks90.minus(weeks91);
        org.joda.time.PeriodType periodType93 = org.joda.time.PeriodType.dayTime();
        org.joda.time.MutablePeriod mutablePeriod94 = new org.joda.time.MutablePeriod((java.lang.Object) weeks92, periodType93);
        mutablePeriod62.mergePeriod((org.joda.time.ReadablePeriod) weeks92);
        boolean boolean96 = weeks58.isGreaterThan(weeks92);
        org.joda.time.PeriodType periodType97 = weeks58.getPeriodType();
        org.joda.time.Period period98 = period25.normalizedStandard(periodType97);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 8 + "'", int79 == 8);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertNotNull(periodType93);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(periodType97);
        org.junit.Assert.assertNotNull(period98);
    }

    @Test
    public void test13939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13939");
        org.joda.time.Period period1 = new org.joda.time.Period(1644572205233L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.DateTime dateTime12 = interval11.getEnd();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        boolean boolean32 = interval22.isAfter((org.joda.time.ReadableInterval) interval31);
        boolean boolean33 = interval11.contains((org.joda.time.ReadableInterval) interval22);
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType36);
        mutablePeriod37.setYears(0);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology42 = null;
        mutablePeriod37.setPeriod((org.joda.time.ReadableDuration) duration41, chronology42);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant46 = null;
        java.lang.Object obj47 = null;
        org.joda.time.Duration duration48 = new org.joda.time.Duration(obj47);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant46, (org.joda.time.ReadableDuration) duration48);
        boolean boolean50 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Interval interval52 = duration48.toIntervalTo(readableInstant51);
        org.joda.time.Interval interval53 = interval52.toInterval();
        org.joda.time.DateTime dateTime54 = interval53.getEnd();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant57 = null;
        java.lang.Object obj58 = null;
        org.joda.time.Duration duration59 = new org.joda.time.Duration(obj58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant57, (org.joda.time.ReadableDuration) duration59);
        boolean boolean61 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration59.toIntervalTo(readableInstant62);
        org.joda.time.Interval interval64 = interval63.toInterval();
        org.joda.time.DateTime dateTime65 = interval64.getEnd();
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime54, (org.joda.time.ReadableInstant) dateTime65);
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, (org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant70 = null;
        java.lang.Object obj71 = null;
        org.joda.time.Duration duration72 = new org.joda.time.Duration(obj71);
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant70, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = duration69.isShorterThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Interval interval76 = duration72.toIntervalTo(readableInstant75);
        org.joda.time.Interval interval77 = interval76.toInterval();
        org.joda.time.DateTime dateTime78 = interval77.getEnd();
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType81 = periodType80.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(periodType81);
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(10L, periodType81);
        org.joda.time.Period period84 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime54, (org.joda.time.ReadableInstant) dateTime78, periodType81);
        boolean boolean85 = interval22.isAfter((org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.Duration duration86 = period1.toDurationFrom((org.joda.time.ReadableInstant) dateTime54);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(dateTime12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(dateTime65);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(dateTime78);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(duration86);
    }

    @Test
    public void test13940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13940");
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        java.lang.String str8 = periodType7.getName();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) 100, 36000L, periodType7);
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1644572109169L, 1644572113592L, periodType7);
        int int11 = periodType7.size();
        org.joda.time.Period period12 = new org.joda.time.Period(1644572235808L, 1644572134708L, periodType7);
        org.joda.time.PeriodType periodType13 = periodType7.withDaysRemoved();
        org.joda.time.PeriodType periodType14 = periodType7.withDaysRemoved();
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MillisNoMillis" + "'", str8, "MillisNoMillis");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
    }

    @Test
    public void test13941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13941");
        org.joda.time.Period period1 = org.joda.time.Period.days((int) (short) 1);
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration37 = period1.toDurationFrom((org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration42 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration45 = duration42.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration47 = duration39.withDurationAdded((org.joda.time.ReadableDuration) duration42, (int) (short) 1);
        org.joda.time.Duration duration50 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration53 = duration50.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration55 = duration39.withDurationAdded((org.joda.time.ReadableDuration) duration53, (int) (short) 100);
        org.joda.time.Duration duration57 = duration53.plus(1644572094383L);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.dayTime();
        org.joda.time.PeriodType periodType59 = periodType58.withMonthsRemoved();
        org.joda.time.PeriodType periodType60 = periodType58.withMillisRemoved();
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableDuration) duration57, periodType60);
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.Duration duration64 = duration57.withDurationAdded(readableDuration62, 6);
        java.lang.String str65 = duration57.toString();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "PT1644572095.286S" + "'", str65, "PT1644572095.286S");
    }

    @Test
    public void test13942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13942");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        java.lang.String str2 = seconds1.toString();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.seconds((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = seconds4.getFieldType();
        boolean boolean6 = seconds1.isLessThan(seconds4);
        org.joda.time.MutablePeriod mutablePeriod7 = seconds4.toMutablePeriod();
        mutablePeriod7.setDays(0);
        mutablePeriod7.addYears(32);
        int int12 = mutablePeriod7.getHours();
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = duration15.toPeriodFrom(readableInstant16);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration15.toPeriod(chronology18);
        org.joda.time.Period period21 = period19.withYears((int) (byte) 10);
        org.joda.time.Period period22 = period19.toPeriod();
        org.joda.time.Period period24 = period22.minusMinutes((int) ' ');
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds25.multipliedBy((int) (byte) 1);
        java.lang.String str28 = seconds25.toString();
        org.joda.time.PeriodType periodType29 = seconds25.getPeriodType();
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.plus((-1));
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.TWO;
        java.lang.String str35 = seconds34.toString();
        org.joda.time.Seconds seconds36 = seconds33.plus(seconds34);
        org.joda.time.Seconds seconds37 = seconds25.minus(seconds33);
        org.joda.time.DurationFieldType durationFieldType38 = seconds37.getFieldType();
        org.joda.time.Period period40 = period24.withField(durationFieldType38, (int) 'a');
        mutablePeriod7.add(durationFieldType38, (-32));
        mutablePeriod7.addHours(443);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0S" + "'", str2, "PT0S");
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT3S" + "'", str28, "PT3S");
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "PT2S" + "'", str35, "PT2S");
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(period40);
    }

    @Test
    public void test13943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13943");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572207571L);
        org.joda.time.Hours hours2 = duration1.toStandardHours();
        int int3 = hours2.getHours();
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 456825 + "'", int3 == 456825);
    }

    @Test
    public void test13944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13944");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("2022-02-11T09:39:39.960Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:39:39.960Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13945");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(56);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds4 = null;
        boolean boolean5 = seconds3.isLessThan(seconds4);
        org.joda.time.Seconds seconds7 = seconds3.minus((-101));
        org.joda.time.Seconds seconds9 = seconds7.minus(2719);
        boolean boolean10 = seconds1.isLessThan(seconds9);
        org.joda.time.Duration duration11 = seconds1.toStandardDuration();
        org.joda.time.Duration duration13 = duration11.plus(0L);
        java.lang.String str14 = duration11.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT56S" + "'", str14, "PT56S");
    }

    @Test
    public void test13946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13946");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.Period period10 = period6.minusMonths(100);
        int[] intArray11 = period6.getValues();
        org.joda.time.Period period12 = period6.toPeriod();
        org.joda.time.Period period13 = period6.toPeriod();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0, 0, 0, 0, 0, 0, -97]");
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test13947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13947");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.plusYears((int) (byte) 10);
        org.joda.time.Hours hours8 = org.joda.time.Hours.hours(9);
        org.joda.time.Period period9 = period6.plus((org.joda.time.ReadablePeriod) hours8);
        org.joda.time.Period period11 = period9.withHours(90);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days12 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot convert period to duration as years is not precise in the period P10YT9H10M100.100S");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test13948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13948");
        org.joda.time.format.PeriodFormatter periodFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period2 = org.joda.time.Period.parse("2022-02-11T09:37:53.011Z", periodFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13949");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(1644572244971L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant6);
        long long8 = duration4.getMillis();
        long long9 = duration4.getStandardDays();
        java.lang.String str10 = duration4.toString();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) ' ', chronology12);
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType16);
        mutablePeriod17.setYears(0);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology22 = null;
        mutablePeriod17.setPeriod((org.joda.time.ReadableDuration) duration21, chronology22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.DateTime dateTime45 = interval44.getEnd();
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        boolean boolean54 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Interval interval56 = duration52.toIntervalTo(readableInstant55);
        org.joda.time.Interval interval57 = interval56.toInterval();
        org.joda.time.DateTime dateTime58 = interval57.getEnd();
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType61 = periodType60.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(periodType61);
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(10L, periodType61);
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableInstant) dateTime58, periodType61);
        org.joda.time.Duration duration65 = mutablePeriod13.toDurationFrom((org.joda.time.ReadableInstant) dateTime34);
        mutablePeriod13.addMonths((int) '#');
        mutablePeriod13.setDays((int) (short) 0);
        mutablePeriod13.setPeriod(1644572114000L);
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod(13, (-1), (-963), (int) (byte) 0, (-9700), 246, 52, (int) (byte) 0);
        org.joda.time.Duration duration83 = new org.joda.time.Duration(1644572078660L, 36000000L);
        mutablePeriod80.add((org.joda.time.ReadableDuration) duration83);
        mutablePeriod13.setPeriod((org.joda.time.ReadableDuration) duration83);
        org.joda.time.Duration duration87 = duration4.withDurationAdded((org.joda.time.ReadableDuration) duration83, (-101));
        long long88 = duration83.getStandardHours();
        org.joda.time.Duration duration90 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration83, 13);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0S" + "'", str10, "PT0S");
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(dateTime58);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + (-456815L) + "'", long88 == (-456815L));
        org.junit.Assert.assertNotNull(duration90);
    }

    @Test
    public void test13950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13950");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        int int3 = weeks1.getWeeks();
        org.joda.time.Weeks weeks5 = weeks1.minus(3);
        org.joda.time.Period period7 = new org.joda.time.Period((long) (byte) 1);
        boolean boolean8 = weeks1.equals((java.lang.Object) (byte) 1);
        org.joda.time.PeriodType periodType9 = weeks1.getPeriodType();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        int int11 = weeks10.size();
        org.joda.time.Duration duration12 = weeks10.toStandardDuration();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        int int14 = weeks13.size();
        org.joda.time.Duration duration15 = weeks13.toStandardDuration();
        java.lang.String str16 = weeks13.toString();
        org.joda.time.Weeks weeks18 = weeks13.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks20 = weeks18.multipliedBy(3);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((-1));
        boolean boolean23 = weeks18.isGreaterThan(weeks22);
        org.joda.time.Weeks weeks24 = weeks10.minus(weeks22);
        org.joda.time.Weeks weeks25 = weeks1.plus(weeks10);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks31 = weeks28.plus((int) ' ');
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks35 = weeks33.plus(601);
        org.joda.time.Period period36 = new org.joda.time.Period((java.lang.Object) weeks33);
        org.joda.time.Weeks weeks38 = weeks33.minus(218);
        boolean boolean39 = weeks25.isGreaterThan(weeks33);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType41 = weeks33.getFieldType(685);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 685");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P3W" + "'", str16, "P3W");
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test13951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13951");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (-101));
        boolean boolean9 = duration4.isEqual((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration10 = duration4.toDuration();
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType12 = periodType11.withDaysRemoved();
        org.joda.time.PeriodType periodType13 = periodType12.withMinutesRemoved();
        org.joda.time.Period period14 = duration4.toPeriod(periodType13);
        java.lang.String str15 = duration4.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT0S" + "'", str15, "PT0S");
    }

    @Test
    public void test13952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13952");
        org.joda.time.Period period1 = new org.joda.time.Period((-1L));
        org.joda.time.Seconds seconds2 = period1.toStandardSeconds();
        org.joda.time.Seconds seconds4 = seconds2.dividedBy(1);
        org.joda.time.DurationFieldType durationFieldType5 = seconds2.getFieldType();
        org.joda.time.Seconds seconds7 = seconds2.plus(0);
        org.joda.time.Seconds seconds9 = seconds2.plus(35);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType11 = seconds10.getFieldType();
        org.joda.time.Seconds seconds13 = seconds10.plus((-1));
        org.joda.time.DurationFieldType durationFieldType14 = seconds10.getFieldType();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType17 = seconds16.getFieldType();
        org.joda.time.Seconds seconds19 = seconds16.plus((-1));
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.TWO;
        java.lang.String str21 = seconds20.toString();
        org.joda.time.Seconds seconds22 = seconds19.plus(seconds20);
        org.joda.time.Seconds seconds23 = seconds15.minus(seconds20);
        org.joda.time.Seconds seconds24 = seconds10.plus(seconds15);
        org.joda.time.PeriodType periodType25 = seconds24.getPeriodType();
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        org.joda.time.Seconds seconds30 = period29.toStandardSeconds();
        org.joda.time.Seconds seconds31 = period29.toStandardSeconds();
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType34 = seconds33.getFieldType();
        org.joda.time.Seconds seconds36 = seconds33.plus((-1));
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.TWO;
        java.lang.String str38 = seconds37.toString();
        org.joda.time.Seconds seconds39 = seconds36.plus(seconds37);
        org.joda.time.Seconds seconds40 = seconds32.minus(seconds37);
        org.joda.time.PeriodType periodType41 = seconds32.getPeriodType();
        org.joda.time.Seconds seconds42 = seconds31.plus(seconds32);
        org.joda.time.DurationFieldType durationFieldType43 = seconds31.getFieldType();
        org.joda.time.Seconds seconds44 = seconds24.plus(seconds31);
        org.joda.time.DurationFieldType durationFieldType45 = seconds44.getFieldType();
        org.joda.time.Seconds seconds46 = seconds9.minus(seconds44);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2S" + "'", str21, "PT2S");
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT2S" + "'", str38, "PT2S");
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(seconds46);
    }

    @Test
    public void test13953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13953");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT0.097S");
        mutablePeriod1.setMillis(0);
        mutablePeriod1.setPeriod((long) 6, 1644572168667L);
        mutablePeriod1.addMillis((-9700));
        mutablePeriod1.addDays(52);
        org.joda.time.format.PeriodFormatter periodFormatter11 = null;
        java.lang.String str12 = mutablePeriod1.toString(periodFormatter11);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P52Y1M1W55DT9H36M-1.039S" + "'", str12, "P52Y1M1W55DT9H36M-1.039S");
    }

    @Test
    public void test13954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13954");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.plusDays(1);
        org.joda.time.Period period8 = period6.minusYears((int) (short) -1);
        int int9 = period8.getMillis();
        int int10 = period8.size();
        org.joda.time.Period period11 = period8.toPeriod();
        org.joda.time.Period period13 = period8.minusMinutes((-4));
        org.joda.time.MutablePeriod mutablePeriod14 = period13.toMutablePeriod();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8 + "'", int10 == 8);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
    }

    @Test
    public void test13955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13955");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        mutablePeriod9.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod13);
        mutablePeriod13.setWeeks((int) (byte) 10);
        mutablePeriod13.add((long) 8);
        mutablePeriod13.addDays((int) 'a');
        org.joda.time.Period period23 = mutablePeriod13.toPeriod();
        org.joda.time.Period period25 = org.joda.time.Period.days((int) '#');
        org.joda.time.Hours hours26 = period25.toStandardHours();
        org.joda.time.Hours hours28 = hours26.plus(0);
        java.lang.String str29 = hours26.toString();
        org.joda.time.DurationFieldType durationFieldType30 = hours26.getFieldType();
        mutablePeriod13.add(durationFieldType30, (-2147483648));
        mutablePeriod13.addWeeks((-648));
        mutablePeriod13.addYears((-242));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT840H" + "'", str29, "PT840H");
        org.junit.Assert.assertNotNull(durationFieldType30);
    }

    @Test
    public void test13956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13956");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        org.joda.time.Seconds seconds3 = seconds0.plus((-1));
        org.joda.time.DurationFieldType durationFieldType4 = seconds0.getFieldType();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.plus((-1));
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.TWO;
        java.lang.String str11 = seconds10.toString();
        org.joda.time.Seconds seconds12 = seconds9.plus(seconds10);
        org.joda.time.Seconds seconds13 = seconds5.minus(seconds10);
        org.joda.time.Seconds seconds14 = seconds0.plus(seconds5);
        org.joda.time.PeriodType periodType15 = seconds14.getPeriodType();
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType24);
        mutablePeriod25.addMillis((-1));
        mutablePeriod21.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod25);
        mutablePeriod21.setDays((int) ' ');
        int int31 = mutablePeriod21.size();
        org.joda.time.MutablePeriod mutablePeriod32 = mutablePeriod21.copy();
        mutablePeriod32.setWeeks((int) (short) 0);
        org.joda.time.Duration duration36 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration38 = duration36.plus(1644572076849L);
        long long39 = duration36.getMillis();
        long long40 = duration36.getStandardHours();
        mutablePeriod32.add((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Seconds seconds42 = duration36.toStandardSeconds();
        boolean boolean43 = seconds14.isGreaterThan(seconds42);
        org.joda.time.Seconds seconds44 = seconds42.negated();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT2S" + "'", str11, "PT2S");
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 52L + "'", long39 == 52L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(seconds44);
    }

    @Test
    public void test13957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13957");
        org.joda.time.Period period8 = new org.joda.time.Period(134, (-101), (-9700), 4, 0, (-2), 1, (-53));
    }

    @Test
    public void test13958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13958");
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        java.lang.String str8 = periodType7.getName();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) 100, 36000L, periodType7);
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1644572109169L, 1644572113592L, periodType7);
        int int11 = periodType7.size();
        org.joda.time.Period period12 = new org.joda.time.Period(1644572235808L, 1644572134708L, periodType7);
        org.joda.time.ReadablePeriod readablePeriod13 = null;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn(readablePeriod13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes14.getFieldType();
        int int16 = periodType7.indexOf(durationFieldType15);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MillisNoMillis" + "'", str8, "MillisNoMillis");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test13959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13959");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Chronology chronology10 = interval9.getChronology();
        org.joda.time.Days days11 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Days days12 = days11.negated();
        java.lang.String str13 = days11.toString();
        org.joda.time.Days days15 = days11.minus((-2147483646));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(chronology10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P0D" + "'", str13, "P0D");
        org.junit.Assert.assertNotNull(days15);
    }

    @Test
    public void test13960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13960");
        org.joda.time.ReadableInstant readableInstant1 = null;
        java.lang.Object obj2 = null;
        org.joda.time.Duration duration3 = new org.joda.time.Duration(obj2);
        org.joda.time.Period period4 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.Days days5 = duration3.toStandardDays();
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis((long) '4');
        long long8 = duration7.getMillis();
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType11);
        mutablePeriod12.setYears(0);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology17 = null;
        mutablePeriod12.setPeriod((org.joda.time.ReadableDuration) duration16, chronology17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        org.joda.time.Interval interval28 = interval27.toInterval();
        org.joda.time.DateTime dateTime29 = interval28.getEnd();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.DateTime dateTime40 = interval39.getEnd();
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime29, (org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, (org.joda.time.ReadableInstant) dateTime29);
        java.lang.String str43 = dateTime29.toString();
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime29);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        org.joda.time.Interval interval54 = interval53.toInterval();
        org.joda.time.DateTime dateTime55 = interval54.getEnd();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant58 = null;
        java.lang.Object obj59 = null;
        org.joda.time.Duration duration60 = new org.joda.time.Duration(obj59);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant58, (org.joda.time.ReadableDuration) duration60);
        boolean boolean62 = duration57.isShorterThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Interval interval64 = duration60.toIntervalTo(readableInstant63);
        org.joda.time.Interval interval65 = interval64.toInterval();
        org.joda.time.DateTime dateTime66 = interval65.getEnd();
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime55, (org.joda.time.ReadableInstant) dateTime66);
        org.joda.time.Days days68 = org.joda.time.Days.daysBetween((org.joda.time.ReadableInstant) dateTime29, (org.joda.time.ReadableInstant) dateTime66);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant71 = null;
        java.lang.Object obj72 = null;
        org.joda.time.Duration duration73 = new org.joda.time.Duration(obj72);
        org.joda.time.Period period74 = new org.joda.time.Period(readableInstant71, (org.joda.time.ReadableDuration) duration73);
        boolean boolean75 = duration70.isShorterThan((org.joda.time.ReadableDuration) duration73);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Interval interval77 = duration73.toIntervalTo(readableInstant76);
        org.joda.time.Interval interval78 = interval77.toInterval();
        org.joda.time.DateTime dateTime79 = interval78.getEnd();
        boolean boolean80 = dateTime29.isEqual((org.joda.time.ReadableInstant) dateTime79);
        org.joda.time.DateTimeFieldType dateTimeFieldType81 = null;
        boolean boolean82 = dateTime29.isSupported(dateTimeFieldType81);
        org.joda.time.PeriodType periodType83 = org.joda.time.PeriodType.dayTime();
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, (org.joda.time.ReadableInstant) dateTime29, periodType83);
        org.joda.time.PeriodType periodType85 = periodType83.withWeeksRemoved();
        org.joda.time.Period period86 = new org.joda.time.Period(1644572467383L, periodType83);
        org.joda.time.Days days87 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period86);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 52L + "'", long8 == 52L);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(dateTime29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(dateTime40);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "2022-02-11T09:43:46.719Z" + "'", str43, "2022-02-11T09:43:46.719Z");
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(dateTime66);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(dateTime79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(days87);
    }

    @Test
    public void test13961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13961");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType2 = periodType1.withSecondsRemoved();
        org.joda.time.PeriodType periodType3 = periodType2.withMillisRemoved();
        org.joda.time.PeriodType periodType4 = periodType3.withMinutesRemoved();
        java.lang.String str5 = periodType3.getName();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        mutablePeriod13.addWeeks((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray16 = mutablePeriod13.getFieldTypes();
        int int17 = mutablePeriod13.getWeeks();
        org.joda.time.Period period19 = org.joda.time.Period.weeks((-1));
        mutablePeriod13.add((org.joda.time.ReadablePeriod) period19);
        mutablePeriod13.addMinutes(0);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        mutablePeriod27.addWeeks((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray30 = mutablePeriod27.getFieldTypes();
        mutablePeriod27.addMillis((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod();
        mutablePeriod34.setPeriod(100L, (long) (-1));
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        org.joda.time.Interval interval51 = interval50.toInterval();
        org.joda.time.Chronology chronology52 = interval51.getChronology();
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((-1L), chronology52);
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(0L, (long) (short) -1, chronology52);
        mutablePeriod34.setPeriod((long) 100, chronology52);
        mutablePeriod27.setPeriod(1644572118718L, chronology52);
        org.joda.time.Period period57 = new org.joda.time.Period(1644572105679L, chronology52);
        mutablePeriod13.setPeriod(1644572122681L, chronology52);
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(1644572091852L, 1644572157173L, chronology52);
        org.joda.time.Period period60 = new org.joda.time.Period(0L, chronology52);
        org.joda.time.Period period61 = new org.joda.time.Period(1644572529617L, 1644572417762L, chronology52);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(0L, periodType3, chronology52);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MillisNoMillis" + "'", str5, "MillisNoMillis");
        org.junit.Assert.assertNotNull(durationFieldTypeArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldTypeArray30);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(chronology52);
    }

    @Test
    public void test13962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13962");
        org.joda.time.Period period1 = new org.joda.time.Period(1L);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Period period4 = period1.plus((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks3.minus((int) (short) -1);
        org.joda.time.Duration duration9 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = duration9.toPeriodFrom(readableInstant10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration9.toPeriod(chronology12);
        java.lang.String str14 = period13.toString();
        org.joda.time.MutablePeriod mutablePeriod15 = period13.toMutablePeriod();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        boolean boolean22 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Interval interval24 = duration20.toIntervalTo(readableInstant23);
        long long25 = interval24.getStartMillis();
        mutablePeriod15.setPeriod((org.joda.time.ReadableInterval) interval24);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval24);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks31 = weeks29.dividedBy((-101));
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        boolean boolean54 = interval44.isAfter((org.joda.time.ReadableInterval) interval53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval53);
        org.joda.time.Weeks weeks56 = weeks33.plus(weeks55);
        int int57 = weeks33.getWeeks();
        boolean boolean58 = weeks31.isLessThan(weeks33);
        org.joda.time.PeriodType periodType59 = weeks33.getPeriodType();
        int int60 = weeks33.getWeeks();
        org.joda.time.Weeks weeks61 = weeks27.minus(weeks33);
        org.joda.time.Weeks weeks62 = weeks3.minus(weeks27);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks65 = weeks63.plus((-101));
        int int66 = weeks62.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks65);
        java.lang.String str67 = weeks65.toString();
        org.joda.time.Period period68 = new org.joda.time.Period((java.lang.Object) weeks65);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT0.097S" + "'", str14, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(interval24);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1644572626809L + "'", long25 == 1644572626809L);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "P-98W" + "'", str67, "P-98W");
    }

    @Test
    public void test13963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13963");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days1 = org.joda.time.Days.parseDays("2022-02-11T09:41:35.881Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:41:35.881Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13964");
        org.joda.time.Period period8 = new org.joda.time.Period((int) (byte) 10, 727, 56, (-35), (int) (short) 1, 8, (int) (byte) 1, 0);
        org.joda.time.Period period10 = period8.plusSeconds(600);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds11 = period10.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Seconds as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test13965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13965");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration7, chronology8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.DateTime dateTime20 = interval19.getEnd();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.DateTime dateTime31 = interval30.getEnd();
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime20);
        java.lang.String str34 = dateTime20.toString();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration39 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration42 = duration39.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration44 = duration36.withDurationAdded((org.joda.time.ReadableDuration) duration39, (int) (short) 1);
        org.joda.time.Days days45 = duration44.toStandardDays();
        org.joda.time.Duration duration47 = duration44.minus((long) 10);
        org.joda.time.Days days48 = org.joda.time.Days.ONE;
        org.joda.time.Days days49 = days48.negated();
        org.joda.time.Days days50 = org.joda.time.Days.ONE;
        org.joda.time.Days days51 = days50.negated();
        org.joda.time.Days days52 = org.joda.time.Days.ONE;
        org.joda.time.Days days53 = days52.negated();
        boolean boolean54 = days51.isGreaterThan(days53);
        org.joda.time.Days days55 = days48.plus(days53);
        org.joda.time.PeriodType periodType56 = days55.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableDuration) duration47, periodType56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant58, (org.joda.time.ReadableDuration) duration60);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration60.toPeriod(chronology62);
        org.joda.time.Duration duration64 = duration47.plus((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Days days65 = duration64.toStandardDays();
        java.lang.String str66 = days65.toString();
        org.joda.time.Days days67 = org.joda.time.Days.FOUR;
        org.joda.time.Period period68 = days67.toPeriod();
        org.joda.time.Days days70 = org.joda.time.Days.days((int) ' ');
        org.joda.time.Days days72 = days70.minus((int) (byte) 0);
        org.joda.time.Days days73 = days67.minus(days70);
        java.lang.String str74 = days67.toString();
        org.joda.time.Days days76 = days67.minus(36000000);
        org.joda.time.Days days77 = days76.negated();
        org.joda.time.Days days79 = days76.minus((-963));
        boolean boolean80 = days65.isGreaterThan(days79);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(dateTime31);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "2022-02-11T09:43:46.874Z" + "'", str34, "2022-02-11T09:43:46.874Z");
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P0D" + "'", str66, "P0D");
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "P4D" + "'", str74, "P4D");
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertNotNull(days77);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test13966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13966");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.dayTime();
        org.joda.time.PeriodType periodType1 = periodType0.withSecondsRemoved();
        org.joda.time.PeriodType periodType2 = periodType1.withDaysRemoved();
        org.joda.time.PeriodType periodType3 = periodType2.withMillisRemoved();
        org.joda.time.PeriodType periodType4 = periodType3.withMinutesRemoved();
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test13967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13967");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572138187L);
        java.lang.Object obj2 = null;
        org.joda.time.Duration duration3 = new org.joda.time.Duration(obj2);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        boolean boolean10 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Interval interval12 = duration8.toIntervalTo(readableInstant11);
        org.joda.time.Interval interval13 = interval12.toInterval();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        boolean boolean23 = interval13.isAfter((org.joda.time.ReadableInterval) interval22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval22);
        org.joda.time.DateTime dateTime25 = interval22.getEnd();
        org.joda.time.Period period26 = duration3.toPeriodFrom((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.DateTimeZone dateTimeZone28 = dateTime25.getZone();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((long) ' ', chronology30);
        org.joda.time.Duration duration33 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration35 = duration33.plus(1644572076849L);
        mutablePeriod31.setPeriod((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration38 = duration35.minus(1644572101476L);
        org.joda.time.Duration duration41 = duration38.withDurationAdded(1644572143611L, (int) (byte) -1);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration46 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration49 = duration46.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration51 = duration43.withDurationAdded((org.joda.time.ReadableDuration) duration46, (int) (short) 1);
        boolean boolean52 = duration41.isEqual((org.joda.time.ReadableDuration) duration46);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.hours();
        org.joda.time.PeriodType periodType54 = periodType53.withMonthsRemoved();
        org.joda.time.PeriodType periodType55 = periodType53.withWeeksRemoved();
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableDuration) duration41, periodType55);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period58 = period56.plusWeeks((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(dateTimeZone28);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(periodType55);
    }

    @Test
    public void test13968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13968");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.hours();
        org.joda.time.PeriodType periodType3 = periodType2.withMonthsRemoved();
        org.joda.time.Period period8 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period10 = period8.plusDays(1);
        org.joda.time.Period period12 = period10.minusYears((int) (short) -1);
        int int13 = period12.getSeconds();
        boolean boolean14 = periodType2.equals((java.lang.Object) period12);
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1644572196076L, 1644572091575L, periodType2);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod15.addMonths((-22));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test13969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13969");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-1), (-97), (int) (short) -1, (-101), (int) (byte) 100, 9, (-101), (int) (byte) 100);
        org.joda.time.format.PeriodFormatter periodFormatter9 = null;
        java.lang.String str10 = mutablePeriod8.toString(periodFormatter9);
        int int11 = mutablePeriod8.getYears();
        org.joda.time.MutablePeriod mutablePeriod12 = mutablePeriod8.copy();
        org.joda.time.Period period14 = org.joda.time.Period.weeks(34);
        org.joda.time.Period period16 = period14.withHours(56);
        mutablePeriod12.add((org.joda.time.ReadablePeriod) period16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period16);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "P-1Y-97M-1W-101DT100H9M-100.900S" + "'", str10, "P-1Y-97M-1W-101DT100H9M-100.900S");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(weeks18);
    }

    @Test
    public void test13970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13970");
        org.joda.time.Period period1 = org.joda.time.Period.years((-1));
        org.joda.time.Period period3 = period1.withDays((-2147483648));
        int[] intArray4 = period3.getValues();
        int int5 = period3.size();
        int int6 = period3.size();
        org.joda.time.Days days7 = org.joda.time.Days.SIX;
        org.joda.time.Days days9 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.Days days10 = days7.plus(days9);
        org.joda.time.DurationFieldType durationFieldType11 = days9.getFieldType();
        org.joda.time.DurationFieldType durationFieldType12 = days9.getFieldType();
        org.joda.time.Days days13 = org.joda.time.Days.ONE;
        org.joda.time.Days days14 = days13.negated();
        org.joda.time.Days days15 = org.joda.time.Days.ONE;
        org.joda.time.Days days16 = days15.negated();
        org.joda.time.Days days17 = org.joda.time.Days.ONE;
        org.joda.time.Days days18 = days17.negated();
        boolean boolean19 = days16.isGreaterThan(days18);
        org.joda.time.Days days20 = days13.plus(days18);
        int int21 = days13.getDays();
        org.joda.time.Days days23 = days13.minus(2147483647);
        org.joda.time.Days days24 = days9.minus(days23);
        org.joda.time.DurationFieldType durationFieldType25 = days23.getFieldType();
        int int26 = period3.get(durationFieldType25);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0, 0, -2147483648, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2147483648) + "'", int26 == (-2147483648));
    }

    @Test
    public void test13971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13971");
        org.joda.time.Period period2 = new org.joda.time.Period(1644572159127L, 1644572113474L);
        org.joda.time.Period period4 = period2.minusYears(10);
        java.lang.String str5 = period2.toString();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT-45.653S" + "'", str5, "PT-45.653S");
    }

    @Test
    public void test13972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13972");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(1644572351965L);
        java.lang.String str2 = duration1.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT98674341117900S" + "'", str2, "PT98674341117900S");
    }

    @Test
    public void test13973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13973");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("2022-02-11T09:38:24.249Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:38:24.249Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13974");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(105);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13975");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.Minutes minutes3 = duration1.toStandardMinutes();
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        org.joda.time.Minutes minutes7 = minutes3.negated();
        org.joda.time.Minutes minutes8 = null;
        org.joda.time.Minutes minutes9 = minutes7.minus(minutes8);
        java.lang.String str10 = minutes9.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0M" + "'", str10, "PT0M");
    }

    @Test
    public void test13976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13976");
        org.joda.time.Period period1 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period3 = period1.minusMillis((-1));
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period3);
        org.joda.time.Seconds seconds6 = seconds4.plus(36);
        org.joda.time.Seconds seconds7 = seconds4.negated();
        org.joda.time.DurationFieldType durationFieldType8 = seconds7.getFieldType();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
    }

    @Test
    public void test13977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13977");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-963), 903, 18, 30, (-6), 0, 600, 99);
    }

    @Test
    public void test13978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13978");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.minus(weeks1);
        org.joda.time.Weeks weeks4 = weeks2.multipliedBy(100);
        org.joda.time.Period period5 = weeks4.toPeriod();
        org.joda.time.Period period7 = period5.plusSeconds((-59));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test13979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13979");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        java.lang.String str6 = mutablePeriod3.toString();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) mutablePeriod3);
        int int8 = mutablePeriod3.getMinutes();
        mutablePeriod3.add(1644572144616L);
        mutablePeriod3.setPeriod(1644572545236L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0.001S" + "'", str6, "PT0.001S");
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test13980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13980");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572599805L, (long) 4);
    }

    @Test
    public void test13981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13981");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn(readableInterval9);
        org.joda.time.Period period11 = period8.minus((org.joda.time.ReadablePeriod) hours10);
        org.joda.time.Hours hours13 = hours10.minus((int) '4');
        org.joda.time.Hours hours15 = hours13.plus((int) (short) 10);
        org.joda.time.Duration duration18 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = duration18.toPeriodFrom(readableInstant19);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration18.toPeriod(chronology21);
        org.joda.time.Period period24 = period22.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Hours hours26 = org.joda.time.Hours.hoursIn(readableInterval25);
        org.joda.time.Period period27 = period24.minus((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.Hours hours28 = hours26.negated();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = duration31.toPeriodFrom(readableInstant32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration31.toPeriod(chronology34);
        org.joda.time.Period period37 = period35.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Hours hours39 = org.joda.time.Hours.hoursIn(readableInterval38);
        org.joda.time.Period period40 = period37.minus((org.joda.time.ReadablePeriod) hours39);
        org.joda.time.Hours hours41 = hours39.negated();
        org.joda.time.Hours hours42 = hours26.minus(hours39);
        org.joda.time.Hours hours43 = hours15.minus(hours39);
        int int44 = hours39.size();
        org.joda.time.PeriodType periodType45 = hours39.getPeriodType();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(periodType45);
    }

    @Test
    public void test13982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13982");
        org.joda.time.Period period1 = new org.joda.time.Period(1644572103922L);
        org.joda.time.Period period3 = period1.plusWeeks(8);
        org.joda.time.Period period5 = period1.withMillis(0);
        org.joda.time.MutablePeriod mutablePeriod6 = period5.toMutablePeriod();
        int int7 = period5.size();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
    }

    @Test
    public void test13983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13983");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        mutablePeriod0.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod0, periodType4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        boolean boolean12 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration10.toIntervalTo(readableInstant13);
        org.joda.time.Interval interval15 = interval14.toInterval();
        org.joda.time.DateTime dateTime16 = interval15.getEnd();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.DateTime dateTime27 = interval26.getEnd();
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime16, (org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.DateTime dateTime39 = interval38.getEnd();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Interval interval48 = duration44.toIntervalTo(readableInstant47);
        org.joda.time.Interval interval49 = interval48.toInterval();
        org.joda.time.DateTime dateTime50 = interval49.getEnd();
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableInstant) dateTime50);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime50);
        org.joda.time.DurationFieldType durationFieldType53 = minutes52.getFieldType();
        int int54 = mutablePeriod0.get(durationFieldType53);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant59 = null;
        java.lang.Object obj60 = null;
        org.joda.time.Duration duration61 = new org.joda.time.Duration(obj60);
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant59, (org.joda.time.ReadableDuration) duration61);
        boolean boolean63 = duration58.isShorterThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration61.toIntervalTo(readableInstant64);
        org.joda.time.Interval interval66 = interval65.toInterval();
        org.joda.time.Chronology chronology67 = interval66.getChronology();
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((-1L), chronology67);
        mutablePeriod0.add((-1L), chronology67);
        org.joda.time.MutablePeriod mutablePeriod70 = mutablePeriod0.copy();
        org.joda.time.Period period71 = mutablePeriod70.toPeriod();
        int int72 = mutablePeriod70.getMinutes();
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(dateTime16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(dateTime50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test13984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13984");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Interval interval18 = interval17.toInterval();
        org.joda.time.Hours hours19 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Hours hours20 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval18);
        boolean boolean21 = interval8.overlaps((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.Hours hours32 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval31);
        boolean boolean33 = interval18.contains((org.joda.time.ReadableInterval) interval31);
        org.joda.time.Duration duration34 = interval31.toDuration();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.Hours hours45 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval44);
        long long46 = interval44.getEndMillis();
        org.joda.time.Period period47 = interval44.toPeriod();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        boolean boolean54 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Interval interval56 = duration52.toIntervalTo(readableInstant55);
        org.joda.time.Interval interval57 = interval56.toInterval();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant60 = null;
        java.lang.Object obj61 = null;
        org.joda.time.Duration duration62 = new org.joda.time.Duration(obj61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant60, (org.joda.time.ReadableDuration) duration62);
        boolean boolean64 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Interval interval66 = duration62.toIntervalTo(readableInstant65);
        boolean boolean67 = interval57.isAfter((org.joda.time.ReadableInterval) interval66);
        org.joda.time.Period period68 = interval66.toPeriod();
        org.joda.time.Hours hours69 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval66);
        boolean boolean70 = interval44.contains((org.joda.time.ReadableInterval) interval66);
        boolean boolean71 = interval31.isAfter((org.joda.time.ReadableInterval) interval44);
        org.joda.time.Duration duration74 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Period period76 = duration74.toPeriodFrom(readableInstant75);
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.Period period78 = duration74.toPeriod(chronology77);
        java.lang.String str79 = period78.toString();
        org.joda.time.MutablePeriod mutablePeriod80 = period78.toMutablePeriod();
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant83 = null;
        java.lang.Object obj84 = null;
        org.joda.time.Duration duration85 = new org.joda.time.Duration(obj84);
        org.joda.time.Period period86 = new org.joda.time.Period(readableInstant83, (org.joda.time.ReadableDuration) duration85);
        boolean boolean87 = duration82.isShorterThan((org.joda.time.ReadableDuration) duration85);
        org.joda.time.ReadableInstant readableInstant88 = null;
        org.joda.time.Interval interval89 = duration85.toIntervalTo(readableInstant88);
        long long90 = interval89.getStartMillis();
        mutablePeriod80.setPeriod((org.joda.time.ReadableInterval) interval89);
        org.joda.time.Interval interval92 = interval89.toInterval();
        org.joda.time.Interval interval93 = interval89.toInterval();
        org.joda.time.MutableInterval mutableInterval94 = interval89.toMutableInterval();
        boolean boolean95 = interval44.overlaps((org.joda.time.ReadableInterval) interval89);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(hours45);
// flaky:         org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1644572627259L + "'", long46 == 1644572627259L);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "PT0.097S" + "'", str79, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod80);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(interval89);
// flaky:         org.junit.Assert.assertTrue("'" + long90 + "' != '" + 1644572627259L + "'", long90 == 1644572627259L);
        org.junit.Assert.assertNotNull(interval92);
        org.junit.Assert.assertNotNull(interval93);
        org.junit.Assert.assertNotNull(mutableInterval94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test13985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13985");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration7, chronology8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.DateTime dateTime20 = interval19.getEnd();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.DateTime dateTime31 = interval30.getEnd();
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.Days days34 = duration7.toStandardDays();
        org.joda.time.Days days35 = org.joda.time.Days.ONE;
        org.joda.time.Days days36 = days35.negated();
        org.joda.time.Days days37 = org.joda.time.Days.ONE;
        org.joda.time.Days days38 = days37.negated();
        boolean boolean39 = days36.isGreaterThan(days38);
        org.joda.time.Days days41 = days38.plus((int) (short) 10);
        boolean boolean42 = days34.isLessThan(days41);
        org.joda.time.Days days43 = org.joda.time.Days.FOUR;
        org.joda.time.Days days45 = days43.multipliedBy((-1));
        org.joda.time.Days days47 = days45.minus((int) (short) 10);
        org.joda.time.Days days49 = days47.plus((int) (short) 1);
        org.joda.time.Days days50 = days34.plus(days49);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days52 = days50.multipliedBy((-2147483612));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -13 * -2147483612");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days50);
    }

    @Test
    public void test13986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13986");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (long) 100);
        org.joda.time.Weeks weeks3 = period2.toStandardWeeks();
        org.joda.time.Weeks weeks5 = weeks3.multipliedBy((int) (byte) 1);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks8 = weeks7.negated();
        int int9 = weeks7.getWeeks();
        org.joda.time.Weeks weeks11 = weeks7.minus(3);
        org.joda.time.Period period13 = new org.joda.time.Period((long) (byte) 1);
        boolean boolean14 = weeks7.equals((java.lang.Object) (byte) 1);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks17 = weeks16.negated();
        int int18 = weeks16.getWeeks();
        org.joda.time.Weeks weeks20 = weeks16.minus(3);
        boolean boolean21 = weeks7.isGreaterThan(weeks20);
        boolean boolean22 = weeks3.isGreaterThan(weeks20);
        org.joda.time.Weeks weeks24 = weeks20.dividedBy(298);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks25.minus(weeks26);
        org.joda.time.Weeks weeks29 = weeks27.multipliedBy(100);
        org.joda.time.Weeks weeks31 = weeks29.multipliedBy((int) (short) 10);
        org.joda.time.Period period32 = weeks31.toPeriod();
        org.joda.time.Weeks weeks34 = weeks31.minus(648);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Period period38 = weeks37.toPeriod();
        org.joda.time.Weeks weeks40 = weeks37.minus((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType41 = weeks40.getFieldType();
        int int42 = weeks34.get(durationFieldType41);
        org.joda.time.Weeks weeks43 = weeks20.plus(weeks34);
        org.joda.time.Weeks weeks45 = weeks43.plus((-715827882));
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-648) + "'", int42 == (-648));
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
    }

    @Test
    public void test13987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13987");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(105);
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test13988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13988");
        org.joda.time.Days days0 = org.joda.time.Days.ZERO;
        org.joda.time.Days days1 = org.joda.time.Days.ONE;
        org.joda.time.Days days2 = days1.negated();
        int int3 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days1);
        int int4 = days0.getDays();
        org.joda.time.Days days5 = org.joda.time.Days.ONE;
        org.joda.time.Days days6 = days5.negated();
        org.joda.time.Days days7 = org.joda.time.Days.ONE;
        org.joda.time.Days days8 = days7.negated();
        org.joda.time.Days days9 = org.joda.time.Days.ONE;
        org.joda.time.Days days10 = days9.negated();
        boolean boolean11 = days8.isGreaterThan(days10);
        org.joda.time.Days days12 = days5.plus(days10);
        int int13 = days5.getDays();
        org.joda.time.Days days15 = days5.minus(2147483647);
        org.joda.time.Days days17 = days15.dividedBy((-101));
        org.joda.time.Days days18 = days0.plus(days17);
        org.joda.time.DurationFieldType durationFieldType19 = days17.getFieldType();
        org.joda.time.Days days21 = days17.minus(17);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes22 = days17.toStandardMinutes();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 21262214 * 1440");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(days21);
    }

    @Test
    public void test13989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13989");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        java.lang.String str37 = dateTime23.toString();
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant41 = null;
        java.lang.Object obj42 = null;
        org.joda.time.Duration duration43 = new org.joda.time.Duration(obj42);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration43);
        boolean boolean45 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration43.toIntervalTo(readableInstant46);
        org.joda.time.Interval interval48 = interval47.toInterval();
        org.joda.time.DateTime dateTime49 = interval48.getEnd();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant52 = null;
        java.lang.Object obj53 = null;
        org.joda.time.Duration duration54 = new org.joda.time.Duration(obj53);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant52, (org.joda.time.ReadableDuration) duration54);
        boolean boolean56 = duration51.isShorterThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Interval interval58 = duration54.toIntervalTo(readableInstant57);
        org.joda.time.Interval interval59 = interval58.toInterval();
        org.joda.time.DateTime dateTime60 = interval59.getEnd();
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime49, (org.joda.time.ReadableInstant) dateTime60);
        org.joda.time.Days days62 = org.joda.time.Days.daysBetween((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime60);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant65 = null;
        java.lang.Object obj66 = null;
        org.joda.time.Duration duration67 = new org.joda.time.Duration(obj66);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant65, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = duration64.isShorterThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Interval interval71 = duration67.toIntervalTo(readableInstant70);
        org.joda.time.Interval interval72 = interval71.toInterval();
        org.joda.time.DateTime dateTime73 = interval72.getEnd();
        boolean boolean74 = dateTime23.isEqual((org.joda.time.ReadableInstant) dateTime73);
        org.joda.time.DateTimeFieldType dateTimeFieldType75 = null;
        boolean boolean76 = dateTime23.isSupported(dateTimeFieldType75);
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration81 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration84 = duration81.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration86 = duration78.withDurationAdded((org.joda.time.ReadableDuration) duration81, (int) (short) 1);
        org.joda.time.Period period87 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableDuration) duration86);
        org.joda.time.DateTimeZone dateTimeZone88 = dateTime23.getZone();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "2022-02-11T09:43:47.391Z" + "'", str37, "2022-02-11T09:43:47.391Z");
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(dateTime60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(dateTime73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertNotNull(dateTimeZone88);
    }

    @Test
    public void test13990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13990");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(1644572427496L, 1644572158724L);
    }

    @Test
    public void test13991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13991");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(54);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks2.plus((-101));
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = weeks10.plus((int) ' ');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks19 = weeks16.plus((int) ' ');
        boolean boolean20 = weeks10.isGreaterThan(weeks16);
        org.joda.time.DurationFieldType durationFieldType21 = weeks10.getFieldType();
        boolean boolean22 = weeks4.isLessThan(weeks10);
        boolean boolean23 = weeks1.isLessThan(weeks10);
        java.lang.String str24 = weeks1.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P54W" + "'", str24, "P54W");
    }

    @Test
    public void test13992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13992");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Seconds seconds7 = duration5.toStandardSeconds();
        org.joda.time.Duration duration9 = duration5.plus(1644572542977L);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(duration9);
    }

    @Test
    public void test13993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13993");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.DurationFieldType durationFieldType47 = minutes46.getFieldType();
        org.joda.time.Minutes minutes48 = minutes46.negated();
        org.joda.time.Minutes minutes50 = minutes48.multipliedBy((int) 'a');
        org.joda.time.Duration duration52 = org.joda.time.Duration.millis((long) '4');
        long long53 = duration52.getMillis();
        org.joda.time.Minutes minutes54 = duration52.toStandardMinutes();
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.ReadableInterval readableInterval56 = null;
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.minutesIn(readableInterval56);
        org.joda.time.PeriodType periodType58 = minutes57.getPeriodType();
        boolean boolean59 = minutes55.isLessThan(minutes57);
        int int60 = minutes57.getMinutes();
        org.joda.time.Duration duration61 = minutes57.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType62 = minutes57.getFieldType();
        org.joda.time.Minutes minutes63 = minutes50.minus(minutes57);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = minutes50.getValue(32);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 52L + "'", long53 == 52L);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(minutes63);
    }

    @Test
    public void test13994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13994");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(1644572184627L);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        boolean boolean9 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Interval interval11 = duration7.toIntervalTo(readableInstant10);
        org.joda.time.Interval interval12 = interval11.toInterval();
        org.joda.time.DateTime dateTime13 = interval12.getEnd();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        org.joda.time.DateTime dateTime24 = interval23.getEnd();
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime13, (org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.DateTime dateTime47 = interval46.getEnd();
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime24, (org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.DateTimeZone dateTimeZone50 = dateTime24.getZone();
        org.joda.time.DateTimeZone dateTimeZone51 = dateTime24.getZone();
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType53 = periodType52.withDaysRemoved();
        org.joda.time.Period period54 = duration2.toPeriodFrom((org.joda.time.ReadableInstant) dateTime24, periodType53);
        org.joda.time.Period period55 = new org.joda.time.Period(1644572144086L, periodType53);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(dateTime13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(dateTimeZone50);
        org.junit.Assert.assertNotNull(dateTimeZone51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period54);
    }

    @Test
    public void test13995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13995");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(27409537);
        org.joda.time.Period period6 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period8 = period6.minusHours((-1));
        org.joda.time.PeriodType periodType9 = period6.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType16 = mutablePeriod14.getFieldType(1);
        org.joda.time.Chronology chronology17 = null;
        boolean boolean18 = durationFieldType16.isSupported(chronology17);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) '4');
        org.joda.time.Seconds seconds21 = duration20.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.Chronology chronology34 = interval33.getChronology();
        org.joda.time.DurationField durationField35 = durationFieldType23.getField(chronology34);
        org.joda.time.Period period36 = new org.joda.time.Period(36000L, chronology34);
        org.joda.time.Period period37 = duration20.toPeriod(chronology34);
        org.joda.time.DurationField durationField38 = durationFieldType16.getField(chronology34);
        org.joda.time.Period period39 = new org.joda.time.Period(1644572125363L, chronology34);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((java.lang.Object) 27409537, periodType9, chronology34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(chronology34);
        org.junit.Assert.assertNotNull(durationField35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(durationField38);
    }

    @Test
    public void test13996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13996");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration3 = duration1.plus(1644572076849L);
        org.joda.time.Days days4 = duration1.toStandardDays();
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.eras();
        java.lang.String str6 = durationFieldType5.getName();
        boolean boolean7 = days4.isSupported(durationFieldType5);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration15 = duration12.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration17 = duration9.withDurationAdded((org.joda.time.ReadableDuration) duration12, (int) (short) 1);
        org.joda.time.Days days18 = duration17.toStandardDays();
        org.joda.time.Days days19 = days4.plus(days18);
        org.joda.time.Days days21 = days19.dividedBy((-9700));
        org.joda.time.Days days23 = days19.minus((int) ' ');
        org.joda.time.DurationFieldType durationFieldType24 = days23.getFieldType();
        org.joda.time.DurationFieldType durationFieldType25 = days23.getFieldType();
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.hours();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        org.joda.time.Interval interval41 = interval40.toInterval();
        org.joda.time.Chronology chronology42 = interval41.getChronology();
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((long) 9, chronology42);
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(10L, 1644572107117L, periodType30, chronology42);
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(1644572356063L, 1644572275978L, chronology42);
        boolean boolean46 = durationFieldType25.isSupported(chronology42);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "eras" + "'", str6, "eras");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(chronology42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test13997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13997");
        org.joda.time.Period period1 = new org.joda.time.Period(1L);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Period period4 = period1.plus((org.joda.time.ReadablePeriod) weeks3);
        int int5 = period4.getMinutes();
        int[] intArray6 = period4.getValues();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period4);
        org.joda.time.Period period9 = period4.withDays((-101));
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        int int11 = weeks10.size();
        org.joda.time.Duration duration12 = weeks10.toStandardDuration();
        org.joda.time.Period period13 = period9.minus((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Period period15 = period9.minusMinutes(97);
        org.joda.time.ReadablePeriod readablePeriod16 = null;
        org.joda.time.Period period17 = period15.minus(readablePeriod16);
        org.joda.time.Period period19 = period17.minusMonths((-34));
        org.joda.time.Period period21 = period17.plusMinutes(17);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, -1, 0, 0, 0, 0, 1]");
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test13998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13998");
        org.joda.time.Period period8 = new org.joda.time.Period(601, 32, 30, 187, (int) (short) 0, (int) (short) 10, 600, 36);
        org.joda.time.Period period10 = period8.minusMinutes(187);
        org.joda.time.Period period12 = period10.minusWeeks(8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test13999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13999");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, 0L);
        org.joda.time.Period period4 = period2.withYears((-97));
        org.joda.time.Period period9 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period11 = period9.plusDays(1);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        org.joda.time.Days days16 = duration14.toStandardDays();
        org.joda.time.Days days17 = days16.negated();
        org.joda.time.Period period18 = period11.plus((org.joda.time.ReadablePeriod) days16);
        org.joda.time.Period period20 = period18.plusDays((-1));
        org.joda.time.Period period22 = period20.minusHours((int) '#');
        org.joda.time.Period period24 = period22.plusYears((int) 'a');
        org.joda.time.Period period26 = period22.plusMonths((int) (byte) 1);
        org.joda.time.Period period28 = period22.minusMonths((int) (short) -1);
        org.joda.time.Period period29 = period28.normalizedStandard();
        org.joda.time.Period period30 = period4.withFields((org.joda.time.ReadablePeriod) period28);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
    }

    @Test
    public void test14000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test14000");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Duration duration11 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean12 = duration4.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes13 = duration4.toStandardMinutes();
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.DurationFieldType durationFieldType16 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.Chronology chronology27 = interval26.getChronology();
        org.joda.time.DurationField durationField28 = durationFieldType16.getField(chronology27);
        org.joda.time.Period period29 = new org.joda.time.Period(36000L, chronology27);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((java.lang.Object) minutes14, chronology27);
        org.joda.time.Period period31 = mutablePeriod30.toPeriod();
        mutablePeriod30.add(0L);
        int int34 = mutablePeriod30.getHours();
        int int35 = mutablePeriod30.getMillis();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod30.setMonths((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(chronology27);
        org.junit.Assert.assertNotNull(durationField28);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }
}
