import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest23 {

    public static boolean debug = false;

    @Test
    public void test11501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11501");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        secondMoment0.clear();
        double double16 = secondMoment0.getResult();
        secondMoment0.increment((double) 1.0f);
        secondMoment0.increment((-1.0d));
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        double[] doubleArray38 = new double[] { 10, (byte) 100 };
        double double39 = secondMoment26.evaluate(doubleArray38);
        double double40 = secondMoment26.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment26);
        long long42 = secondMoment26.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        secondMoment26.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double[] doubleArray58 = new double[] { 10, (byte) 100 };
        double double59 = secondMoment46.evaluate(doubleArray58);
        double double60 = secondMoment46.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment46);
        long long62 = secondMoment46.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment((double) ' ');
        secondMoment63.increment((double) (-1.0f));
        secondMoment63.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        double[] doubleArray75 = new double[] { (-1L), 0, 10L };
        secondMoment69.incrementAll(doubleArray75, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment69);
        long long80 = variance79.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment81.increment(1.0d);
        double[] doubleArray87 = new double[] { (-1L), 0, 10L };
        secondMoment81.incrementAll(doubleArray87, 0, 0);
        double double92 = variance79.evaluate(doubleArray87, (double) (short) -1);
        double double93 = secondMoment63.evaluate(doubleArray87);
        double double94 = secondMoment46.evaluate(doubleArray87);
        double double95 = secondMoment26.evaluate(doubleArray87);
        secondMoment0.incrementAll(doubleArray87);
        secondMoment0.clear();
        double double98 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4050.0d + "'", double40 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 2L + "'", long42 == 2L);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 2L + "'", long62 == 2L);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 1L + "'", long80 == 1L);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 37.0d + "'", double92 == 37.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 74.0d + "'", double93 == 74.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 74.0d + "'", double94 == 74.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 74.0d + "'", double95 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double98));
    }

    @Test
    public void test11502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11502");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        double double14 = secondMoment9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        double double25 = secondMoment9.evaluate(doubleArray21);
        secondMoment1.incrementAll(doubleArray21, 0, (int) (short) 0);
        secondMoment1.increment((double) (-1.0f));
        secondMoment1.clear();
        double double32 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double34 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance35.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.5d + "'", double14 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 74.0d + "'", double25 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
    }

    @Test
    public void test11503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11503");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (short) 10);
        secondMoment0.increment((double) 2L);
        double double7 = secondMoment0.getResult();
        secondMoment0.increment(0.0d);
        secondMoment0.clear();
        secondMoment0.increment(1.2215704987955729E7d);
        double double13 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 482.66666666666663d + "'", double7 == 482.66666666666663d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test11504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11504");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        secondMoment3.increment((double) (short) -1);
        long long9 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        long long12 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        double double15 = secondMoment3.getResult();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 2L + "'", long9 == 2L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 544.5d + "'", double15 == 544.5d);
    }

    @Test
    public void test11505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11505");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        boolean boolean14 = secondMoment0.equals((java.lang.Object) secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double[] doubleArray30 = new double[] { 10, (byte) 100 };
        double double31 = secondMoment18.evaluate(doubleArray30);
        double double32 = secondMoment15.evaluate(doubleArray30);
        secondMoment0.incrementAll(doubleArray30);
        secondMoment0.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        secondMoment37.increment((double) (short) -1);
        long long43 = secondMoment37.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        double double46 = secondMoment37.getResult();
        secondMoment37.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        secondMoment49.increment((double) (short) 0);
        double double54 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double double65 = secondMoment49.evaluate(doubleArray61);
        double[] doubleArray66 = new double[] {};
        secondMoment49.incrementAll(doubleArray66);
        double double70 = variance48.evaluate(doubleArray66, (int) (byte) 0, 0);
        long long71 = variance48.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        secondMoment72.increment((double) (short) 0);
        double double77 = secondMoment72.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment78.increment(1.0d);
        double[] doubleArray84 = new double[] { (-1L), 0, 10L };
        secondMoment78.incrementAll(doubleArray84, 0, 0);
        double double88 = secondMoment72.evaluate(doubleArray84);
        variance48.incrementAll(doubleArray84);
        double double90 = secondMoment37.evaluate(doubleArray84);
        secondMoment0.incrementAll(doubleArray84);
        secondMoment0.clear();
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4050.0d + "'", double31 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4050.0d + "'", double32 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 2L + "'", long43 == 2L);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 544.5d + "'", double46 == 544.5d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5d + "'", double54 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.5d + "'", double77 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 74.0d + "'", double90 == 74.0d);
    }

    @Test
    public void test11506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11506");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.clear();
        long long7 = secondMoment0.getN();
        secondMoment0.increment(5226.0d);
        secondMoment0.clear();
        secondMoment0.clear();
        double double12 = secondMoment0.getResult();
        secondMoment0.increment(12.5d);
        secondMoment0.clear();
        secondMoment0.increment(90.70617283950617d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test11507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11507");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (byte) 0);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        secondMoment9.increment((double) (short) -1);
        secondMoment9.clear();
        double double16 = secondMoment9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        secondMoment17.increment((double) (short) 0);
        double double22 = secondMoment17.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        double[] doubleArray29 = new double[] { (-1L), 0, 10L };
        secondMoment23.incrementAll(doubleArray29, 0, 0);
        double double33 = secondMoment17.evaluate(doubleArray29);
        secondMoment9.incrementAll(doubleArray29, 0, (int) (short) 0);
        secondMoment9.increment((double) (-1.0f));
        secondMoment9.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        secondMoment41.incrementAll(doubleArray47, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment41);
        double double52 = variance51.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        secondMoment54.increment((double) (short) 0);
        long long59 = secondMoment54.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment54);
        long long61 = variance60.getN();
        variance60.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long65 = variance64.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        secondMoment66.increment((double) (short) 0);
        double double71 = secondMoment66.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        double[] doubleArray78 = new double[] { (-1L), 0, 10L };
        secondMoment72.incrementAll(doubleArray78, 0, 0);
        double double82 = secondMoment66.evaluate(doubleArray78);
        variance64.incrementAll(doubleArray78);
        double double85 = variance60.evaluate(doubleArray78, (double) (short) -1);
        double double86 = variance51.evaluate(doubleArray78);
        double double88 = variance40.evaluate(doubleArray78, 5.5310751405070744E14d);
        double double89 = secondMoment1.evaluate(doubleArray78);
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.5d + "'", double22 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 74.0d + "'", double33 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 2L + "'", long59 == 2L);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 2L + "'", long61 == 2L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.5d + "'", double71 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 74.0d + "'", double82 == 74.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 24.666666666666668d + "'", double85 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 37.0d + "'", double86 == 37.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
    }

    @Test
    public void test11508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11508");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance8.increment((double) (short) 0);
        long long11 = variance8.getN();
        double double12 = variance8.getResult();
        variance8.increment(116966.7222222222d);
        double[] doubleArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double17 = variance8.evaluate(doubleArray15, 6140.666666666667d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test11509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11509");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        double double17 = secondMoment0.getResult();
        secondMoment0.increment((double) 1L);
        secondMoment0.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        boolean boolean23 = variance22.isBiasCorrected();
        variance22.setBiasCorrected(true);
        double[] doubleArray26 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance22.incrementAll(doubleArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 6140.666666666667d + "'", double17 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test11510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11510");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        long long8 = secondMoment2.getN();
        double double9 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.increment(2.880385675555556E7d);
        long long13 = secondMoment2.getN();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        secondMoment17.increment(272.25d);
        long long23 = secondMoment17.getN();
        long long24 = secondMoment17.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment25);
        secondMoment25.increment((double) (short) -1);
        secondMoment25.clear();
        secondMoment25.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        secondMoment35.increment((double) (short) 0);
        double double40 = secondMoment35.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        secondMoment41.incrementAll(doubleArray47, 0, 0);
        double double51 = secondMoment35.evaluate(doubleArray47);
        double double52 = secondMoment25.evaluate(doubleArray47);
        secondMoment25.increment((double) 'a');
        secondMoment25.increment(3.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        secondMoment58.increment((double) (short) 0);
        double double63 = secondMoment58.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        secondMoment64.incrementAll(doubleArray70, 0, 0);
        double double74 = secondMoment58.evaluate(doubleArray70);
        double[] doubleArray75 = new double[] {};
        secondMoment58.incrementAll(doubleArray75);
        double double79 = variance57.evaluate(doubleArray75, (int) (byte) 0, 0);
        double double80 = secondMoment25.evaluate(doubleArray75);
        secondMoment17.incrementAll(doubleArray75);
        secondMoment2.incrementAll(doubleArray75);
        double double83 = secondMoment2.getResult();
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 544.5d + "'", double9 == 544.5d);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 3L + "'", long13 == 3L);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.5d + "'", double40 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 74.0d + "'", double51 == 74.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 74.0d + "'", double52 == 74.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.5d + "'", double63 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 74.0d + "'", double74 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 7142.8d + "'", double80 == 7142.8d);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
    }

    @Test
    public void test11511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11511");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double9 = variance8.getResult();
        variance8.setBiasCorrected(true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 272.25d + "'", double9 == 272.25d);
    }

    @Test
    public void test11512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11512");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        long long8 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.clear();
        secondMoment2.increment(4402.666666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        long long19 = secondMoment15.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment22);
        secondMoment22.increment((double) (short) -1);
        secondMoment22.clear();
        secondMoment22.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        secondMoment32.increment((double) (short) 0);
        double double37 = secondMoment32.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        secondMoment38.incrementAll(doubleArray44, 0, 0);
        double double48 = secondMoment32.evaluate(doubleArray44);
        double[] doubleArray49 = new double[] {};
        secondMoment32.incrementAll(doubleArray49);
        double double53 = variance31.evaluate(doubleArray49, (int) (byte) 0, 0);
        long long54 = variance31.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        secondMoment55.increment((double) (short) 0);
        double double60 = secondMoment55.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        double[] doubleArray67 = new double[] { (-1L), 0, 10L };
        secondMoment61.incrementAll(doubleArray67, 0, 0);
        double double71 = secondMoment55.evaluate(doubleArray67);
        variance31.incrementAll(doubleArray67);
        long long73 = variance31.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        secondMoment74.increment((double) (short) 0);
        double double79 = secondMoment74.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment80.increment(1.0d);
        double[] doubleArray86 = new double[] { (-1L), 0, 10L };
        secondMoment80.incrementAll(doubleArray86, 0, 0);
        double double90 = secondMoment74.evaluate(doubleArray86);
        double[] doubleArray91 = new double[] {};
        secondMoment74.incrementAll(doubleArray91);
        double double93 = variance31.evaluate(doubleArray91);
        double double94 = secondMoment22.evaluate(doubleArray91);
        variance21.incrementAll(doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            secondMoment2.incrementAll(doubleArray91, (int) (short) 1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.5d + "'", double37 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.5d + "'", double60 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 74.0d + "'", double71 == 74.0d);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 3L + "'", long73 == 3L);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.5d + "'", double79 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 74.0d + "'", double90 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double93));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
    }

    @Test
    public void test11513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11513");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        secondMoment0.clear();
        secondMoment0.increment(2312.0d);
        secondMoment0.increment((double) (byte) -1);
        secondMoment0.increment(0.0d);
        double double16 = secondMoment0.getResult();
        double[] doubleArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double20 = secondMoment0.evaluate(doubleArray17, 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 3565104.666666667d + "'", double16 == 3565104.666666667d);
    }

    @Test
    public void test11514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11514");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment(7881.333333333333d);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double11 = secondMoment0.getResult();
        long long12 = secondMoment0.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test11515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11515");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        long long7 = secondMoment0.getN();
        long long8 = secondMoment0.getN();
        secondMoment0.increment(7.703419152040815E7d);
        long long11 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 3L + "'", long11 == 3L);
    }

    @Test
    public void test11516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11516");
        org.apache.commons.math.stat.descriptive.moment.FirstMoment firstMoment0 = new org.apache.commons.math.stat.descriptive.moment.FirstMoment();
        firstMoment0.increment((double) 1L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        secondMoment3.increment((double) (short) -1);
        secondMoment3.clear();
        secondMoment3.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        secondMoment13.increment((double) (short) 0);
        double double18 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double double29 = secondMoment13.evaluate(doubleArray25);
        double double30 = secondMoment3.evaluate(doubleArray25);
        double double31 = secondMoment3.getResult();
        secondMoment3.increment(4034.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double[] doubleArray48 = new double[] { 10, (byte) 100 };
        double double49 = secondMoment36.evaluate(doubleArray48);
        long long50 = secondMoment36.getN();
        secondMoment36.clear();
        double double52 = secondMoment36.getResult();
        secondMoment36.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double double65 = variance54.evaluate(doubleArray61);
        double double67 = variance34.evaluate(doubleArray61, 40.5d);
        double double68 = firstMoment0.evaluate(doubleArray61);
        firstMoment0.clear();
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.5d + "'", double18 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 74.0d + "'", double29 == 74.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 74.0d + "'", double31 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 2L + "'", long50 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 37.0d + "'", double65 == 37.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 37.0d + "'", double67 == 37.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 3.0d + "'", double68 == 3.0d);
    }

    @Test
    public void test11517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11517");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        double double8 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment(1.0932300666666664E7d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test11518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11518");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance8.increment((double) (short) 0);
        variance8.clear();
        variance8.increment((double) 1L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double double24 = variance8.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        secondMoment25.increment((double) (short) 0);
        double double30 = secondMoment25.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment((double) ' ');
        double double34 = secondMoment31.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment31);
        boolean boolean36 = secondMoment25.equals((java.lang.Object) variance35);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        secondMoment37.increment((double) (short) -1);
        secondMoment37.clear();
        secondMoment37.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        long long47 = variance46.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        secondMoment51.increment((double) (short) 0);
        double double56 = secondMoment51.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        double[] doubleArray63 = new double[] { (-1L), 0, 10L };
        secondMoment57.incrementAll(doubleArray63, 0, 0);
        double double67 = secondMoment51.evaluate(doubleArray63);
        double[] doubleArray68 = new double[] {};
        secondMoment51.incrementAll(doubleArray68);
        double double70 = secondMoment48.evaluate(doubleArray68);
        double double71 = variance46.evaluate(doubleArray68);
        double double72 = secondMoment25.evaluate(doubleArray68);
        double double73 = variance8.evaluate(doubleArray68);
        variance8.clear();
        double double75 = variance8.getResult();
        variance8.clear();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 24.666666666666668d + "'", double24 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.5d + "'", double30 == 0.5d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.5d + "'", double56 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 74.0d + "'", double67 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5d + "'", double72 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
    }

    @Test
    public void test11519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11519");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        secondMoment2.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        secondMoment21.incrementAll(doubleArray27, 0, 0);
        double[] doubleArray33 = new double[] { 10, (byte) 100 };
        double double34 = secondMoment21.evaluate(doubleArray33);
        double double35 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment21);
        long long37 = secondMoment21.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        secondMoment39.increment((double) (short) -1);
        secondMoment39.clear();
        secondMoment39.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        secondMoment49.incrementAll(doubleArray55, 0, 0);
        variance48.incrementAll(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment60);
        secondMoment60.increment((double) (short) -1);
        secondMoment60.clear();
        secondMoment60.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        secondMoment70.increment((double) (short) 0);
        double double75 = secondMoment70.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment76.increment(1.0d);
        double[] doubleArray82 = new double[] { (-1L), 0, 10L };
        secondMoment76.incrementAll(doubleArray82, 0, 0);
        double double86 = secondMoment70.evaluate(doubleArray82);
        double double87 = secondMoment60.evaluate(doubleArray82);
        double double88 = variance48.evaluate(doubleArray82);
        variance38.incrementAll(doubleArray82);
        secondMoment2.incrementAll(doubleArray82);
        double double91 = secondMoment2.getResult();
        secondMoment2.clear();
        double double93 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance94 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance96 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4050.0d + "'", double34 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4050.0d + "'", double35 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 2L + "'", long37 == 2L);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.5d + "'", double75 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 74.0d + "'", double86 == 74.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 74.0d + "'", double87 == 74.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 37.0d + "'", double88 == 37.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 7881.333333333333d + "'", double91 == 7881.333333333333d);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
    }

    @Test
    public void test11520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11520");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        secondMoment0.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(24.666666666666668d);
        secondMoment0.clear();
        secondMoment0.increment((double) (byte) 10);
        secondMoment0.increment(1.5803546165550332E27d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
    }

    @Test
    public void test11521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11521");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        secondMoment0.clear();
        secondMoment0.increment((double) (byte) 0);
        secondMoment0.clear();
        secondMoment0.increment(36.99999998509884d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
    }

    @Test
    public void test11522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11522");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) '4');
        double double8 = secondMoment2.getResult();
        secondMoment2.increment((double) (short) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        secondMoment15.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        secondMoment20.increment((double) (short) 0);
        double double25 = secondMoment20.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        secondMoment26.increment((double) (short) 0);
        double double31 = secondMoment26.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        secondMoment32.incrementAll(doubleArray38, 0, 0);
        double double42 = secondMoment26.evaluate(doubleArray38);
        double[] doubleArray43 = new double[] {};
        secondMoment26.incrementAll(doubleArray43);
        secondMoment20.incrementAll(doubleArray43);
        secondMoment20.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        secondMoment49.incrementAll(doubleArray55, 0, 0);
        double[] doubleArray61 = new double[] { 10, (byte) 100 };
        double double62 = secondMoment49.evaluate(doubleArray61);
        double double63 = variance48.evaluate(doubleArray61);
        double double64 = secondMoment15.evaluate(doubleArray61);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        secondMoment65.increment((double) (short) 0);
        double double70 = secondMoment65.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment(1.0d);
        secondMoment71.increment((double) (short) 0);
        double double76 = secondMoment71.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment77.increment(1.0d);
        double[] doubleArray83 = new double[] { (-1L), 0, 10L };
        secondMoment77.incrementAll(doubleArray83, 0, 0);
        double double87 = secondMoment71.evaluate(doubleArray83);
        double[] doubleArray88 = new double[] {};
        secondMoment71.incrementAll(doubleArray88);
        secondMoment65.incrementAll(doubleArray88);
        double double91 = secondMoment15.evaluate(doubleArray88);
        secondMoment2.incrementAll(doubleArray88);
        double double93 = secondMoment2.getResult();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 200.0d + "'", double8 == 200.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.5d + "'", double25 == 0.5d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5d + "'", double31 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 74.0d + "'", double42 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4050.0d + "'", double62 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4050.0d + "'", double63 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4050.0d + "'", double64 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.5d + "'", double70 == 0.5d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.5d + "'", double76 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 74.0d + "'", double87 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 4050.0d + "'", double91 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
    }

    @Test
    public void test11523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11523");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        java.lang.Class<?> wildcardClass20 = secondMoment1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test11524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11524");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        double double8 = secondMoment1.getResult();
        secondMoment1.increment((double) 1.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double12 = variance11.getResult();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 544.5d + "'", double8 == 544.5d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 228.2222222222222d + "'", double12 == 228.2222222222222d);
    }

    @Test
    public void test11525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11525");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment((double) (short) -1);
        secondMoment16.clear();
        secondMoment16.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        secondMoment29.increment((double) (short) 0);
        double double34 = secondMoment29.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double double45 = secondMoment29.evaluate(doubleArray41);
        double[] doubleArray46 = new double[] {};
        secondMoment29.incrementAll(doubleArray46);
        double double50 = variance28.evaluate(doubleArray46, (int) (byte) 0, 0);
        long long51 = variance28.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        secondMoment52.increment((double) (short) 0);
        double double57 = secondMoment52.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        secondMoment58.incrementAll(doubleArray64, 0, 0);
        double double68 = secondMoment52.evaluate(doubleArray64);
        variance28.incrementAll(doubleArray64);
        double double71 = variance27.evaluate(doubleArray64, (double) '#');
        variance27.increment((double) (short) 10);
        variance27.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5d + "'", double34 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.5d + "'", double57 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 24.666666666666668d + "'", double71 == 24.666666666666668d);
    }

    @Test
    public void test11526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11526");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        double double14 = secondMoment9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        double double25 = secondMoment9.evaluate(doubleArray21);
        double[] doubleArray26 = new double[] {};
        secondMoment9.incrementAll(doubleArray26);
        double double30 = variance8.evaluate(doubleArray26, (int) (byte) 0, 0);
        long long31 = variance8.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        secondMoment32.increment((double) (short) 0);
        double double37 = secondMoment32.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        secondMoment38.incrementAll(doubleArray44, 0, 0);
        double double48 = secondMoment32.evaluate(doubleArray44);
        variance8.incrementAll(doubleArray44);
        long long50 = variance8.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        secondMoment54.increment((double) (short) 0);
        double double59 = secondMoment54.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment(1.0d);
        double[] doubleArray66 = new double[] { (-1L), 0, 10L };
        secondMoment60.incrementAll(doubleArray66, 0, 0);
        double double70 = secondMoment54.evaluate(doubleArray66);
        double[] doubleArray71 = new double[] {};
        secondMoment54.incrementAll(doubleArray71);
        double double73 = secondMoment51.evaluate(doubleArray71);
        variance8.incrementAll(doubleArray71);
        double double77 = variance5.evaluate(doubleArray71, (int) (byte) 0, 0);
        boolean boolean78 = variance5.isBiasCorrected();
        double double79 = variance5.getResult();
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.5d + "'", double14 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 74.0d + "'", double25 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.5d + "'", double37 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 3L + "'", long50 == 3L);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5d + "'", double59 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 74.0d + "'", double70 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
    }

    @Test
    public void test11527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11527");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double10 = secondMoment0.getResult();
        secondMoment0.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment((double) ' ');
        secondMoment14.increment((double) (-1.0f));
        double double19 = secondMoment14.getResult();
        secondMoment14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment14);
        double double22 = variance21.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long25 = variance24.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        secondMoment26.increment((double) (short) 0);
        double double31 = secondMoment26.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        secondMoment32.incrementAll(doubleArray38, 0, 0);
        double double42 = secondMoment26.evaluate(doubleArray38);
        variance24.incrementAll(doubleArray38);
        double double44 = variance21.evaluate(doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            variance13.incrementAll(doubleArray38, (int) (short) 1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 544.5d + "'", double19 == 544.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5d + "'", double31 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 74.0d + "'", double42 == 74.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 37.0d + "'", double44 == 37.0d);
    }

    @Test
    public void test11528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11528");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        variance7.increment(0.0d);
        variance7.increment(30671.375d);
        boolean boolean12 = secondMoment0.equals((java.lang.Object) variance7);
        long long13 = secondMoment0.getN();
        secondMoment0.increment(4575.782407407407d);
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test11529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11529");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double[] doubleArray19 = new double[] { 10, (byte) 100 };
        double double20 = secondMoment7.evaluate(doubleArray19);
        double double21 = secondMoment7.getResult();
        long long22 = secondMoment7.getN();
        long long23 = secondMoment7.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        boolean boolean25 = secondMoment0.equals((java.lang.Object) secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        secondMoment7.increment((double) (byte) 0);
        secondMoment7.clear();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test11530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11530");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        double double20 = secondMoment2.getResult();
        long long21 = secondMoment2.getN();
        secondMoment2.clear();
        secondMoment2.clear();
        long long24 = secondMoment2.getN();
        double double25 = secondMoment2.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2L + "'", long21 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test11531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11531");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        boolean boolean11 = variance9.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double[] doubleArray26 = new double[] { 10, (byte) 100 };
        double double27 = secondMoment14.evaluate(doubleArray26);
        double double28 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment14);
        long long30 = secondMoment14.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        boolean boolean32 = variance31.isBiasCorrected();
        variance31.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        secondMoment40.incrementAll(doubleArray46, 0, 0);
        double[] doubleArray52 = new double[] { 10, (byte) 100 };
        double double53 = secondMoment40.evaluate(doubleArray52);
        double double54 = secondMoment40.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment40);
        long long56 = secondMoment40.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment((double) ' ');
        secondMoment57.increment((double) (-1.0f));
        secondMoment57.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment63);
        long long74 = variance73.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        double double86 = variance73.evaluate(doubleArray81, (double) (short) -1);
        double double87 = secondMoment57.evaluate(doubleArray81);
        double double88 = secondMoment40.evaluate(doubleArray81);
        secondMoment35.incrementAll(doubleArray81);
        variance31.incrementAll(doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double double94 = variance9.evaluate(doubleArray81, 3.925812428E7d, (int) (short) 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4050.0d + "'", double27 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4050.0d + "'", double28 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 2L + "'", long30 == 2L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4050.0d + "'", double53 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4050.0d + "'", double54 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 2L + "'", long56 == 2L);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 37.0d + "'", double86 == 37.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 74.0d + "'", double87 == 74.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
    }

    @Test
    public void test11532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11532");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        variance1.increment((double) (short) 100);
        variance1.increment((double) 3L);
        variance1.clear();
        variance1.increment((double) (byte) -1);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        long long23 = secondMoment13.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment13);
        secondMoment13.increment(10.0d);
        secondMoment13.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment28);
        secondMoment28.increment((double) (short) -1);
        secondMoment28.clear();
        secondMoment28.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        secondMoment37.increment((double) (short) 0);
        boolean boolean42 = secondMoment28.equals((java.lang.Object) secondMoment37);
        secondMoment28.clear();
        long long44 = secondMoment28.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        secondMoment46.increment((double) (short) 0);
        long long51 = secondMoment46.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment53);
        secondMoment53.increment((double) (short) -1);
        secondMoment53.clear();
        secondMoment53.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        secondMoment62.increment((double) (short) 0);
        boolean boolean67 = secondMoment53.equals((java.lang.Object) secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment(1.0d);
        double[] doubleArray77 = new double[] { (-1L), 0, 10L };
        secondMoment71.incrementAll(doubleArray77, 0, 0);
        double[] doubleArray83 = new double[] { 10, (byte) 100 };
        double double84 = secondMoment71.evaluate(doubleArray83);
        double double85 = secondMoment68.evaluate(doubleArray83);
        secondMoment53.incrementAll(doubleArray83);
        secondMoment46.incrementAll(doubleArray83, (int) (short) 0, 0);
        double double90 = secondMoment28.evaluate(doubleArray83);
        double double91 = secondMoment13.evaluate(doubleArray83);
        double double92 = variance1.evaluate(doubleArray83);
        long long93 = variance1.getN();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 2L + "'", long51 == 2L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 4050.0d + "'", double85 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4050.0d + "'", double90 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 4050.0d + "'", double91 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2025.0d + "'", double92 == 2025.0d);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
    }

    @Test
    public void test11533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11533");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment((double) (short) -1);
        secondMoment15.clear();
        secondMoment15.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment15);
        boolean boolean25 = secondMoment0.equals((java.lang.Object) secondMoment15);
        double double26 = secondMoment15.getResult();
        secondMoment15.increment((double) 'a');
        double double29 = secondMoment15.getResult();
        secondMoment15.increment(7020.75d);
        secondMoment15.clear();
        long long33 = secondMoment15.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4704.5d + "'", double29 == 4704.5d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
    }

    @Test
    public void test11534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11534");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        secondMoment1.increment((double) (short) -1);
        double double18 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double[] doubleArray31 = new double[] { 10, (byte) 100 };
        double double32 = secondMoment19.evaluate(doubleArray31);
        double double33 = secondMoment1.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance34.increment(1.8756123185185187E7d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        secondMoment37.increment((double) (short) 0);
        double double42 = secondMoment37.getResult();
        long long43 = secondMoment37.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment44);
        secondMoment44.increment((double) (short) -1);
        secondMoment44.clear();
        secondMoment44.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        double[] doubleArray60 = new double[] { (-1L), 0, 10L };
        secondMoment54.incrementAll(doubleArray60, 0, 0);
        variance53.incrementAll(doubleArray60);
        long long65 = variance53.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        double[] doubleArray75 = new double[] { (-1L), 0, 10L };
        secondMoment69.incrementAll(doubleArray75, 0, 0);
        double[] doubleArray81 = new double[] { 10, (byte) 100 };
        double double82 = secondMoment69.evaluate(doubleArray81);
        double double83 = secondMoment66.evaluate(doubleArray81);
        variance53.incrementAll(doubleArray81);
        double double85 = secondMoment37.evaluate(doubleArray81);
        double double86 = variance34.evaluate(doubleArray81);
        variance34.increment(1.935908267965872E29d);
        double double89 = variance34.getResult();
        long long90 = variance34.getN();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 6140.666666666667d + "'", double18 == 6140.666666666667d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4050.0d + "'", double32 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4050.0d + "'", double33 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.5d + "'", double42 == 0.5d);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 2L + "'", long43 == 2L);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 4050.0d + "'", double85 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2025.0d + "'", double86 == 2025.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2025.0d + "'", double89 == 2025.0d);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 2L + "'", long90 == 2L);
    }

    @Test
    public void test11535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11535");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment((double) ' ');
        secondMoment9.increment((double) '4');
        long long14 = secondMoment9.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        double double16 = secondMoment9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        secondMoment18.increment((double) (short) 0);
        double double23 = secondMoment18.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        double double34 = secondMoment18.evaluate(doubleArray30);
        long long35 = secondMoment18.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        double double37 = secondMoment18.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment18);
        variance38.increment((double) 10.0f);
        boolean boolean41 = variance38.isBiasCorrected();
        double double42 = variance38.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        secondMoment43.increment((double) (short) 0);
        double double48 = secondMoment43.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        secondMoment49.incrementAll(doubleArray55, 0, 0);
        double double59 = secondMoment43.evaluate(doubleArray55);
        double double60 = variance38.evaluate(doubleArray55);
        secondMoment9.incrementAll(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        boolean boolean63 = secondMoment0.equals((java.lang.Object) true);
        double double64 = secondMoment0.getResult();
        double double65 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 200.0d + "'", double16 == 200.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5d + "'", double23 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 74.0d + "'", double34 == 74.0d);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 3L + "'", long35 == 3L);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 24.666666666666668d + "'", double42 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.5d + "'", double48 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 74.0d + "'", double59 == 74.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 24.666666666666668d + "'", double60 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
    }

    @Test
    public void test11536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11536");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment((double) '4');
        secondMoment10.increment((double) 100);
        secondMoment10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double[] doubleArray32 = new double[] { 10, (byte) 100 };
        double double33 = secondMoment20.evaluate(doubleArray32);
        secondMoment20.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        secondMoment35.increment((double) (short) 0);
        double double40 = secondMoment35.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        secondMoment41.increment((double) (short) 0);
        double double46 = secondMoment41.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double double57 = secondMoment41.evaluate(doubleArray53);
        double[] doubleArray58 = new double[] {};
        secondMoment41.incrementAll(doubleArray58);
        secondMoment35.incrementAll(doubleArray58);
        secondMoment35.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        secondMoment64.incrementAll(doubleArray70, 0, 0);
        double[] doubleArray76 = new double[] { 10, (byte) 100 };
        double double77 = secondMoment64.evaluate(doubleArray76);
        double double78 = variance63.evaluate(doubleArray76);
        double double79 = secondMoment20.evaluate(doubleArray76);
        double double80 = secondMoment10.evaluate(doubleArray76);
        double double81 = secondMoment0.evaluate(doubleArray76);
        double double82 = secondMoment0.getResult();
        double double83 = secondMoment0.getResult();
        double double84 = secondMoment0.getResult();
        double double85 = secondMoment0.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4050.0d + "'", double33 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.5d + "'", double40 == 0.5d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.5d + "'", double46 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 74.0d + "'", double57 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4050.0d + "'", double77 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 4050.0d + "'", double78 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4050.0d + "'", double79 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 4050.0d + "'", double80 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 4050.0d + "'", double85 == 4050.0d);
    }

    @Test
    public void test11537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11537");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        double double6 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
    }

    @Test
    public void test11538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11538");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        double double4 = variance1.getResult();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        secondMoment6.increment((double) (short) -1);
        secondMoment6.clear();
        secondMoment6.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        secondMoment15.increment((double) (short) 0);
        boolean boolean20 = secondMoment6.equals((java.lang.Object) secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment22);
        long long33 = variance32.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double45 = variance32.evaluate(doubleArray40, (double) (short) -1);
        double double46 = variance32.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        secondMoment53.increment((double) (short) 0);
        double double58 = secondMoment53.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        double double69 = secondMoment53.evaluate(doubleArray65);
        double[] doubleArray70 = new double[] {};
        secondMoment53.incrementAll(doubleArray70);
        secondMoment47.incrementAll(doubleArray70);
        secondMoment47.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment76.increment(1.0d);
        double[] doubleArray82 = new double[] { (-1L), 0, 10L };
        secondMoment76.incrementAll(doubleArray82, 0, 0);
        double[] doubleArray88 = new double[] { 10, (byte) 100 };
        double double89 = secondMoment76.evaluate(doubleArray88);
        double double90 = variance75.evaluate(doubleArray88);
        double double93 = variance32.evaluate(doubleArray88, (int) (short) 1, 0);
        double double94 = variance21.evaluate(doubleArray88);
        double double95 = variance1.evaluate(doubleArray88);
        boolean boolean96 = variance1.isBiasCorrected();
        double double97 = variance1.getResult();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 37.0d + "'", double45 == 37.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.5d + "'", double58 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 74.0d + "'", double69 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4050.0d + "'", double89 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4050.0d + "'", double90 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 4050.0d + "'", double94 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 4050.0d + "'", double95 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double97));
    }

    @Test
    public void test11539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11539");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        secondMoment19.increment((double) (-1.0f));
        secondMoment19.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment25);
        long long36 = variance35.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double double48 = variance35.evaluate(doubleArray43, (double) (short) -1);
        double double49 = secondMoment19.evaluate(doubleArray43);
        double double50 = secondMoment2.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        double double52 = secondMoment2.getResult();
        secondMoment2.increment(688.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        double double56 = secondMoment2.getResult();
        double double57 = secondMoment2.getResult();
        secondMoment2.clear();
        secondMoment2.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 37.0d + "'", double48 == 37.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 74.0d + "'", double50 == 74.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 74.0d + "'", double52 == 74.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 351992.75d + "'", double56 == 351992.75d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 351992.75d + "'", double57 == 351992.75d);
    }

    @Test
    public void test11540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11540");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        long long11 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment(10.0d);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double17 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double19 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        secondMoment21.increment((double) '4');
        double double27 = secondMoment21.getResult();
        secondMoment21.increment((double) (short) 0);
        secondMoment21.clear();
        double double31 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.FirstMoment firstMoment32 = new org.apache.commons.math.stat.descriptive.moment.FirstMoment();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        secondMoment33.increment((double) (short) 0);
        double double38 = secondMoment33.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        secondMoment39.increment((double) (short) 0);
        double double44 = secondMoment39.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double double55 = secondMoment39.evaluate(doubleArray51);
        double[] doubleArray56 = new double[] {};
        secondMoment39.incrementAll(doubleArray56);
        secondMoment33.incrementAll(doubleArray56);
        secondMoment33.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment33);
        secondMoment33.increment(0.5d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        secondMoment64.incrementAll(doubleArray70, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment64);
        long long75 = variance74.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment76.increment(1.0d);
        double[] doubleArray82 = new double[] { (-1L), 0, 10L };
        secondMoment76.incrementAll(doubleArray82, 0, 0);
        double double87 = variance74.evaluate(doubleArray82, (double) (short) -1);
        double double90 = secondMoment33.evaluate(doubleArray82, (int) (byte) 1, (int) (byte) 1);
        firstMoment32.incrementAll(doubleArray82);
        secondMoment21.incrementAll(doubleArray82);
        variance20.incrementAll(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 200.0d + "'", double27 == 200.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5d + "'", double38 == 0.5d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.5d + "'", double44 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 74.0d + "'", double55 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 37.0d + "'", double87 == 37.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
    }

    @Test
    public void test11541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11541");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance19.increment((double) 0.0f);
        double double22 = variance19.getResult();
        double double23 = variance19.getResult();
        long long24 = variance19.getN();
        variance19.increment((double) 100);
        variance19.clear();
        boolean boolean28 = variance19.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test11542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11542");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance16.increment(0.0d);
        variance16.clear();
        double double20 = variance16.getResult();
        boolean boolean21 = variance16.isBiasCorrected();
        long long22 = variance16.getN();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2025.0d + "'", double20 == 2025.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
    }

    @Test
    public void test11543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11543");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        double double4 = variance1.getResult();
        double double5 = variance1.getResult();
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double double24 = secondMoment8.evaluate(doubleArray20);
        double[] doubleArray25 = new double[] {};
        secondMoment8.incrementAll(doubleArray25);
        double double29 = variance7.evaluate(doubleArray25, (int) (byte) 0, 0);
        long long30 = variance7.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        secondMoment31.increment((double) (short) 0);
        double double36 = secondMoment31.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double double47 = secondMoment31.evaluate(doubleArray43);
        variance7.incrementAll(doubleArray43);
        long long49 = variance7.getN();
        variance7.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        secondMoment52.increment((double) (short) 0);
        long long57 = secondMoment52.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        secondMoment59.increment((double) (short) 0);
        double double64 = secondMoment59.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        secondMoment65.increment((double) (short) 0);
        double double70 = secondMoment65.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment(1.0d);
        double[] doubleArray77 = new double[] { (-1L), 0, 10L };
        secondMoment71.incrementAll(doubleArray77, 0, 0);
        double double81 = secondMoment65.evaluate(doubleArray77);
        double[] doubleArray82 = new double[] {};
        secondMoment65.incrementAll(doubleArray82);
        secondMoment59.incrementAll(doubleArray82);
        secondMoment52.incrementAll(doubleArray82);
        double double86 = variance7.evaluate(doubleArray82);
        double double87 = variance1.evaluate(doubleArray82);
        variance1.increment(392.0d);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 74.0d + "'", double24 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.5d + "'", double36 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 74.0d + "'", double47 == 74.0d);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 3L + "'", long49 == 3L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 2L + "'", long57 == 2L);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.5d + "'", double64 == 0.5d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.5d + "'", double70 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 74.0d + "'", double81 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue(Double.isNaN(double87));
    }

    @Test
    public void test11544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11544");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(7434.8d);
        secondMoment0.increment(0.0d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
    }

    @Test
    public void test11545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11545");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        secondMoment3.increment((double) (short) 0);
        double double8 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double19 = secondMoment3.evaluate(doubleArray15);
        double[] doubleArray20 = new double[] {};
        secondMoment3.incrementAll(doubleArray20);
        double double22 = secondMoment0.evaluate(doubleArray20);
        secondMoment0.increment((double) 3L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment25);
        secondMoment25.increment((double) (short) -1);
        secondMoment25.clear();
        secondMoment25.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        secondMoment34.increment((double) (short) 0);
        boolean boolean39 = secondMoment25.equals((java.lang.Object) secondMoment34);
        secondMoment25.clear();
        long long41 = secondMoment25.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        secondMoment43.increment((double) (short) 0);
        long long48 = secondMoment43.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment50);
        secondMoment50.increment((double) (short) -1);
        secondMoment50.clear();
        secondMoment50.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        secondMoment59.increment((double) (short) 0);
        boolean boolean64 = secondMoment50.equals((java.lang.Object) secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double[] doubleArray80 = new double[] { 10, (byte) 100 };
        double double81 = secondMoment68.evaluate(doubleArray80);
        double double82 = secondMoment65.evaluate(doubleArray80);
        secondMoment50.incrementAll(doubleArray80);
        secondMoment43.incrementAll(doubleArray80, (int) (short) 0, 0);
        double double87 = secondMoment25.evaluate(doubleArray80);
        double double90 = secondMoment0.evaluate(doubleArray80, (int) (short) 1, (int) (byte) 0);
        long long91 = secondMoment0.getN();
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5d + "'", double8 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 74.0d + "'", double19 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 2L + "'", long48 == 2L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 4050.0d + "'", double87 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2.0d + "'", double90 == 2.0d);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 2L + "'", long91 == 2L);
    }

    @Test
    public void test11546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11546");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        double double7 = secondMoment1.getResult();
        secondMoment1.increment((double) (byte) 10);
        double double10 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double[] doubleArray24 = new double[] { 10, (byte) 100 };
        double double25 = secondMoment12.evaluate(doubleArray24);
        double double26 = secondMoment1.evaluate(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 60.666666666666664d + "'", double10 == 60.666666666666664d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4050.0d + "'", double26 == 4050.0d);
    }

    @Test
    public void test11547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11547");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long11 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double23 = variance10.evaluate(doubleArray18, (double) (short) -1);
        double double24 = variance10.getResult();
        variance10.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        secondMoment34.increment((double) (short) 0);
        double double39 = secondMoment34.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        secondMoment40.incrementAll(doubleArray46, 0, 0);
        double double50 = secondMoment34.evaluate(doubleArray46);
        double[] doubleArray51 = new double[] {};
        secondMoment34.incrementAll(doubleArray51);
        secondMoment28.incrementAll(doubleArray51);
        secondMoment28.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        double[] doubleArray63 = new double[] { (-1L), 0, 10L };
        secondMoment57.incrementAll(doubleArray63, 0, 0);
        double[] doubleArray69 = new double[] { 10, (byte) 100 };
        double double70 = secondMoment57.evaluate(doubleArray69);
        double double71 = variance56.evaluate(doubleArray69);
        double double72 = variance27.evaluate(doubleArray69);
        double double73 = variance10.evaluate(doubleArray69);
        variance10.clear();
        variance10.setBiasCorrected(false);
        long long77 = variance10.getN();
        variance10.increment(36.916666666666664d);
        variance10.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 37.0d + "'", double23 == 37.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.5d + "'", double39 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 74.0d + "'", double50 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4050.0d + "'", double70 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4050.0d + "'", double71 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 4050.0d + "'", double72 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 4050.0d + "'", double73 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 1L + "'", long77 == 1L);
    }

    @Test
    public void test11548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11548");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        double double6 = secondMoment0.getResult();
        double double7 = secondMoment0.getResult();
        secondMoment0.increment(0.5d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double[] doubleArray30 = new double[] { 10, (byte) 100 };
        double double31 = secondMoment18.evaluate(doubleArray30);
        double double32 = secondMoment18.getResult();
        long long33 = secondMoment18.getN();
        long long34 = secondMoment18.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        boolean boolean36 = secondMoment11.equals((java.lang.Object) secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        variance38.clear();
        variance38.clear();
        double double41 = variance38.getResult();
        variance38.clear();
        long long43 = variance38.getN();
        boolean boolean44 = secondMoment0.equals((java.lang.Object) long43);
        double double45 = secondMoment0.getResult();
        double double46 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double48 = variance47.getResult();
        boolean boolean49 = variance47.isBiasCorrected();
        variance47.clear();
        variance47.clear();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4050.0d + "'", double31 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4050.0d + "'", double32 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 2L + "'", long33 == 2L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 2L + "'", long34 == 2L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.5d + "'", double41 == 0.5d);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 2L + "'", long43 == 2L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5d + "'", double45 == 0.5d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.5d + "'", double46 == 0.5d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.25d + "'", double48 == 0.25d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test11549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11549");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        secondMoment12.increment((double) (short) 0);
        double double17 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double28 = secondMoment12.evaluate(doubleArray24);
        double[] doubleArray29 = new double[] {};
        secondMoment12.incrementAll(doubleArray29);
        secondMoment6.incrementAll(doubleArray29);
        secondMoment6.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double[] doubleArray47 = new double[] { 10, (byte) 100 };
        double double48 = secondMoment35.evaluate(doubleArray47);
        double double49 = variance34.evaluate(doubleArray47);
        double double50 = secondMoment1.evaluate(doubleArray47);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        secondMoment51.increment((double) (short) 0);
        double double56 = secondMoment51.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        secondMoment57.increment((double) (short) 0);
        double double62 = secondMoment57.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        double double73 = secondMoment57.evaluate(doubleArray69);
        double[] doubleArray74 = new double[] {};
        secondMoment57.incrementAll(doubleArray74);
        secondMoment51.incrementAll(doubleArray74);
        double double77 = secondMoment1.evaluate(doubleArray74);
        long long78 = secondMoment1.getN();
        secondMoment1.increment((double) (byte) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        boolean boolean82 = variance81.isBiasCorrected();
        long long83 = variance81.getN();
        double double84 = variance81.getResult();
        variance81.increment(25.666666666666668d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.5d + "'", double17 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 74.0d + "'", double28 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.5d + "'", double56 == 0.5d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.5d + "'", double62 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 74.0d + "'", double73 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4050.0d + "'", double77 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 2L + "'", long78 == 2L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 3L + "'", long83 == 3L);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2997.0d + "'", double84 == 2997.0d);
    }

    @Test
    public void test11550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11550");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        double double4 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        secondMoment5.incrementAll(doubleArray11, 0, 0);
        double[] doubleArray17 = new double[] { 10, (byte) 100 };
        double double18 = secondMoment5.evaluate(doubleArray17);
        double double19 = secondMoment0.evaluate(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        double double32 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double double43 = secondMoment27.evaluate(doubleArray39);
        double[] doubleArray44 = new double[] {};
        secondMoment27.incrementAll(doubleArray44);
        secondMoment21.incrementAll(doubleArray44);
        secondMoment21.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double[] doubleArray62 = new double[] { 10, (byte) 100 };
        double double63 = secondMoment50.evaluate(doubleArray62);
        double double64 = variance49.evaluate(doubleArray62);
        double double65 = variance20.evaluate(doubleArray62);
        double double66 = secondMoment0.evaluate(doubleArray62);
        secondMoment0.clear();
        double double68 = secondMoment0.getResult();
        long long69 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4050.0d + "'", double18 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4050.0d + "'", double19 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5d + "'", double32 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4050.0d + "'", double63 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4050.0d + "'", double64 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4050.0d + "'", double65 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4050.0d + "'", double66 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
    }

    @Test
    public void test11551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11551");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        variance9.incrementAll(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment((double) ' ');
        secondMoment21.increment((double) '4');
        long long26 = secondMoment21.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        secondMoment21.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance30.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double[] doubleArray46 = new double[] { 10, (byte) 100 };
        double double47 = secondMoment34.evaluate(doubleArray46);
        double double48 = secondMoment34.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment34);
        long long50 = secondMoment34.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        double double52 = secondMoment34.getResult();
        secondMoment34.clear();
        secondMoment34.increment(Double.NaN);
        secondMoment34.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long60 = variance59.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        secondMoment61.increment((double) (short) 0);
        double double66 = secondMoment61.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        double[] doubleArray73 = new double[] { (-1L), 0, 10L };
        secondMoment67.incrementAll(doubleArray73, 0, 0);
        double double77 = secondMoment61.evaluate(doubleArray73);
        variance59.incrementAll(doubleArray73);
        secondMoment34.incrementAll(doubleArray73);
        variance30.incrementAll(doubleArray73);
        double double83 = secondMoment21.evaluate(doubleArray73, 0, (int) (byte) 0);
        double double86 = variance9.evaluate(doubleArray73, 1, (int) (byte) 1);
        double double87 = variance9.getResult();
        variance9.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 2L + "'", long50 == 2L);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4050.0d + "'", double52 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.5d + "'", double66 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 74.0d + "'", double77 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
    }

    @Test
    public void test11552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11552");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = variance19.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        long long41 = secondMoment31.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        secondMoment42.incrementAll(doubleArray48, 0, 0);
        secondMoment31.incrementAll(doubleArray48, 0, (int) (short) 1);
        double double56 = variance19.evaluate(doubleArray48, (double) 100.0f);
        variance19.increment(2413.8518518518517d);
        variance19.clear();
        variance19.clear();
        java.lang.Class<?> wildcardClass61 = variance19.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test11553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11553");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        secondMoment21.incrementAll(doubleArray27, 0, 0);
        double[] doubleArray33 = new double[] { 10, (byte) 100 };
        double double34 = secondMoment21.evaluate(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment36);
        secondMoment36.increment((double) (short) -1);
        secondMoment36.clear();
        secondMoment36.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment36);
        boolean boolean46 = secondMoment21.equals((java.lang.Object) secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        secondMoment49.increment((double) (short) 0);
        double double54 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double double65 = secondMoment49.evaluate(doubleArray61);
        double[] doubleArray66 = new double[] {};
        secondMoment49.incrementAll(doubleArray66);
        double double70 = variance48.evaluate(doubleArray66, (int) (byte) 0, 0);
        long long71 = variance48.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        secondMoment72.increment((double) (short) 0);
        double double77 = secondMoment72.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment78.increment(1.0d);
        double[] doubleArray84 = new double[] { (-1L), 0, 10L };
        secondMoment78.incrementAll(doubleArray84, 0, 0);
        double double88 = secondMoment72.evaluate(doubleArray84);
        variance48.incrementAll(doubleArray84);
        double double91 = variance47.evaluate(doubleArray84, (double) '#');
        double double94 = variance19.evaluate(doubleArray84, 0, (int) (byte) 1);
        variance19.clear();
        boolean boolean96 = variance19.isBiasCorrected();
        variance19.increment(3.1992280221592915E12d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4050.0d + "'", double34 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5d + "'", double54 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.5d + "'", double77 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 24.666666666666668d + "'", double91 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test11554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11554");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        long long8 = secondMoment2.getN();
        double double9 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        double double15 = secondMoment12.getResult();
        double double16 = secondMoment12.getResult();
        boolean boolean17 = variance11.equals((java.lang.Object) secondMoment12);
        variance11.increment(4034.0d);
        long long20 = variance11.getN();
        variance11.increment(9696140.055555556d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        secondMoment24.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        long long30 = variance29.getN();
        double double31 = variance29.getResult();
        boolean boolean32 = variance29.isBiasCorrected();
        boolean boolean33 = variance29.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment34);
        secondMoment34.increment((double) (short) -1);
        secondMoment34.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        secondMoment41.incrementAll(doubleArray47, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment((double) ' ');
        secondMoment52.increment((double) (-1.0f));
        secondMoment52.clear();
        boolean boolean58 = variance51.equals((java.lang.Object) secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment59);
        long long70 = variance69.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment(1.0d);
        double[] doubleArray77 = new double[] { (-1L), 0, 10L };
        secondMoment71.incrementAll(doubleArray77, 0, 0);
        double double82 = variance69.evaluate(doubleArray77, (double) (short) -1);
        boolean boolean83 = variance51.equals((java.lang.Object) doubleArray77);
        secondMoment34.incrementAll(doubleArray77);
        variance29.incrementAll(doubleArray77);
        double double86 = variance11.evaluate(doubleArray77);
        variance11.increment(7.0368744177664E13d);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 544.5d + "'", double9 == 544.5d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2L + "'", long20 == 2L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 37.0d + "'", double82 == 37.0d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 24.666666666666668d + "'", double86 == 24.666666666666668d);
    }

    @Test
    public void test11555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11555");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) '4');
        double double7 = secondMoment1.getResult();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment((double) (short) -1);
        long long16 = secondMoment10.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment10);
        secondMoment10.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        secondMoment21.incrementAll(doubleArray27, 0, 0);
        double[] doubleArray33 = new double[] { 10, (byte) 100 };
        double double34 = secondMoment21.evaluate(doubleArray33);
        double double35 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment21);
        long long37 = secondMoment21.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        secondMoment39.increment((double) (short) -1);
        secondMoment39.clear();
        secondMoment39.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        secondMoment49.incrementAll(doubleArray55, 0, 0);
        variance48.incrementAll(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment60);
        secondMoment60.increment((double) (short) -1);
        secondMoment60.clear();
        secondMoment60.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        secondMoment70.increment((double) (short) 0);
        double double75 = secondMoment70.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment76.increment(1.0d);
        double[] doubleArray82 = new double[] { (-1L), 0, 10L };
        secondMoment76.incrementAll(doubleArray82, 0, 0);
        double double86 = secondMoment70.evaluate(doubleArray82);
        double double87 = secondMoment60.evaluate(doubleArray82);
        double double88 = variance48.evaluate(doubleArray82);
        variance38.incrementAll(doubleArray82);
        secondMoment10.incrementAll(doubleArray82);
        double double93 = secondMoment1.evaluate(doubleArray82, (int) (byte) 0, (int) (short) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance94 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        boolean boolean95 = variance94.isBiasCorrected();
        variance94.clear();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 200.0d + "'", double8 == 200.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4050.0d + "'", double34 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4050.0d + "'", double35 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 2L + "'", long37 == 2L);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.5d + "'", double75 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 74.0d + "'", double86 == 74.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 74.0d + "'", double87 == 74.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 37.0d + "'", double88 == 37.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test11556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11556");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double10 = secondMoment0.getResult();
        long long11 = secondMoment0.getN();
        secondMoment0.increment(7881.333333333333d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(3.349532256E7d);
        double double17 = secondMoment0.getResult();
        long long18 = secondMoment0.getN();
        double double19 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 7.477818051411046E14d + "'", double17 == 7.477818051411046E14d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 3L + "'", long18 == 3L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.477818051411046E14d + "'", double19 == 7.477818051411046E14d);
    }

    @Test
    public void test11557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11557");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) '4');
        long long5 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance9.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        double[] doubleArray25 = new double[] { 10, (byte) 100 };
        double double26 = secondMoment13.evaluate(doubleArray25);
        double double27 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment13);
        long long29 = secondMoment13.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        double double31 = secondMoment13.getResult();
        secondMoment13.clear();
        secondMoment13.increment(Double.NaN);
        secondMoment13.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long39 = variance38.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        secondMoment40.increment((double) (short) 0);
        double double45 = secondMoment40.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double double56 = secondMoment40.evaluate(doubleArray52);
        variance38.incrementAll(doubleArray52);
        secondMoment13.incrementAll(doubleArray52);
        variance9.incrementAll(doubleArray52);
        double double62 = secondMoment0.evaluate(doubleArray52, 0, (int) (byte) 0);
        double double63 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4050.0d + "'", double26 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4050.0d + "'", double27 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 2L + "'", long29 == 2L);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4050.0d + "'", double31 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5d + "'", double45 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 74.0d + "'", double56 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
    }

    @Test
    public void test11558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11558");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        long long8 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.increment(5226.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        variance14.clear();
        variance14.increment(32.0d);
        variance14.clear();
        variance14.clear();
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
    }

    @Test
    public void test11559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11559");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        double double6 = secondMoment0.getResult();
        secondMoment0.increment((double) (byte) 10);
        secondMoment0.clear();
        long long10 = secondMoment0.getN();
        secondMoment0.increment(1.8756123185185187E7d);
        long long13 = secondMoment0.getN();
        double double14 = secondMoment0.getResult();
        secondMoment0.increment(28.666666666666664d);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test11560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11560");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        double double34 = variance10.evaluate(doubleArray31);
        variance10.increment(37.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        secondMoment39.incrementAll(doubleArray45, 0, 0);
        double[] doubleArray51 = new double[] { 10, (byte) 100 };
        double double52 = secondMoment39.evaluate(doubleArray51);
        double double53 = secondMoment39.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment39);
        long long55 = secondMoment39.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        boolean boolean57 = variance56.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment58);
        secondMoment58.increment((double) (short) -1);
        secondMoment58.clear();
        secondMoment58.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment58);
        long long68 = variance67.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        secondMoment72.increment((double) (short) 0);
        double double77 = secondMoment72.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment78.increment(1.0d);
        double[] doubleArray84 = new double[] { (-1L), 0, 10L };
        secondMoment78.incrementAll(doubleArray84, 0, 0);
        double double88 = secondMoment72.evaluate(doubleArray84);
        double[] doubleArray89 = new double[] {};
        secondMoment72.incrementAll(doubleArray89);
        double double91 = secondMoment69.evaluate(doubleArray89);
        double double92 = variance67.evaluate(doubleArray89);
        double double94 = variance56.evaluate(doubleArray89, (double) 1);
        variance10.incrementAll(doubleArray89);
        variance10.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4050.0d + "'", double52 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4050.0d + "'", double53 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 2L + "'", long55 == 2L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 1L + "'", long68 == 1L);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.5d + "'", double77 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertTrue(Double.isNaN(double94));
    }

    @Test
    public void test11561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11561");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        long long16 = secondMoment2.getN();
        secondMoment2.clear();
        double double18 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.increment(0.0d);
        secondMoment2.increment(2700.0d);
        secondMoment2.increment(2568.083333333333d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test11562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11562");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        secondMoment3.increment((double) (short) 0);
        double double8 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double19 = secondMoment3.evaluate(doubleArray15);
        double[] doubleArray20 = new double[] {};
        secondMoment3.incrementAll(doubleArray20);
        double double22 = secondMoment0.evaluate(doubleArray20);
        secondMoment0.increment((double) 3L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double[] doubleArray45 = new double[] {};
        secondMoment28.incrementAll(doubleArray45);
        double double47 = secondMoment25.evaluate(doubleArray45);
        secondMoment25.increment((double) 3L);
        secondMoment25.increment(24.666666666666668d);
        boolean boolean52 = secondMoment0.equals((java.lang.Object) secondMoment25);
        double double53 = secondMoment0.getResult();
        long long54 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5d + "'", double8 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 74.0d + "'", double19 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2.0d + "'", double53 == 2.0d);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 2L + "'", long54 == 2L);
    }

    @Test
    public void test11563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11563");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        double double23 = secondMoment7.evaluate(doubleArray19);
        double[] doubleArray24 = new double[] {};
        secondMoment7.incrementAll(doubleArray24);
        secondMoment1.incrementAll(doubleArray24);
        secondMoment1.increment((double) (byte) 10);
        secondMoment1.clear();
        double double30 = secondMoment1.getResult();
        secondMoment1.clear();
        double double32 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance33.clear();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 74.0d + "'", double23 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test11564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11564");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance8.increment((double) (short) 0);
        variance8.clear();
        variance8.increment((double) 1L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double double24 = variance8.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        secondMoment25.increment((double) (short) 0);
        double double30 = secondMoment25.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment((double) ' ');
        double double34 = secondMoment31.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment31);
        boolean boolean36 = secondMoment25.equals((java.lang.Object) variance35);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        secondMoment37.increment((double) (short) -1);
        secondMoment37.clear();
        secondMoment37.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        long long47 = variance46.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        secondMoment51.increment((double) (short) 0);
        double double56 = secondMoment51.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        double[] doubleArray63 = new double[] { (-1L), 0, 10L };
        secondMoment57.incrementAll(doubleArray63, 0, 0);
        double double67 = secondMoment51.evaluate(doubleArray63);
        double[] doubleArray68 = new double[] {};
        secondMoment51.incrementAll(doubleArray68);
        double double70 = secondMoment48.evaluate(doubleArray68);
        double double71 = variance46.evaluate(doubleArray68);
        double double72 = secondMoment25.evaluate(doubleArray68);
        double double73 = variance8.evaluate(doubleArray68);
        double[] doubleArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double75 = variance8.evaluate(doubleArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 24.666666666666668d + "'", double24 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.5d + "'", double30 == 0.5d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.5d + "'", double56 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 74.0d + "'", double67 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5d + "'", double72 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
    }

    @Test
    public void test11565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11565");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        long long16 = secondMoment2.getN();
        double double17 = secondMoment2.getResult();
        secondMoment2.increment((double) ' ');
        double double20 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4402.666666666667d + "'", double20 == 4402.666666666667d);
    }

    @Test
    public void test11566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11566");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        long long8 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.clear();
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
    }

    @Test
    public void test11567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11567");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        secondMoment2.increment((double) (short) 0);
        double double7 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        double double10 = secondMoment2.getResult();
        secondMoment2.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        variance13.increment(2.5760961320000008E8d);
        double double16 = variance13.getResult();
        variance13.clear();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test11568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11568");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        long long11 = variance9.getN();
        boolean boolean12 = variance9.isBiasCorrected();
        variance9.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment14);
        secondMoment14.increment((double) (short) -1);
        secondMoment14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment14);
        double double22 = secondMoment14.getResult();
        boolean boolean23 = variance9.equals((java.lang.Object) secondMoment14);
        secondMoment14.increment(37.0d);
        long long26 = secondMoment14.getN();
        long long27 = secondMoment14.getN();
        secondMoment14.increment(2312.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment31);
        variance35.setBiasCorrected(false);
        boolean boolean38 = variance35.isBiasCorrected();
        variance35.increment((double) 2L);
        variance35.increment((double) (byte) 1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment44);
        secondMoment44.increment((double) (short) -1);
        long long50 = secondMoment44.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment44);
        double double53 = secondMoment44.getResult();
        secondMoment44.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double[] doubleArray67 = new double[] { 10, (byte) 100 };
        double double68 = secondMoment55.evaluate(doubleArray67);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        secondMoment70.increment((double) (short) 0);
        double double75 = secondMoment70.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment76.increment(1.0d);
        double[] doubleArray82 = new double[] { (-1L), 0, 10L };
        secondMoment76.incrementAll(doubleArray82, 0, 0);
        double double86 = secondMoment70.evaluate(doubleArray82);
        double[] doubleArray87 = new double[] {};
        secondMoment70.incrementAll(doubleArray87);
        double double91 = variance69.evaluate(doubleArray87, (int) (byte) 0, 0);
        double double92 = secondMoment55.evaluate(doubleArray87);
        secondMoment44.incrementAll(doubleArray87);
        double double94 = variance35.evaluate(doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            secondMoment14.incrementAll(doubleArray87, (int) (short) 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 2L + "'", long50 == 2L);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 544.5d + "'", double53 == 544.5d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4050.0d + "'", double68 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.5d + "'", double75 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 74.0d + "'", double86 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 4050.0d + "'", double92 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double94));
    }

    @Test
    public void test11569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11569");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        double double15 = secondMoment0.getResult();
        secondMoment0.increment((double) ' ');
        double double18 = secondMoment0.getResult();
        double double19 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment23);
        secondMoment23.increment((double) (short) -1);
        secondMoment23.clear();
        secondMoment23.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment23);
        long long33 = variance32.getN();
        variance32.increment(200.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        secondMoment37.increment((double) (short) -1);
        long long43 = secondMoment37.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double double56 = variance44.evaluate(doubleArray51, (double) 1L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        double[] doubleArray63 = new double[] { (-1L), 0, 10L };
        secondMoment57.incrementAll(doubleArray63, 0, 0);
        double[] doubleArray69 = new double[] { 10, (byte) 100 };
        double double70 = secondMoment57.evaluate(doubleArray69);
        double double72 = variance44.evaluate(doubleArray69, 0.0d);
        double double73 = variance32.evaluate(doubleArray69);
        double double74 = secondMoment0.evaluate(doubleArray69);
        secondMoment0.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4402.666666666667d + "'", double18 == 4402.666666666667d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4402.666666666667d + "'", double19 == 4402.666666666667d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 2L + "'", long43 == 2L);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 24.666666666666668d + "'", double56 == 24.666666666666668d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4050.0d + "'", double70 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2025.0d + "'", double72 == 2025.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 4050.0d + "'", double73 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 4050.0d + "'", double74 == 4050.0d);
    }

    @Test
    public void test11570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11570");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        boolean boolean14 = secondMoment0.equals((java.lang.Object) secondMoment9);
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.increment((double) '4');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        secondMoment19.increment((double) (short) -1);
        secondMoment19.clear();
        secondMoment19.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        long long29 = variance28.getN();
        variance28.increment(200.0d);
        variance28.increment(2025.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        secondMoment48.increment((double) (short) 0);
        double double53 = secondMoment48.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        double[] doubleArray60 = new double[] { (-1L), 0, 10L };
        secondMoment54.incrementAll(doubleArray60, 0, 0);
        double double64 = secondMoment48.evaluate(doubleArray60);
        double[] doubleArray65 = new double[] {};
        secondMoment48.incrementAll(doubleArray65);
        double double67 = secondMoment45.evaluate(doubleArray65);
        double double68 = variance44.evaluate(doubleArray65);
        double double69 = variance28.evaluate(doubleArray65);
        double double70 = variance28.getResult();
        variance28.increment(0.0d);
        boolean boolean73 = secondMoment0.equals((java.lang.Object) variance28);
        double double74 = variance28.getResult();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.5d + "'", double53 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 74.0d + "'", double64 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
    }

    @Test
    public void test11571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11571");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance6.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        secondMoment8.increment((double) (short) -1);
        secondMoment8.clear();
        secondMoment8.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double[] doubleArray31 = new double[] { 10, (byte) 100 };
        double double32 = secondMoment19.evaluate(doubleArray31);
        double double33 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        secondMoment36.increment((double) (short) 0);
        double double41 = secondMoment36.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        secondMoment42.incrementAll(doubleArray48, 0, 0);
        double double52 = secondMoment36.evaluate(doubleArray48);
        double[] doubleArray53 = new double[] {};
        secondMoment36.incrementAll(doubleArray53);
        double double57 = variance35.evaluate(doubleArray53, (int) (byte) 0, 0);
        double double58 = variance34.evaluate(doubleArray53);
        double double59 = variance17.evaluate(doubleArray53);
        long long60 = variance17.getN();
        variance17.increment((double) 5L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long65 = variance64.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        secondMoment66.increment((double) (short) 0);
        double double71 = secondMoment66.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        double[] doubleArray78 = new double[] { (-1L), 0, 10L };
        secondMoment72.incrementAll(doubleArray78, 0, 0);
        double double82 = secondMoment66.evaluate(doubleArray78);
        variance64.incrementAll(doubleArray78);
        double double84 = variance17.evaluate(doubleArray78);
        double double85 = variance6.evaluate(doubleArray78);
        boolean boolean86 = variance6.isBiasCorrected();
        boolean boolean87 = variance6.isBiasCorrected();
        long long88 = variance6.getN();
        variance6.setBiasCorrected(true);
        long long91 = variance6.getN();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4050.0d + "'", double32 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4050.0d + "'", double33 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.5d + "'", double41 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 74.0d + "'", double52 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.5d + "'", double71 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 74.0d + "'", double82 == 74.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 37.0d + "'", double84 == 37.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 37.0d + "'", double85 == 37.0d);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
    }

    @Test
    public void test11572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11572");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(10.0d);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment(2312.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        long long27 = secondMoment17.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        secondMoment17.increment(10.0d);
        double double31 = secondMoment17.getResult();
        secondMoment17.increment(5304.666666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double[] doubleArray48 = new double[] { 10, (byte) 100 };
        double double49 = secondMoment36.evaluate(doubleArray48);
        double double50 = secondMoment36.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment36);
        secondMoment36.increment(24.666666666666668d);
        double double54 = secondMoment36.getResult();
        double double55 = secondMoment36.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment36);
        boolean boolean58 = variance57.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        secondMoment59.increment((double) (short) 0);
        double double64 = secondMoment59.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        double[] doubleArray71 = new double[] { (-1L), 0, 10L };
        secondMoment65.incrementAll(doubleArray71, 0, 0);
        double double75 = secondMoment59.evaluate(doubleArray71);
        variance57.incrementAll(doubleArray71);
        double double77 = variance34.evaluate(doubleArray71);
        double double78 = secondMoment0.evaluate(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 40.5d + "'", double14 == 40.5d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 40.5d + "'", double31 == 40.5d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4663.407407407407d + "'", double54 == 4663.407407407407d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4663.407407407407d + "'", double55 == 4663.407407407407d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.5d + "'", double64 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 74.0d + "'", double75 == 74.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 37.0d + "'", double77 == 37.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 74.0d + "'", double78 == 74.0d);
    }

    @Test
    public void test11573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11573");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        double double15 = secondMoment0.getResult();
        secondMoment0.increment((double) ' ');
        double double18 = secondMoment0.getResult();
        secondMoment0.increment((double) 1.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(1.3697333860957928E15d);
        double double24 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4402.666666666667d + "'", double18 == 4402.666666666667d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.5009356391882784E30d + "'", double24 == 1.5009356391882784E30d);
    }

    @Test
    public void test11574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11574");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        secondMoment5.increment((double) (short) 0);
        double double10 = secondMoment5.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        double double27 = secondMoment11.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] {};
        secondMoment11.incrementAll(doubleArray28);
        secondMoment5.incrementAll(doubleArray28);
        secondMoment5.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double[] doubleArray46 = new double[] { 10, (byte) 100 };
        double double47 = secondMoment34.evaluate(doubleArray46);
        double double48 = variance33.evaluate(doubleArray46);
        double double49 = secondMoment0.evaluate(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        secondMoment50.increment((double) (short) 0);
        double double55 = secondMoment50.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        secondMoment56.increment((double) (short) 0);
        double double61 = secondMoment56.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        secondMoment62.incrementAll(doubleArray68, 0, 0);
        double double72 = secondMoment56.evaluate(doubleArray68);
        double[] doubleArray73 = new double[] {};
        secondMoment56.incrementAll(doubleArray73);
        secondMoment50.incrementAll(doubleArray73);
        double double76 = secondMoment0.evaluate(doubleArray73);
        long long77 = secondMoment0.getN();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.clear();
        secondMoment0.increment(1067.1666666666667d);
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.5d + "'", double10 == 0.5d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5d + "'", double55 == 0.5d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5d + "'", double61 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 74.0d + "'", double72 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4050.0d + "'", double76 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 2L + "'", long77 == 2L);
    }

    @Test
    public void test11575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11575");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double20 = variance8.evaluate(doubleArray15, (double) 1L);
        variance8.clear();
        variance8.clear();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment((double) ' ');
        double double27 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        double double29 = variance28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment((double) ' ');
        secondMoment30.increment((double) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double[] doubleArray48 = new double[] { 10, (byte) 100 };
        double double49 = secondMoment36.evaluate(doubleArray48);
        double double50 = secondMoment36.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment36);
        long long52 = secondMoment36.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment((double) ' ');
        secondMoment53.increment((double) (-1.0f));
        secondMoment53.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment59);
        long long70 = variance69.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment(1.0d);
        double[] doubleArray77 = new double[] { (-1L), 0, 10L };
        secondMoment71.incrementAll(doubleArray77, 0, 0);
        double double82 = variance69.evaluate(doubleArray77, (double) (short) -1);
        double double83 = secondMoment53.evaluate(doubleArray77);
        double double84 = secondMoment36.evaluate(doubleArray77);
        secondMoment30.incrementAll(doubleArray77);
        variance28.incrementAll(doubleArray77);
        double double87 = variance8.evaluate(doubleArray77);
        java.lang.Class<?> wildcardClass88 = variance8.getClass();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 24.666666666666668d + "'", double20 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 2L + "'", long52 == 2L);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 37.0d + "'", double82 == 37.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 74.0d + "'", double83 == 74.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 74.0d + "'", double84 == 74.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 24.666666666666668d + "'", double87 == 24.666666666666668d);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test11576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11576");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.clear();
        secondMoment2.clear();
        double double10 = secondMoment2.getResult();
        long long11 = secondMoment2.getN();
        double double12 = secondMoment2.getResult();
        secondMoment2.increment(3.2809195541666664E7d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double[] doubleArray32 = new double[] { 10, (byte) 100 };
        double double33 = secondMoment20.evaluate(doubleArray32);
        double double34 = secondMoment20.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment20);
        long long36 = secondMoment20.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        double double38 = secondMoment20.getResult();
        secondMoment20.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment20);
        secondMoment20.increment(4680.28125d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment((double) ' ');
        secondMoment43.increment((double) '4');
        long long48 = secondMoment43.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment43);
        double double50 = variance49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double[] doubleArray63 = new double[] { 10, (byte) 100 };
        double double64 = secondMoment51.evaluate(doubleArray63);
        long long65 = secondMoment51.getN();
        secondMoment51.clear();
        double double67 = secondMoment51.getResult();
        secondMoment51.increment((double) 1.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment72);
        secondMoment72.increment((double) (short) -1);
        long long78 = secondMoment72.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment80.increment(1.0d);
        double[] doubleArray86 = new double[] { (-1L), 0, 10L };
        secondMoment80.incrementAll(doubleArray86, 0, 0);
        double double91 = variance79.evaluate(doubleArray86, (double) 1L);
        double double92 = secondMoment51.evaluate(doubleArray86);
        double double93 = variance49.evaluate(doubleArray86);
        double double96 = secondMoment20.evaluate(doubleArray86, 1, 0);
        secondMoment2.incrementAll(doubleArray86);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4050.0d + "'", double33 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4050.0d + "'", double34 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 2L + "'", long36 == 2L);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4050.0d + "'", double38 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 2L + "'", long48 == 2L);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 200.0d + "'", double50 == 200.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4050.0d + "'", double64 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 2L + "'", long65 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 2L + "'", long78 == 2L);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 24.666666666666668d + "'", double91 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 74.0d + "'", double92 == 74.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 37.0d + "'", double93 == 37.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
    }

    @Test
    public void test11577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11577");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) 0);
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double13 = variance12.getResult();
        variance12.increment(77.2d);
        variance12.clear();
        double double17 = variance12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        secondMoment19.increment((double) (short) -1);
        secondMoment19.clear();
        secondMoment19.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        secondMoment29.increment((double) (short) 0);
        double double34 = secondMoment29.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double double45 = secondMoment29.evaluate(doubleArray41);
        double double46 = secondMoment19.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment19);
        long long48 = variance47.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment((double) ' ');
        secondMoment49.increment((double) (-1.0f));
        secondMoment49.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment55);
        long long66 = variance65.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        double[] doubleArray73 = new double[] { (-1L), 0, 10L };
        secondMoment67.incrementAll(doubleArray73, 0, 0);
        double double78 = variance65.evaluate(doubleArray73, (double) (short) -1);
        double double79 = secondMoment49.evaluate(doubleArray73);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment49);
        double double81 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment83 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment83.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment83);
        double[] doubleArray92 = new double[] { 0L, (byte) 1, 6140.666666666667d, 544.5d, (byte) 100 };
        double double93 = secondMoment83.evaluate(doubleArray92);
        double double94 = variance82.evaluate(doubleArray92);
        variance47.incrementAll(doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double double99 = variance12.evaluate(doubleArray92, (double) (byte) 0, (int) (byte) 100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5d + "'", double34 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 74.0d + "'", double46 == 74.0d);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 3L + "'", long48 == 3L);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 1L + "'", long66 == 1L);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 37.0d + "'", double78 == 37.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 74.0d + "'", double79 == 74.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 74.0d + "'", double81 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[0.0, 1.0, 6140.666666666667, 544.5, 100.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2.880385675555556E7d + "'", double93 == 2.880385675555556E7d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 7200964.18888889d + "'", double94 == 7200964.18888889d);
    }

    @Test
    public void test11578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11578");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        double double34 = variance10.evaluate(doubleArray31);
        long long35 = variance10.getN();
        double double36 = variance10.getResult();
        double double37 = variance10.getResult();
        double double38 = variance10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment40);
        variance44.setBiasCorrected(true);
        double double47 = variance44.getResult();
        boolean boolean48 = variance44.isBiasCorrected();
        variance44.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double[] doubleArray63 = new double[] { 10, (byte) 100 };
        double double64 = secondMoment51.evaluate(doubleArray63);
        variance44.incrementAll(doubleArray63);
        double double66 = variance10.evaluate(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4050.0d + "'", double64 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4050.0d + "'", double66 == 4050.0d);
    }

    @Test
    public void test11579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11579");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.clear();
        long long8 = secondMoment0.getN();
        long long9 = secondMoment0.getN();
        secondMoment0.increment(4.129541834901621E10d);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test11580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11580");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.clear();
        boolean boolean4 = variance2.isBiasCorrected();
        variance2.clear();
        boolean boolean6 = variance2.isBiasCorrected();
        // The following exception was thrown during execution in test generation
        try {
            double double7 = variance2.getResult();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test11581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11581");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        secondMoment0.clear();
        secondMoment0.clear();
        double double16 = secondMoment0.getResult();
        secondMoment0.clear();
        double double18 = secondMoment0.getResult();
        secondMoment0.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test11582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11582");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        secondMoment3.increment((double) (short) 0);
        secondMoment3.increment(74.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        long long11 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        double double13 = secondMoment3.getResult();
        secondMoment3.increment(0.0d);
        secondMoment3.increment(7070.8d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        secondMoment3.increment(4.242194853333334E7d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 3L + "'", long11 == 3L);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 3602.0d + "'", double13 == 3602.0d);
    }

    @Test
    public void test11583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11583");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        long long16 = secondMoment2.getN();
        secondMoment2.clear();
        double double18 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        variance21.increment((double) 0);
        long long24 = variance21.getN();
        variance21.increment(2.880385675555556E7d);
        boolean boolean27 = variance21.isBiasCorrected();
        double double28 = variance21.getResult();
        boolean boolean29 = variance21.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test11584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11584");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance16.increment(0.0d);
        long long19 = variance16.getN();
        variance16.increment((double) (byte) -1);
        variance16.clear();
        boolean boolean23 = variance16.isBiasCorrected();
        double double24 = variance16.getResult();
        variance16.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2025.0d + "'", double24 == 2025.0d);
    }

    @Test
    public void test11585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11585");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.increment(7881.333333333333d);
        secondMoment0.increment(27.6875d);
        secondMoment0.increment(684.6666666666666d);
    }

    @Test
    public void test11586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11586");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        secondMoment1.clear();
        double double9 = secondMoment1.getResult();
        long long10 = secondMoment1.getN();
        double double11 = secondMoment1.getResult();
        secondMoment1.clear();
        double double13 = secondMoment1.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test11587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11587");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double[] doubleArray9 = new double[] { 0L, (byte) 1, 6140.666666666667d, 544.5d, (byte) 100 };
        double double10 = secondMoment0.evaluate(doubleArray9);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        secondMoment11.increment((double) (short) -1);
        secondMoment11.clear();
        secondMoment11.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        boolean boolean21 = secondMoment0.equals((java.lang.Object) secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) 1);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 1.0, 6140.666666666667, 544.5, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2.880385675555556E7d + "'", double10 == 2.880385675555556E7d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test11588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11588");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.clear();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment((double) ' ');
        double double9 = secondMoment6.getResult();
        double double10 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        double double25 = secondMoment6.evaluate(doubleArray23);
        double double26 = secondMoment0.evaluate(doubleArray23);
        long long27 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment29);
        secondMoment29.increment((double) (short) -1);
        long long35 = secondMoment29.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        secondMoment39.incrementAll(doubleArray45, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment((double) ' ');
        secondMoment50.increment((double) (-1.0f));
        secondMoment50.clear();
        boolean boolean56 = variance49.equals((java.lang.Object) secondMoment50);
        long long57 = secondMoment50.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment50);
        variance58.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        secondMoment62.increment((double) (short) 0);
        double double67 = secondMoment62.getResult();
        secondMoment62.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment62);
        double double70 = secondMoment62.getResult();
        secondMoment62.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment74);
        secondMoment74.increment((double) (short) -1);
        secondMoment74.clear();
        secondMoment74.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment84 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment84.increment(1.0d);
        double[] doubleArray90 = new double[] { (-1L), 0, 10L };
        secondMoment84.incrementAll(doubleArray90, 0, 0);
        variance83.incrementAll(doubleArray90);
        variance73.incrementAll(doubleArray90);
        double double96 = secondMoment62.evaluate(doubleArray90);
        double double97 = variance58.evaluate(doubleArray90);
        double double98 = secondMoment29.evaluate(doubleArray90);
        secondMoment0.incrementAll(doubleArray90);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4050.0d + "'", double26 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 2L + "'", long27 == 2L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 2L + "'", long35 == 2L);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.5d + "'", double67 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 74.0d + "'", double96 == 74.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 37.0d + "'", double97 == 37.0d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 74.0d + "'", double98 == 74.0d);
    }

    @Test
    public void test11589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11589");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        variance27.incrementAll(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        secondMoment39.increment((double) (short) -1);
        secondMoment39.clear();
        secondMoment39.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        secondMoment49.increment((double) (short) 0);
        double double54 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double double65 = secondMoment49.evaluate(doubleArray61);
        double double66 = secondMoment39.evaluate(doubleArray61);
        double double67 = variance27.evaluate(doubleArray61);
        double double68 = secondMoment11.evaluate(doubleArray61);
        secondMoment11.clear();
        secondMoment11.increment((double) (short) 100);
        double double72 = secondMoment11.getResult();
        secondMoment11.increment(0.0d);
        double double75 = secondMoment11.getResult();
        secondMoment11.clear();
        double double77 = secondMoment11.getResult();
        long long78 = secondMoment11.getN();
        secondMoment11.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5d + "'", double54 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 37.0d + "'", double67 == 37.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 5000.0d + "'", double75 == 5000.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
    }

    @Test
    public void test11590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11590");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double double45 = secondMoment18.evaluate(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double[] doubleArray58 = new double[] { 10, (byte) 100 };
        double double59 = secondMoment46.evaluate(doubleArray58);
        double double60 = secondMoment46.getResult();
        secondMoment46.increment((double) (short) -1);
        double[] doubleArray64 = new double[] { (short) 1 };
        secondMoment46.incrementAll(doubleArray64);
        double double66 = secondMoment18.evaluate(doubleArray64);
        double double67 = secondMoment1.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance68.setBiasCorrected(true);
        variance68.clear();
        double double72 = variance68.getResult();
        boolean boolean73 = variance68.isBiasCorrected();
        variance68.setBiasCorrected(false);
        variance68.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test11591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11591");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        secondMoment5.increment((double) (short) 0);
        double double10 = secondMoment5.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        double double27 = secondMoment11.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] {};
        secondMoment11.incrementAll(doubleArray28);
        secondMoment5.incrementAll(doubleArray28);
        secondMoment5.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double[] doubleArray46 = new double[] { 10, (byte) 100 };
        double double47 = secondMoment34.evaluate(doubleArray46);
        double double48 = variance33.evaluate(doubleArray46);
        double double49 = secondMoment0.evaluate(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        secondMoment50.increment((double) (short) 0);
        double double55 = secondMoment50.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        secondMoment56.increment((double) (short) 0);
        double double61 = secondMoment56.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        secondMoment62.incrementAll(doubleArray68, 0, 0);
        double double72 = secondMoment56.evaluate(doubleArray68);
        double[] doubleArray73 = new double[] {};
        secondMoment56.incrementAll(doubleArray73);
        secondMoment50.incrementAll(doubleArray73);
        double double76 = secondMoment0.evaluate(doubleArray73);
        long long77 = secondMoment0.getN();
        secondMoment0.increment((double) (byte) 1);
        secondMoment0.increment(0.0d);
        long long82 = secondMoment0.getN();
        double double83 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long86 = variance85.getN();
        variance85.increment((double) 4L);
        variance85.increment(80.75d);
        boolean boolean91 = secondMoment0.equals((java.lang.Object) 80.75d);
        double double92 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.5d + "'", double10 == 0.5d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5d + "'", double55 == 0.5d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5d + "'", double61 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 74.0d + "'", double72 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4050.0d + "'", double76 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 2L + "'", long77 == 2L);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 4L + "'", long82 == 4L);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 7020.75d + "'", double83 == 7020.75d);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 0L + "'", long86 == 0L);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 7020.75d + "'", double92 == 7020.75d);
    }

    @Test
    public void test11592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11592");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        variance9.increment(200.0d);
        long long13 = variance9.getN();
        variance9.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        double double26 = variance25.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        long long33 = secondMoment28.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment28);
        long long35 = variance34.getN();
        variance34.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long39 = variance38.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        secondMoment40.increment((double) (short) 0);
        double double45 = secondMoment40.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double double56 = secondMoment40.evaluate(doubleArray52);
        variance38.incrementAll(doubleArray52);
        double double59 = variance34.evaluate(doubleArray52, (double) (short) -1);
        double double60 = variance25.evaluate(doubleArray52);
        double double61 = variance9.evaluate(doubleArray52);
        long long62 = variance9.getN();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 2L + "'", long33 == 2L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 2L + "'", long35 == 2L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5d + "'", double45 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 74.0d + "'", double56 == 74.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 24.666666666666668d + "'", double59 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 37.0d + "'", double60 == 37.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 37.0d + "'", double61 == 37.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
    }

    @Test
    public void test11593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11593");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        long long18 = variance17.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double double30 = variance17.evaluate(doubleArray25, (double) (short) -1);
        double double31 = secondMoment1.evaluate(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        long long43 = secondMoment33.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        secondMoment33.incrementAll(doubleArray50, 0, (int) (short) 1);
        secondMoment33.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment((double) ' ');
        secondMoment58.increment((double) (-1.0f));
        secondMoment58.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        secondMoment64.incrementAll(doubleArray70, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment64);
        long long75 = variance74.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment76.increment(1.0d);
        double[] doubleArray82 = new double[] { (-1L), 0, 10L };
        secondMoment76.incrementAll(doubleArray82, 0, 0);
        double double87 = variance74.evaluate(doubleArray82, (double) (short) -1);
        double double88 = secondMoment58.evaluate(doubleArray82);
        double double89 = secondMoment33.evaluate(doubleArray82);
        double double90 = secondMoment1.evaluate(doubleArray82);
        secondMoment1.clear();
        secondMoment1.clear();
        secondMoment1.increment(11282.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 74.0d + "'", double31 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 37.0d + "'", double87 == 37.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 74.0d + "'", double90 == 74.0d);
    }

    @Test
    public void test11594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11594");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        double double16 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        long long18 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        long long24 = secondMoment19.getN();
        double double25 = secondMoment19.getResult();
        long long26 = secondMoment19.getN();
        double double27 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double[] doubleArray45 = new double[] {};
        secondMoment28.incrementAll(doubleArray45);
        double double47 = secondMoment19.evaluate(doubleArray45);
        secondMoment1.incrementAll(doubleArray45);
        double double49 = secondMoment1.getResult();
        long long50 = secondMoment1.getN();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.5d + "'", double25 == 0.5d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5d + "'", double27 == 0.5d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.5d + "'", double47 == 0.5d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 2L + "'", long50 == 2L);
    }

    @Test
    public void test11595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11595");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        secondMoment1.increment(74.0d);
        long long8 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        secondMoment1.clear();
        long long12 = secondMoment1.getN();
        secondMoment1.clear();
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 3L + "'", long8 == 3L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test11596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11596");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        double double8 = secondMoment1.getResult();
        secondMoment1.increment((double) (short) 0);
        double double11 = secondMoment1.getResult();
        secondMoment1.increment(1.6323175857136472E14d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test11597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11597");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        double double7 = secondMoment0.getResult();
        secondMoment0.clear();
        double double9 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        secondMoment10.increment((double) (-1.0f));
        double double15 = secondMoment10.getResult();
        secondMoment10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        double double18 = variance17.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        secondMoment33.increment((double) (short) 0);
        double double38 = secondMoment33.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        secondMoment39.incrementAll(doubleArray45, 0, 0);
        double double49 = secondMoment33.evaluate(doubleArray45);
        double[] doubleArray50 = new double[] {};
        secondMoment33.incrementAll(doubleArray50);
        double double52 = secondMoment30.evaluate(doubleArray50);
        double double53 = variance29.evaluate(doubleArray50);
        long long54 = variance29.getN();
        variance29.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        secondMoment58.increment((double) (short) 0);
        double double63 = secondMoment58.getResult();
        secondMoment58.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment58);
        double double66 = secondMoment58.getResult();
        secondMoment58.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment70);
        secondMoment70.increment((double) (short) -1);
        secondMoment70.clear();
        secondMoment70.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment80.increment(1.0d);
        double[] doubleArray86 = new double[] { (-1L), 0, 10L };
        secondMoment80.incrementAll(doubleArray86, 0, 0);
        variance79.incrementAll(doubleArray86);
        variance69.incrementAll(doubleArray86);
        double double92 = secondMoment58.evaluate(doubleArray86);
        double double93 = variance29.evaluate(doubleArray86);
        double double95 = variance17.evaluate(doubleArray86, 55.0d);
        // The following exception was thrown during execution in test generation
        try {
            secondMoment0.incrementAll(doubleArray86, (int) (byte) -1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 544.5d + "'", double15 == 544.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5d + "'", double38 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.5d + "'", double63 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 74.0d + "'", double92 == 74.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 37.0d + "'", double93 == 37.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 37.0d + "'", double95 == 37.0d);
    }

    @Test
    public void test11598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11598");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment4 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment4.increment(1.0d);
        secondMoment4.increment((double) (short) 0);
        double double9 = secondMoment4.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        double double20 = secondMoment4.evaluate(doubleArray16);
        double[] doubleArray21 = new double[] {};
        secondMoment4.incrementAll(doubleArray21);
        double double23 = secondMoment1.evaluate(doubleArray21);
        secondMoment1.increment((double) 3L);
        long long26 = secondMoment1.getN();
        double double27 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        secondMoment1.increment(1.6289621902263371E7d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.5d + "'", double9 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 74.0d + "'", double20 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2.0d + "'", double27 == 2.0d);
    }

    @Test
    public void test11599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11599");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long10 = variance9.getN();
        variance9.clear();
        variance9.clear();
        long long13 = variance9.getN();
        long long14 = variance9.getN();
        variance9.setBiasCorrected(false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 544.5d + "'", double8 == 544.5d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
    }

    @Test
    public void test11600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11600");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        secondMoment0.clear();
        double double15 = secondMoment0.getResult();
        long long16 = secondMoment0.getN();
        secondMoment0.increment((double) 4L);
        secondMoment0.increment(691.1851851851852d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance21.setBiasCorrected(false);
        variance21.increment(513712.0d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test11601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11601");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        double double6 = secondMoment0.getResult();
        secondMoment0.increment(544.5d);
        secondMoment0.clear();
        secondMoment0.increment(3.2412884541666668E7d);
        secondMoment0.increment(1.6666666666666668E7d);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
    }

    @Test
    public void test11602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11602");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        secondMoment3.incrementAll(doubleArray9, 0, 0);
        double[] doubleArray15 = new double[] { 10, (byte) 100 };
        double double16 = secondMoment3.evaluate(doubleArray15);
        double double17 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        long long19 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        variance21.clear();
        boolean boolean23 = variance21.isBiasCorrected();
        double double24 = variance21.getResult();
        double double25 = variance21.getResult();
        long long26 = variance21.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean29 = variance28.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        secondMoment32.increment((double) (short) 0);
        secondMoment32.increment(74.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        long long40 = secondMoment32.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        secondMoment32.increment(0.0d);
        secondMoment32.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double[] doubleArray57 = new double[] { 10, (byte) 100 };
        double double58 = secondMoment45.evaluate(doubleArray57);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment(1.0d);
        secondMoment60.increment((double) (short) 0);
        double double65 = secondMoment60.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        double[] doubleArray72 = new double[] { (-1L), 0, 10L };
        secondMoment66.incrementAll(doubleArray72, 0, 0);
        double double76 = secondMoment60.evaluate(doubleArray72);
        double[] doubleArray77 = new double[] {};
        secondMoment60.incrementAll(doubleArray77);
        double double81 = variance59.evaluate(doubleArray77, (int) (byte) 0, 0);
        double double82 = secondMoment45.evaluate(doubleArray77);
        double double83 = secondMoment32.evaluate(doubleArray77);
        double double84 = variance28.evaluate(doubleArray77);
        double double86 = variance21.evaluate(doubleArray77, 6.567084759313979E9d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2025.0d + "'", double24 == 2025.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2025.0d + "'", double25 == 2025.0d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 3L + "'", long40 == 3L);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4050.0d + "'", double58 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.5d + "'", double65 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 74.0d + "'", double76 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue(Double.isNaN(double86));
    }

    @Test
    public void test11603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11603");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long5 = variance4.getN();
        variance4.increment(40.5d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        secondMoment9.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        long long15 = variance14.getN();
        double double16 = variance14.getResult();
        boolean boolean17 = variance14.isBiasCorrected();
        variance14.increment(5.49755813888E11d);
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long23 = variance22.getN();
        double double24 = variance22.getResult();
        double double25 = variance22.getResult();
        long long26 = variance22.getN();
        variance22.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance30.clear();
        variance30.increment(1769.25d);
        double double34 = variance30.getResult();
        boolean boolean35 = variance22.equals((java.lang.Object) variance30);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        secondMoment38.incrementAll(doubleArray44, 0, 0);
        double[] doubleArray50 = new double[] { 10, (byte) 100 };
        double double51 = secondMoment38.evaluate(doubleArray50);
        double double52 = secondMoment38.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment38);
        long long54 = secondMoment38.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        double double56 = secondMoment38.getResult();
        secondMoment38.clear();
        secondMoment38.increment(Double.NaN);
        secondMoment38.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long64 = variance63.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        secondMoment65.increment((double) (short) 0);
        double double70 = secondMoment65.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment(1.0d);
        double[] doubleArray77 = new double[] { (-1L), 0, 10L };
        secondMoment71.incrementAll(doubleArray77, 0, 0);
        double double81 = secondMoment65.evaluate(doubleArray77);
        variance63.incrementAll(doubleArray77);
        secondMoment38.incrementAll(doubleArray77);
        variance30.incrementAll(doubleArray77);
        double double86 = variance14.evaluate(doubleArray77, 644.0d);
        double double87 = variance4.evaluate(doubleArray77);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4050.0d + "'", double51 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4050.0d + "'", double52 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 2L + "'", long54 == 2L);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4050.0d + "'", double56 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.5d + "'", double70 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 74.0d + "'", double81 == 74.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 37.0d + "'", double86 == 37.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 37.0d + "'", double87 == 37.0d);
    }

    @Test
    public void test11604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11604");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        secondMoment0.increment(0.0d);
        secondMoment0.increment((double) 0);
        secondMoment0.increment((double) (byte) 10);
        secondMoment0.increment(7200964.18888889d);
        double double14 = secondMoment0.getResult();
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4.321154463792899E13d + "'", double14 == 4.321154463792899E13d);
    }

    @Test
    public void test11605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11605");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        secondMoment0.increment(2.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        secondMoment10.increment((double) (-1.0f));
        secondMoment10.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        long long27 = variance26.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double double39 = variance26.evaluate(doubleArray34, (double) (short) -1);
        double double40 = secondMoment10.evaluate(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double[] doubleArray58 = new double[] { 10, (byte) 100 };
        double double59 = secondMoment46.evaluate(doubleArray58);
        double double60 = secondMoment46.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment46);
        long long62 = secondMoment46.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        double double64 = secondMoment46.getResult();
        secondMoment46.clear();
        secondMoment46.increment(Double.NaN);
        secondMoment46.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long72 = variance71.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment73.increment(1.0d);
        secondMoment73.increment((double) (short) 0);
        double double78 = secondMoment73.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment79.increment(1.0d);
        double[] doubleArray85 = new double[] { (-1L), 0, 10L };
        secondMoment79.incrementAll(doubleArray85, 0, 0);
        double double89 = secondMoment73.evaluate(doubleArray85);
        variance71.incrementAll(doubleArray85);
        secondMoment46.incrementAll(doubleArray85);
        double double92 = secondMoment10.evaluate(doubleArray85);
        double double93 = secondMoment0.evaluate(doubleArray85);
        org.apache.commons.math.stat.descriptive.moment.Variance variance94 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double95 = secondMoment0.getResult();
        secondMoment0.increment((double) '#');
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 2L + "'", long62 == 2L);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4050.0d + "'", double64 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.5d + "'", double78 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 74.0d + "'", double92 == 74.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 74.0d + "'", double93 == 74.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 74.0d + "'", double95 == 74.0d);
    }

    @Test
    public void test11606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11606");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        double double18 = variance10.getResult();
        variance10.increment(3602.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        double[] doubleArray34 = new double[] { 10, (byte) 100 };
        double double35 = secondMoment22.evaluate(doubleArray34);
        long long36 = secondMoment22.getN();
        double double37 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        long long39 = secondMoment22.getN();
        secondMoment22.increment((double) (short) 1);
        double double42 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        secondMoment44.increment((double) (short) 0);
        double double49 = secondMoment44.getResult();
        secondMoment44.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment44);
        variance51.increment((double) (short) 0);
        variance51.clear();
        variance51.increment((double) 1L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        double[] doubleArray63 = new double[] { (-1L), 0, 10L };
        secondMoment57.incrementAll(doubleArray63, 0, 0);
        double double67 = variance51.evaluate(doubleArray63);
        double double70 = secondMoment22.evaluate(doubleArray63, 1, (int) (short) 0);
        variance10.incrementAll(doubleArray63, (int) (short) 0, (int) (byte) 0);
        double double74 = variance10.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4050.0d + "'", double35 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 2L + "'", long36 == 2L);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4050.0d + "'", double37 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 2L + "'", long39 == 2L);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 5994.0d + "'", double42 == 5994.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.5d + "'", double49 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 24.666666666666668d + "'", double67 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 5994.0d + "'", double70 == 5994.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
    }

    @Test
    public void test11607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11607");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        secondMoment1.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double11 = secondMoment1.getResult();
        secondMoment1.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double16 = variance15.getResult();
        variance15.increment(5852.666666666666d);
        double double19 = variance15.getResult();
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4704.5d + "'", double16 == 4704.5d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4704.5d + "'", double19 == 4704.5d);
    }

    @Test
    public void test11608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11608");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        long long1 = secondMoment0.getN();
        double double2 = secondMoment0.getResult();
        long long3 = secondMoment0.getN();
        secondMoment0.increment(7.562308878906898E26d);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    }

    @Test
    public void test11609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11609");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double10 = variance9.getResult();
        long long11 = variance9.getN();
        variance9.increment(12.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test11610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11610");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (-1.0f));
        secondMoment1.clear();
        secondMoment1.clear();
        double double8 = secondMoment1.getResult();
        double double9 = secondMoment1.getResult();
        double double10 = secondMoment1.getResult();
        secondMoment1.increment((double) '#');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double double14 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        boolean boolean16 = variance15.isBiasCorrected();
        variance15.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test11611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11611");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        secondMoment1.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        long long11 = secondMoment1.getN();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment((double) (short) -1);
        secondMoment15.clear();
        double double22 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        secondMoment23.increment((double) (short) 0);
        double double28 = secondMoment23.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double double39 = secondMoment23.evaluate(doubleArray35);
        secondMoment15.incrementAll(doubleArray35, 0, (int) (short) 0);
        secondMoment15.increment((double) (-1.0f));
        secondMoment15.clear();
        double double46 = secondMoment15.getResult();
        secondMoment15.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        secondMoment49.incrementAll(doubleArray55, 0, 0);
        long long59 = secondMoment49.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment49);
        double[] doubleArray62 = new double[] {};
        double double63 = secondMoment49.evaluate(doubleArray62);
        secondMoment49.clear();
        secondMoment49.increment(12413.42857142857d);
        boolean boolean67 = secondMoment15.equals((java.lang.Object) secondMoment49);
        secondMoment49.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        boolean boolean70 = variance13.equals((java.lang.Object) secondMoment49);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.5d + "'", double28 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 74.0d + "'", double39 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test11612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11612");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        long long10 = secondMoment1.getN();
        double double11 = secondMoment1.getResult();
        secondMoment1.increment(4680.28125d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        long long20 = secondMoment14.getN();
        double double21 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment14);
        variance22.clear();
        boolean boolean24 = secondMoment1.equals((java.lang.Object) variance22);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 544.5d + "'", double11 == 544.5d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2L + "'", long20 == 2L);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.5d + "'", double21 == 0.5d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test11613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11613");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        double double17 = secondMoment0.getResult();
        secondMoment0.increment((double) 1L);
        secondMoment0.increment((double) (byte) 100);
        double double22 = secondMoment0.getResult();
        long long23 = secondMoment0.getN();
        double double24 = secondMoment0.getResult();
        secondMoment0.increment(1.4517874083333334E7d);
        double double27 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 6140.666666666667d + "'", double17 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 11282.0d + "'", double22 == 11282.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 5L + "'", long23 == 5L);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 11282.0d + "'", double24 == 11282.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.756395403445009E14d + "'", double27 == 1.756395403445009E14d);
    }

    @Test
    public void test11614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11614");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        secondMoment2.increment((double) (short) 0);
        double double7 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double[] doubleArray21 = new double[] { 10, (byte) 100 };
        double double22 = secondMoment9.evaluate(doubleArray21);
        double double23 = secondMoment9.getResult();
        long long24 = secondMoment9.getN();
        long long25 = secondMoment9.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        boolean boolean27 = secondMoment2.equals((java.lang.Object) secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.increment(2.0551349661103657E12d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4050.0d + "'", double23 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2L + "'", long25 == 2L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test11615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11615");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double[] doubleArray19 = new double[] { 10, (byte) 100 };
        double double20 = secondMoment7.evaluate(doubleArray19);
        double double21 = secondMoment7.getResult();
        long long22 = secondMoment7.getN();
        long long23 = secondMoment7.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        boolean boolean25 = secondMoment0.equals((java.lang.Object) secondMoment7);
        double double26 = secondMoment7.getResult();
        secondMoment7.clear();
        secondMoment7.clear();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4050.0d + "'", double26 == 4050.0d);
    }

    @Test
    public void test11616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11616");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        long long7 = secondMoment0.getN();
        double double8 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long11 = variance10.getN();
        variance10.increment(0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 200.0d + "'", double8 == 200.0d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test11617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11617");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        secondMoment2.clear();
        secondMoment2.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        boolean boolean16 = secondMoment2.equals((java.lang.Object) secondMoment11);
        secondMoment2.clear();
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        java.lang.Class<?> wildcardClass21 = secondMoment2.getClass();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test11618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11618");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long8 = variance7.getN();
        variance7.clear();
        variance7.increment(11282.0d);
        variance7.increment(32.2d);
        variance7.increment(1.8756123185185187E7d);
        boolean boolean16 = variance7.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        double[] doubleArray29 = new double[] { 10, (byte) 100 };
        double double30 = secondMoment17.evaluate(doubleArray29);
        double double31 = secondMoment17.getResult();
        secondMoment17.increment((double) (short) -1);
        double[] doubleArray35 = new double[] { (short) 1 };
        secondMoment17.incrementAll(doubleArray35);
        long long37 = secondMoment17.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment38);
        secondMoment38.increment((double) (short) -1);
        secondMoment38.clear();
        secondMoment38.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment38);
        long long48 = variance47.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        secondMoment52.increment((double) (short) 0);
        double double57 = secondMoment52.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        secondMoment58.incrementAll(doubleArray64, 0, 0);
        double double68 = secondMoment52.evaluate(doubleArray64);
        double[] doubleArray69 = new double[] {};
        secondMoment52.incrementAll(doubleArray69);
        double double71 = secondMoment49.evaluate(doubleArray69);
        double double72 = variance47.evaluate(doubleArray69);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment73.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment76.increment(1.0d);
        secondMoment76.increment((double) (short) 0);
        double double81 = secondMoment76.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment82 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment82.increment(1.0d);
        double[] doubleArray88 = new double[] { (-1L), 0, 10L };
        secondMoment82.incrementAll(doubleArray88, 0, 0);
        double double92 = secondMoment76.evaluate(doubleArray88);
        double[] doubleArray93 = new double[] {};
        secondMoment76.incrementAll(doubleArray93);
        double double95 = secondMoment73.evaluate(doubleArray93);
        variance47.incrementAll(doubleArray93);
        double double97 = secondMoment17.evaluate(doubleArray93);
        variance7.incrementAll(doubleArray93);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4050.0d + "'", double30 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4050.0d + "'", double31 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 4L + "'", long37 == 4L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.5d + "'", double57 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.5d + "'", double81 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 74.0d + "'", double92 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 7077.0d + "'", double97 == 7077.0d);
    }

    @Test
    public void test11619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11619");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        secondMoment13.increment((double) (short) 0);
        double double18 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double double29 = secondMoment13.evaluate(doubleArray25);
        double[] doubleArray30 = new double[] {};
        secondMoment13.incrementAll(doubleArray30);
        secondMoment7.incrementAll(doubleArray30);
        secondMoment7.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double[] doubleArray48 = new double[] { 10, (byte) 100 };
        double double49 = secondMoment36.evaluate(doubleArray48);
        double double50 = variance35.evaluate(doubleArray48);
        double double51 = secondMoment0.evaluate(doubleArray48);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long53 = secondMoment0.getN();
        secondMoment0.increment(3.0341188245370373E7d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.clear();
        double double58 = secondMoment0.getResult();
        secondMoment0.increment(2945.28125d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.5d + "'", double18 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 74.0d + "'", double29 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4050.0d + "'", double51 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 2L + "'", long53 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
    }

    @Test
    public void test11620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11620");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        variance9.increment(200.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment14);
        secondMoment14.increment((double) (short) -1);
        long long20 = secondMoment14.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        double double33 = variance21.evaluate(doubleArray28, (double) 1L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double[] doubleArray46 = new double[] { 10, (byte) 100 };
        double double47 = secondMoment34.evaluate(doubleArray46);
        double double49 = variance21.evaluate(doubleArray46, 0.0d);
        double double50 = variance9.evaluate(doubleArray46);
        double double51 = variance9.getResult();
        variance9.clear();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2L + "'", long20 == 2L);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 24.666666666666668d + "'", double33 == 24.666666666666668d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2025.0d + "'", double49 == 2025.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test11621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11621");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        secondMoment1.increment(4402.666666666667d);
        secondMoment1.clear();
        secondMoment1.increment(146040.96296296292d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        long long24 = secondMoment14.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment14);
        boolean boolean27 = variance26.isBiasCorrected();
        double double28 = variance26.getResult();
        long long29 = variance26.getN();
        boolean boolean30 = secondMoment1.equals((java.lang.Object) variance26);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment((double) ' ');
        secondMoment32.increment((double) (byte) 0);
        secondMoment32.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment32);
        secondMoment32.increment((double) 6L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment43);
        variance47.setBiasCorrected(true);
        double double50 = variance47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment((double) ' ');
        secondMoment51.increment((double) '4');
        secondMoment51.increment((double) 0.0f);
        long long58 = secondMoment51.getN();
        long long59 = secondMoment51.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long62 = variance61.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        secondMoment63.increment((double) (short) 0);
        double double68 = secondMoment63.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        double[] doubleArray75 = new double[] { (-1L), 0, 10L };
        secondMoment69.incrementAll(doubleArray75, 0, 0);
        double double79 = secondMoment63.evaluate(doubleArray75);
        variance61.incrementAll(doubleArray75);
        double double81 = secondMoment51.evaluate(doubleArray75);
        variance47.incrementAll(doubleArray75);
        double double83 = secondMoment32.evaluate(doubleArray75);
        double double85 = variance26.evaluate(doubleArray75, 2.1801930771645032E20d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 3L + "'", long58 == 3L);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 3L + "'", long59 == 3L);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.5d + "'", double68 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 74.0d + "'", double79 == 74.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 74.0d + "'", double81 == 74.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 74.0d + "'", double83 == 74.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
    }

    @Test
    public void test11622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11622");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment(24.666666666666668d);
        double double19 = secondMoment1.getResult();
        double double20 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        boolean boolean23 = variance22.isBiasCorrected();
        variance22.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4663.407407407407d + "'", double19 == 4663.407407407407d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4663.407407407407d + "'", double20 == 4663.407407407407d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test11623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11623");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance6.increment(0.0d);
        double double9 = variance6.getResult();
        variance6.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        secondMoment11.increment((double) '4');
        double double17 = secondMoment11.getResult();
        secondMoment11.clear();
        long long19 = secondMoment11.getN();
        long long20 = secondMoment11.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        double[] doubleArray34 = new double[] { 10, (byte) 100 };
        double double35 = secondMoment22.evaluate(doubleArray34);
        secondMoment22.clear();
        secondMoment22.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment41);
        secondMoment41.clear();
        secondMoment41.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment((double) ' ');
        double double50 = secondMoment47.getResult();
        double double51 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        secondMoment52.incrementAll(doubleArray58, 0, 0);
        double[] doubleArray64 = new double[] { 10, (byte) 100 };
        double double65 = secondMoment52.evaluate(doubleArray64);
        double double66 = secondMoment47.evaluate(doubleArray64);
        double double67 = secondMoment41.evaluate(doubleArray64);
        variance40.incrementAll(doubleArray64);
        secondMoment11.incrementAll(doubleArray64, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double75 = variance6.evaluate(doubleArray64, 0.0d, 100, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 200.0d + "'", double17 == 200.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4050.0d + "'", double35 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4050.0d + "'", double65 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4050.0d + "'", double66 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4050.0d + "'", double67 == 4050.0d);
    }

    @Test
    public void test11624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11624");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        boolean boolean14 = secondMoment0.equals((java.lang.Object) secondMoment9);
        secondMoment0.clear();
        long long16 = secondMoment0.getN();
        secondMoment0.clear();
        long long18 = secondMoment0.getN();
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test11625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11625");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        double double6 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        double double25 = secondMoment8.evaluate(doubleArray23);
        double double27 = variance7.evaluate(doubleArray23, (double) 5L);
        boolean boolean28 = variance7.isBiasCorrected();
        boolean boolean29 = variance7.isBiasCorrected();
        long long30 = variance7.getN();
        variance7.clear();
        double double32 = variance7.getResult();
        boolean boolean34 = variance7.equals((java.lang.Object) 4402.666666666667d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4050.0d + "'", double27 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test11626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11626");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        double double6 = secondMoment0.getResult();
        double double7 = secondMoment0.getResult();
        long long8 = secondMoment0.getN();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        secondMoment11.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment11);
        variance18.increment((double) (short) 0);
        variance18.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        double[] doubleArray36 = new double[] { 10, (byte) 100 };
        double double37 = secondMoment24.evaluate(doubleArray36);
        double double38 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment24);
        long long40 = secondMoment24.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        secondMoment24.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        double[] doubleArray56 = new double[] { 10, (byte) 100 };
        double double57 = secondMoment44.evaluate(doubleArray56);
        double double58 = secondMoment44.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment44);
        long long60 = secondMoment44.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment((double) ' ');
        secondMoment61.increment((double) (-1.0f));
        secondMoment61.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        double[] doubleArray73 = new double[] { (-1L), 0, 10L };
        secondMoment67.incrementAll(doubleArray73, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment67);
        long long78 = variance77.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment79.increment(1.0d);
        double[] doubleArray85 = new double[] { (-1L), 0, 10L };
        secondMoment79.incrementAll(doubleArray85, 0, 0);
        double double90 = variance77.evaluate(doubleArray85, (double) (short) -1);
        double double91 = secondMoment61.evaluate(doubleArray85);
        double double92 = secondMoment44.evaluate(doubleArray85);
        double double93 = secondMoment24.evaluate(doubleArray85);
        double double94 = variance18.evaluate(doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            double double97 = secondMoment0.evaluate(doubleArray85, 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4050.0d + "'", double37 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4050.0d + "'", double38 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 2L + "'", long40 == 2L);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4050.0d + "'", double57 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4050.0d + "'", double58 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 2L + "'", long60 == 2L);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1L + "'", long78 == 1L);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 37.0d + "'", double90 == 37.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 74.0d + "'", double91 == 74.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 74.0d + "'", double92 == 74.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 74.0d + "'", double93 == 74.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 24.666666666666668d + "'", double94 == 24.666666666666668d);
    }

    @Test
    public void test11627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11627");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        secondMoment2.increment((double) (short) 0);
        double double7 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        double double10 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        variance12.setBiasCorrected(false);
        variance12.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        long long24 = secondMoment18.getN();
        double double25 = secondMoment18.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment18);
        long long28 = secondMoment18.getN();
        secondMoment18.increment(482.66666666666663d);
        secondMoment18.increment(32.0d);
        secondMoment18.clear();
        secondMoment18.clear();
        boolean boolean35 = variance12.equals((java.lang.Object) secondMoment18);
        variance12.clear();
        boolean boolean37 = variance12.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 544.5d + "'", double25 == 544.5d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 2L + "'", long28 == 2L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test11628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11628");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.increment(228.2222222222222d);
    }

    @Test
    public void test11629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11629");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        secondMoment3.incrementAll(doubleArray9, 0, 0);
        double[] doubleArray15 = new double[] { 10, (byte) 100 };
        double double16 = secondMoment3.evaluate(doubleArray15);
        double double17 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        long long19 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        double double21 = secondMoment3.getResult();
        secondMoment3.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        variance23.increment(5.49755813888E11d);
        variance23.clear();
        boolean boolean27 = variance23.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test11630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11630");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        secondMoment5.increment((double) (short) 0);
        double double10 = secondMoment5.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        double double27 = secondMoment11.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] {};
        secondMoment11.incrementAll(doubleArray28);
        secondMoment5.incrementAll(doubleArray28);
        secondMoment5.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double[] doubleArray46 = new double[] { 10, (byte) 100 };
        double double47 = secondMoment34.evaluate(doubleArray46);
        double double48 = variance33.evaluate(doubleArray46);
        double double49 = secondMoment0.evaluate(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        secondMoment50.increment((double) (short) 0);
        double double55 = secondMoment50.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        secondMoment56.increment((double) (short) 0);
        double double61 = secondMoment56.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        secondMoment62.incrementAll(doubleArray68, 0, 0);
        double double72 = secondMoment56.evaluate(doubleArray68);
        double[] doubleArray73 = new double[] {};
        secondMoment56.incrementAll(doubleArray73);
        secondMoment50.incrementAll(doubleArray73);
        double double76 = secondMoment0.evaluate(doubleArray73);
        long long77 = secondMoment0.getN();
        secondMoment0.increment((double) (byte) 1);
        secondMoment0.increment(0.0d);
        secondMoment0.increment((double) 5L);
        secondMoment0.increment(4049.9999999999995d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment86 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment86.increment((double) ' ');
        secondMoment86.increment((double) '4');
        long long91 = secondMoment86.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment86);
        secondMoment86.clear();
        boolean boolean94 = secondMoment0.equals((java.lang.Object) secondMoment86);
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.5d + "'", double10 == 0.5d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5d + "'", double55 == 0.5d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5d + "'", double61 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 74.0d + "'", double72 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4050.0d + "'", double76 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 2L + "'", long77 == 2L);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 2L + "'", long91 == 2L);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test11631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11631");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        secondMoment0.clear();
        secondMoment0.clear();
        double double17 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment((double) (byte) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(1.0159647967607791E11d);
        double double25 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 5.16092234118426E21d + "'", double25 == 5.16092234118426E21d);
    }

    @Test
    public void test11632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11632");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        long long16 = secondMoment2.getN();
        secondMoment2.clear();
        double double18 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        variance23.increment((double) (short) 100);
        boolean boolean26 = variance23.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test11633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11633");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        variance1.increment((double) (short) 100);
        boolean boolean6 = variance1.isBiasCorrected();
        long long7 = variance1.getN();
        boolean boolean8 = variance1.isBiasCorrected();
        variance1.clear();
        long long10 = variance1.getN();
        long long11 = variance1.getN();
        variance1.setBiasCorrected(false);
        variance1.increment(2.0395193399492783E29d);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test11634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11634");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        double double20 = secondMoment2.getResult();
        long long21 = secondMoment2.getN();
        secondMoment2.clear();
        double double23 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        long long41 = secondMoment24.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        boolean boolean43 = secondMoment2.equals((java.lang.Object) variance42);
        variance42.increment(7836.75d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2L + "'", long21 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 3L + "'", long41 == 3L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test11635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11635");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) '4');
        long long5 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double7 = variance6.getResult();
        variance6.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        secondMoment9.increment((double) (short) -1);
        secondMoment9.clear();
        secondMoment9.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        long long19 = variance18.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        secondMoment23.increment((double) (short) 0);
        double double28 = secondMoment23.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double double39 = secondMoment23.evaluate(doubleArray35);
        double[] doubleArray40 = new double[] {};
        secondMoment23.incrementAll(doubleArray40);
        double double42 = secondMoment20.evaluate(doubleArray40);
        double double43 = variance18.evaluate(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double double63 = secondMoment47.evaluate(doubleArray59);
        double[] doubleArray64 = new double[] {};
        secondMoment47.incrementAll(doubleArray64);
        double double66 = secondMoment44.evaluate(doubleArray64);
        variance18.incrementAll(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        secondMoment68.increment((double) (short) 0);
        double double73 = secondMoment68.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        secondMoment74.incrementAll(doubleArray80, 0, 0);
        double double84 = secondMoment68.evaluate(doubleArray80);
        double double87 = variance18.evaluate(doubleArray80, (int) (byte) 1, 1);
        double double88 = variance6.evaluate(doubleArray80);
        variance6.setBiasCorrected(true);
        long long91 = variance6.getN();
        variance6.increment(125982.5185185185d);
        boolean boolean94 = variance6.isBiasCorrected();
        variance6.clear();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.5d + "'", double28 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 74.0d + "'", double39 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5d + "'", double73 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 74.0d + "'", double84 == 74.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 37.0d + "'", double88 == 37.0d);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 2L + "'", long91 == 2L);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test11636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11636");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        secondMoment5.incrementAll(doubleArray11, 0, 0);
        double[] doubleArray17 = new double[] { 10, (byte) 100 };
        double double18 = secondMoment5.evaluate(doubleArray17);
        long long19 = secondMoment5.getN();
        double double20 = secondMoment5.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        secondMoment21.increment((double) (short) -1);
        secondMoment21.clear();
        double double28 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        secondMoment29.increment((double) (short) 0);
        double double34 = secondMoment29.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double double45 = secondMoment29.evaluate(doubleArray41);
        secondMoment21.incrementAll(doubleArray41, 0, (int) (short) 0);
        double double49 = secondMoment5.evaluate(doubleArray41);
        double double50 = secondMoment5.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        secondMoment52.increment((double) (short) 0);
        double double57 = secondMoment52.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        secondMoment58.increment((double) (short) 0);
        double double63 = secondMoment58.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        secondMoment64.incrementAll(doubleArray70, 0, 0);
        double double74 = secondMoment58.evaluate(doubleArray70);
        double[] doubleArray75 = new double[] {};
        secondMoment58.incrementAll(doubleArray75);
        secondMoment52.incrementAll(doubleArray75);
        secondMoment52.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment81.increment(1.0d);
        double[] doubleArray87 = new double[] { (-1L), 0, 10L };
        secondMoment81.incrementAll(doubleArray87, 0, 0);
        double[] doubleArray93 = new double[] { 10, (byte) 100 };
        double double94 = secondMoment81.evaluate(doubleArray93);
        double double95 = variance80.evaluate(doubleArray93);
        double double96 = variance51.evaluate(doubleArray93);
        double double97 = secondMoment5.evaluate(doubleArray93);
        double double98 = secondMoment0.evaluate(doubleArray93);
        double double99 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4050.0d + "'", double18 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5d + "'", double34 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 74.0d + "'", double50 == 74.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.5d + "'", double57 == 0.5d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.5d + "'", double63 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 74.0d + "'", double74 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 4050.0d + "'", double94 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 4050.0d + "'", double95 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 4050.0d + "'", double96 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 4050.0d + "'", double97 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 4050.0d + "'", double98 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 4050.0d + "'", double99 == 4050.0d);
    }

    @Test
    public void test11637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11637");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance9.increment((double) (byte) -1);
        boolean boolean12 = variance9.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        double double20 = secondMoment14.getResult();
        secondMoment14.increment((double) '#');
        secondMoment14.increment(1655360.891851852d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        secondMoment26.increment((double) (short) -1);
        secondMoment26.clear();
        secondMoment26.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        secondMoment26.clear();
        secondMoment26.clear();
        secondMoment26.increment(116966.7222222222d);
        double double40 = secondMoment26.getResult();
        secondMoment26.increment(458.6666666666667d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment((double) ' ');
        secondMoment43.increment((double) (-1.0f));
        secondMoment43.clear();
        double double49 = secondMoment43.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        double[] doubleArray60 = new double[] { (-1L), 0, 10L };
        secondMoment54.incrementAll(doubleArray60, 0, 0);
        double[] doubleArray66 = new double[] { 10, (byte) 100 };
        double double67 = secondMoment54.evaluate(doubleArray66);
        double double68 = secondMoment51.evaluate(doubleArray66);
        double double70 = variance50.evaluate(doubleArray66, (double) 5L);
        secondMoment26.incrementAll(doubleArray66);
        double double72 = variance25.evaluate(doubleArray66);
        // The following exception was thrown during execution in test generation
        try {
            double double75 = variance9.evaluate(doubleArray66, (int) '4', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5d + "'", double20 == 0.5d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4050.0d + "'", double67 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4050.0d + "'", double68 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4050.0d + "'", double70 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 4050.0d + "'", double72 == 4050.0d);
    }

    @Test
    public void test11638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11638");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance4.setBiasCorrected(false);
        boolean boolean7 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long10 = variance9.getN();
        double double11 = variance9.getResult();
        variance9.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment14);
        secondMoment14.increment((double) (short) -1);
        secondMoment14.clear();
        secondMoment14.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        variance23.incrementAll(doubleArray30);
        long long35 = variance23.getN();
        variance23.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        secondMoment37.increment((double) (short) 0);
        double double42 = secondMoment37.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        secondMoment43.increment((double) (short) 0);
        double double48 = secondMoment43.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        secondMoment49.incrementAll(doubleArray55, 0, 0);
        double double59 = secondMoment43.evaluate(doubleArray55);
        double[] doubleArray60 = new double[] {};
        secondMoment43.incrementAll(doubleArray60);
        secondMoment37.incrementAll(doubleArray60);
        double double63 = variance23.evaluate(doubleArray60);
        double double65 = variance9.evaluate(doubleArray60, 7262.8d);
        variance4.incrementAll(doubleArray60);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.5d + "'", double42 == 0.5d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.5d + "'", double48 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 74.0d + "'", double59 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
    }

    @Test
    public void test11639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11639");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        secondMoment1.increment((double) (short) -1);
        double[] doubleArray19 = new double[] { (short) 1 };
        secondMoment1.incrementAll(doubleArray19);
        long long21 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance22.clear();
        long long24 = variance22.getN();
        double double25 = variance22.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 4L + "'", long21 == 4L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 4L + "'", long24 == 4L);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1769.25d + "'", double25 == 1769.25d);
    }

    @Test
    public void test11640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11640");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double double26 = secondMoment10.evaluate(doubleArray22);
        double[] doubleArray27 = new double[] {};
        secondMoment10.incrementAll(doubleArray27);
        double double31 = variance9.evaluate(doubleArray27, (int) (byte) 0, 0);
        long long32 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        secondMoment33.increment((double) (short) 0);
        double double38 = secondMoment33.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        secondMoment39.incrementAll(doubleArray45, 0, 0);
        double double49 = secondMoment33.evaluate(doubleArray45);
        variance9.incrementAll(doubleArray45);
        long long51 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        secondMoment52.increment((double) (short) 0);
        double double57 = secondMoment52.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        secondMoment58.incrementAll(doubleArray64, 0, 0);
        double double68 = secondMoment52.evaluate(doubleArray64);
        double[] doubleArray69 = new double[] {};
        secondMoment52.incrementAll(doubleArray69);
        double double71 = variance9.evaluate(doubleArray69);
        double double72 = secondMoment0.evaluate(doubleArray69);
        secondMoment0.clear();
        secondMoment0.increment(3.889038153298707E13d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 74.0d + "'", double26 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5d + "'", double38 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 3L + "'", long51 == 3L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.5d + "'", double57 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test11641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11641");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment((double) (short) -1);
        secondMoment0.increment(80.75d);
        double double11 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.clear();
        long long14 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 3341.53125d + "'", double11 == 3341.53125d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test11642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11642");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.clear();
        long long13 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test11643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11643");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (short) 10);
        secondMoment1.increment((double) 2L);
        long long8 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 3L + "'", long8 == 3L);
    }

    @Test
    public void test11644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11644");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        secondMoment3.incrementAll(doubleArray9, 0, 0);
        double[] doubleArray15 = new double[] { 10, (byte) 100 };
        double double16 = secondMoment3.evaluate(doubleArray15);
        double double17 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        long long19 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        double double21 = secondMoment3.getResult();
        secondMoment3.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        secondMoment3.increment(7020.75d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        variance27.setBiasCorrected(true);
        variance27.increment(1.4517874083333334E7d);
        double double32 = variance27.getResult();
        boolean boolean33 = variance27.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test11645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11645");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment((double) (short) -1);
        secondMoment15.clear();
        secondMoment15.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment15);
        boolean boolean25 = secondMoment0.equals((java.lang.Object) secondMoment15);
        double double26 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        secondMoment41.increment((double) (short) 0);
        double double46 = secondMoment41.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double double57 = secondMoment41.evaluate(doubleArray53);
        double[] doubleArray58 = new double[] {};
        secondMoment41.incrementAll(doubleArray58);
        double double60 = secondMoment38.evaluate(doubleArray58);
        double double61 = variance37.evaluate(doubleArray58);
        double double62 = secondMoment15.evaluate(doubleArray58);
        long long63 = secondMoment15.getN();
        long long64 = secondMoment15.getN();
        double double65 = secondMoment15.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.5d + "'", double46 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 74.0d + "'", double57 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1L + "'", long63 == 1L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test11646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11646");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double8 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        double[] doubleArray22 = new double[] { 10, (byte) 100 };
        double double23 = secondMoment10.evaluate(doubleArray22);
        double double24 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        double double32 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double double43 = secondMoment27.evaluate(doubleArray39);
        double[] doubleArray44 = new double[] {};
        secondMoment27.incrementAll(doubleArray44);
        double double48 = variance26.evaluate(doubleArray44, (int) (byte) 0, 0);
        double double49 = variance25.evaluate(doubleArray44);
        secondMoment0.incrementAll(doubleArray44);
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance54.increment(2004.25d);
        variance54.increment(9161778.740966797d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4050.0d + "'", double23 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5d + "'", double32 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
    }

    @Test
    public void test11647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11647");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        double double17 = secondMoment0.getResult();
        secondMoment0.increment((double) 1L);
        secondMoment0.increment((double) (byte) 100);
        double double22 = secondMoment0.getResult();
        long long23 = secondMoment0.getN();
        double double24 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 6140.666666666667d + "'", double17 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 11282.0d + "'", double22 == 11282.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 5L + "'", long23 == 5L);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 11282.0d + "'", double24 == 11282.0d);
    }

    @Test
    public void test11648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11648");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment(1.218679475E7d);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        secondMoment10.clear();
        secondMoment10.increment(1.218679475E7d);
        secondMoment10.clear();
        secondMoment10.clear();
        secondMoment10.clear();
        boolean boolean22 = secondMoment0.equals((java.lang.Object) secondMoment10);
        secondMoment0.clear();
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test11649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11649");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) 10L);
        double double6 = secondMoment1.getResult();
        double double7 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double double9 = variance8.getResult();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 40.5d + "'", double6 == 40.5d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 40.5d + "'", double7 == 40.5d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 40.5d + "'", double9 == 40.5d);
    }

    @Test
    public void test11650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11650");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        double double23 = secondMoment7.evaluate(doubleArray19);
        double[] doubleArray24 = new double[] {};
        secondMoment7.incrementAll(doubleArray24);
        secondMoment1.incrementAll(doubleArray24);
        long long27 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double double39 = variance28.evaluate(doubleArray35);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment41);
        secondMoment41.increment((double) (short) -1);
        secondMoment41.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment41);
        double double49 = secondMoment41.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment51);
        long long62 = variance61.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        double double74 = variance61.evaluate(doubleArray69, (double) (short) -1);
        double double75 = secondMoment41.evaluate(doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            double double78 = variance28.evaluate(doubleArray69, 1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 74.0d + "'", double23 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 2L + "'", long27 == 2L);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 37.0d + "'", double74 == 37.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 74.0d + "'", double75 == 74.0d);
    }

    @Test
    public void test11651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11651");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment4 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment4.increment(1.0d);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        secondMoment4.incrementAll(doubleArray10, 0, 0);
        double[] doubleArray16 = new double[] { 10, (byte) 100 };
        double double17 = secondMoment4.evaluate(doubleArray16);
        double double18 = secondMoment4.getResult();
        secondMoment4.increment((double) (short) -1);
        double[] doubleArray22 = new double[] { (short) 1 };
        secondMoment4.incrementAll(doubleArray22);
        secondMoment1.incrementAll(doubleArray22);
        secondMoment1.increment((-1.0d));
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double28 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4050.0d + "'", double18 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2.6666666666666665d + "'", double28 == 2.6666666666666665d);
    }

    @Test
    public void test11652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11652");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        double double23 = secondMoment7.evaluate(doubleArray19);
        double[] doubleArray24 = new double[] {};
        secondMoment7.incrementAll(doubleArray24);
        secondMoment1.incrementAll(doubleArray24);
        secondMoment1.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double[] doubleArray42 = new double[] { 10, (byte) 100 };
        double double43 = secondMoment30.evaluate(doubleArray42);
        double double44 = variance29.evaluate(doubleArray42);
        double double45 = variance0.evaluate(doubleArray42);
        long long46 = variance0.getN();
        boolean boolean47 = variance0.isBiasCorrected();
        variance0.increment(2312.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 74.0d + "'", double23 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4050.0d + "'", double43 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4050.0d + "'", double44 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4050.0d + "'", double45 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test11653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11653");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        secondMoment11.increment((double) '4');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double37 = secondMoment21.evaluate(doubleArray33);
        long long38 = secondMoment21.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        double double40 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment21);
        variance41.increment((double) 10.0f);
        boolean boolean44 = variance41.isBiasCorrected();
        double double45 = variance41.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        secondMoment46.increment((double) (short) 0);
        double double51 = secondMoment46.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        secondMoment52.incrementAll(doubleArray58, 0, 0);
        double double62 = secondMoment46.evaluate(doubleArray58);
        double double63 = variance41.evaluate(doubleArray58);
        secondMoment11.incrementAll(doubleArray58);
        double double65 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 3L + "'", long38 == 3L);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 24.666666666666668d + "'", double45 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.5d + "'", double51 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 74.0d + "'", double62 == 74.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 24.666666666666668d + "'", double63 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1874.75d + "'", double65 == 1874.75d);
    }

    @Test
    public void test11654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11654");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        double double4 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        secondMoment5.incrementAll(doubleArray11, 0, 0);
        double[] doubleArray17 = new double[] { 10, (byte) 100 };
        double double18 = secondMoment5.evaluate(doubleArray17);
        double double19 = secondMoment0.evaluate(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        double double32 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double double43 = secondMoment27.evaluate(doubleArray39);
        double[] doubleArray44 = new double[] {};
        secondMoment27.incrementAll(doubleArray44);
        secondMoment21.incrementAll(doubleArray44);
        secondMoment21.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double[] doubleArray62 = new double[] { 10, (byte) 100 };
        double double63 = secondMoment50.evaluate(doubleArray62);
        double double64 = variance49.evaluate(doubleArray62);
        double double65 = variance20.evaluate(doubleArray62);
        double double66 = secondMoment0.evaluate(doubleArray62);
        secondMoment0.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        secondMoment69.increment((double) (short) 0);
        long long74 = secondMoment69.getN();
        double double75 = secondMoment69.getResult();
        long long76 = secondMoment69.getN();
        double double77 = secondMoment69.getResult();
        secondMoment69.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment80.increment(1.0d);
        double[] doubleArray86 = new double[] { (-1L), 0, 10L };
        secondMoment80.incrementAll(doubleArray86, 0, 0);
        double[] doubleArray92 = new double[] { 10, (byte) 100 };
        double double93 = secondMoment80.evaluate(doubleArray92);
        secondMoment69.incrementAll(doubleArray92);
        double double95 = secondMoment0.evaluate(doubleArray92);
        org.apache.commons.math.stat.descriptive.moment.Variance variance96 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double97 = secondMoment0.getResult();
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4050.0d + "'", double18 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4050.0d + "'", double19 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5d + "'", double32 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4050.0d + "'", double63 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4050.0d + "'", double64 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4050.0d + "'", double65 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4050.0d + "'", double66 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 2L + "'", long74 == 2L);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.5d + "'", double75 == 0.5d);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 2L + "'", long76 == 2L);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.5d + "'", double77 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 4050.0d + "'", double93 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 4050.0d + "'", double95 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 4050.0d + "'", double97 == 4050.0d);
    }

    @Test
    public void test11655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11655");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(272.25d);
        secondMoment0.increment((double) 100L);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        double double14 = secondMoment9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        secondMoment15.increment((double) (short) 0);
        double double20 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        secondMoment21.incrementAll(doubleArray27, 0, 0);
        double double31 = secondMoment15.evaluate(doubleArray27);
        double[] doubleArray32 = new double[] {};
        secondMoment15.incrementAll(doubleArray32);
        secondMoment9.incrementAll(doubleArray32);
        secondMoment9.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        secondMoment38.incrementAll(doubleArray44, 0, 0);
        double[] doubleArray50 = new double[] { 10, (byte) 100 };
        double double51 = secondMoment38.evaluate(doubleArray50);
        double double52 = variance37.evaluate(doubleArray50);
        long long53 = variance37.getN();
        long long54 = variance37.getN();
        variance37.setBiasCorrected(false);
        variance37.setBiasCorrected(true);
        boolean boolean59 = secondMoment0.equals((java.lang.Object) variance37);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment61);
        secondMoment61.increment((double) (short) -1);
        secondMoment61.increment((double) 100);
        secondMoment61.clear();
        double double70 = secondMoment61.getResult();
        secondMoment61.increment(1067.1666666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment61);
        double double74 = secondMoment61.getResult();
        boolean boolean75 = secondMoment0.equals((java.lang.Object) double74);
        long long76 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.5d + "'", double14 == 0.5d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5d + "'", double20 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 74.0d + "'", double31 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4050.0d + "'", double51 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4050.0d + "'", double52 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 3L + "'", long53 == 3L);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 3L + "'", long54 == 3L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
    }

    @Test
    public void test11656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11656");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        double double20 = secondMoment2.getResult();
        secondMoment2.clear();
        double double22 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.clear();
        secondMoment2.increment(2.0027974458591228E15d);
        double double27 = secondMoment2.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test11657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11657");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.clear();
        double double21 = secondMoment2.getResult();
        secondMoment2.clear();
        secondMoment2.increment(8441189.1875d);
        double double25 = secondMoment2.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    }

    @Test
    public void test11658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11658");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        secondMoment3.increment((double) (short) 0);
        double double8 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double19 = secondMoment3.evaluate(doubleArray15);
        double[] doubleArray20 = new double[] {};
        secondMoment3.incrementAll(doubleArray20);
        double double22 = secondMoment0.evaluate(doubleArray20);
        secondMoment0.increment((double) 3L);
        secondMoment0.increment(24.666666666666668d);
        long long27 = secondMoment0.getN();
        secondMoment0.clear();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment31);
        secondMoment31.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        secondMoment31.clear();
        double double38 = secondMoment31.getResult();
        secondMoment31.increment((double) (short) 0);
        double double41 = secondMoment31.getResult();
        boolean boolean42 = secondMoment0.equals((java.lang.Object) secondMoment31);
        secondMoment0.increment(0.0d);
        secondMoment0.clear();
        secondMoment0.clear();
        double double47 = secondMoment0.getResult();
        double double48 = secondMoment0.getResult();
        secondMoment0.increment(4232.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5d + "'", double8 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 74.0d + "'", double19 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 3L + "'", long27 == 3L);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
    }

    @Test
    public void test11659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11659");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment4 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment4.increment(1.0d);
        secondMoment4.increment((double) (short) 0);
        double double9 = secondMoment4.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        double double20 = secondMoment4.evaluate(doubleArray16);
        double[] doubleArray21 = new double[] {};
        secondMoment4.incrementAll(doubleArray21);
        double double23 = secondMoment1.evaluate(doubleArray21);
        double double24 = secondMoment1.getResult();
        secondMoment1.clear();
        double double26 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        long long28 = secondMoment1.getN();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.5d + "'", double9 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 74.0d + "'", double20 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test11660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11660");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        double double4 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        secondMoment5.incrementAll(doubleArray11, 0, 0);
        double[] doubleArray17 = new double[] { 10, (byte) 100 };
        double double18 = secondMoment5.evaluate(doubleArray17);
        double double19 = secondMoment0.evaluate(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        double double32 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double double43 = secondMoment27.evaluate(doubleArray39);
        double[] doubleArray44 = new double[] {};
        secondMoment27.incrementAll(doubleArray44);
        secondMoment21.incrementAll(doubleArray44);
        secondMoment21.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double[] doubleArray62 = new double[] { 10, (byte) 100 };
        double double63 = secondMoment50.evaluate(doubleArray62);
        double double64 = variance49.evaluate(doubleArray62);
        double double65 = variance20.evaluate(doubleArray62);
        double double66 = secondMoment0.evaluate(doubleArray62);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4050.0d + "'", double18 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4050.0d + "'", double19 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5d + "'", double32 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4050.0d + "'", double63 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4050.0d + "'", double64 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4050.0d + "'", double65 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4050.0d + "'", double66 == 4050.0d);
    }

    @Test
    public void test11661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11661");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        long long17 = variance16.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double29 = variance16.evaluate(doubleArray24, (double) (short) -1);
        double double30 = secondMoment0.evaluate(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long32 = variance31.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment((double) ' ');
        secondMoment33.increment((double) (-1.0f));
        secondMoment33.clear();
        double double39 = secondMoment33.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        secondMoment41.incrementAll(doubleArray47, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        secondMoment55.increment((double) (short) 0);
        double double60 = secondMoment55.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        double[] doubleArray67 = new double[] { (-1L), 0, 10L };
        secondMoment61.incrementAll(doubleArray67, 0, 0);
        double double71 = secondMoment55.evaluate(doubleArray67);
        double[] doubleArray72 = new double[] {};
        secondMoment55.incrementAll(doubleArray72);
        double double74 = secondMoment52.evaluate(doubleArray72);
        double double75 = variance51.evaluate(doubleArray72);
        double double76 = secondMoment33.evaluate(doubleArray72);
        // The following exception was thrown during execution in test generation
        try {
            double double79 = variance31.evaluate(doubleArray72, (int) (byte) 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 3L + "'", long32 == 3L);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.5d + "'", double60 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 74.0d + "'", double71 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double76));
    }

    @Test
    public void test11662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11662");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        secondMoment0.clear();
        double double16 = secondMoment0.getResult();
        double double17 = secondMoment0.getResult();
        double double18 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        secondMoment22.increment((double) (short) 0);
        double double27 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double double38 = secondMoment22.evaluate(doubleArray34);
        long long39 = secondMoment22.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment22);
        double double41 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment22);
        variance42.increment((double) 10.0f);
        boolean boolean45 = variance42.isBiasCorrected();
        double double46 = variance42.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double double63 = secondMoment47.evaluate(doubleArray59);
        double double64 = variance42.evaluate(doubleArray59);
        double double65 = secondMoment0.evaluate(doubleArray59);
        double double66 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5d + "'", double27 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 74.0d + "'", double38 == 74.0d);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 3L + "'", long39 == 3L);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 74.0d + "'", double41 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 24.666666666666668d + "'", double46 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 24.666666666666668d + "'", double64 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
    }

    @Test
    public void test11663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11663");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        secondMoment0.increment(4049.9999999999995d);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        secondMoment23.increment((double) (short) 0);
        secondMoment23.increment(74.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        long long31 = secondMoment23.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        secondMoment23.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment((double) ' ');
        secondMoment36.increment((double) (-1.0f));
        secondMoment36.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        secondMoment42.incrementAll(doubleArray48, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment42);
        long long53 = variance52.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        double[] doubleArray60 = new double[] { (-1L), 0, 10L };
        secondMoment54.incrementAll(doubleArray60, 0, 0);
        double double65 = variance52.evaluate(doubleArray60, (double) (short) -1);
        double double66 = secondMoment36.evaluate(doubleArray60);
        boolean boolean67 = secondMoment23.equals((java.lang.Object) doubleArray60);
        double double68 = secondMoment0.evaluate(doubleArray60);
        secondMoment0.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 3L + "'", long31 == 3L);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 37.0d + "'", double65 == 37.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
    }

    @Test
    public void test11664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11664");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (-1.0f));
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        long long18 = variance17.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double double30 = variance17.evaluate(doubleArray25, (double) (short) -1);
        double double31 = secondMoment1.evaluate(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.clear();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 74.0d + "'", double31 == 74.0d);
    }

    @Test
    public void test11665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11665");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double17 = secondMoment1.getResult();
        secondMoment1.clear();
        double double19 = secondMoment1.getResult();
        double double20 = secondMoment1.getResult();
        long long21 = secondMoment1.getN();
        secondMoment1.clear();
        double double23 = secondMoment1.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test11666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11666");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance3.increment(1769.25d);
        variance3.increment((double) (byte) -1);
        variance3.setBiasCorrected(false);
    }

    @Test
    public void test11667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11667");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double double45 = secondMoment18.evaluate(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double[] doubleArray58 = new double[] { 10, (byte) 100 };
        double double59 = secondMoment46.evaluate(doubleArray58);
        double double60 = secondMoment46.getResult();
        secondMoment46.increment((double) (short) -1);
        double[] doubleArray64 = new double[] { (short) 1 };
        secondMoment46.incrementAll(doubleArray64);
        double double66 = secondMoment18.evaluate(doubleArray64);
        double double67 = secondMoment1.evaluate(doubleArray64);
        secondMoment1.clear();
        secondMoment1.clear();
        secondMoment1.clear();
        long long71 = secondMoment1.getN();
        double double72 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        long long74 = secondMoment1.getN();
        secondMoment1.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
    }

    @Test
    public void test11668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11668");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        secondMoment8.increment((double) (short) -1);
        secondMoment8.clear();
        secondMoment8.increment((double) 0L);
        boolean boolean17 = secondMoment1.equals((java.lang.Object) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        secondMoment19.increment((double) (short) -1);
        secondMoment19.clear();
        secondMoment19.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        secondMoment29.increment((double) (short) 0);
        double double34 = secondMoment29.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double double45 = secondMoment29.evaluate(doubleArray41);
        double double46 = secondMoment19.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double[] doubleArray59 = new double[] { 10, (byte) 100 };
        double double60 = secondMoment47.evaluate(doubleArray59);
        double double61 = secondMoment47.getResult();
        secondMoment47.increment((double) (short) -1);
        double[] doubleArray65 = new double[] { (short) 1 };
        secondMoment47.incrementAll(doubleArray65);
        double double67 = secondMoment19.evaluate(doubleArray65);
        double double68 = variance18.evaluate(doubleArray65);
        variance18.increment((double) (short) 1);
        variance18.clear();
        variance18.clear();
        double double73 = variance18.getResult();
        double double74 = variance18.getResult();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5d + "'", double34 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 74.0d + "'", double46 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue(Double.isNaN(double74));
    }

    @Test
    public void test11669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11669");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        secondMoment3.incrementAll(doubleArray9, 0, 0);
        double[] doubleArray15 = new double[] { 10, (byte) 100 };
        double double16 = secondMoment3.evaluate(doubleArray15);
        double double17 = secondMoment0.evaluate(doubleArray15);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        secondMoment21.clear();
        secondMoment21.increment(1.218679475E7d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        double double31 = variance30.getResult();
        variance30.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        secondMoment33.increment((double) (short) 0);
        long long38 = secondMoment33.getN();
        double double39 = secondMoment33.getResult();
        long long40 = secondMoment33.getN();
        double double41 = secondMoment33.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        secondMoment42.increment((double) (short) 0);
        double double47 = secondMoment42.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        double double58 = secondMoment42.evaluate(doubleArray54);
        double[] doubleArray59 = new double[] {};
        secondMoment42.incrementAll(doubleArray59);
        double double61 = secondMoment33.evaluate(doubleArray59);
        variance30.incrementAll(doubleArray59);
        secondMoment0.incrementAll(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        double[] doubleArray73 = new double[] { (-1L), 0, 10L };
        secondMoment67.incrementAll(doubleArray73, 0, 0);
        double[] doubleArray79 = new double[] { 10, (byte) 100 };
        double double80 = secondMoment67.evaluate(doubleArray79);
        double double81 = secondMoment64.evaluate(doubleArray79);
        secondMoment64.clear();
        secondMoment64.clear();
        boolean boolean84 = secondMoment0.equals((java.lang.Object) secondMoment64);
        double double85 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 2L + "'", long38 == 2L);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.5d + "'", double39 == 0.5d);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 2L + "'", long40 == 2L);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.5d + "'", double41 == 0.5d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.5d + "'", double47 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 74.0d + "'", double58 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5d + "'", double61 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 4050.0d + "'", double80 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
    }

    @Test
    public void test11670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11670");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        double double15 = secondMoment0.getResult();
        secondMoment0.increment((double) ' ');
        double double18 = secondMoment0.getResult();
        double double19 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long21 = variance20.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        secondMoment34.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        secondMoment39.increment((double) (short) 0);
        double double44 = secondMoment39.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        double double50 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double61 = secondMoment45.evaluate(doubleArray57);
        double[] doubleArray62 = new double[] {};
        secondMoment45.incrementAll(doubleArray62);
        secondMoment39.incrementAll(doubleArray62);
        secondMoment39.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double[] doubleArray80 = new double[] { 10, (byte) 100 };
        double double81 = secondMoment68.evaluate(doubleArray80);
        double double82 = variance67.evaluate(doubleArray80);
        double double83 = secondMoment34.evaluate(doubleArray80);
        double double85 = variance33.evaluate(doubleArray80, 3.8154765230000004E7d);
        double double86 = variance20.evaluate(doubleArray80);
        variance20.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4402.666666666667d + "'", double18 == 4402.666666666667d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4402.666666666667d + "'", double19 == 4402.666666666667d);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 3L + "'", long21 == 3L);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.5d + "'", double44 == 0.5d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 74.0d + "'", double61 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 4050.0d + "'", double85 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4050.0d + "'", double86 == 4050.0d);
    }

    @Test
    public void test11671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11671");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        double double22 = secondMoment8.getResult();
        long long23 = secondMoment8.getN();
        long long24 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double29 = variance28.getResult();
        variance28.increment(40.5d);
        long long32 = variance28.getN();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 2L + "'", long32 == 2L);
    }

    @Test
    public void test11672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11672");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double double17 = secondMoment1.evaluate(doubleArray13);
        double[] doubleArray18 = new double[] {};
        secondMoment1.incrementAll(doubleArray18);
        double double22 = variance0.evaluate(doubleArray18, (int) (byte) 0, 0);
        long long23 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        variance0.incrementAll(doubleArray36);
        long long42 = variance0.getN();
        variance0.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        double[] doubleArray60 = new double[] { 10, (byte) 100 };
        double double61 = secondMoment48.evaluate(doubleArray60);
        double double62 = secondMoment45.evaluate(doubleArray60);
        variance0.incrementAll(doubleArray60);
        variance0.clear();
        double double65 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        secondMoment66.increment((double) (short) 0);
        double double71 = secondMoment66.getResult();
        secondMoment66.clear();
        secondMoment66.increment((double) 100.0f);
        boolean boolean75 = variance0.equals((java.lang.Object) secondMoment66);
        long long76 = variance0.getN();
        double double77 = variance0.getResult();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 74.0d + "'", double17 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 3L + "'", long42 == 3L);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4050.0d + "'", double62 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.5d + "'", double71 == 0.5d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
    }

    @Test
    public void test11673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11673");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double17 = secondMoment1.getResult();
        long long18 = secondMoment1.getN();
        double double19 = secondMoment1.getResult();
        long long20 = secondMoment1.getN();
        double double21 = secondMoment1.getResult();
        long long22 = secondMoment1.getN();
        secondMoment1.increment(5.19248105780237E15d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4050.0d + "'", double19 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2L + "'", long20 == 2L);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
    }

    @Test
    public void test11674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11674");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double double11 = variance10.getResult();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 544.5d + "'", double8 == 544.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 544.5d + "'", double11 == 544.5d);
    }

    @Test
    public void test11675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11675");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double4 = variance3.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment5);
        secondMoment5.increment((double) (short) -1);
        secondMoment5.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment5);
        variance12.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        secondMoment15.increment((double) (short) 0);
        double double20 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double37 = secondMoment21.evaluate(doubleArray33);
        double[] doubleArray38 = new double[] {};
        secondMoment21.incrementAll(doubleArray38);
        secondMoment15.incrementAll(doubleArray38);
        secondMoment15.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment(0.5d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment46);
        long long57 = variance56.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        secondMoment58.incrementAll(doubleArray64, 0, 0);
        double double69 = variance56.evaluate(doubleArray64, (double) (short) -1);
        double double72 = secondMoment15.evaluate(doubleArray64, (int) (byte) 1, (int) (byte) 1);
        double double73 = variance12.evaluate(doubleArray64);
        variance3.incrementAll(doubleArray64);
        long long75 = variance3.getN();
        double double76 = variance3.getResult();
        java.lang.Class<?> wildcardClass77 = variance3.getClass();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5d + "'", double20 == 0.5d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1L + "'", long57 == 1L);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 37.0d + "'", double69 == 37.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 37.0d + "'", double73 == 37.0d);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test11676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11676");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        variance27.incrementAll(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        secondMoment39.increment((double) (short) -1);
        secondMoment39.clear();
        secondMoment39.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        secondMoment49.increment((double) (short) 0);
        double double54 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double double65 = secondMoment49.evaluate(doubleArray61);
        double double66 = secondMoment39.evaluate(doubleArray61);
        double double67 = variance27.evaluate(doubleArray61);
        double double68 = secondMoment11.evaluate(doubleArray61);
        secondMoment11.increment((double) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5d + "'", double54 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 37.0d + "'", double67 == 37.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
    }

    @Test
    public void test11677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11677");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double19 = variance18.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test11678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11678");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        secondMoment0.clear();
        double double16 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment(1.0159647967607791E11d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test11679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11679");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        long long6 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        long long13 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment((double) (short) -1);
        secondMoment15.clear();
        secondMoment15.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        boolean boolean29 = secondMoment15.equals((java.lang.Object) secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double[] doubleArray45 = new double[] { 10, (byte) 100 };
        double double46 = secondMoment33.evaluate(doubleArray45);
        double double47 = secondMoment30.evaluate(doubleArray45);
        secondMoment15.incrementAll(doubleArray45);
        secondMoment8.incrementAll(doubleArray45, (int) (short) 0, 0);
        secondMoment0.incrementAll(doubleArray45);
        secondMoment0.increment(37.0d);
        double double55 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4050.0d + "'", double46 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 7089.2d + "'", double55 == 7089.2d);
    }

    @Test
    public void test11680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11680");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment(2.880385675555556E7d);
        long long12 = secondMoment1.getN();
        double double13 = secondMoment1.getResult();
        secondMoment1.increment((double) (-1.0f));
        secondMoment1.clear();
        secondMoment1.increment((double) 2L);
        double double19 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment20);
        long long24 = secondMoment20.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double[] doubleArray40 = new double[] { 10, (byte) 100 };
        double double41 = secondMoment28.evaluate(doubleArray40);
        long long42 = secondMoment28.getN();
        secondMoment28.clear();
        double double44 = secondMoment28.getResult();
        secondMoment28.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double double57 = variance46.evaluate(doubleArray53);
        variance46.setBiasCorrected(false);
        variance46.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        secondMoment61.increment((double) (short) 0);
        double double66 = secondMoment61.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        double[] doubleArray73 = new double[] { (-1L), 0, 10L };
        secondMoment67.incrementAll(doubleArray73, 0, 0);
        double double77 = secondMoment61.evaluate(doubleArray73);
        double double78 = variance46.evaluate(doubleArray73);
        double double79 = variance26.evaluate(doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            double double82 = secondMoment1.evaluate(doubleArray73, (int) (byte) 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 544.5d + "'", double8 == 544.5d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 3L + "'", long12 == 3L);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 5.5310751405070744E14d + "'", double13 == 5.5310751405070744E14d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4050.0d + "'", double41 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 2L + "'", long42 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 37.0d + "'", double57 == 37.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.5d + "'", double66 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 74.0d + "'", double77 == 74.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 24.666666666666668d + "'", double78 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 37.0d + "'", double79 == 37.0d);
    }

    @Test
    public void test11681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11681");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        secondMoment0.incrementAll(doubleArray17, 0, (int) (short) 1);
        secondMoment0.clear();
        double double25 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment((double) 1L);
        secondMoment0.increment(4.373460066666667E7d);
        long long31 = secondMoment0.getN();
        secondMoment0.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 2L + "'", long31 == 2L);
    }

    @Test
    public void test11682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11682");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        secondMoment0.clear();
        secondMoment0.increment(2312.0d);
        secondMoment0.increment((double) (byte) -1);
        secondMoment0.clear();
        secondMoment0.clear();
    }

    @Test
    public void test11683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11683");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment((double) (short) -1);
        secondMoment16.clear();
        secondMoment16.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        secondMoment16.clear();
        secondMoment16.increment(0.0d);
        secondMoment16.increment(4710403.555555556d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment33);
        secondMoment33.increment((double) (short) -1);
        secondMoment33.clear();
        secondMoment33.increment((double) 'a');
        secondMoment33.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment33);
        long long44 = variance43.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        double double50 = secondMoment45.getResult();
        secondMoment45.clear();
        secondMoment45.increment(1.218679475E7d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment45);
        double double55 = variance54.getResult();
        variance54.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        secondMoment57.increment((double) (short) 0);
        long long62 = secondMoment57.getN();
        double double63 = secondMoment57.getResult();
        long long64 = secondMoment57.getN();
        double double65 = secondMoment57.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        secondMoment66.increment((double) (short) 0);
        double double71 = secondMoment66.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        double[] doubleArray78 = new double[] { (-1L), 0, 10L };
        secondMoment72.incrementAll(doubleArray78, 0, 0);
        double double82 = secondMoment66.evaluate(doubleArray78);
        double[] doubleArray83 = new double[] {};
        secondMoment66.incrementAll(doubleArray83);
        double double85 = secondMoment57.evaluate(doubleArray83);
        variance54.incrementAll(doubleArray83);
        double double87 = variance43.evaluate(doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            double double90 = secondMoment16.evaluate(doubleArray83, 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 2L + "'", long62 == 2L);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.5d + "'", double63 == 0.5d);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 2L + "'", long64 == 2L);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.5d + "'", double65 == 0.5d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.5d + "'", double71 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 74.0d + "'", double82 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.5d + "'", double85 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
    }

    @Test
    public void test11684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11684");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment(272.25d);
        long long7 = secondMoment1.getN();
        secondMoment1.increment(1.8756123185185187E7d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance10.clear();
        java.lang.Class<?> wildcardClass12 = variance10.getClass();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test11685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11685");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double[] doubleArray9 = new double[] { 0L, (byte) 1, 6140.666666666667d, 544.5d, (byte) 100 };
        double double10 = secondMoment0.evaluate(doubleArray9);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        secondMoment11.increment((double) (short) -1);
        secondMoment11.clear();
        secondMoment11.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        boolean boolean21 = secondMoment0.equals((java.lang.Object) secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) 1);
        double double25 = secondMoment0.getResult();
        secondMoment0.clear();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 1.0, 6140.666666666667, 544.5, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2.880385675555556E7d + "'", double10 == 2.880385675555556E7d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 3.033666413425926E7d + "'", double25 == 3.033666413425926E7d);
    }

    @Test
    public void test11686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11686");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        long long16 = secondMoment1.getN();
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance18.clear();
        variance18.clear();
        variance18.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment22);
        variance32.increment((double) (short) 100);
        variance32.clear();
        variance32.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        secondMoment39.incrementAll(doubleArray45, 0, 0);
        double[] doubleArray51 = new double[] { 10, (byte) 100 };
        double double52 = secondMoment39.evaluate(doubleArray51);
        double double53 = secondMoment39.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        secondMoment56.increment((double) (short) 0);
        double double61 = secondMoment56.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        secondMoment62.incrementAll(doubleArray68, 0, 0);
        double double72 = secondMoment56.evaluate(doubleArray68);
        double[] doubleArray73 = new double[] {};
        secondMoment56.incrementAll(doubleArray73);
        double double77 = variance55.evaluate(doubleArray73, (int) (byte) 0, 0);
        double double78 = variance54.evaluate(doubleArray73);
        variance32.incrementAll(doubleArray73);
        variance18.incrementAll(doubleArray73);
        double double81 = variance18.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment84 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment84.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment84);
        secondMoment84.increment((double) (short) -1);
        long long90 = secondMoment84.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance91 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment84);
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment84);
        org.apache.commons.math.stat.descriptive.moment.Variance variance93 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment84);
        secondMoment84.increment(5226.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance96 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment84);
        boolean boolean97 = variance18.equals((java.lang.Object) variance96);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4050.0d + "'", double52 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4050.0d + "'", double53 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5d + "'", double61 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 74.0d + "'", double72 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 2L + "'", long90 == 2L);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test11687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11687");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        secondMoment10.increment((double) ' ');
        boolean boolean18 = variance9.equals((java.lang.Object) secondMoment10);
        double double19 = secondMoment10.getResult();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 662.0d + "'", double19 == 662.0d);
    }

    @Test
    public void test11688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11688");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        secondMoment1.clear();
        secondMoment1.increment(29180.75d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment(74.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance23.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
    }

    @Test
    public void test11689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11689");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        boolean boolean14 = secondMoment0.equals((java.lang.Object) secondMoment9);
        secondMoment9.increment(60.666666666666664d);
        double double17 = secondMoment9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        double double21 = secondMoment18.getResult();
        double double22 = secondMoment18.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        double[] doubleArray29 = new double[] { (-1L), 0, 10L };
        secondMoment23.incrementAll(doubleArray29, 0, 0);
        double[] doubleArray35 = new double[] { 10, (byte) 100 };
        double double36 = secondMoment23.evaluate(doubleArray35);
        double double37 = secondMoment18.evaluate(doubleArray35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        secondMoment39.increment((double) (short) 0);
        double double44 = secondMoment39.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        double double50 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double61 = secondMoment45.evaluate(doubleArray57);
        double[] doubleArray62 = new double[] {};
        secondMoment45.incrementAll(doubleArray62);
        secondMoment39.incrementAll(doubleArray62);
        secondMoment39.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double[] doubleArray80 = new double[] { 10, (byte) 100 };
        double double81 = secondMoment68.evaluate(doubleArray80);
        double double82 = variance67.evaluate(doubleArray80);
        double double83 = variance38.evaluate(doubleArray80);
        double double84 = secondMoment18.evaluate(doubleArray80);
        secondMoment18.increment(5304.666666666667d);
        secondMoment18.clear();
        double double88 = secondMoment18.getResult();
        boolean boolean89 = secondMoment9.equals((java.lang.Object) secondMoment18);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 2413.8518518518517d + "'", double17 == 2413.8518518518517d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4050.0d + "'", double36 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4050.0d + "'", double37 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.5d + "'", double44 == 0.5d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 74.0d + "'", double61 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test11690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11690");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        double double15 = secondMoment0.getResult();
        secondMoment0.increment((double) ' ');
        double double18 = secondMoment0.getResult();
        secondMoment0.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4402.666666666667d + "'", double18 == 4402.666666666667d);
    }

    @Test
    public void test11691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11691");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        double double6 = secondMoment0.getResult();
        secondMoment0.increment((double) (byte) 10);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        long long21 = variance20.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        double double33 = variance20.evaluate(doubleArray28, (double) (short) -1);
        double double34 = secondMoment0.evaluate(doubleArray28);
        double double35 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance36.clear();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 37.0d + "'", double33 == 37.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 74.0d + "'", double34 == 74.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 74.0d + "'", double35 == 74.0d);
    }

    @Test
    public void test11692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11692");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        double double6 = secondMoment0.getResult();
        secondMoment0.increment((double) (byte) 10);
        secondMoment0.clear();
        secondMoment0.increment(3070.3333333333335d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        secondMoment13.increment((double) (short) 0);
        double double18 = secondMoment13.getResult();
        secondMoment13.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment13);
        long long21 = secondMoment13.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment((double) ' ');
        secondMoment33.increment((double) (-1.0f));
        secondMoment33.clear();
        boolean boolean39 = variance32.equals((java.lang.Object) secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        secondMoment40.increment((double) (short) 0);
        double double45 = secondMoment40.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        secondMoment46.increment((double) (short) 0);
        double double51 = secondMoment46.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        secondMoment52.incrementAll(doubleArray58, 0, 0);
        double double62 = secondMoment46.evaluate(doubleArray58);
        double[] doubleArray63 = new double[] {};
        secondMoment46.incrementAll(doubleArray63);
        secondMoment40.incrementAll(doubleArray63);
        secondMoment40.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        double[] doubleArray75 = new double[] { (-1L), 0, 10L };
        secondMoment69.incrementAll(doubleArray75, 0, 0);
        double[] doubleArray81 = new double[] { 10, (byte) 100 };
        double double82 = secondMoment69.evaluate(doubleArray81);
        double double83 = variance68.evaluate(doubleArray81);
        secondMoment33.incrementAll(doubleArray81);
        secondMoment13.incrementAll(doubleArray81);
        double double88 = secondMoment0.evaluate(doubleArray81, (int) (byte) 1, 0);
        secondMoment0.increment(2.025617172614778E13d);
        secondMoment0.increment(32.2d);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.5d + "'", double18 == 0.5d);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5d + "'", double45 == 0.5d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.5d + "'", double51 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 74.0d + "'", double62 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
    }

    @Test
    public void test11693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11693");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double double26 = secondMoment10.evaluate(doubleArray22);
        double double27 = secondMoment0.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double[] doubleArray40 = new double[] { 10, (byte) 100 };
        double double41 = secondMoment28.evaluate(doubleArray40);
        double double42 = secondMoment28.getResult();
        secondMoment28.increment((double) (short) -1);
        double[] doubleArray46 = new double[] { (short) 1 };
        secondMoment28.incrementAll(doubleArray46);
        double double48 = secondMoment0.evaluate(doubleArray46);
        secondMoment0.increment((double) (short) 1);
        secondMoment0.increment(1.4517874083333334E7d);
        secondMoment0.clear();
        double double54 = secondMoment0.getResult();
        secondMoment0.increment(1.5803546165550332E27d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 74.0d + "'", double26 == 74.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4050.0d + "'", double41 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4050.0d + "'", double42 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
    }

    @Test
    public void test11694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11694");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        secondMoment2.clear();
        secondMoment2.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        boolean boolean16 = secondMoment2.equals((java.lang.Object) secondMoment11);
        secondMoment2.clear();
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        secondMoment20.increment((double) (short) 0);
        long long25 = secondMoment20.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        secondMoment27.increment((double) (short) -1);
        secondMoment27.clear();
        secondMoment27.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        secondMoment36.increment((double) (short) 0);
        boolean boolean41 = secondMoment27.equals((java.lang.Object) secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double[] doubleArray57 = new double[] { 10, (byte) 100 };
        double double58 = secondMoment45.evaluate(doubleArray57);
        double double59 = secondMoment42.evaluate(doubleArray57);
        secondMoment27.incrementAll(doubleArray57);
        secondMoment20.incrementAll(doubleArray57, (int) (short) 0, 0);
        double double64 = secondMoment2.evaluate(doubleArray57);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2L + "'", long25 == 2L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4050.0d + "'", double58 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4050.0d + "'", double64 == 4050.0d);
    }

    @Test
    public void test11695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11695");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        secondMoment0.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance28.increment((double) '4');
        variance28.increment(3602.0d);
        variance28.setBiasCorrected(false);
        long long35 = variance28.getN();
        double double36 = variance28.getResult();
        double double37 = variance28.getResult();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 3L + "'", long35 == 3L);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.6666666666666666d + "'", double36 == 0.6666666666666666d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.6666666666666666d + "'", double37 == 0.6666666666666666d);
    }

    @Test
    public void test11696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11696");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        secondMoment1.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        double double27 = secondMoment11.evaluate(doubleArray23);
        double double28 = secondMoment1.evaluate(doubleArray23);
        double double29 = secondMoment1.getResult();
        secondMoment1.increment(4034.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        long long33 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double double35 = variance34.getResult();
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 74.0d + "'", double28 == 74.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 74.0d + "'", double29 == 74.0d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 4L + "'", long33 == 4L);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4062264.9166666665d + "'", double35 == 4062264.9166666665d);
    }

    @Test
    public void test11697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11697");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        long long11 = variance9.getN();
        boolean boolean12 = variance9.isBiasCorrected();
        double double13 = variance9.getResult();
        variance9.clear();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test11698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11698");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) 100);
        long long6 = secondMoment0.getN();
        double double7 = secondMoment0.getResult();
        secondMoment0.clear();
        double double9 = secondMoment0.getResult();
        long long10 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment((double) ' ');
        secondMoment22.increment((double) (-1.0f));
        secondMoment22.clear();
        boolean boolean28 = variance21.equals((java.lang.Object) secondMoment22);
        double double29 = variance21.getResult();
        variance21.increment(3602.0d);
        double double32 = variance21.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long35 = variance34.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        secondMoment36.increment((double) (short) 0);
        double double41 = secondMoment36.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        secondMoment42.incrementAll(doubleArray48, 0, 0);
        double double52 = secondMoment36.evaluate(doubleArray48);
        double double54 = variance34.evaluate(doubleArray48, (double) 4L);
        double double56 = variance21.evaluate(doubleArray48, 8.963593924513633E13d);
        secondMoment0.incrementAll(doubleArray48);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 2312.0d + "'", double7 == 2312.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.5d + "'", double41 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 74.0d + "'", double52 == 74.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 37.0d + "'", double54 == 37.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test11699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11699");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(544.5d);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long18 = variance17.getN();
        double double19 = variance17.getResult();
        double double20 = variance17.getResult();
        variance17.clear();
        double double22 = variance17.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment((double) ' ');
        secondMoment23.increment((double) (-1.0f));
        secondMoment23.clear();
        secondMoment23.clear();
        double double30 = secondMoment23.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        secondMoment31.increment((double) (short) 0);
        double double36 = secondMoment31.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        secondMoment37.increment((double) (short) 0);
        double double42 = secondMoment37.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        secondMoment43.incrementAll(doubleArray49, 0, 0);
        double double53 = secondMoment37.evaluate(doubleArray49);
        double[] doubleArray54 = new double[] {};
        secondMoment37.incrementAll(doubleArray54);
        secondMoment31.incrementAll(doubleArray54);
        secondMoment31.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment(1.0d);
        double[] doubleArray66 = new double[] { (-1L), 0, 10L };
        secondMoment60.incrementAll(doubleArray66, 0, 0);
        double[] doubleArray72 = new double[] { 10, (byte) 100 };
        double double73 = secondMoment60.evaluate(doubleArray72);
        double double74 = variance59.evaluate(doubleArray72);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment((double) ' ');
        double double78 = secondMoment75.getResult();
        boolean boolean79 = variance59.equals((java.lang.Object) double78);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment80.increment(1.0d);
        double[] doubleArray86 = new double[] { (-1L), 0, 10L };
        secondMoment80.incrementAll(doubleArray86, 0, 0);
        double double90 = variance59.evaluate(doubleArray86);
        secondMoment23.incrementAll(doubleArray86);
        double double94 = variance17.evaluate(doubleArray86, (int) (short) 0, (int) (byte) 1);
        double double95 = variance15.evaluate(doubleArray86);
        variance15.increment(8441189.1875d);
        boolean boolean98 = variance15.isBiasCorrected();
        long long99 = variance15.getN();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.5d + "'", double36 == 0.5d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.5d + "'", double42 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 74.0d + "'", double53 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 4050.0d + "'", double73 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 4050.0d + "'", double74 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 37.0d + "'", double90 == 37.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 37.0d + "'", double95 == 37.0d);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + long99 + "' != '" + 0L + "'", long99 == 0L);
    }

    @Test
    public void test11700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11700");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        secondMoment13.increment((double) (short) 0);
        double double18 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        double double24 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double double35 = secondMoment19.evaluate(doubleArray31);
        double[] doubleArray36 = new double[] {};
        secondMoment19.incrementAll(doubleArray36);
        secondMoment13.incrementAll(doubleArray36);
        long long39 = secondMoment13.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        secondMoment41.incrementAll(doubleArray47, 0, 0);
        double double51 = variance40.evaluate(doubleArray47);
        boolean boolean52 = secondMoment1.equals((java.lang.Object) doubleArray47);
        secondMoment1.increment((double) 100L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.5d + "'", double18 == 0.5d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5d + "'", double24 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 74.0d + "'", double35 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 2L + "'", long39 == 2L);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 37.0d + "'", double51 == 37.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test11701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11701");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) '4');
        long long5 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double7 = variance6.getResult();
        boolean boolean8 = variance6.isBiasCorrected();
        variance6.increment(1576.2666666666667d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        secondMoment12.increment((double) (short) 0);
        long long17 = secondMoment12.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        double double24 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        secondMoment25.increment((double) (short) 0);
        double double30 = secondMoment25.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        double double41 = secondMoment25.evaluate(doubleArray37);
        double[] doubleArray42 = new double[] {};
        secondMoment25.incrementAll(doubleArray42);
        secondMoment19.incrementAll(doubleArray42);
        secondMoment19.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        double[] doubleArray60 = new double[] { 10, (byte) 100 };
        double double61 = secondMoment48.evaluate(doubleArray60);
        double double62 = variance47.evaluate(doubleArray60);
        long long63 = variance47.getN();
        double double64 = variance47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        double[] doubleArray71 = new double[] { (-1L), 0, 10L };
        secondMoment65.incrementAll(doubleArray71, 0, 0);
        double[] doubleArray77 = new double[] { 10, (byte) 100 };
        double double78 = secondMoment65.evaluate(doubleArray77);
        double double79 = secondMoment65.getResult();
        secondMoment65.increment((double) (short) -1);
        double[] doubleArray83 = new double[] { (short) 1 };
        secondMoment65.incrementAll(doubleArray83);
        double double85 = variance47.evaluate(doubleArray83);
        double double88 = secondMoment12.evaluate(doubleArray83, (int) (short) 1, 0);
        variance6.incrementAll(doubleArray83);
        variance6.increment((double) (-1.0f));
        boolean boolean92 = variance6.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5d + "'", double24 == 0.5d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.5d + "'", double30 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 74.0d + "'", double41 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4050.0d + "'", double62 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 3L + "'", long63 == 3L);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 4050.0d + "'", double78 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4050.0d + "'", double79 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5d + "'", double88 == 0.5d);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test11702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11702");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        secondMoment3.increment((double) (short) 0);
        double double8 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double19 = secondMoment3.evaluate(doubleArray15);
        double[] doubleArray20 = new double[] {};
        secondMoment3.incrementAll(doubleArray20);
        double double22 = secondMoment0.evaluate(doubleArray20);
        secondMoment0.increment((double) 3L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        double[] doubleArray38 = new double[] { 10, (byte) 100 };
        double double39 = secondMoment26.evaluate(doubleArray38);
        double double40 = secondMoment26.getResult();
        long long41 = secondMoment26.getN();
        long long42 = secondMoment26.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        long long44 = secondMoment26.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double[] doubleArray58 = new double[] { 10, (byte) 100 };
        double double59 = secondMoment46.evaluate(doubleArray58);
        double double60 = secondMoment46.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment46);
        long long62 = secondMoment46.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment((double) ' ');
        secondMoment63.increment((double) (-1.0f));
        secondMoment63.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        double[] doubleArray75 = new double[] { (-1L), 0, 10L };
        secondMoment69.incrementAll(doubleArray75, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment69);
        long long80 = variance79.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment81.increment(1.0d);
        double[] doubleArray87 = new double[] { (-1L), 0, 10L };
        secondMoment81.incrementAll(doubleArray87, 0, 0);
        double double92 = variance79.evaluate(doubleArray87, (double) (short) -1);
        double double93 = secondMoment63.evaluate(doubleArray87);
        double double94 = secondMoment46.evaluate(doubleArray87);
        secondMoment26.incrementAll(doubleArray87);
        secondMoment0.incrementAll(doubleArray87);
        double double97 = secondMoment0.getResult();
        double double98 = secondMoment0.getResult();
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5d + "'", double8 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 74.0d + "'", double19 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4050.0d + "'", double40 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 2L + "'", long41 == 2L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 2L + "'", long42 == 2L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 2L + "'", long44 == 2L);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 2L + "'", long62 == 2L);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 1L + "'", long80 == 1L);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 37.0d + "'", double92 == 37.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 74.0d + "'", double93 == 74.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 74.0d + "'", double94 == 74.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 77.2d + "'", double97 == 77.2d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 77.2d + "'", double98 == 77.2d);
    }

    @Test
    public void test11703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11703");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        double double22 = secondMoment8.getResult();
        long long23 = secondMoment8.getN();
        long long24 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance28.clear();
        variance28.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        secondMoment32.incrementAll(doubleArray38, 0, 0);
        double[] doubleArray44 = new double[] { 10, (byte) 100 };
        double double45 = secondMoment32.evaluate(doubleArray44);
        long long46 = secondMoment32.getN();
        secondMoment32.clear();
        double double48 = secondMoment32.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        secondMoment51.increment((double) (short) 0);
        double double56 = secondMoment51.getResult();
        secondMoment51.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment51);
        variance58.increment((double) (short) 0);
        variance58.clear();
        variance58.increment((double) 1L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        secondMoment64.incrementAll(doubleArray70, 0, 0);
        double double74 = variance58.evaluate(doubleArray70);
        secondMoment32.incrementAll(doubleArray70);
        double double76 = variance28.evaluate(doubleArray70);
        variance28.clear();
        variance28.setBiasCorrected(false);
        long long80 = variance28.getN();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4050.0d + "'", double45 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 2L + "'", long46 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.5d + "'", double56 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 24.666666666666668d + "'", double74 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 37.0d + "'", double76 == 37.0d);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 2L + "'", long80 == 2L);
    }

    @Test
    public void test11704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11704");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment(4.321154463792899E13d);
        double double12 = secondMoment1.getResult();
        secondMoment1.clear();
        double double14 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.24482505999626E27d + "'", double12 == 1.24482505999626E27d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test11705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11705");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double20 = variance8.evaluate(doubleArray15, (double) 1L);
        long long21 = variance8.getN();
        long long22 = variance8.getN();
        long long23 = variance8.getN();
        variance8.setBiasCorrected(true);
        java.lang.Class<?> wildcardClass26 = variance8.getClass();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 24.666666666666668d + "'", double20 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2L + "'", long21 == 2L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test11706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11706");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        secondMoment12.increment((double) (short) 0);
        double double17 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double28 = secondMoment12.evaluate(doubleArray24);
        double[] doubleArray29 = new double[] {};
        secondMoment12.incrementAll(doubleArray29);
        secondMoment6.incrementAll(doubleArray29);
        secondMoment6.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double[] doubleArray47 = new double[] { 10, (byte) 100 };
        double double48 = secondMoment35.evaluate(doubleArray47);
        double double49 = variance34.evaluate(doubleArray47);
        double double50 = secondMoment1.evaluate(doubleArray47);
        secondMoment1.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment53);
        secondMoment53.increment((double) (short) -1);
        secondMoment53.clear();
        secondMoment53.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        variance62.incrementAll(doubleArray69);
        double double74 = secondMoment1.evaluate(doubleArray69);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double[] doubleArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = secondMoment1.evaluate(doubleArray77, (int) (byte) 10, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.5d + "'", double17 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 74.0d + "'", double28 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 74.0d + "'", double74 == 74.0d);
    }

    @Test
    public void test11707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11707");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment(2.880385675555556E7d);
        long long12 = secondMoment1.getN();
        secondMoment1.clear();
        secondMoment1.increment(758519.0185185187d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 544.5d + "'", double8 == 544.5d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 3L + "'", long12 == 3L);
    }

    @Test
    public void test11708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11708");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        secondMoment2.increment((double) (short) 0);
        long long7 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        double double14 = secondMoment9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        secondMoment15.increment((double) (short) 0);
        double double20 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        secondMoment21.incrementAll(doubleArray27, 0, 0);
        double double31 = secondMoment15.evaluate(doubleArray27);
        double[] doubleArray32 = new double[] {};
        secondMoment15.incrementAll(doubleArray32);
        secondMoment9.incrementAll(doubleArray32);
        secondMoment9.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        secondMoment38.incrementAll(doubleArray44, 0, 0);
        double[] doubleArray50 = new double[] { 10, (byte) 100 };
        double double51 = secondMoment38.evaluate(doubleArray50);
        double double52 = variance37.evaluate(doubleArray50);
        long long53 = variance37.getN();
        double double54 = variance37.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double[] doubleArray67 = new double[] { 10, (byte) 100 };
        double double68 = secondMoment55.evaluate(doubleArray67);
        double double69 = secondMoment55.getResult();
        secondMoment55.increment((double) (short) -1);
        double[] doubleArray73 = new double[] { (short) 1 };
        secondMoment55.incrementAll(doubleArray73);
        double double75 = variance37.evaluate(doubleArray73);
        double double78 = secondMoment2.evaluate(doubleArray73, (int) (short) 1, 0);
        secondMoment2.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.increment((double) '4');
        secondMoment2.increment(2099.2d);
        secondMoment2.clear();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.5d + "'", double14 == 0.5d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5d + "'", double20 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 74.0d + "'", double31 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4050.0d + "'", double51 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4050.0d + "'", double52 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 3L + "'", long53 == 3L);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4050.0d + "'", double68 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4050.0d + "'", double69 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.5d + "'", double78 == 0.5d);
    }

    @Test
    public void test11709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11709");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment((double) (short) -1);
        secondMoment15.clear();
        secondMoment15.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment15);
        boolean boolean25 = secondMoment0.equals((java.lang.Object) secondMoment15);
        double double26 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.clear();
        secondMoment15.clear();
        double double30 = secondMoment15.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test11710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11710");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double double24 = secondMoment8.evaluate(doubleArray20);
        secondMoment0.incrementAll(doubleArray20, 0, (int) (short) 0);
        long long28 = secondMoment0.getN();
        secondMoment0.increment((double) 100.0f);
        secondMoment0.increment(2201.3333333333335d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 74.0d + "'", double24 == 74.0d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test11711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11711");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double37 = secondMoment21.evaluate(doubleArray33);
        double[] doubleArray38 = new double[] {};
        secondMoment21.incrementAll(doubleArray38);
        double double42 = variance20.evaluate(doubleArray38, (int) (byte) 0, 0);
        long long43 = variance20.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        secondMoment44.increment((double) (short) 0);
        double double49 = secondMoment44.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double double60 = secondMoment44.evaluate(doubleArray56);
        variance20.incrementAll(doubleArray56);
        long long62 = variance20.getN();
        variance20.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double[] doubleArray80 = new double[] { 10, (byte) 100 };
        double double81 = secondMoment68.evaluate(doubleArray80);
        double double82 = secondMoment65.evaluate(doubleArray80);
        variance20.incrementAll(doubleArray80);
        secondMoment1.incrementAll(doubleArray80);
        long long85 = secondMoment1.getN();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double88 = secondMoment1.getResult();
        secondMoment1.clear();
        double double90 = secondMoment1.getResult();
        secondMoment1.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.5d + "'", double49 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 74.0d + "'", double60 == 74.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 3L + "'", long62 == 3L);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 2L + "'", long85 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue(Double.isNaN(double90));
    }

    @Test
    public void test11712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11712");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double10 = variance9.getResult();
        variance9.setBiasCorrected(true);
        double double13 = variance9.getResult();
        long long14 = variance9.getN();
        double double15 = variance9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double[] doubleArray28 = new double[] { 10, (byte) 100 };
        double double29 = secondMoment16.evaluate(doubleArray28);
        long long30 = secondMoment16.getN();
        secondMoment16.clear();
        secondMoment16.clear();
        double double33 = secondMoment16.getResult();
        secondMoment16.increment((double) 100.0f);
        secondMoment16.clear();
        double double37 = secondMoment16.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        variance39.increment(1.325996617999068E14d);
        long long42 = variance39.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment43);
        secondMoment43.increment((double) (short) -1);
        secondMoment43.clear();
        secondMoment43.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment43);
        long long53 = secondMoment43.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long56 = variance55.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        secondMoment57.increment((double) (short) 0);
        double double62 = secondMoment57.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        double double73 = secondMoment57.evaluate(doubleArray69);
        variance55.incrementAll(doubleArray69);
        double double75 = secondMoment43.evaluate(doubleArray69);
        double double77 = variance39.evaluate(doubleArray69, 2.67977393860392896E17d);
        // The following exception was thrown during execution in test generation
        try {
            double double80 = variance9.evaluate(doubleArray69, (int) (short) 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4050.0d + "'", double29 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 2L + "'", long30 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.5d + "'", double62 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 74.0d + "'", double73 == 74.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 74.0d + "'", double75 == 74.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.8446744073709552E19d + "'", double77 == 1.8446744073709552E19d);
    }

    @Test
    public void test11713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11713");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        secondMoment1.clear();
        double double9 = secondMoment1.getResult();
        long long10 = secondMoment1.getN();
        double double11 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment13);
        secondMoment13.increment((double) (short) -1);
        secondMoment13.clear();
        secondMoment13.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        secondMoment23.increment((double) (short) 0);
        double double28 = secondMoment23.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double double39 = secondMoment23.evaluate(doubleArray35);
        double double40 = secondMoment13.evaluate(doubleArray35);
        double double41 = secondMoment13.getResult();
        secondMoment13.increment(4034.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment44);
        double[] doubleArray53 = new double[] { 0L, (byte) 1, 6140.666666666667d, 544.5d, (byte) 100 };
        double double54 = secondMoment44.evaluate(doubleArray53);
        double double55 = secondMoment13.evaluate(doubleArray53);
        double double56 = secondMoment1.evaluate(doubleArray53);
        secondMoment1.increment(1.0873684323731136E7d);
        long long59 = secondMoment1.getN();
        double double60 = secondMoment1.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.5d + "'", double28 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 74.0d + "'", double39 == 74.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 74.0d + "'", double41 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 1.0, 6140.666666666667, 544.5, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2.880385675555556E7d + "'", double54 == 2.880385675555556E7d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2.880385675555556E7d + "'", double55 == 2.880385675555556E7d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2.880385675555556E7d + "'", double56 == 2.880385675555556E7d);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 6L + "'", long59 == 6L);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 9.850627577102172E13d + "'", double60 == 9.850627577102172E13d);
    }

    @Test
    public void test11714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11714");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        double double6 = secondMoment0.getResult();
        secondMoment0.increment((double) (byte) 10);
        secondMoment0.clear();
        long long10 = secondMoment0.getN();
        secondMoment0.increment(1.8756123185185187E7d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double14 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double[] doubleArray28 = new double[] { 10, (byte) 100 };
        double double29 = secondMoment16.evaluate(doubleArray28);
        double double30 = secondMoment16.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        long long32 = secondMoment16.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment((double) ' ');
        secondMoment33.increment((double) (-1.0f));
        secondMoment33.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        secondMoment39.incrementAll(doubleArray45, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        long long50 = variance49.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double62 = variance49.evaluate(doubleArray57, (double) (short) -1);
        double double63 = secondMoment33.evaluate(doubleArray57);
        double double64 = secondMoment16.evaluate(doubleArray57);
        secondMoment0.incrementAll(doubleArray57);
        double double66 = secondMoment0.getResult();
        double double67 = secondMoment0.getResult();
        double double68 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4050.0d + "'", double29 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4050.0d + "'", double30 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 2L + "'", long32 == 2L);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 37.0d + "'", double62 == 37.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 74.0d + "'", double64 == 74.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2.638440333009074E14d + "'", double66 == 2.638440333009074E14d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2.638440333009074E14d + "'", double67 == 2.638440333009074E14d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2.638440333009074E14d + "'", double68 == 2.638440333009074E14d);
    }

    @Test
    public void test11715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11715");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        long long11 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment14);
        secondMoment14.increment((double) (short) -1);
        secondMoment14.clear();
        secondMoment14.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        variance23.incrementAll(doubleArray30);
        variance23.clear();
        variance23.increment((double) 10.0f);
        variance23.increment(2025.0d);
        boolean boolean40 = variance23.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        secondMoment41.increment((double) (short) 0);
        double double46 = secondMoment41.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double double63 = secondMoment47.evaluate(doubleArray59);
        double[] doubleArray64 = new double[] {};
        secondMoment47.incrementAll(doubleArray64);
        secondMoment41.incrementAll(doubleArray64);
        variance23.incrementAll(doubleArray64, 0, (int) (byte) 0);
        double double70 = secondMoment1.evaluate(doubleArray64);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.5d + "'", double46 == 0.5d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
    }

    @Test
    public void test11716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11716");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        double double13 = secondMoment10.getResult();
        secondMoment10.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long19 = variance18.getN();
        double double20 = variance18.getResult();
        variance18.increment((double) (short) 100);
        variance18.increment((double) 3L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        double[] doubleArray38 = new double[] { 10, (byte) 100 };
        double double39 = secondMoment26.evaluate(doubleArray38);
        long long40 = secondMoment26.getN();
        secondMoment26.clear();
        double double42 = secondMoment26.getResult();
        secondMoment26.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double double55 = variance44.evaluate(doubleArray51);
        double double57 = variance18.evaluate(doubleArray51, (double) 100);
        double double58 = variance16.evaluate(doubleArray51);
        secondMoment3.incrementAll(doubleArray51);
        secondMoment3.increment(2.6666666666666665d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 2L + "'", long40 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 37.0d + "'", double55 == 37.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 37.0d + "'", double57 == 37.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 37.0d + "'", double58 == 37.0d);
    }

    @Test
    public void test11717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11717");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        variance27.incrementAll(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        secondMoment39.increment((double) (short) -1);
        secondMoment39.clear();
        secondMoment39.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        secondMoment49.increment((double) (short) 0);
        double double54 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double double65 = secondMoment49.evaluate(doubleArray61);
        double double66 = secondMoment39.evaluate(doubleArray61);
        double double67 = variance27.evaluate(doubleArray61);
        double double68 = secondMoment11.evaluate(doubleArray61);
        secondMoment11.clear();
        secondMoment11.increment((double) (short) 100);
        double double72 = secondMoment11.getResult();
        double double73 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        secondMoment74.incrementAll(doubleArray80, 0, 0);
        boolean boolean84 = secondMoment11.equals((java.lang.Object) doubleArray80);
        java.lang.Class<?> wildcardClass85 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5d + "'", double54 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 37.0d + "'", double67 == 37.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test11718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11718");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        secondMoment2.increment((double) (short) 0);
        double double7 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        double double10 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment((double) ' ');
        secondMoment24.increment((double) (-1.0f));
        secondMoment24.clear();
        boolean boolean30 = variance23.equals((java.lang.Object) secondMoment24);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment34);
        secondMoment34.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        secondMoment34.clear();
        secondMoment34.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment42);
        secondMoment42.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment48);
        long long59 = variance58.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment(1.0d);
        double[] doubleArray66 = new double[] { (-1L), 0, 10L };
        secondMoment60.incrementAll(doubleArray66, 0, 0);
        double double71 = variance58.evaluate(doubleArray66, (double) (short) -1);
        double double72 = secondMoment42.evaluate(doubleArray66);
        double double73 = secondMoment34.evaluate(doubleArray66);
        double double76 = variance23.evaluate(doubleArray66, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double79 = variance12.evaluate(doubleArray66, (int) (byte) 100, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 37.0d + "'", double71 == 37.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 74.0d + "'", double72 == 74.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 74.0d + "'", double73 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
    }

    @Test
    public void test11719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11719");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        long long8 = secondMoment2.getN();
        double double9 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.increment(2.880385675555556E7d);
        long long13 = secondMoment2.getN();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        variance15.setBiasCorrected(true);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 544.5d + "'", double9 == 544.5d);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 3L + "'", long13 == 3L);
    }

    @Test
    public void test11720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11720");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        double double22 = secondMoment8.getResult();
        long long23 = secondMoment8.getN();
        long long24 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance28.clear();
        variance28.clear();
        double double31 = variance28.getResult();
        boolean boolean32 = variance28.isBiasCorrected();
        double double33 = variance28.getResult();
        java.lang.Object obj34 = null;
        boolean boolean35 = variance28.equals(obj34);
        variance28.clear();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5d + "'", double31 == 0.5d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test11721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11721");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment(24.666666666666668d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        secondMoment22.increment((double) (short) 0);
        double double27 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double double38 = secondMoment22.evaluate(doubleArray34);
        double[] doubleArray39 = new double[] {};
        secondMoment22.incrementAll(doubleArray39);
        double double41 = secondMoment19.evaluate(doubleArray39);
        secondMoment1.incrementAll(doubleArray39);
        long long43 = secondMoment1.getN();
        double double44 = secondMoment1.getResult();
        secondMoment1.clear();
        long long46 = secondMoment1.getN();
        long long47 = secondMoment1.getN();
        secondMoment1.increment(4777915.2034750795d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5d + "'", double27 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 74.0d + "'", double38 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 3L + "'", long43 == 3L);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4663.407407407407d + "'", double44 == 4663.407407407407d);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
    }

    @Test
    public void test11722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11722");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        long long17 = variance16.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double29 = variance16.evaluate(doubleArray24, (double) (short) -1);
        double double30 = secondMoment0.evaluate(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double32 = variance31.getResult();
        variance31.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment35);
        variance39.setBiasCorrected(true);
        double double42 = variance39.getResult();
        boolean boolean43 = variance31.equals((java.lang.Object) variance39);
        double double44 = variance39.getResult();
        variance39.increment(10.0d);
        double double47 = variance39.getResult();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 37.0d + "'", double32 == 37.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
    }

    @Test
    public void test11723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11723");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        secondMoment3.increment((double) (short) 0);
        double double8 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double19 = secondMoment3.evaluate(doubleArray15);
        double[] doubleArray20 = new double[] {};
        secondMoment3.incrementAll(doubleArray20);
        double double24 = variance2.evaluate(doubleArray20, (int) (byte) 0, 0);
        variance1.incrementAll(doubleArray20);
        double double26 = variance1.getResult();
        double double27 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long30 = variance29.getN();
        double double31 = variance29.getResult();
        variance29.increment((double) (short) 100);
        boolean boolean34 = variance29.isBiasCorrected();
        long long35 = variance29.getN();
        variance29.clear();
        variance29.clear();
        boolean boolean38 = variance1.equals((java.lang.Object) variance29);
        variance29.increment(Double.NaN);
        long long41 = variance29.getN();
        double double42 = variance29.getResult();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5d + "'", double8 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 74.0d + "'", double19 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test11724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11724");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        secondMoment9.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        long long26 = variance25.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double38 = variance25.evaluate(doubleArray33, (double) (short) -1);
        double double39 = secondMoment9.evaluate(doubleArray33);
        double double40 = secondMoment1.evaluate(doubleArray33);
        secondMoment1.increment(36.916666666666664d);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment((double) ' ');
        secondMoment55.increment((double) (-1.0f));
        secondMoment55.clear();
        boolean boolean61 = variance54.equals((java.lang.Object) secondMoment55);
        long long62 = secondMoment55.getN();
        secondMoment55.clear();
        secondMoment55.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long67 = variance66.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        secondMoment68.increment((double) (short) 0);
        double double73 = secondMoment68.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        secondMoment74.incrementAll(doubleArray80, 0, 0);
        double double84 = secondMoment68.evaluate(doubleArray80);
        variance66.incrementAll(doubleArray80);
        secondMoment55.incrementAll(doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double double89 = secondMoment1.evaluate(doubleArray80, 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 37.0d + "'", double38 == 37.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 74.0d + "'", double39 == 74.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5d + "'", double73 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 74.0d + "'", double84 == 74.0d);
    }

    @Test
    public void test11725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11725");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        secondMoment1.increment(74.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        boolean boolean9 = variance8.isBiasCorrected();
        double double10 = variance8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        secondMoment11.increment((double) (short) -1);
        secondMoment11.clear();
        double double18 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        double double24 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double double35 = secondMoment19.evaluate(doubleArray31);
        secondMoment11.incrementAll(doubleArray31, 0, (int) (short) 0);
        long long39 = secondMoment11.getN();
        secondMoment11.increment((double) (short) 1);
        secondMoment11.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        double[] doubleArray56 = new double[] { 10, (byte) 100 };
        double double57 = secondMoment44.evaluate(doubleArray56);
        double double58 = secondMoment44.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment44);
        variance59.increment(0.0d);
        long long62 = variance59.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment63);
        secondMoment63.increment((double) (short) -1);
        secondMoment63.clear();
        secondMoment63.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        secondMoment72.increment((double) (short) 0);
        boolean boolean77 = secondMoment63.equals((java.lang.Object) secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment78.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment81.increment(1.0d);
        double[] doubleArray87 = new double[] { (-1L), 0, 10L };
        secondMoment81.incrementAll(doubleArray87, 0, 0);
        double[] doubleArray93 = new double[] { 10, (byte) 100 };
        double double94 = secondMoment81.evaluate(doubleArray93);
        double double95 = secondMoment78.evaluate(doubleArray93);
        secondMoment63.incrementAll(doubleArray93);
        double double97 = variance59.evaluate(doubleArray93);
        double double98 = secondMoment11.evaluate(doubleArray93);
        double double99 = variance8.evaluate(doubleArray93);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1801.0d + "'", double10 == 1801.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5d + "'", double24 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 74.0d + "'", double35 == 74.0d);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4050.0d + "'", double57 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4050.0d + "'", double58 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 2L + "'", long62 == 2L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 4050.0d + "'", double94 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 4050.0d + "'", double95 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 2025.0d + "'", double97 == 2025.0d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 4050.0d + "'", double98 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 4050.0d + "'", double99 == 4050.0d);
    }

    @Test
    public void test11726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11726");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment((double) ' ');
        double double9 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        boolean boolean11 = secondMoment0.equals((java.lang.Object) variance10);
        boolean boolean12 = variance10.isBiasCorrected();
        boolean boolean13 = variance10.isBiasCorrected();
        variance10.clear();
        double[] doubleArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double18 = variance10.evaluate(doubleArray15, (int) (short) -1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test11727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11727");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double double26 = secondMoment10.evaluate(doubleArray22);
        double double27 = secondMoment0.evaluate(doubleArray22);
        secondMoment0.increment((double) 'a');
        secondMoment0.increment((double) 0);
        secondMoment0.increment(2413.8518518518517d);
        secondMoment0.increment(3.0d);
        secondMoment0.increment(4267109.2d);
        double double38 = secondMoment0.getResult();
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 74.0d + "'", double26 == 74.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.592950702864932E13d + "'", double38 == 1.592950702864932E13d);
    }

    @Test
    public void test11728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11728");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        secondMoment2.increment((double) (short) 0);
        double double7 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        double double10 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        java.lang.Class<?> wildcardClass13 = variance12.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test11729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11729");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        double[] doubleArray18 = new double[] { (short) 1 };
        secondMoment0.incrementAll(doubleArray18);
        secondMoment0.clear();
        double double21 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test11730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11730");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        boolean boolean11 = variance9.isBiasCorrected();
        long long12 = variance9.getN();
        variance9.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        secondMoment15.clear();
        double double22 = secondMoment15.getResult();
        secondMoment15.increment((double) (short) 0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment25);
        secondMoment25.increment((double) (short) -1);
        secondMoment25.clear();
        secondMoment25.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        secondMoment34.increment((double) (short) 0);
        boolean boolean39 = secondMoment25.equals((java.lang.Object) secondMoment34);
        long long40 = secondMoment34.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        secondMoment42.incrementAll(doubleArray48, 0, 0);
        double[] doubleArray54 = new double[] { 10, (byte) 100 };
        double double55 = secondMoment42.evaluate(doubleArray54);
        double double56 = secondMoment42.getResult();
        secondMoment42.increment((double) (short) -1);
        double double59 = secondMoment42.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment(1.0d);
        double[] doubleArray66 = new double[] { (-1L), 0, 10L };
        secondMoment60.incrementAll(doubleArray66, 0, 0);
        double[] doubleArray72 = new double[] { 10, (byte) 100 };
        double double73 = secondMoment60.evaluate(doubleArray72);
        double double74 = secondMoment42.evaluate(doubleArray72);
        double double75 = variance41.evaluate(doubleArray72);
        double double76 = secondMoment15.evaluate(doubleArray72);
        variance9.incrementAll(doubleArray72);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 2L + "'", long40 == 2L);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4050.0d + "'", double55 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4050.0d + "'", double56 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 6140.666666666667d + "'", double59 == 6140.666666666667d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 4050.0d + "'", double73 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 4050.0d + "'", double74 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 4050.0d + "'", double75 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4050.0d + "'", double76 == 4050.0d);
    }

    @Test
    public void test11731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11731");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double[] doubleArray30 = new double[] { 10, (byte) 100 };
        double double31 = secondMoment18.evaluate(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment33);
        secondMoment33.increment((double) (short) -1);
        secondMoment33.clear();
        secondMoment33.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment33);
        boolean boolean43 = secondMoment18.equals((java.lang.Object) secondMoment33);
        double double44 = secondMoment33.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        secondMoment59.increment((double) (short) 0);
        double double64 = secondMoment59.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        double[] doubleArray71 = new double[] { (-1L), 0, 10L };
        secondMoment65.incrementAll(doubleArray71, 0, 0);
        double double75 = secondMoment59.evaluate(doubleArray71);
        double[] doubleArray76 = new double[] {};
        secondMoment59.incrementAll(doubleArray76);
        double double78 = secondMoment56.evaluate(doubleArray76);
        double double79 = variance55.evaluate(doubleArray76);
        double double80 = secondMoment33.evaluate(doubleArray76);
        double double81 = secondMoment0.evaluate(doubleArray76);
        double double82 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4050.0d + "'", double31 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.5d + "'", double64 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 74.0d + "'", double75 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
    }

    @Test
    public void test11732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11732");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        secondMoment5.increment((double) (short) 0);
        double double10 = secondMoment5.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        double double27 = secondMoment11.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] {};
        secondMoment11.incrementAll(doubleArray28);
        secondMoment5.incrementAll(doubleArray28);
        secondMoment5.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double[] doubleArray46 = new double[] { 10, (byte) 100 };
        double double47 = secondMoment34.evaluate(doubleArray46);
        double double48 = variance33.evaluate(doubleArray46);
        double double49 = secondMoment0.evaluate(doubleArray46);
        secondMoment0.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        double[] doubleArray60 = new double[] { (-1L), 0, 10L };
        secondMoment54.incrementAll(doubleArray60, 0, 0);
        double[] doubleArray66 = new double[] { 10, (byte) 100 };
        double double67 = secondMoment54.evaluate(doubleArray66);
        double double68 = secondMoment54.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment(1.0d);
        secondMoment71.increment((double) (short) 0);
        double double76 = secondMoment71.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment77.increment(1.0d);
        double[] doubleArray83 = new double[] { (-1L), 0, 10L };
        secondMoment77.incrementAll(doubleArray83, 0, 0);
        double double87 = secondMoment71.evaluate(doubleArray83);
        double[] doubleArray88 = new double[] {};
        secondMoment71.incrementAll(doubleArray88);
        double double92 = variance70.evaluate(doubleArray88, (int) (byte) 0, 0);
        double double93 = variance69.evaluate(doubleArray88);
        double double94 = variance52.evaluate(doubleArray88);
        variance52.increment((double) 10);
        double double97 = variance52.getResult();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.5d + "'", double10 == 0.5d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4050.0d + "'", double67 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4050.0d + "'", double68 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.5d + "'", double76 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 74.0d + "'", double87 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertTrue(Double.isNaN(double93));
        org.junit.Assert.assertTrue(Double.isNaN(double94));
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 3070.3333333333335d + "'", double97 == 3070.3333333333335d);
    }

    @Test
    public void test11733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11733");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double8 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        double[] doubleArray22 = new double[] { 10, (byte) 100 };
        double double23 = secondMoment10.evaluate(doubleArray22);
        double double24 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        double double32 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double double43 = secondMoment27.evaluate(doubleArray39);
        double[] doubleArray44 = new double[] {};
        secondMoment27.incrementAll(doubleArray44);
        double double48 = variance26.evaluate(doubleArray44, (int) (byte) 0, 0);
        double double49 = variance25.evaluate(doubleArray44);
        secondMoment0.incrementAll(doubleArray44);
        secondMoment0.clear();
        secondMoment0.increment((-1.0d));
        secondMoment0.clear();
        double double55 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance56.clear();
        long long58 = variance56.getN();
        variance56.increment(12.499999999995453d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4050.0d + "'", double23 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5d + "'", double32 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
    }

    @Test
    public void test11734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11734");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.increment(30.333333333333332d);
        java.lang.Class<?> wildcardClass8 = secondMoment0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test11735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11735");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        double[] doubleArray18 = new double[] { (short) 1 };
        secondMoment0.incrementAll(doubleArray18);
        long long20 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        secondMoment21.increment((double) (short) -1);
        secondMoment21.clear();
        secondMoment21.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        long long31 = variance30.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        secondMoment35.increment((double) (short) 0);
        double double40 = secondMoment35.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        secondMoment41.incrementAll(doubleArray47, 0, 0);
        double double51 = secondMoment35.evaluate(doubleArray47);
        double[] doubleArray52 = new double[] {};
        secondMoment35.incrementAll(doubleArray52);
        double double54 = secondMoment32.evaluate(doubleArray52);
        double double55 = variance30.evaluate(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        secondMoment59.increment((double) (short) 0);
        double double64 = secondMoment59.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        double[] doubleArray71 = new double[] { (-1L), 0, 10L };
        secondMoment65.incrementAll(doubleArray71, 0, 0);
        double double75 = secondMoment59.evaluate(doubleArray71);
        double[] doubleArray76 = new double[] {};
        secondMoment59.incrementAll(doubleArray76);
        double double78 = secondMoment56.evaluate(doubleArray76);
        variance30.incrementAll(doubleArray76);
        double double80 = secondMoment0.evaluate(doubleArray76);
        long long81 = secondMoment0.getN();
        secondMoment0.increment(2.880385675555556E7d);
        secondMoment0.clear();
        double double85 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 4L + "'", long20 == 4L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.5d + "'", double40 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 74.0d + "'", double51 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.5d + "'", double64 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 74.0d + "'", double75 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 7077.0d + "'", double80 == 7077.0d);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 4L + "'", long81 == 4L);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
    }

    @Test
    public void test11736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11736");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        double double4 = secondMoment1.getResult();
        double double5 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        double double14 = secondMoment9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        double double25 = secondMoment9.evaluate(doubleArray21);
        double[] doubleArray26 = new double[] {};
        secondMoment9.incrementAll(doubleArray26);
        double double30 = variance8.evaluate(doubleArray26, (int) (byte) 0, 0);
        variance7.incrementAll(doubleArray26);
        double double32 = secondMoment1.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.clear();
        secondMoment1.clear();
        double double36 = secondMoment1.getResult();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.5d + "'", double14 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 74.0d + "'", double25 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
    }

    @Test
    public void test11737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11737");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double double26 = secondMoment10.evaluate(doubleArray22);
        double double27 = secondMoment0.evaluate(doubleArray22);
        long long28 = secondMoment0.getN();
        secondMoment0.increment(32.2d);
        secondMoment0.clear();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment((double) ' ');
        secondMoment33.increment((double) (-1.0f));
        double double38 = secondMoment33.getResult();
        secondMoment33.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment33);
        double double41 = variance40.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long44 = variance43.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        double double50 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double61 = secondMoment45.evaluate(doubleArray57);
        variance43.incrementAll(doubleArray57);
        double double63 = variance40.evaluate(doubleArray57);
        boolean boolean64 = variance40.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        secondMoment68.increment((double) (short) 0);
        double double73 = secondMoment68.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        secondMoment74.incrementAll(doubleArray80, 0, 0);
        double double84 = secondMoment68.evaluate(doubleArray80);
        double[] doubleArray85 = new double[] {};
        secondMoment68.incrementAll(doubleArray85);
        double double87 = secondMoment65.evaluate(doubleArray85);
        double double89 = variance40.evaluate(doubleArray85, 1779.8518518518517d);
        // The following exception was thrown during execution in test generation
        try {
            double double92 = secondMoment0.evaluate(doubleArray85, (int) ' ', (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 74.0d + "'", double26 == 74.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 3L + "'", long28 == 3L);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 544.5d + "'", double38 == 544.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 74.0d + "'", double61 == 74.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 37.0d + "'", double63 == 37.0d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5d + "'", double73 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 74.0d + "'", double84 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test11738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11738");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        long long17 = variance16.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double29 = variance16.evaluate(doubleArray24, (double) (short) -1);
        double double30 = secondMoment0.evaluate(doubleArray24);
        secondMoment0.clear();
        double double32 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment34);
        secondMoment34.increment((double) '4');
        secondMoment34.increment((double) 100);
        secondMoment34.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        double[] doubleArray56 = new double[] { 10, (byte) 100 };
        double double57 = secondMoment44.evaluate(doubleArray56);
        long long58 = secondMoment44.getN();
        double double59 = secondMoment44.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment60);
        secondMoment60.increment((double) (short) -1);
        secondMoment60.clear();
        double double67 = secondMoment60.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        secondMoment68.increment((double) (short) 0);
        double double73 = secondMoment68.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        secondMoment74.incrementAll(doubleArray80, 0, 0);
        double double84 = secondMoment68.evaluate(doubleArray80);
        secondMoment60.incrementAll(doubleArray80, 0, (int) (short) 0);
        double double88 = secondMoment44.evaluate(doubleArray80);
        secondMoment34.incrementAll(doubleArray80);
        double double90 = secondMoment0.evaluate(doubleArray80);
        double double91 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4050.0d + "'", double57 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 2L + "'", long58 == 2L);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5d + "'", double73 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 74.0d + "'", double84 == 74.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 74.0d + "'", double90 == 74.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 74.0d + "'", double91 == 74.0d);
    }

    @Test
    public void test11739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11739");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long9 = variance8.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        secondMoment26.increment((double) (short) -1);
        secondMoment26.clear();
        secondMoment26.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment26);
        boolean boolean36 = secondMoment11.equals((java.lang.Object) secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        secondMoment39.increment((double) (short) 0);
        double double44 = secondMoment39.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double double55 = secondMoment39.evaluate(doubleArray51);
        double[] doubleArray56 = new double[] {};
        secondMoment39.incrementAll(doubleArray56);
        double double60 = variance38.evaluate(doubleArray56, (int) (byte) 0, 0);
        long long61 = variance38.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        secondMoment62.increment((double) (short) 0);
        double double67 = secondMoment62.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double double78 = secondMoment62.evaluate(doubleArray74);
        variance38.incrementAll(doubleArray74);
        double double81 = variance37.evaluate(doubleArray74, (double) '#');
        double double82 = variance8.evaluate(doubleArray74);
        double double83 = secondMoment1.evaluate(doubleArray74);
        long long84 = secondMoment1.getN();
        secondMoment1.clear();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        boolean boolean88 = variance87.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.5d + "'", double44 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 74.0d + "'", double55 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.5d + "'", double67 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 74.0d + "'", double78 == 74.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 24.666666666666668d + "'", double81 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 37.0d + "'", double82 == 37.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 74.0d + "'", double83 == 74.0d);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 3L + "'", long84 == 3L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test11740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11740");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        variance27.incrementAll(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        secondMoment39.increment((double) (short) -1);
        secondMoment39.clear();
        secondMoment39.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        secondMoment49.increment((double) (short) 0);
        double double54 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double double65 = secondMoment49.evaluate(doubleArray61);
        double double66 = secondMoment39.evaluate(doubleArray61);
        double double67 = variance27.evaluate(doubleArray61);
        double double68 = secondMoment11.evaluate(doubleArray61);
        secondMoment11.clear();
        secondMoment11.increment((double) (short) 100);
        double double72 = secondMoment11.getResult();
        secondMoment11.increment((-1.0d));
        double double75 = secondMoment11.getResult();
        secondMoment11.increment(0.0d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5d + "'", double54 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 37.0d + "'", double67 == 37.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 5100.5d + "'", double75 == 5100.5d);
    }

    @Test
    public void test11741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11741");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        long long18 = secondMoment11.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        variance19.setBiasCorrected(true);
        double double22 = variance19.getResult();
        variance19.setBiasCorrected(false);
        boolean boolean25 = variance19.isBiasCorrected();
        variance19.clear();
        java.lang.Class<?> wildcardClass27 = variance19.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test11742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11742");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.clear();
        variance2.setBiasCorrected(true);
        variance2.setBiasCorrected(false);
        variance2.increment(0.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = variance2.getResult();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11743");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        secondMoment1.clear();
        secondMoment1.clear();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.clear();
        secondMoment1.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        boolean boolean15 = variance14.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        secondMoment16.increment((double) (-1.0f));
        secondMoment16.clear();
        secondMoment16.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double[] doubleArray37 = new double[] { 10, (byte) 100 };
        double double38 = secondMoment25.evaluate(doubleArray37);
        long long39 = secondMoment25.getN();
        secondMoment25.clear();
        double double41 = secondMoment25.getResult();
        secondMoment25.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        double double54 = variance43.evaluate(doubleArray50);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        long long65 = secondMoment55.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        double[] doubleArray72 = new double[] { (-1L), 0, 10L };
        secondMoment66.incrementAll(doubleArray72, 0, 0);
        secondMoment55.incrementAll(doubleArray72, 0, (int) (short) 1);
        double double80 = variance43.evaluate(doubleArray72, (double) 100.0f);
        double double81 = secondMoment16.evaluate(doubleArray72);
        double double82 = variance14.evaluate(doubleArray72);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4050.0d + "'", double38 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 2L + "'", long39 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 37.0d + "'", double54 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 37.0d + "'", double80 == 37.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 74.0d + "'", double81 == 74.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 37.0d + "'", double82 == 37.0d);
    }

    @Test
    public void test11744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11744");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        double double15 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment((double) (short) -1);
        secondMoment16.clear();
        double double23 = secondMoment16.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        secondMoment16.incrementAll(doubleArray36, 0, (int) (short) 0);
        double double44 = secondMoment0.evaluate(doubleArray36);
        double double45 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        secondMoment53.increment((double) (short) 0);
        double double58 = secondMoment53.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        double double69 = secondMoment53.evaluate(doubleArray65);
        double[] doubleArray70 = new double[] {};
        secondMoment53.incrementAll(doubleArray70);
        secondMoment47.incrementAll(doubleArray70);
        secondMoment47.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment76.increment(1.0d);
        double[] doubleArray82 = new double[] { (-1L), 0, 10L };
        secondMoment76.incrementAll(doubleArray82, 0, 0);
        double[] doubleArray88 = new double[] { 10, (byte) 100 };
        double double89 = secondMoment76.evaluate(doubleArray88);
        double double90 = variance75.evaluate(doubleArray88);
        double double91 = variance46.evaluate(doubleArray88);
        double double92 = secondMoment0.evaluate(doubleArray88);
        double double93 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment(1376.0d);
        double double97 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.5d + "'", double58 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 74.0d + "'", double69 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4050.0d + "'", double89 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4050.0d + "'", double90 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 4050.0d + "'", double91 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 4050.0d + "'", double92 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 4050.0d + "'", double93 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
    }

    @Test
    public void test11745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11745");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        long long16 = secondMoment2.getN();
        secondMoment2.clear();
        double double18 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        variance21.increment((double) 0);
        long long24 = variance21.getN();
        variance21.increment(2.880385675555556E7d);
        variance21.clear();
        double double28 = variance21.getResult();
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment((double) ' ');
        double double34 = secondMoment31.getResult();
        secondMoment31.increment((double) (short) 100);
        long long37 = secondMoment31.getN();
        secondMoment31.clear();
        secondMoment31.clear();
        secondMoment31.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment44);
        secondMoment44.increment((double) (short) -1);
        long long50 = secondMoment44.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment44);
        long long53 = secondMoment44.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        secondMoment57.increment((double) (short) 0);
        long long62 = secondMoment57.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment57);
        long long64 = variance63.getN();
        variance63.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long68 = variance67.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        secondMoment69.increment((double) (short) 0);
        double double74 = secondMoment69.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        double double85 = secondMoment69.evaluate(doubleArray81);
        variance67.incrementAll(doubleArray81);
        double double88 = variance63.evaluate(doubleArray81, (double) (short) -1);
        variance55.incrementAll(doubleArray81);
        double double90 = secondMoment31.evaluate(doubleArray81);
        double double92 = variance21.evaluate(doubleArray81, 1.5803546165550332E27d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 2L + "'", long37 == 2L);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 2L + "'", long50 == 2L);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 2L + "'", long53 == 2L);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 2L + "'", long62 == 2L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 2L + "'", long64 == 2L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.5d + "'", double74 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 74.0d + "'", double85 == 74.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 24.666666666666668d + "'", double88 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 74.0d + "'", double90 == 74.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test11746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11746");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        boolean boolean14 = secondMoment0.equals((java.lang.Object) secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double[] doubleArray30 = new double[] { 10, (byte) 100 };
        double double31 = secondMoment18.evaluate(doubleArray30);
        double double32 = secondMoment15.evaluate(doubleArray30);
        secondMoment0.incrementAll(doubleArray30);
        secondMoment0.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double37 = secondMoment0.getResult();
        java.lang.Class<?> wildcardClass38 = secondMoment0.getClass();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4050.0d + "'", double31 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4050.0d + "'", double32 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 7836.75d + "'", double37 == 7836.75d);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test11747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11747");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double double24 = secondMoment8.evaluate(doubleArray20);
        secondMoment0.incrementAll(doubleArray20, 0, (int) (short) 0);
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double32 = variance31.getResult();
        double double33 = variance31.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment34);
        secondMoment34.increment((double) (short) -1);
        secondMoment34.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment34);
        double double42 = secondMoment34.getResult();
        long long43 = secondMoment34.getN();
        double double44 = secondMoment34.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment46);
        secondMoment46.increment((double) (short) -1);
        long long52 = secondMoment46.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment46);
        double double55 = secondMoment46.getResult();
        secondMoment46.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        double[] doubleArray63 = new double[] { (-1L), 0, 10L };
        secondMoment57.incrementAll(doubleArray63, 0, 0);
        double[] doubleArray69 = new double[] { 10, (byte) 100 };
        double double70 = secondMoment57.evaluate(doubleArray69);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        secondMoment72.increment((double) (short) 0);
        double double77 = secondMoment72.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment78.increment(1.0d);
        double[] doubleArray84 = new double[] { (-1L), 0, 10L };
        secondMoment78.incrementAll(doubleArray84, 0, 0);
        double double88 = secondMoment72.evaluate(doubleArray84);
        double[] doubleArray89 = new double[] {};
        secondMoment72.incrementAll(doubleArray89);
        double double93 = variance71.evaluate(doubleArray89, (int) (byte) 0, 0);
        double double94 = secondMoment57.evaluate(doubleArray89);
        secondMoment46.incrementAll(doubleArray89);
        double double96 = secondMoment34.evaluate(doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            double double99 = variance31.evaluate(doubleArray89, (int) 'a', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 74.0d + "'", double24 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 2L + "'", long52 == 2L);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 544.5d + "'", double55 == 544.5d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4050.0d + "'", double70 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.5d + "'", double77 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double93));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 4050.0d + "'", double94 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
    }

    @Test
    public void test11748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11748");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) 10L);
        double double6 = secondMoment1.getResult();
        double double7 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double[] doubleArray26 = new double[] { 10, (byte) 100 };
        double double27 = secondMoment14.evaluate(doubleArray26);
        double double28 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment14);
        long long30 = secondMoment14.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        double double32 = secondMoment14.getResult();
        secondMoment14.clear();
        secondMoment14.increment(Double.NaN);
        secondMoment14.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long40 = variance39.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        secondMoment41.increment((double) (short) 0);
        double double46 = secondMoment41.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double double57 = secondMoment41.evaluate(doubleArray53);
        variance39.incrementAll(doubleArray53);
        secondMoment14.incrementAll(doubleArray53);
        variance10.incrementAll(doubleArray53);
        long long61 = variance10.getN();
        variance10.setBiasCorrected(false);
        double double64 = variance10.getResult();
        double double65 = variance10.getResult();
        boolean boolean66 = variance8.equals((java.lang.Object) variance10);
        double double67 = variance10.getResult();
        long long68 = variance10.getN();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 40.5d + "'", double6 == 40.5d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 40.5d + "'", double7 == 40.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4050.0d + "'", double27 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4050.0d + "'", double28 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 2L + "'", long30 == 2L);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4050.0d + "'", double32 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.5d + "'", double46 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 74.0d + "'", double57 == 74.0d);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 3L + "'", long61 == 3L);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 24.666666666666668d + "'", double64 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 24.666666666666668d + "'", double65 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 24.666666666666668d + "'", double67 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 3L + "'", long68 == 3L);
    }

    @Test
    public void test11749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11749");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment4 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment4.increment(1.0d);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        secondMoment4.incrementAll(doubleArray10, 0, 0);
        double[] doubleArray16 = new double[] { 10, (byte) 100 };
        double double17 = secondMoment4.evaluate(doubleArray16);
        double double18 = secondMoment4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment4);
        long long20 = secondMoment4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment4);
        secondMoment4.clear();
        double double23 = secondMoment4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment4);
        variance25.clear();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4050.0d + "'", double18 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2L + "'", long20 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test11750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11750");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long8 = variance7.getN();
        variance7.clear();
        variance7.increment((double) 0L);
        variance7.setBiasCorrected(false);
        double double14 = variance7.getResult();
        variance7.clear();
        variance7.clear();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.25d + "'", double14 == 0.25d);
    }

    @Test
    public void test11751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11751");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        double double20 = secondMoment2.getResult();
        secondMoment2.clear();
        double double22 = secondMoment2.getResult();
        double double23 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        boolean boolean25 = variance24.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test11752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11752");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double[] doubleArray10 = new double[] { 0L, (byte) 1, 6140.666666666667d, 544.5d, (byte) 100 };
        double double11 = secondMoment1.evaluate(doubleArray10);
        long long12 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        double[] doubleArray27 = new double[] { 10, (byte) 100 };
        double double28 = secondMoment15.evaluate(doubleArray27);
        double double29 = secondMoment15.getResult();
        long long30 = secondMoment15.getN();
        long long31 = secondMoment15.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        long long33 = secondMoment15.getN();
        double double34 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double[] doubleArray47 = new double[] { 10, (byte) 100 };
        double double48 = secondMoment35.evaluate(doubleArray47);
        double double49 = secondMoment35.getResult();
        secondMoment35.increment((double) (short) -1);
        double double52 = secondMoment35.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double[] doubleArray65 = new double[] { 10, (byte) 100 };
        double double66 = secondMoment53.evaluate(doubleArray65);
        double double67 = secondMoment35.evaluate(doubleArray65);
        secondMoment15.incrementAll(doubleArray65);
        double double69 = variance13.evaluate(doubleArray65);
        double[] doubleArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double73 = variance13.evaluate(doubleArray70, (int) (short) 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 1.0, 6140.666666666667, 544.5, 100.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2.880385675555556E7d + "'", double11 == 2.880385675555556E7d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 5L + "'", long12 == 5L);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4050.0d + "'", double28 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4050.0d + "'", double29 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 2L + "'", long30 == 2L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 2L + "'", long31 == 2L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 2L + "'", long33 == 2L);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4050.0d + "'", double34 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 6140.666666666667d + "'", double52 == 6140.666666666667d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4050.0d + "'", double66 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4050.0d + "'", double67 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4050.0d + "'", double69 == 4050.0d);
    }

    @Test
    public void test11753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11753");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        variance1.increment((double) (short) 100);
        boolean boolean6 = variance1.isBiasCorrected();
        long long7 = variance1.getN();
        double double8 = variance1.getResult();
        boolean boolean9 = variance1.isBiasCorrected();
        long long10 = variance1.getN();
        variance1.clear();
        boolean boolean12 = variance1.isBiasCorrected();
        double[] doubleArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test11754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11754");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        secondMoment19.increment((double) (-1.0f));
        secondMoment19.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment25);
        long long36 = variance35.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double double48 = variance35.evaluate(doubleArray43, (double) (short) -1);
        double double49 = secondMoment19.evaluate(doubleArray43);
        double double50 = secondMoment2.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        double double52 = secondMoment2.getResult();
        secondMoment2.increment(688.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        double double56 = secondMoment2.getResult();
        long long57 = secondMoment2.getN();
        secondMoment2.clear();
        secondMoment2.increment(6483600.5d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 37.0d + "'", double48 == 37.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 74.0d + "'", double50 == 74.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 74.0d + "'", double52 == 74.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 351992.75d + "'", double56 == 351992.75d);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 4L + "'", long57 == 4L);
    }

    @Test
    public void test11755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11755");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        secondMoment2.increment((double) (short) 0);
        double double7 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        double double11 = secondMoment2.getResult();
        double double12 = secondMoment2.getResult();
        secondMoment2.clear();
        secondMoment2.increment(7836.75d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test11756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11756");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        long long11 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        secondMoment1.incrementAll(doubleArray18, 0, (int) (short) 1);
        secondMoment1.clear();
        double double26 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        secondMoment27.increment((double) (short) -1);
        secondMoment27.clear();
        secondMoment27.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        secondMoment36.increment((double) (short) 0);
        boolean boolean41 = secondMoment27.equals((java.lang.Object) secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double[] doubleArray57 = new double[] { 10, (byte) 100 };
        double double58 = secondMoment45.evaluate(doubleArray57);
        double double59 = secondMoment42.evaluate(doubleArray57);
        secondMoment27.incrementAll(doubleArray57);
        double double61 = secondMoment1.evaluate(doubleArray57);
        secondMoment1.increment(806.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long65 = variance64.getN();
        variance64.increment(1.174081635E8d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long70 = variance69.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment(1.0d);
        secondMoment71.increment((double) (short) 0);
        double double76 = secondMoment71.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment77.increment(1.0d);
        double[] doubleArray83 = new double[] { (-1L), 0, 10L };
        secondMoment77.incrementAll(doubleArray83, 0, 0);
        double double87 = secondMoment71.evaluate(doubleArray83);
        variance69.incrementAll(doubleArray83);
        double double90 = variance64.evaluate(doubleArray83, 100.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4050.0d + "'", double58 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 3L + "'", long65 == 3L);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.5d + "'", double76 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 74.0d + "'", double87 == 74.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 24.666666666666668d + "'", double90 == 24.666666666666668d);
    }

    @Test
    public void test11757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11757");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double double2 = variance1.getResult();
        long long3 = variance1.getN();
        double double4 = variance1.getResult();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        double double22 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment8);
        long long24 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        boolean boolean26 = variance25.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        secondMoment27.increment((double) (short) -1);
        secondMoment27.clear();
        secondMoment27.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        long long37 = variance36.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        secondMoment41.increment((double) (short) 0);
        double double46 = secondMoment41.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double double57 = secondMoment41.evaluate(doubleArray53);
        double[] doubleArray58 = new double[] {};
        secondMoment41.incrementAll(doubleArray58);
        double double60 = secondMoment38.evaluate(doubleArray58);
        double double61 = variance36.evaluate(doubleArray58);
        double double63 = variance25.evaluate(doubleArray58, (double) 1);
        variance25.clear();
        long long65 = variance25.getN();
        variance25.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long70 = variance69.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment(1.0d);
        secondMoment71.increment((double) (short) 0);
        double double76 = secondMoment71.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment77.increment(1.0d);
        double[] doubleArray83 = new double[] { (-1L), 0, 10L };
        secondMoment77.incrementAll(doubleArray83, 0, 0);
        double double87 = secondMoment71.evaluate(doubleArray83);
        double double89 = variance69.evaluate(doubleArray83, (double) 4L);
        variance25.incrementAll(doubleArray83);
        variance1.incrementAll(doubleArray83);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.5d + "'", double46 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 74.0d + "'", double57 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 2L + "'", long65 == 2L);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.5d + "'", double76 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 74.0d + "'", double87 == 74.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 37.0d + "'", double89 == 37.0d);
    }

    @Test
    public void test11758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11758");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment((double) (short) -1);
        secondMoment16.clear();
        secondMoment16.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        secondMoment16.clear();
        long long29 = secondMoment16.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment30);
        secondMoment30.increment((double) (short) -1);
        secondMoment30.clear();
        secondMoment30.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        secondMoment39.increment((double) (short) 0);
        boolean boolean44 = secondMoment30.equals((java.lang.Object) secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        double[] doubleArray60 = new double[] { 10, (byte) 100 };
        double double61 = secondMoment48.evaluate(doubleArray60);
        double double62 = secondMoment45.evaluate(doubleArray60);
        secondMoment30.incrementAll(doubleArray60);
        secondMoment30.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment((double) ' ');
        secondMoment67.increment((double) (-1.0f));
        secondMoment67.clear();
        double double73 = secondMoment67.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment78.increment(1.0d);
        double[] doubleArray84 = new double[] { (-1L), 0, 10L };
        secondMoment78.incrementAll(doubleArray84, 0, 0);
        double[] doubleArray90 = new double[] { 10, (byte) 100 };
        double double91 = secondMoment78.evaluate(doubleArray90);
        double double92 = secondMoment75.evaluate(doubleArray90);
        double double94 = variance74.evaluate(doubleArray90, (double) 5L);
        double double95 = secondMoment30.evaluate(doubleArray90);
        double double96 = secondMoment16.evaluate(doubleArray90);
        double double97 = secondMoment16.getResult();
        long long98 = secondMoment16.getN();
        double double99 = secondMoment16.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4050.0d + "'", double62 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 4050.0d + "'", double91 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 4050.0d + "'", double92 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 4050.0d + "'", double94 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 4050.0d + "'", double95 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 4050.0d + "'", double96 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 4050.0d + "'", double97 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 2L + "'", long98 == 2L);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 4050.0d + "'", double99 == 4050.0d);
    }

    @Test
    public void test11759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11759");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        long long11 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance15.setBiasCorrected(false);
        double double18 = variance15.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 20.25d + "'", double18 == 20.25d);
    }

    @Test
    public void test11760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11760");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance11.increment(2.880385675555556E7d);
        double double14 = variance11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        secondMoment15.increment((double) (short) 0);
        double double20 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double37 = secondMoment21.evaluate(doubleArray33);
        double[] doubleArray38 = new double[] {};
        secondMoment21.incrementAll(doubleArray38);
        secondMoment15.incrementAll(doubleArray38);
        secondMoment15.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        double[] doubleArray56 = new double[] { 10, (byte) 100 };
        double double57 = secondMoment44.evaluate(doubleArray56);
        double double58 = variance43.evaluate(doubleArray56);
        variance11.incrementAll(doubleArray56);
        double double60 = variance11.getResult();
        variance11.clear();
        variance11.setBiasCorrected(false);
        variance11.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5d + "'", double20 == 0.5d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4050.0d + "'", double57 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4050.0d + "'", double58 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test11761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11761");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double double4 = secondMoment1.getResult();
        long long5 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
    }

    @Test
    public void test11762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11762");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        secondMoment3.increment((double) (short) -1);
        long long9 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        long long12 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        secondMoment16.increment((double) (short) 0);
        long long21 = secondMoment16.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        long long23 = variance22.getN();
        variance22.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long27 = variance26.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        variance26.incrementAll(doubleArray40);
        double double47 = variance22.evaluate(doubleArray40, (double) (short) -1);
        variance14.incrementAll(doubleArray40);
        double double49 = variance14.getResult();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 2L + "'", long9 == 2L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2L + "'", long21 == 2L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 24.666666666666668d + "'", double47 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 272.25d + "'", double49 == 272.25d);
    }

    @Test
    public void test11763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11763");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(3.0d);
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.clear();
        double double16 = secondMoment0.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test11764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11764");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        double double34 = variance10.evaluate(doubleArray31);
        long long35 = variance10.getN();
        double double36 = variance10.getResult();
        variance10.setBiasCorrected(false);
        double double39 = variance10.getResult();
        java.lang.Class<?> wildcardClass40 = variance10.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test11765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11765");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        long long8 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        double double11 = secondMoment2.getResult();
        double double12 = secondMoment2.getResult();
        long long13 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        boolean boolean15 = variance14.isBiasCorrected();
        variance14.increment(1.2215704987955729E7d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double[] doubleArray31 = new double[] { 10, (byte) 100 };
        double double32 = secondMoment19.evaluate(doubleArray31);
        double double33 = secondMoment19.getResult();
        secondMoment19.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment19);
        secondMoment19.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment38);
        secondMoment38.increment((double) (short) -1);
        secondMoment38.clear();
        double double45 = secondMoment38.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        secondMoment46.increment((double) (short) 0);
        double double51 = secondMoment46.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        secondMoment52.incrementAll(doubleArray58, 0, 0);
        double double62 = secondMoment46.evaluate(doubleArray58);
        secondMoment38.incrementAll(doubleArray58, 0, (int) (short) 0);
        double double68 = secondMoment19.evaluate(doubleArray58, (int) (byte) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            double double71 = variance14.evaluate(doubleArray58, (int) 'a', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 544.5d + "'", double11 == 544.5d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 544.5d + "'", double12 == 544.5d);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4050.0d + "'", double32 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4050.0d + "'", double33 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.5d + "'", double51 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 74.0d + "'", double62 == 74.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    }

    @Test
    public void test11766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11766");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance7.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        long long15 = secondMoment10.getN();
        double double16 = secondMoment10.getResult();
        secondMoment10.increment((double) (byte) 10);
        secondMoment10.clear();
        secondMoment10.increment((double) ' ');
        double double22 = secondMoment10.getResult();
        secondMoment10.increment(1.9309124749999996E7d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double[] doubleArray40 = new double[] { 10, (byte) 100 };
        double double41 = secondMoment28.evaluate(doubleArray40);
        double double42 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment28);
        long long44 = secondMoment28.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        boolean boolean46 = variance45.isBiasCorrected();
        variance45.setBiasCorrected(true);
        double double49 = variance45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment51);
        secondMoment51.increment((double) (short) -1);
        secondMoment51.clear();
        secondMoment51.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        double[] doubleArray67 = new double[] { (-1L), 0, 10L };
        secondMoment61.incrementAll(doubleArray67, 0, 0);
        variance60.incrementAll(doubleArray67);
        variance50.incrementAll(doubleArray67);
        double double73 = variance45.evaluate(doubleArray67);
        double double74 = secondMoment10.evaluate(doubleArray67);
        // The following exception was thrown during execution in test generation
        try {
            variance7.incrementAll(doubleArray67, 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4050.0d + "'", double41 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4050.0d + "'", double42 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 2L + "'", long44 == 2L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 37.0d + "'", double73 == 37.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 74.0d + "'", double74 == 74.0d);
    }

    @Test
    public void test11767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11767");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long12 = secondMoment0.getN();
        secondMoment0.increment(2312.0d);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance16.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
    }

    @Test
    public void test11768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11768");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double10 = secondMoment0.getResult();
        secondMoment0.increment((double) 'a');
        double double13 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        double[] doubleArray27 = new double[] { 10, (byte) 100 };
        double double28 = secondMoment15.evaluate(doubleArray27);
        double double29 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        double[] doubleArray43 = new double[] { 10, (byte) 100 };
        double double44 = secondMoment31.evaluate(doubleArray43);
        double double46 = variance30.evaluate(doubleArray43, 26.916666666666668d);
        secondMoment0.incrementAll(doubleArray43);
        secondMoment0.increment(8796.750000000002d);
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4704.5d + "'", double13 == 4704.5d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4050.0d + "'", double28 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4050.0d + "'", double29 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4050.0d + "'", double44 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2025.0d + "'", double46 == 2025.0d);
    }

    @Test
    public void test11769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11769");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (short) 10);
        long long6 = secondMoment1.getN();
        secondMoment1.clear();
        double double8 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test11770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11770");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long6 = variance5.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        secondMoment18.increment((double) (-1.0f));
        secondMoment18.clear();
        boolean boolean24 = variance17.equals((java.lang.Object) secondMoment18);
        double double25 = variance17.getResult();
        variance17.increment(3602.0d);
        variance17.increment(11282.0d);
        boolean boolean30 = variance5.equals((java.lang.Object) 11282.0d);
        long long31 = variance5.getN();
        long long32 = variance5.getN();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
    }

    @Test
    public void test11771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11771");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        long long6 = secondMoment0.getN();
        double double7 = secondMoment0.getResult();
        secondMoment0.increment(11837.59d);
        double double10 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 544.5d + "'", double7 == 544.5d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 9.317508581206667E7d + "'", double10 == 9.317508581206667E7d);
    }

    @Test
    public void test11772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11772");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        double double4 = secondMoment0.getResult();
        secondMoment0.clear();
        double double6 = secondMoment0.getResult();
        java.lang.Class<?> wildcardClass7 = secondMoment0.getClass();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test11773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11773");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) '4');
        long long5 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double7 = variance6.getResult();
        variance6.setBiasCorrected(true);
        variance6.clear();
        long long11 = variance6.getN();
        variance6.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        secondMoment16.increment((double) (short) 0);
        double double21 = secondMoment16.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        double double32 = secondMoment16.evaluate(doubleArray28);
        double[] doubleArray33 = new double[] {};
        secondMoment16.incrementAll(doubleArray33);
        double double35 = secondMoment13.evaluate(doubleArray33);
        secondMoment13.increment((double) 3L);
        secondMoment13.increment(24.666666666666668d);
        long long40 = secondMoment13.getN();
        secondMoment13.clear();
        secondMoment13.clear();
        secondMoment13.increment(24.666666666666668d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double[] doubleArray59 = new double[] { 10, (byte) 100 };
        double double60 = secondMoment47.evaluate(doubleArray59);
        double double61 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment47);
        long long63 = secondMoment47.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        double double65 = secondMoment47.getResult();
        secondMoment47.clear();
        secondMoment47.increment(Double.NaN);
        secondMoment47.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long73 = variance72.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        secondMoment74.increment((double) (short) 0);
        double double79 = secondMoment74.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment80.increment(1.0d);
        double[] doubleArray86 = new double[] { (-1L), 0, 10L };
        secondMoment80.incrementAll(doubleArray86, 0, 0);
        double double90 = secondMoment74.evaluate(doubleArray86);
        variance72.incrementAll(doubleArray86);
        secondMoment47.incrementAll(doubleArray86);
        double double93 = secondMoment13.evaluate(doubleArray86);
        double double95 = variance6.evaluate(doubleArray86, 3.746542163E7d);
        double[] doubleArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double97 = variance6.evaluate(doubleArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.5d + "'", double21 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 74.0d + "'", double32 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 3L + "'", long40 == 3L);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 2L + "'", long63 == 2L);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4050.0d + "'", double65 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.5d + "'", double79 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 74.0d + "'", double90 == 74.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 74.0d + "'", double93 == 74.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 36.5d + "'", double95 == 36.5d);
    }

    @Test
    public void test11774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11774");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double37 = secondMoment21.evaluate(doubleArray33);
        double[] doubleArray38 = new double[] {};
        secondMoment21.incrementAll(doubleArray38);
        double double42 = variance20.evaluate(doubleArray38, (int) (byte) 0, 0);
        long long43 = variance20.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        secondMoment44.increment((double) (short) 0);
        double double49 = secondMoment44.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double double60 = secondMoment44.evaluate(doubleArray56);
        variance20.incrementAll(doubleArray56);
        long long62 = variance20.getN();
        variance20.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double[] doubleArray80 = new double[] { 10, (byte) 100 };
        double double81 = secondMoment68.evaluate(doubleArray80);
        double double82 = secondMoment65.evaluate(doubleArray80);
        variance20.incrementAll(doubleArray80);
        secondMoment1.incrementAll(doubleArray80);
        long long85 = secondMoment1.getN();
        double double86 = secondMoment1.getResult();
        double double87 = secondMoment1.getResult();
        secondMoment1.increment(1067.1666666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        java.lang.Class<?> wildcardClass91 = variance90.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.5d + "'", double49 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 74.0d + "'", double60 == 74.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 3L + "'", long62 == 3L);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 2L + "'", long85 == 2L);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4050.0d + "'", double86 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 4050.0d + "'", double87 == 4050.0d);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test11775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11775");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        double double22 = secondMoment8.getResult();
        long long23 = secondMoment8.getN();
        long long24 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        long long29 = variance28.getN();
        variance28.increment(155550.74999999997d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 2L + "'", long29 == 2L);
    }

    @Test
    public void test11776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11776");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        double double5 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        secondMoment8.increment((double) (short) -1);
        long long14 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        double double17 = secondMoment8.getResult();
        secondMoment8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        secondMoment20.increment((double) (short) 0);
        double double25 = secondMoment20.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        double double36 = secondMoment20.evaluate(doubleArray32);
        double[] doubleArray37 = new double[] {};
        secondMoment20.incrementAll(doubleArray37);
        double double41 = variance19.evaluate(doubleArray37, (int) (byte) 0, 0);
        long long42 = variance19.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        secondMoment43.increment((double) (short) 0);
        double double48 = secondMoment43.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        secondMoment49.incrementAll(doubleArray55, 0, 0);
        double double59 = secondMoment43.evaluate(doubleArray55);
        variance19.incrementAll(doubleArray55);
        double double61 = secondMoment8.evaluate(doubleArray55);
        secondMoment0.incrementAll(doubleArray55);
        secondMoment0.increment(3602.0d);
        double double65 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment68);
        secondMoment68.increment((double) (short) -1);
        secondMoment68.clear();
        secondMoment68.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment78.increment(1.0d);
        secondMoment78.increment((double) (short) 0);
        double double83 = secondMoment78.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment84 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment84.increment(1.0d);
        double[] doubleArray90 = new double[] { (-1L), 0, 10L };
        secondMoment84.incrementAll(doubleArray90, 0, 0);
        double double94 = secondMoment78.evaluate(doubleArray90);
        double double95 = secondMoment68.evaluate(doubleArray90);
        double double96 = secondMoment68.getResult();
        boolean boolean97 = secondMoment0.equals((java.lang.Object) secondMoment68);
        secondMoment68.increment(7200964.18888889d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 544.5d + "'", double5 == 544.5d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 544.5d + "'", double17 == 544.5d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.5d + "'", double25 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 74.0d + "'", double36 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.5d + "'", double48 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 74.0d + "'", double59 == 74.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 74.0d + "'", double61 == 74.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 9714674.75d + "'", double65 == 9714674.75d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.5d + "'", double83 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 74.0d + "'", double94 == 74.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 74.0d + "'", double95 == 74.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 74.0d + "'", double96 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test11777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11777");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double17 = secondMoment1.getResult();
        double double18 = secondMoment1.getResult();
        secondMoment1.increment(4704.5d);
        secondMoment1.clear();
        secondMoment1.increment(4418.999999999999d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4050.0d + "'", double18 == 4050.0d);
    }

    @Test
    public void test11778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11778");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment((double) (short) -1);
        secondMoment10.clear();
        secondMoment10.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        long long20 = variance19.getN();
        variance19.increment(200.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        secondMoment24.increment((double) (short) -1);
        long long30 = secondMoment24.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        secondMoment32.incrementAll(doubleArray38, 0, 0);
        double double43 = variance31.evaluate(doubleArray38, (double) 1L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        double[] doubleArray56 = new double[] { 10, (byte) 100 };
        double double57 = secondMoment44.evaluate(doubleArray56);
        double double59 = variance31.evaluate(doubleArray56, 0.0d);
        double double60 = variance19.evaluate(doubleArray56);
        double double64 = variance9.evaluate(doubleArray56, (double) 100.0f, 0, 0);
        long long65 = variance9.getN();
        long long66 = variance9.getN();
        variance9.increment(704.6666666666667d);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 2L + "'", long30 == 2L);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 24.666666666666668d + "'", double43 == 24.666666666666668d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4050.0d + "'", double57 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2025.0d + "'", double59 == 2025.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 1L + "'", long66 == 1L);
    }

    @Test
    public void test11779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11779");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        variance1.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        secondMoment6.increment((double) (short) -1);
        secondMoment6.clear();
        secondMoment6.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        variance15.incrementAll(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        secondMoment27.increment((double) (short) -1);
        secondMoment27.clear();
        secondMoment27.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        secondMoment37.increment((double) (short) 0);
        double double42 = secondMoment37.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        secondMoment43.incrementAll(doubleArray49, 0, 0);
        double double53 = secondMoment37.evaluate(doubleArray49);
        double double54 = secondMoment27.evaluate(doubleArray49);
        double double55 = variance15.evaluate(doubleArray49);
        double double56 = variance1.evaluate(doubleArray49);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment((double) ' ');
        secondMoment57.increment((double) '4');
        secondMoment57.increment((double) 0.0f);
        long long64 = secondMoment57.getN();
        long long65 = secondMoment57.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long68 = variance67.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        secondMoment69.increment((double) (short) 0);
        double double74 = secondMoment69.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        double double85 = secondMoment69.evaluate(doubleArray81);
        variance67.incrementAll(doubleArray81);
        double double87 = secondMoment57.evaluate(doubleArray81);
        variance1.incrementAll(doubleArray81);
        variance1.increment(6993.1875d);
        double double91 = variance1.getResult();
        variance1.setBiasCorrected(false);
        double double94 = variance1.getResult();
        variance1.increment(1.5296396104640088E29d);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.5d + "'", double42 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 74.0d + "'", double53 == 74.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 74.0d + "'", double54 == 74.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 37.0d + "'", double55 == 37.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 3L + "'", long64 == 3L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 3L + "'", long65 == 3L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.5d + "'", double74 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 74.0d + "'", double85 == 74.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 74.0d + "'", double87 == 74.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.2215704987955729E7d + "'", double91 == 1.2215704987955729E7d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 9161778.740966797d + "'", double94 == 9161778.740966797d);
    }

    @Test
    public void test11780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11780");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double10 = secondMoment1.getResult();
        double double11 = secondMoment1.getResult();
        long long12 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment13);
        double double24 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        double[] doubleArray38 = new double[] { 10, (byte) 100 };
        double double39 = secondMoment26.evaluate(doubleArray38);
        double double40 = secondMoment26.getResult();
        secondMoment26.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment26);
        secondMoment26.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment45);
        secondMoment45.increment((double) (short) -1);
        secondMoment45.clear();
        double double52 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        secondMoment53.increment((double) (short) 0);
        double double58 = secondMoment53.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        double double69 = secondMoment53.evaluate(doubleArray65);
        secondMoment45.incrementAll(doubleArray65, 0, (int) (short) 0);
        double double75 = secondMoment26.evaluate(doubleArray65, (int) (byte) 0, 1);
        secondMoment13.incrementAll(doubleArray65);
        double double77 = secondMoment1.evaluate(doubleArray65);
        secondMoment1.clear();
        long long79 = secondMoment1.getN();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 544.5d + "'", double10 == 544.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 544.5d + "'", double11 == 544.5d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4050.0d + "'", double40 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.5d + "'", double58 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 74.0d + "'", double69 == 74.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 74.0d + "'", double77 == 74.0d);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
    }

    @Test
    public void test11781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11781");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        secondMoment8.increment((double) (short) -1);
        secondMoment8.clear();
        secondMoment8.increment((double) 0L);
        boolean boolean17 = secondMoment1.equals((java.lang.Object) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.increment(59187.95d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double[] doubleArray40 = new double[] { 10, (byte) 100 };
        double double41 = secondMoment28.evaluate(doubleArray40);
        double double42 = secondMoment28.getResult();
        long long43 = secondMoment28.getN();
        long long44 = secondMoment28.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        boolean boolean46 = secondMoment21.equals((java.lang.Object) secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment28);
        secondMoment28.clear();
        boolean boolean49 = secondMoment1.equals((java.lang.Object) secondMoment28);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4050.0d + "'", double41 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4050.0d + "'", double42 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 2L + "'", long43 == 2L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 2L + "'", long44 == 2L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test11782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11782");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (byte) 0);
        secondMoment0.clear();
        secondMoment0.increment(272.25d);
        java.lang.Class<?> wildcardClass8 = secondMoment0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test11783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11783");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        double double6 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long8 = variance7.getN();
        variance7.increment(4267109.2d);
        java.lang.Class<?> wildcardClass11 = variance7.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test11784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11784");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double8 = secondMoment0.getResult();
        secondMoment0.increment((double) (byte) 10);
        secondMoment0.clear();
        long long12 = secondMoment0.getN();
        double double13 = secondMoment0.getResult();
        secondMoment0.clear();
        long long15 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        secondMoment16.increment((double) (short) 0);
        long long21 = secondMoment16.getN();
        double double22 = secondMoment16.getResult();
        double double23 = secondMoment16.getResult();
        secondMoment16.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.clear();
        boolean boolean28 = secondMoment0.equals((java.lang.Object) secondMoment16);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2L + "'", long21 == 2L);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.5d + "'", double22 == 0.5d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5d + "'", double23 == 0.5d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test11785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11785");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        secondMoment17.increment((double) (short) 0);
        double double22 = secondMoment17.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        double[] doubleArray29 = new double[] { (-1L), 0, 10L };
        secondMoment23.incrementAll(doubleArray29, 0, 0);
        double double33 = secondMoment17.evaluate(doubleArray29);
        double[] doubleArray34 = new double[] {};
        secondMoment17.incrementAll(doubleArray34);
        variance16.incrementAll(doubleArray34);
        variance16.setBiasCorrected(true);
        long long39 = variance16.getN();
        variance16.increment((double) 3L);
        double double42 = variance16.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.5d + "'", double22 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 74.0d + "'", double33 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 2L + "'", long39 == 2L);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4050.0d + "'", double42 == 4050.0d);
    }

    @Test
    public void test11786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11786");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        secondMoment2.clear();
        secondMoment2.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        secondMoment12.increment((double) (short) 0);
        double double17 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double28 = secondMoment12.evaluate(doubleArray24);
        double double29 = secondMoment2.evaluate(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long31 = secondMoment2.getN();
        double double32 = secondMoment2.getResult();
        double double33 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.5d + "'", double17 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 74.0d + "'", double28 == 74.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 74.0d + "'", double29 == 74.0d);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 3L + "'", long31 == 3L);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 74.0d + "'", double32 == 74.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 74.0d + "'", double33 == 74.0d);
    }

    @Test
    public void test11787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11787");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        secondMoment1.increment((double) (short) -1);
        double double18 = secondMoment1.getResult();
        double double19 = secondMoment1.getResult();
        secondMoment1.clear();
        secondMoment1.increment(4402.666666666667d);
        double double23 = secondMoment1.getResult();
        double double24 = secondMoment1.getResult();
        secondMoment1.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment28);
        secondMoment28.increment((double) (short) -1);
        secondMoment28.clear();
        double double35 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        secondMoment36.increment((double) (short) 0);
        double double41 = secondMoment36.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        secondMoment42.incrementAll(doubleArray48, 0, 0);
        double double52 = secondMoment36.evaluate(doubleArray48);
        secondMoment28.incrementAll(doubleArray48, 0, (int) (short) 0);
        secondMoment28.clear();
        double double57 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment28);
        long long59 = secondMoment28.getN();
        boolean boolean60 = secondMoment1.equals((java.lang.Object) secondMoment28);
        secondMoment28.clear();
        secondMoment28.increment(1.24482505999626E27d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment28);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 6140.666666666667d + "'", double18 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 6140.666666666667d + "'", double19 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.5d + "'", double41 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 74.0d + "'", double52 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test11788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11788");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) '4');
        double double7 = secondMoment1.getResult();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        double double16 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        secondMoment18.increment((double) (short) 0);
        double double23 = secondMoment18.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        double double34 = secondMoment18.evaluate(doubleArray30);
        double[] doubleArray35 = new double[] {};
        secondMoment18.incrementAll(doubleArray35);
        double double39 = variance17.evaluate(doubleArray35, (int) (byte) 0, 0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        secondMoment41.increment((double) (short) 0);
        long long46 = secondMoment41.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        secondMoment48.increment((double) (short) 0);
        double double53 = secondMoment48.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        secondMoment54.increment((double) (short) 0);
        double double59 = secondMoment54.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment(1.0d);
        double[] doubleArray66 = new double[] { (-1L), 0, 10L };
        secondMoment60.incrementAll(doubleArray66, 0, 0);
        double double70 = secondMoment54.evaluate(doubleArray66);
        double[] doubleArray71 = new double[] {};
        secondMoment54.incrementAll(doubleArray71);
        secondMoment48.incrementAll(doubleArray71);
        secondMoment41.incrementAll(doubleArray71);
        double double76 = variance17.evaluate(doubleArray71, (double) (byte) 0);
        double double77 = secondMoment10.evaluate(doubleArray71);
        double double78 = secondMoment1.evaluate(doubleArray71);
        double double79 = secondMoment1.getResult();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 200.0d + "'", double8 == 200.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5d + "'", double23 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 74.0d + "'", double34 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 2L + "'", long46 == 2L);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.5d + "'", double53 == 0.5d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5d + "'", double59 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 74.0d + "'", double70 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.5d + "'", double77 == 0.5d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 200.0d + "'", double78 == 200.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 200.0d + "'", double79 == 200.0d);
    }

    @Test
    public void test11789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11789");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        secondMoment3.incrementAll(doubleArray9, 0, 0);
        double[] doubleArray15 = new double[] { 10, (byte) 100 };
        double double16 = secondMoment3.evaluate(doubleArray15);
        double double17 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        long long19 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        double double21 = secondMoment3.getResult();
        long long22 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        double double24 = secondMoment3.getResult();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
    }

    @Test
    public void test11790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11790");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment((double) ' ');
        secondMoment13.increment((double) (-1.0f));
        secondMoment13.clear();
        boolean boolean19 = variance12.equals((java.lang.Object) secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        secondMoment20.increment((double) (short) 0);
        double double25 = secondMoment20.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        secondMoment26.increment((double) (short) 0);
        double double31 = secondMoment26.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        secondMoment32.incrementAll(doubleArray38, 0, 0);
        double double42 = secondMoment26.evaluate(doubleArray38);
        double[] doubleArray43 = new double[] {};
        secondMoment26.incrementAll(doubleArray43);
        secondMoment20.incrementAll(doubleArray43);
        secondMoment20.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        secondMoment49.incrementAll(doubleArray55, 0, 0);
        double[] doubleArray61 = new double[] { 10, (byte) 100 };
        double double62 = secondMoment49.evaluate(doubleArray61);
        double double63 = variance48.evaluate(doubleArray61);
        secondMoment13.incrementAll(doubleArray61);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment13);
        variance66.increment((double) (byte) -1);
        variance66.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment71);
        secondMoment71.increment((double) (short) -1);
        secondMoment71.clear();
        secondMoment71.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment81.increment(1.0d);
        double[] doubleArray87 = new double[] { (-1L), 0, 10L };
        secondMoment81.incrementAll(doubleArray87, 0, 0);
        variance80.incrementAll(doubleArray87);
        double double92 = variance66.evaluate(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.5d + "'", double25 == 0.5d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5d + "'", double31 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 74.0d + "'", double42 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4050.0d + "'", double62 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4050.0d + "'", double63 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 37.0d + "'", double92 == 37.0d);
    }

    @Test
    public void test11791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11791");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double[] doubleArray19 = new double[] { 10, (byte) 100 };
        double double20 = secondMoment7.evaluate(doubleArray19);
        double double21 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        secondMoment23.increment((double) (short) 0);
        double double28 = secondMoment23.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double double39 = secondMoment23.evaluate(doubleArray35);
        double[] doubleArray40 = new double[] {};
        secondMoment23.incrementAll(doubleArray40);
        variance22.incrementAll(doubleArray40);
        double double43 = secondMoment0.evaluate(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double45 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        secondMoment46.increment((double) (short) 0);
        double double51 = secondMoment46.getResult();
        secondMoment46.clear();
        secondMoment46.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment46);
        double double56 = variance55.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment(1.0d);
        double[] doubleArray66 = new double[] { (-1L), 0, 10L };
        secondMoment60.incrementAll(doubleArray66, 0, 0);
        double[] doubleArray72 = new double[] { 10, (byte) 100 };
        double double73 = secondMoment60.evaluate(doubleArray72);
        double double74 = secondMoment60.getResult();
        secondMoment60.increment((double) (short) -1);
        double[] doubleArray78 = new double[] { (short) 1 };
        secondMoment60.incrementAll(doubleArray78);
        secondMoment57.incrementAll(doubleArray78);
        variance55.incrementAll(doubleArray78);
        double double82 = secondMoment0.evaluate(doubleArray78);
        secondMoment0.clear();
        double double84 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.5d + "'", double28 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 74.0d + "'", double39 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 200.0d + "'", double43 == 200.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 200.0d + "'", double45 == 200.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.5d + "'", double51 == 0.5d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 4050.0d + "'", double73 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 4050.0d + "'", double74 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
    }

    @Test
    public void test11792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11792");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.clear();
        secondMoment0.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        secondMoment12.increment((double) (short) 0);
        double double17 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        secondMoment18.increment((double) (short) 0);
        double double23 = secondMoment18.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        double double34 = secondMoment18.evaluate(doubleArray30);
        double[] doubleArray35 = new double[] {};
        secondMoment18.incrementAll(doubleArray35);
        secondMoment12.incrementAll(doubleArray35);
        secondMoment12.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        secondMoment41.incrementAll(doubleArray47, 0, 0);
        double[] doubleArray53 = new double[] { 10, (byte) 100 };
        double double54 = secondMoment41.evaluate(doubleArray53);
        double double55 = variance40.evaluate(doubleArray53);
        double double56 = secondMoment7.evaluate(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        secondMoment57.increment((double) (short) 0);
        double double62 = secondMoment57.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        secondMoment63.increment((double) (short) 0);
        double double68 = secondMoment63.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        double[] doubleArray75 = new double[] { (-1L), 0, 10L };
        secondMoment69.incrementAll(doubleArray75, 0, 0);
        double double79 = secondMoment63.evaluate(doubleArray75);
        double[] doubleArray80 = new double[] {};
        secondMoment63.incrementAll(doubleArray80);
        secondMoment57.incrementAll(doubleArray80);
        double double83 = secondMoment7.evaluate(doubleArray80);
        double double84 = secondMoment0.evaluate(doubleArray80);
        long long85 = secondMoment0.getN();
        double double86 = secondMoment0.getResult();
        long long87 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.5d + "'", double17 == 0.5d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5d + "'", double23 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 74.0d + "'", double34 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4050.0d + "'", double54 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4050.0d + "'", double55 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4050.0d + "'", double56 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.5d + "'", double62 == 0.5d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.5d + "'", double68 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 74.0d + "'", double79 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 1L + "'", long85 == 1L);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 1L + "'", long87 == 1L);
    }

    @Test
    public void test11793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11793");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment((double) (short) -1);
        secondMoment15.clear();
        secondMoment15.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment15);
        boolean boolean25 = secondMoment0.equals((java.lang.Object) secondMoment15);
        double double26 = secondMoment15.getResult();
        secondMoment15.clear();
        long long28 = secondMoment15.getN();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test11794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11794");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double10 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double[] doubleArray24 = new double[] { 10, (byte) 100 };
        double double25 = secondMoment12.evaluate(doubleArray24);
        double double26 = secondMoment12.getResult();
        long long27 = secondMoment12.getN();
        long long28 = secondMoment12.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        secondMoment30.increment((double) (short) 0);
        double double35 = secondMoment30.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double double46 = secondMoment30.evaluate(doubleArray42);
        double[] doubleArray47 = new double[] {};
        secondMoment30.incrementAll(doubleArray47);
        double double51 = variance29.evaluate(doubleArray47, (int) (byte) 0, 0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        secondMoment53.increment((double) (short) 0);
        long long58 = secondMoment53.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment(1.0d);
        secondMoment60.increment((double) (short) 0);
        double double65 = secondMoment60.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        secondMoment66.increment((double) (short) 0);
        double double71 = secondMoment66.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        double[] doubleArray78 = new double[] { (-1L), 0, 10L };
        secondMoment72.incrementAll(doubleArray78, 0, 0);
        double double82 = secondMoment66.evaluate(doubleArray78);
        double[] doubleArray83 = new double[] {};
        secondMoment66.incrementAll(doubleArray83);
        secondMoment60.incrementAll(doubleArray83);
        secondMoment53.incrementAll(doubleArray83);
        double double88 = variance29.evaluate(doubleArray83, (double) (byte) 0);
        double double89 = secondMoment12.evaluate(doubleArray83);
        double double90 = secondMoment0.evaluate(doubleArray83);
        double double91 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1376.0d + "'", double10 == 1376.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4050.0d + "'", double26 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 2L + "'", long27 == 2L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 2L + "'", long28 == 2L);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.5d + "'", double35 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 74.0d + "'", double46 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 2L + "'", long58 == 2L);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.5d + "'", double65 == 0.5d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.5d + "'", double71 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 74.0d + "'", double82 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4050.0d + "'", double89 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
    }

    @Test
    public void test11795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11795");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        double double4 = secondMoment1.getResult();
        double double5 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        double[] doubleArray18 = new double[] { 10, (byte) 100 };
        double double19 = secondMoment6.evaluate(doubleArray18);
        double double20 = secondMoment1.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        secondMoment22.increment((double) (short) 0);
        double double27 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double[] doubleArray45 = new double[] {};
        secondMoment28.incrementAll(doubleArray45);
        secondMoment22.incrementAll(doubleArray45);
        secondMoment22.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double[] doubleArray63 = new double[] { 10, (byte) 100 };
        double double64 = secondMoment51.evaluate(doubleArray63);
        double double65 = variance50.evaluate(doubleArray63);
        double double66 = variance21.evaluate(doubleArray63);
        double double67 = secondMoment1.evaluate(doubleArray63);
        double double68 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long70 = secondMoment1.getN();
        secondMoment1.increment(1.2378637691198736E14d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        secondMoment74.incrementAll(doubleArray80, 0, 0);
        long long84 = secondMoment74.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment74);
        secondMoment74.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        secondMoment74.increment(11837.59d);
        double double91 = secondMoment74.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment74);
        boolean boolean93 = secondMoment1.equals((java.lang.Object) secondMoment74);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4050.0d + "'", double19 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5d + "'", double27 == 0.5d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4050.0d + "'", double64 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4050.0d + "'", double65 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4050.0d + "'", double66 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4050.0d + "'", double67 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4050.0d + "'", double68 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 2L + "'", long70 == 2L);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 1L + "'", long84 == 1L);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 9.33322763454E7d + "'", double91 == 9.33322763454E7d);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test11796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11796");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        variance9.clear();
        variance9.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        double[] doubleArray27 = new double[] { 10, (byte) 100 };
        double double28 = secondMoment15.evaluate(doubleArray27);
        long long29 = secondMoment15.getN();
        secondMoment15.clear();
        double double31 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment15);
        long long33 = secondMoment15.getN();
        secondMoment15.increment(3070.3333333333335d);
        secondMoment15.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment((double) ' ');
        secondMoment37.increment((double) (byte) 0);
        secondMoment37.clear();
        secondMoment37.clear();
        long long44 = secondMoment37.getN();
        long long45 = secondMoment37.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment49);
        secondMoment49.increment((double) (short) -1);
        long long55 = secondMoment49.getN();
        double double56 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment49);
        long long59 = secondMoment49.getN();
        secondMoment49.increment(482.66666666666663d);
        double double62 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        secondMoment63.clear();
        double double67 = secondMoment63.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        secondMoment68.increment((double) (short) 0);
        double double73 = secondMoment68.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        secondMoment74.incrementAll(doubleArray80, 0, 0);
        double double84 = secondMoment68.evaluate(doubleArray80);
        double double85 = secondMoment63.evaluate(doubleArray80);
        secondMoment49.incrementAll(doubleArray80);
        secondMoment37.incrementAll(doubleArray80);
        secondMoment15.incrementAll(doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double double91 = variance9.evaluate(doubleArray80, 0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4050.0d + "'", double28 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 2L + "'", long29 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 2L + "'", long55 == 2L);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 544.5d + "'", double56 == 544.5d);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 2L + "'", long59 == 2L);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 146040.96296296292d + "'", double62 == 146040.96296296292d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5d + "'", double73 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 74.0d + "'", double84 == 74.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 74.0d + "'", double85 == 74.0d);
    }

    @Test
    public void test11797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11797");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        long long8 = secondMoment2.getN();
        double double9 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        double double15 = secondMoment12.getResult();
        double double16 = secondMoment12.getResult();
        boolean boolean17 = variance11.equals((java.lang.Object) secondMoment12);
        secondMoment12.clear();
        double double19 = secondMoment12.getResult();
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 544.5d + "'", double9 == 544.5d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test11798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11798");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        secondMoment1.increment(74.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        boolean boolean9 = variance8.isBiasCorrected();
        double double10 = variance8.getResult();
        boolean boolean11 = variance8.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment((double) ' ');
        double double16 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment13);
        variance18.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment20);
        secondMoment20.increment((double) (short) -1);
        secondMoment20.clear();
        secondMoment20.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        variance29.incrementAll(doubleArray36);
        variance29.clear();
        variance29.increment((double) 10.0f);
        variance29.increment(2025.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment47);
        secondMoment47.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        secondMoment47.clear();
        secondMoment47.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment55);
        secondMoment55.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        double[] doubleArray67 = new double[] { (-1L), 0, 10L };
        secondMoment61.incrementAll(doubleArray67, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment61);
        long long72 = variance71.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment73.increment(1.0d);
        double[] doubleArray79 = new double[] { (-1L), 0, 10L };
        secondMoment73.incrementAll(doubleArray79, 0, 0);
        double double84 = variance71.evaluate(doubleArray79, (double) (short) -1);
        double double85 = secondMoment55.evaluate(doubleArray79);
        double double86 = secondMoment47.evaluate(doubleArray79);
        double double88 = variance29.evaluate(doubleArray79, (double) 10.0f);
        double double89 = variance18.evaluate(doubleArray79);
        double double90 = variance8.evaluate(doubleArray79);
        double double91 = variance8.getResult();
        double double92 = variance8.getResult();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1801.0d + "'", double10 == 1801.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 37.0d + "'", double84 == 37.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 74.0d + "'", double85 == 74.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 74.0d + "'", double86 == 74.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 37.0d + "'", double88 == 37.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 24.666666666666668d + "'", double89 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 37.0d + "'", double90 == 37.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1801.0d + "'", double91 == 1801.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1801.0d + "'", double92 == 1801.0d);
    }

    @Test
    public void test11799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11799");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        variance9.increment((double) 5L);
        double double13 = variance9.getResult();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test11800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11800");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        secondMoment3.incrementAll(doubleArray9, 0, 0);
        double[] doubleArray15 = new double[] { 10, (byte) 100 };
        double double16 = secondMoment3.evaluate(doubleArray15);
        double double17 = secondMoment0.evaluate(doubleArray15);
        secondMoment0.clear();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
    }

    @Test
    public void test11801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11801");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        secondMoment0.increment(0.25d);
        double double11 = secondMoment0.getResult();
        secondMoment0.increment(0.0d);
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 4680.28125d + "'", double11 == 4680.28125d);
    }

    @Test
    public void test11802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11802");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.clear();
        secondMoment2.clear();
        double double22 = secondMoment2.getResult();
        long long23 = secondMoment2.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
    }

    @Test
    public void test11803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11803");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment4 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment4.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment4);
        secondMoment4.increment((double) (short) -1);
        long long10 = secondMoment4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment4);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double23 = variance11.evaluate(doubleArray18, (double) 1L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double[] doubleArray37 = new double[] { 10, (byte) 100 };
        double double38 = secondMoment25.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment40);
        secondMoment40.increment((double) (short) -1);
        secondMoment40.clear();
        secondMoment40.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment40);
        boolean boolean50 = secondMoment25.equals((java.lang.Object) secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        secondMoment53.increment((double) (short) 0);
        double double58 = secondMoment53.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        double double69 = secondMoment53.evaluate(doubleArray65);
        double[] doubleArray70 = new double[] {};
        secondMoment53.incrementAll(doubleArray70);
        double double74 = variance52.evaluate(doubleArray70, (int) (byte) 0, 0);
        long long75 = variance52.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment76.increment(1.0d);
        secondMoment76.increment((double) (short) 0);
        double double81 = secondMoment76.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment82 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment82.increment(1.0d);
        double[] doubleArray88 = new double[] { (-1L), 0, 10L };
        secondMoment82.incrementAll(doubleArray88, 0, 0);
        double double92 = secondMoment76.evaluate(doubleArray88);
        variance52.incrementAll(doubleArray88);
        double double95 = variance51.evaluate(doubleArray88, (double) '#');
        variance11.incrementAll(doubleArray88);
        variance1.incrementAll(doubleArray88);
        variance1.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 24.666666666666668d + "'", double23 == 24.666666666666668d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4050.0d + "'", double38 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.5d + "'", double58 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 74.0d + "'", double69 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.5d + "'", double81 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 74.0d + "'", double92 == 74.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 24.666666666666668d + "'", double95 == 24.666666666666668d);
    }

    @Test
    public void test11804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11804");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        secondMoment0.increment(3.033666413425926E7d);
        secondMoment0.increment(0.0d);
        double double15 = secondMoment0.getResult();
        double double16 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 6.135421069721261E14d + "'", double15 == 6.135421069721261E14d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 6.135421069721261E14d + "'", double16 == 6.135421069721261E14d);
    }

    @Test
    public void test11805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11805");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.clear();
        variance2.clear();
        variance2.clear();
        variance2.setBiasCorrected(true);
        variance2.increment(4050.0d);
        variance2.increment(32.0d);
        variance2.setBiasCorrected(true);
        variance2.increment(89.2d);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = variance2.getResult();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11806");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double double17 = secondMoment1.evaluate(doubleArray13);
        double[] doubleArray18 = new double[] {};
        secondMoment1.incrementAll(doubleArray18);
        double double22 = variance0.evaluate(doubleArray18, (int) (byte) 0, 0);
        long long23 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        variance0.incrementAll(doubleArray36);
        variance0.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        secondMoment58.increment((double) (short) 0);
        double double63 = secondMoment58.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        secondMoment64.incrementAll(doubleArray70, 0, 0);
        double double74 = secondMoment58.evaluate(doubleArray70);
        double[] doubleArray75 = new double[] {};
        secondMoment58.incrementAll(doubleArray75);
        double double77 = secondMoment55.evaluate(doubleArray75);
        double double78 = variance54.evaluate(doubleArray75);
        variance0.incrementAll(doubleArray75);
        variance0.increment((double) (byte) 0);
        boolean boolean82 = variance0.isBiasCorrected();
        variance0.clear();
        variance0.clear();
        java.lang.Class<?> wildcardClass85 = variance0.getClass();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 74.0d + "'", double17 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.5d + "'", double63 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 74.0d + "'", double74 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test11807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11807");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        variance9.increment(200.0d);
        long long13 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        secondMoment15.increment((double) (short) 0);
        double double20 = secondMoment15.getResult();
        secondMoment15.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment15);
        variance22.increment((double) (short) 0);
        variance22.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double[] doubleArray39 = new double[] { 10, (byte) 100 };
        double double40 = secondMoment27.evaluate(doubleArray39);
        double double41 = secondMoment27.getResult();
        secondMoment27.increment((double) (short) -1);
        double[] doubleArray45 = new double[] { (short) 1 };
        secondMoment27.incrementAll(doubleArray45);
        long long47 = secondMoment27.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        secondMoment49.increment((double) (short) 0);
        long long54 = secondMoment49.getN();
        double double55 = secondMoment49.getResult();
        secondMoment49.increment((double) (byte) 10);
        secondMoment49.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment59);
        long long70 = variance69.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment(1.0d);
        double[] doubleArray77 = new double[] { (-1L), 0, 10L };
        secondMoment71.incrementAll(doubleArray77, 0, 0);
        double double82 = variance69.evaluate(doubleArray77, (double) (short) -1);
        double double83 = secondMoment49.evaluate(doubleArray77);
        double double84 = secondMoment27.evaluate(doubleArray77);
        variance22.incrementAll(doubleArray77);
        double double86 = variance9.evaluate(doubleArray77);
        double double87 = variance9.getResult();
        variance9.clear();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5d + "'", double20 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4050.0d + "'", double40 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4050.0d + "'", double41 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0]");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 4L + "'", long47 == 4L);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 2L + "'", long54 == 2L);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5d + "'", double55 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 37.0d + "'", double82 == 37.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 74.0d + "'", double83 == 74.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 74.0d + "'", double84 == 74.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 37.0d + "'", double86 == 37.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
    }

    @Test
    public void test11808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11808");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double double17 = secondMoment1.evaluate(doubleArray13);
        double[] doubleArray18 = new double[] {};
        secondMoment1.incrementAll(doubleArray18);
        double double22 = variance0.evaluate(doubleArray18, (int) (byte) 0, 0);
        long long23 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        variance0.incrementAll(doubleArray36);
        long long42 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        secondMoment43.increment((double) (short) 0);
        double double48 = secondMoment43.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        secondMoment49.incrementAll(doubleArray55, 0, 0);
        double double59 = secondMoment43.evaluate(doubleArray55);
        double[] doubleArray60 = new double[] {};
        secondMoment43.incrementAll(doubleArray60);
        double double62 = variance0.evaluate(doubleArray60);
        variance0.increment((double) 1.0f);
        long long65 = variance0.getN();
        variance0.clear();
        variance0.increment(36.916666666666664d);
        variance0.increment((double) (-1L));
        variance0.increment(351992.75d);
        double double73 = variance0.getResult();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 74.0d + "'", double17 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 3L + "'", long42 == 3L);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.5d + "'", double48 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 74.0d + "'", double59 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 4L + "'", long65 == 4L);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 4.129541834901621E10d + "'", double73 == 4.129541834901621E10d);
    }

    @Test
    public void test11809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11809");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        variance1.increment((double) (short) 100);
        variance1.increment((double) 3L);
        variance1.clear();
        variance1.increment((double) (byte) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        secondMoment11.increment((double) '4');
        double double17 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        secondMoment18.increment((double) (short) 0);
        double double23 = secondMoment18.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        double[] doubleArray41 = new double[] {};
        secondMoment24.incrementAll(doubleArray41);
        secondMoment18.incrementAll(doubleArray41);
        secondMoment18.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double[] doubleArray59 = new double[] { 10, (byte) 100 };
        double double60 = secondMoment47.evaluate(doubleArray59);
        double double61 = variance46.evaluate(doubleArray59);
        double double62 = secondMoment11.evaluate(doubleArray59);
        secondMoment11.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment65);
        secondMoment65.increment((double) (short) -1);
        secondMoment65.clear();
        secondMoment65.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        variance74.incrementAll(doubleArray81);
        variance64.incrementAll(doubleArray81);
        double double87 = variance1.evaluate(doubleArray81);
        double double88 = variance1.getResult();
        variance1.setBiasCorrected(true);
        long long91 = variance1.getN();
        long long92 = variance1.getN();
        double double93 = variance1.getResult();
        long long94 = variance1.getN();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 200.0d + "'", double17 == 200.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5d + "'", double23 == 0.5d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4050.0d + "'", double62 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 37.0d + "'", double87 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 0L + "'", long92 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 0L + "'", long94 == 0L);
    }

    @Test
    public void test11810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11810");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        double double16 = secondMoment0.evaluate(doubleArray12);
        long long17 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        double double24 = secondMoment19.getResult();
        secondMoment19.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment19);
        variance26.increment((double) (short) 0);
        variance26.clear();
        variance26.increment((double) 1L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        secondMoment32.incrementAll(doubleArray38, 0, 0);
        double double42 = variance26.evaluate(doubleArray38);
        secondMoment0.incrementAll(doubleArray38);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        double double50 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment((double) ' ');
        double double54 = secondMoment51.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment51);
        boolean boolean56 = secondMoment45.equals((java.lang.Object) variance55);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment57);
        secondMoment57.increment((double) (short) -1);
        secondMoment57.clear();
        secondMoment57.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment57);
        long long67 = variance66.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment(1.0d);
        secondMoment71.increment((double) (short) 0);
        double double76 = secondMoment71.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment77.increment(1.0d);
        double[] doubleArray83 = new double[] { (-1L), 0, 10L };
        secondMoment77.incrementAll(doubleArray83, 0, 0);
        double double87 = secondMoment71.evaluate(doubleArray83);
        double[] doubleArray88 = new double[] {};
        secondMoment71.incrementAll(doubleArray88);
        double double90 = secondMoment68.evaluate(doubleArray88);
        double double91 = variance66.evaluate(doubleArray88);
        double double92 = secondMoment45.evaluate(doubleArray88);
        boolean boolean93 = secondMoment0.equals((java.lang.Object) doubleArray88);
        secondMoment0.clear();
        secondMoment0.increment(364.5d);
        double[] doubleArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            secondMoment0.incrementAll(doubleArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 74.0d + "'", double16 == 74.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 3L + "'", long17 == 3L);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5d + "'", double24 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 24.666666666666668d + "'", double42 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.5d + "'", double76 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 74.0d + "'", double87 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.5d + "'", double92 == 0.5d);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test11811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11811");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        double double8 = variance7.getResult();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test11812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11812");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.clear();
        variance2.clear();
        variance2.clear();
        variance2.setBiasCorrected(true);
        variance2.increment(4050.0d);
        variance2.increment(32.0d);
        variance2.clear();
        variance2.setBiasCorrected(false);
        variance2.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        secondMoment17.increment((double) (short) -1);
        long long23 = secondMoment17.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = variance2.equals((java.lang.Object) secondMoment17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
    }

    @Test
    public void test11813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11813");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) '4');
        double double7 = secondMoment1.getResult();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance9.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        long long28 = variance27.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double double40 = variance27.evaluate(doubleArray35, (double) (short) -1);
        double double41 = secondMoment11.evaluate(doubleArray35);
        secondMoment11.clear();
        double double43 = secondMoment11.getResult();
        secondMoment11.clear();
        double double45 = secondMoment11.getResult();
        boolean boolean46 = variance9.equals((java.lang.Object) secondMoment11);
        variance9.setBiasCorrected(true);
        variance9.clear();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 200.0d + "'", double8 == 200.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 74.0d + "'", double41 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test11814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11814");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.clear();
        variance2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long7 = variance6.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double double24 = secondMoment8.evaluate(doubleArray20);
        variance6.incrementAll(doubleArray20);
        // The following exception was thrown during execution in test generation
        try {
            double double29 = variance2.evaluate(doubleArray20, 1576.2666666666667d, (int) (byte) 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 74.0d + "'", double24 == 74.0d);
    }

    @Test
    public void test11815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11815");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment((double) (short) -1);
        secondMoment16.clear();
        secondMoment16.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        boolean boolean28 = variance27.isBiasCorrected();
        variance27.increment(4.321154463792899E13d);
        boolean boolean31 = variance27.isBiasCorrected();
        variance27.clear();
        double double33 = variance27.getResult();
        long long34 = variance27.getN();
        double double35 = variance27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment36);
        long long47 = variance46.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        double double59 = variance46.evaluate(doubleArray54, (double) (short) -1);
        double double60 = variance46.getResult();
        variance46.setBiasCorrected(true);
        variance46.increment(3602.0d);
        double double65 = variance46.getResult();
        variance46.increment(2201.3333333333335d);
        boolean boolean68 = variance27.equals((java.lang.Object) variance46);
        double double69 = variance46.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 37.0d + "'", double59 == 37.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test11816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11816");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        double double4 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double double24 = secondMoment8.evaluate(doubleArray20);
        double[] doubleArray25 = new double[] {};
        secondMoment8.incrementAll(doubleArray25);
        double double29 = variance7.evaluate(doubleArray25, (int) (byte) 0, 0);
        variance6.incrementAll(doubleArray25);
        double double31 = secondMoment0.evaluate(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment((double) ' ');
        secondMoment32.increment((double) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        secondMoment38.incrementAll(doubleArray44, 0, 0);
        double[] doubleArray50 = new double[] { 10, (byte) 100 };
        double double51 = secondMoment38.evaluate(doubleArray50);
        double double52 = secondMoment38.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment38);
        long long54 = secondMoment38.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment((double) ' ');
        secondMoment55.increment((double) (-1.0f));
        secondMoment55.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        double[] doubleArray67 = new double[] { (-1L), 0, 10L };
        secondMoment61.incrementAll(doubleArray67, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment61);
        long long72 = variance71.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment73.increment(1.0d);
        double[] doubleArray79 = new double[] { (-1L), 0, 10L };
        secondMoment73.incrementAll(doubleArray79, 0, 0);
        double double84 = variance71.evaluate(doubleArray79, (double) (short) -1);
        double double85 = secondMoment55.evaluate(doubleArray79);
        double double86 = secondMoment38.evaluate(doubleArray79);
        secondMoment32.incrementAll(doubleArray79);
        double double88 = secondMoment0.evaluate(doubleArray79);
        secondMoment0.increment((double) 10L);
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.increment(9161778.740966797d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 74.0d + "'", double24 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4050.0d + "'", double51 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4050.0d + "'", double52 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 2L + "'", long54 == 2L);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 37.0d + "'", double84 == 37.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 74.0d + "'", double85 == 74.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 74.0d + "'", double86 == 74.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
    }

    @Test
    public void test11817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11817");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        double double6 = secondMoment0.getResult();
        long long7 = secondMoment0.getN();
        double double8 = secondMoment0.getResult();
        secondMoment0.increment(10.0d);
        double double11 = secondMoment0.getResult();
        secondMoment0.increment(0.0d);
        secondMoment0.increment(1576.2666666666667d);
        double double16 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double double45 = secondMoment18.evaluate(doubleArray40);
        secondMoment18.increment((double) 'a');
        secondMoment18.increment(3.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        secondMoment51.increment((double) (short) 0);
        double double56 = secondMoment51.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        double[] doubleArray63 = new double[] { (-1L), 0, 10L };
        secondMoment57.incrementAll(doubleArray63, 0, 0);
        double double67 = secondMoment51.evaluate(doubleArray63);
        double[] doubleArray68 = new double[] {};
        secondMoment51.incrementAll(doubleArray68);
        double double72 = variance50.evaluate(doubleArray68, (int) (byte) 0, 0);
        double double73 = secondMoment18.evaluate(doubleArray68);
        double double74 = variance17.evaluate(doubleArray68);
        variance17.increment(2.931600745132524E14d);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5d + "'", double8 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 60.666666666666664d + "'", double11 == 60.666666666666664d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1980834.5102222222d + "'", double16 == 1980834.5102222222d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.5d + "'", double56 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 74.0d + "'", double67 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 7142.8d + "'", double73 == 7142.8d);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
    }

    @Test
    public void test11818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11818");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        double double6 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        secondMoment7.increment((double) (short) -1);
        secondMoment7.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        double double15 = secondMoment7.getResult();
        long long16 = secondMoment7.getN();
        double double17 = secondMoment7.getResult();
        double double18 = secondMoment7.getResult();
        secondMoment7.clear();
        secondMoment7.clear();
        boolean boolean21 = secondMoment0.equals((java.lang.Object) secondMoment7);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test11819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11819");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        long long7 = variance6.getN();
        double double8 = variance6.getResult();
        boolean boolean9 = variance6.isBiasCorrected();
        variance6.increment(5.49755813888E11d);
        variance6.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long15 = variance14.getN();
        double double16 = variance14.getResult();
        double double17 = variance14.getResult();
        long long18 = variance14.getN();
        variance14.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance22.clear();
        variance22.increment(1769.25d);
        double double26 = variance22.getResult();
        boolean boolean27 = variance14.equals((java.lang.Object) variance22);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double[] doubleArray42 = new double[] { 10, (byte) 100 };
        double double43 = secondMoment30.evaluate(doubleArray42);
        double double44 = secondMoment30.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment30);
        long long46 = secondMoment30.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        double double48 = secondMoment30.getResult();
        secondMoment30.clear();
        secondMoment30.increment(Double.NaN);
        secondMoment30.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long56 = variance55.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        secondMoment57.increment((double) (short) 0);
        double double62 = secondMoment57.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        double double73 = secondMoment57.evaluate(doubleArray69);
        variance55.incrementAll(doubleArray69);
        secondMoment30.incrementAll(doubleArray69);
        variance22.incrementAll(doubleArray69);
        double double78 = variance6.evaluate(doubleArray69, 644.0d);
        variance6.increment(128.0d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4050.0d + "'", double43 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4050.0d + "'", double44 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 2L + "'", long46 == 2L);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.5d + "'", double62 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 74.0d + "'", double73 == 74.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 37.0d + "'", double78 == 37.0d);
    }

    @Test
    public void test11820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11820");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        double double25 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double[] doubleArray45 = new double[] {};
        secondMoment28.incrementAll(doubleArray45);
        double double49 = variance27.evaluate(doubleArray45, (int) (byte) 0, 0);
        double double50 = variance26.evaluate(doubleArray45);
        double double51 = variance9.evaluate(doubleArray45);
        variance9.increment((double) 100);
        double double54 = variance9.getResult();
        variance9.increment(0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    }

    @Test
    public void test11821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11821");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        double double4 = variance1.getResult();
        variance1.clear();
        variance1.setBiasCorrected(true);
        long long8 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        double[] doubleArray22 = new double[] { 10, (byte) 100 };
        double double23 = secondMoment10.evaluate(doubleArray22);
        double double24 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment10);
        long long26 = secondMoment10.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment((double) ' ');
        secondMoment27.increment((double) (-1.0f));
        secondMoment27.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment33);
        long long44 = variance43.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double double56 = variance43.evaluate(doubleArray51, (double) (short) -1);
        double double57 = secondMoment27.evaluate(doubleArray51);
        double double58 = secondMoment10.evaluate(doubleArray51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long62 = variance61.getN();
        double double63 = variance61.getResult();
        variance61.increment((double) (short) 100);
        variance61.increment((double) 3L);
        variance61.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        secondMoment69.increment((double) (short) 0);
        double double74 = secondMoment69.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        double double85 = secondMoment69.evaluate(doubleArray81);
        double[] doubleArray86 = new double[] {};
        secondMoment69.incrementAll(doubleArray86);
        variance61.incrementAll(doubleArray86);
        secondMoment10.incrementAll(doubleArray86);
        variance1.incrementAll(doubleArray86);
        double[] doubleArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = variance1.evaluate(doubleArray91, (int) '#', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4050.0d + "'", double23 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 74.0d + "'", double57 == 74.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 74.0d + "'", double58 == 74.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.5d + "'", double74 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 74.0d + "'", double85 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
    }

    @Test
    public void test11822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11822");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double double17 = secondMoment1.evaluate(doubleArray13);
        long long18 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double[] doubleArray21 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance20.incrementAll(doubleArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 74.0d + "'", double17 == 74.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 3L + "'", long18 == 3L);
    }

    @Test
    public void test11823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11823");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        secondMoment10.clear();
        secondMoment10.increment((double) 10);
        secondMoment10.clear();
        long long20 = secondMoment10.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        variance22.increment(1.6289621902263371E7d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        secondMoment26.increment((double) (short) -1);
        secondMoment26.clear();
        secondMoment26.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment26);
        double double36 = secondMoment26.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment((double) ' ');
        secondMoment37.increment((double) (short) 10);
        secondMoment37.increment((double) 2L);
        secondMoment37.increment(272.25d);
        secondMoment37.clear();
        boolean boolean47 = secondMoment26.equals((java.lang.Object) secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        secondMoment62.increment((double) (short) 0);
        double double67 = secondMoment62.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double double78 = secondMoment62.evaluate(doubleArray74);
        double[] doubleArray79 = new double[] {};
        secondMoment62.incrementAll(doubleArray79);
        double double81 = secondMoment59.evaluate(doubleArray79);
        double double82 = variance58.evaluate(doubleArray79);
        double double83 = secondMoment26.evaluate(doubleArray79);
        double double85 = variance22.evaluate(doubleArray79, 6660.75d);
        secondMoment0.incrementAll(doubleArray79);
        double double87 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.5d + "'", double67 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 74.0d + "'", double78 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue(Double.isNaN(double87));
    }

    @Test
    public void test11824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11824");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.increment((double) 100);
        double double8 = secondMoment0.getResult();
        long long9 = secondMoment0.getN();
        secondMoment0.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 5304.666666666667d + "'", double8 == 5304.666666666667d);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 3L + "'", long9 == 3L);
    }

    @Test
    public void test11825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11825");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        secondMoment15.increment((double) (short) 0);
        double double20 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double37 = secondMoment21.evaluate(doubleArray33);
        double[] doubleArray38 = new double[] {};
        secondMoment21.incrementAll(doubleArray38);
        secondMoment15.incrementAll(doubleArray38);
        secondMoment15.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        double[] doubleArray56 = new double[] { 10, (byte) 100 };
        double double57 = secondMoment44.evaluate(doubleArray56);
        double double58 = variance43.evaluate(doubleArray56);
        double double59 = secondMoment0.evaluate(doubleArray56);
        long long60 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        secondMoment64.increment((double) (short) 0);
        double double69 = secondMoment64.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        double double80 = secondMoment64.evaluate(doubleArray76);
        double[] doubleArray81 = new double[] {};
        secondMoment64.incrementAll(doubleArray81);
        double double85 = variance63.evaluate(doubleArray81, (int) (byte) 0, 0);
        variance62.incrementAll(doubleArray81);
        variance62.setBiasCorrected(false);
        variance62.clear();
        variance62.increment(1067.1666666666667d);
        boolean boolean92 = secondMoment0.equals((java.lang.Object) variance62);
        long long93 = secondMoment0.getN();
        secondMoment0.increment(3034.75d);
        secondMoment0.increment(30671.375d);
        secondMoment0.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5d + "'", double20 == 0.5d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4050.0d + "'", double57 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4050.0d + "'", double58 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 2L + "'", long60 == 2L);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.5d + "'", double69 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 74.0d + "'", double80 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 2L + "'", long93 == 2L);
    }

    @Test
    public void test11826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11826");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double[] doubleArray10 = new double[] { 0L, (byte) 1, 6140.666666666667d, 544.5d, (byte) 100 };
        double double11 = secondMoment1.evaluate(doubleArray10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        secondMoment12.increment((double) (short) -1);
        secondMoment12.clear();
        secondMoment12.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        boolean boolean22 = secondMoment1.equals((java.lang.Object) secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment12);
        boolean boolean24 = variance23.isBiasCorrected();
        variance23.setBiasCorrected(false);
        variance23.increment(4608.0d);
        variance23.increment(7.90286396701389E7d);
        variance23.clear();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 1.0, 6140.666666666667, 544.5, 100.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2.880385675555556E7d + "'", double11 == 2.880385675555556E7d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test11827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11827");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance8.clear();
        double double10 = variance8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        long long28 = variance27.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double double40 = variance27.evaluate(doubleArray35, (double) (short) -1);
        double double41 = secondMoment11.evaluate(doubleArray35);
        double double45 = variance8.evaluate(doubleArray35, 7836.75d, (int) (short) 0, (int) (short) 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 272.25d + "'", double10 == 272.25d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 74.0d + "'", double41 == 74.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
    }

    @Test
    public void test11828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11828");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        secondMoment2.increment((double) (short) 0);
        double double7 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double[] doubleArray21 = new double[] { 10, (byte) 100 };
        double double22 = secondMoment9.evaluate(doubleArray21);
        double double23 = secondMoment9.getResult();
        long long24 = secondMoment9.getN();
        long long25 = secondMoment9.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        boolean boolean27 = secondMoment2.equals((java.lang.Object) secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        double double29 = secondMoment2.getResult();
        secondMoment2.increment((double) 1);
        long long32 = secondMoment2.getN();
        double double33 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        double double35 = secondMoment2.getResult();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4050.0d + "'", double23 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2L + "'", long25 == 2L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 3L + "'", long32 == 3L);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.6666666666666666d + "'", double33 == 0.6666666666666666d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.6666666666666666d + "'", double35 == 0.6666666666666666d);
    }

    @Test
    public void test11829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11829");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment(272.25d);
        long long7 = secondMoment1.getN();
        secondMoment1.clear();
        long long9 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long12 = variance11.getN();
        double double13 = variance11.getResult();
        double double14 = variance11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment((double) (short) -1);
        secondMoment15.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        double double23 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double[] doubleArray37 = new double[] { 10, (byte) 100 };
        double double38 = secondMoment25.evaluate(doubleArray37);
        double double39 = secondMoment25.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        secondMoment42.increment((double) (short) 0);
        double double47 = secondMoment42.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        double double58 = secondMoment42.evaluate(doubleArray54);
        double[] doubleArray59 = new double[] {};
        secondMoment42.incrementAll(doubleArray59);
        double double63 = variance41.evaluate(doubleArray59, (int) (byte) 0, 0);
        double double64 = variance40.evaluate(doubleArray59);
        secondMoment15.incrementAll(doubleArray59);
        double double66 = variance11.evaluate(doubleArray59);
        double double67 = secondMoment1.evaluate(doubleArray59);
        boolean boolean69 = secondMoment1.equals((java.lang.Object) 4.320688243469202E11d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4050.0d + "'", double38 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.5d + "'", double47 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 74.0d + "'", double58 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test11830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11830");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        secondMoment18.increment((double) (-1.0f));
        secondMoment18.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        long long35 = variance34.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double double47 = variance34.evaluate(doubleArray42, (double) (short) -1);
        double double48 = secondMoment18.evaluate(doubleArray42);
        double double49 = secondMoment1.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance50.increment(Double.NaN);
        long long53 = variance50.getN();
        long long54 = variance50.getN();
        double double55 = variance50.getResult();
        double double56 = variance50.getResult();
        double double57 = variance50.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 37.0d + "'", double47 == 37.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 3L + "'", long53 == 3L);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 3L + "'", long54 == 3L);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 37.0d + "'", double55 == 37.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 37.0d + "'", double57 == 37.0d);
    }

    @Test
    public void test11831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11831");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        secondMoment0.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(24.666666666666668d);
        secondMoment0.clear();
        secondMoment0.increment(1801.0d);
        double double34 = secondMoment0.getResult();
        secondMoment0.increment(80.75d);
        secondMoment0.clear();
        long long38 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    }

    @Test
    public void test11832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11832");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long10 = variance9.getN();
        variance9.clear();
        variance9.clear();
        long long13 = variance9.getN();
        long long14 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        double[] doubleArray27 = new double[] { 10, (byte) 100 };
        double double28 = secondMoment15.evaluate(doubleArray27);
        long long29 = secondMoment15.getN();
        secondMoment15.clear();
        secondMoment15.clear();
        double double32 = secondMoment15.getResult();
        secondMoment15.clear();
        secondMoment15.increment((double) (byte) 1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        secondMoment37.increment((double) (short) 0);
        double double42 = secondMoment37.getResult();
        secondMoment37.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment37);
        double double45 = secondMoment37.getResult();
        secondMoment37.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment49);
        secondMoment49.increment((double) (short) -1);
        secondMoment49.clear();
        secondMoment49.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        variance58.incrementAll(doubleArray65);
        variance48.incrementAll(doubleArray65);
        double double71 = secondMoment37.evaluate(doubleArray65);
        double double72 = secondMoment15.evaluate(doubleArray65);
        variance9.incrementAll(doubleArray65, 0, (int) (short) 0);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 544.5d + "'", double8 == 544.5d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4050.0d + "'", double28 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 2L + "'", long29 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.5d + "'", double42 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 74.0d + "'", double71 == 74.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 74.0d + "'", double72 == 74.0d);
    }

    @Test
    public void test11833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11833");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double[] doubleArray19 = new double[] { 10, (byte) 100 };
        double double20 = secondMoment7.evaluate(doubleArray19);
        double double21 = secondMoment7.getResult();
        long long22 = secondMoment7.getN();
        long long23 = secondMoment7.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        boolean boolean25 = secondMoment0.equals((java.lang.Object) secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        secondMoment7.increment((double) (byte) 0);
        secondMoment7.increment((double) 0.0f);
        double double31 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance33.clear();
        variance33.increment(1769.25d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment((double) ' ');
        double double40 = secondMoment37.getResult();
        secondMoment37.increment((double) (short) 100);
        secondMoment37.increment(100.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment45);
        secondMoment45.increment((double) (short) -1);
        secondMoment45.clear();
        secondMoment45.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment45);
        long long55 = variance54.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        secondMoment59.increment((double) (short) 0);
        double double64 = secondMoment59.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        double[] doubleArray71 = new double[] { (-1L), 0, 10L };
        secondMoment65.incrementAll(doubleArray71, 0, 0);
        double double75 = secondMoment59.evaluate(doubleArray71);
        double[] doubleArray76 = new double[] {};
        secondMoment59.incrementAll(doubleArray76);
        double double78 = secondMoment56.evaluate(doubleArray76);
        double double79 = variance54.evaluate(doubleArray76);
        secondMoment37.incrementAll(doubleArray76);
        variance33.incrementAll(doubleArray76);
        // The following exception was thrown during execution in test generation
        try {
            double double84 = secondMoment7.evaluate(doubleArray76, 10, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7075.0d + "'", double31 == 7075.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.5d + "'", double64 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 74.0d + "'", double75 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
    }

    @Test
    public void test11834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11834");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        secondMoment3.increment((double) (short) -1);
        long long9 = secondMoment3.getN();
        double double10 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        long long13 = secondMoment3.getN();
        secondMoment3.increment(482.66666666666663d);
        secondMoment3.increment(5226.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        secondMoment21.increment((double) '4');
        double double27 = secondMoment21.getResult();
        double double28 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        variance29.increment(100.0d);
        boolean boolean32 = variance29.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment33);
        double double37 = variance36.getResult();
        variance36.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        secondMoment40.increment((double) (short) 0);
        double double45 = secondMoment40.getResult();
        long long46 = secondMoment40.getN();
        double double47 = secondMoment40.getResult();
        secondMoment40.increment((double) 7L);
        secondMoment40.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment((double) ' ');
        double double54 = secondMoment51.getResult();
        double double55 = secondMoment51.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        double[] doubleArray68 = new double[] { 10, (byte) 100 };
        double double69 = secondMoment56.evaluate(doubleArray68);
        double double70 = secondMoment51.evaluate(doubleArray68);
        double double71 = secondMoment40.evaluate(doubleArray68);
        double double72 = variance36.evaluate(doubleArray68);
        variance29.incrementAll(doubleArray68, (int) (short) 0, 0);
        variance19.incrementAll(doubleArray68);
        variance19.setBiasCorrected(true);
        variance19.clear();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 2L + "'", long9 == 2L);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 544.5d + "'", double10 == 544.5d);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 200.0d + "'", double27 == 200.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 200.0d + "'", double28 == 200.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5d + "'", double45 == 0.5d);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 2L + "'", long46 == 2L);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.5d + "'", double47 == 0.5d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4050.0d + "'", double69 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4050.0d + "'", double70 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4050.0d + "'", double71 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 4050.0d + "'", double72 == 4050.0d);
    }

    @Test
    public void test11835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11835");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        secondMoment9.increment((double) (short) -1);
        secondMoment9.clear();
        secondMoment9.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        variance18.incrementAll(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment30);
        secondMoment30.increment((double) (short) -1);
        secondMoment30.clear();
        secondMoment30.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        secondMoment40.increment((double) (short) 0);
        double double45 = secondMoment40.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double double56 = secondMoment40.evaluate(doubleArray52);
        double double57 = secondMoment30.evaluate(doubleArray52);
        double double58 = variance18.evaluate(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment((double) ' ');
        secondMoment59.increment((double) (-1.0f));
        secondMoment59.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        double[] doubleArray71 = new double[] { (-1L), 0, 10L };
        secondMoment65.incrementAll(doubleArray71, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment65);
        long long76 = variance75.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment77.increment(1.0d);
        double[] doubleArray83 = new double[] { (-1L), 0, 10L };
        secondMoment77.incrementAll(doubleArray83, 0, 0);
        double double88 = variance75.evaluate(doubleArray83, (double) (short) -1);
        double double89 = secondMoment59.evaluate(doubleArray83);
        double double90 = variance18.evaluate(doubleArray83);
        double double91 = variance8.evaluate(doubleArray83);
        double double92 = variance8.getResult();
        variance8.clear();
        double double94 = variance8.getResult();
        variance8.increment(3082.666666666667d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5d + "'", double45 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 74.0d + "'", double56 == 74.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 74.0d + "'", double57 == 74.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 37.0d + "'", double58 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 37.0d + "'", double88 == 37.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 37.0d + "'", double90 == 37.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 24.666666666666668d + "'", double91 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 272.25d + "'", double92 == 272.25d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 272.25d + "'", double94 == 272.25d);
    }

    @Test
    public void test11836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11836");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        secondMoment1.clear();
        double double18 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment(2025.03125d);
        secondMoment1.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test11837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11837");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        secondMoment3.incrementAll(doubleArray9, 0, 0);
        double[] doubleArray15 = new double[] { 10, (byte) 100 };
        double double16 = secondMoment3.evaluate(doubleArray15);
        double double17 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        long long19 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        secondMoment3.clear();
        double double22 = secondMoment3.getResult();
        double double23 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        double double25 = variance24.getResult();
        double double26 = variance24.getResult();
        variance24.increment(687037.5740740742d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test11838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11838");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double double10 = secondMoment0.getResult();
        double double11 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        secondMoment15.increment((double) (short) 0);
        double double20 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        secondMoment21.incrementAll(doubleArray27, 0, 0);
        double double31 = secondMoment15.evaluate(doubleArray27);
        double[] doubleArray32 = new double[] {};
        secondMoment15.incrementAll(doubleArray32);
        double double36 = variance14.evaluate(doubleArray32, (int) (byte) 0, 0);
        variance13.incrementAll(doubleArray32);
        variance13.setBiasCorrected(false);
        variance13.clear();
        boolean boolean41 = secondMoment0.equals((java.lang.Object) variance13);
        long long42 = secondMoment0.getN();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5d + "'", double20 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 74.0d + "'", double31 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
    }

    @Test
    public void test11839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11839");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double20 = variance8.evaluate(doubleArray15, (double) 1L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        double[] doubleArray34 = new double[] { 10, (byte) 100 };
        double double35 = secondMoment22.evaluate(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        secondMoment37.increment((double) (short) -1);
        secondMoment37.clear();
        secondMoment37.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment37);
        boolean boolean47 = secondMoment22.equals((java.lang.Object) secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        secondMoment50.increment((double) (short) 0);
        double double55 = secondMoment50.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        double double66 = secondMoment50.evaluate(doubleArray62);
        double[] doubleArray67 = new double[] {};
        secondMoment50.incrementAll(doubleArray67);
        double double71 = variance49.evaluate(doubleArray67, (int) (byte) 0, 0);
        long long72 = variance49.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment73.increment(1.0d);
        secondMoment73.increment((double) (short) 0);
        double double78 = secondMoment73.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment79.increment(1.0d);
        double[] doubleArray85 = new double[] { (-1L), 0, 10L };
        secondMoment79.incrementAll(doubleArray85, 0, 0);
        double double89 = secondMoment73.evaluate(doubleArray85);
        variance49.incrementAll(doubleArray85);
        double double92 = variance48.evaluate(doubleArray85, (double) '#');
        variance8.incrementAll(doubleArray85);
        variance8.increment((double) 5L);
        variance8.clear();
        double double97 = variance8.getResult();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 24.666666666666668d + "'", double20 == 24.666666666666668d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4050.0d + "'", double35 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5d + "'", double55 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.5d + "'", double78 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 24.666666666666668d + "'", double92 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 272.25d + "'", double97 == 272.25d);
    }

    @Test
    public void test11840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11840");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        long long26 = secondMoment0.getN();
        secondMoment0.clear();
        double double28 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double[] doubleArray41 = new double[] { 10, (byte) 100 };
        double double42 = secondMoment29.evaluate(doubleArray41);
        long long43 = secondMoment29.getN();
        secondMoment29.clear();
        double double45 = secondMoment29.getResult();
        secondMoment29.increment((double) 1.0f);
        secondMoment29.increment((-1.0d));
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        secondMoment51.increment((double) (short) 0);
        long long56 = secondMoment51.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        secondMoment58.increment((double) (short) 0);
        double double63 = secondMoment58.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        secondMoment64.increment((double) (short) 0);
        double double69 = secondMoment64.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        double double80 = secondMoment64.evaluate(doubleArray76);
        double[] doubleArray81 = new double[] {};
        secondMoment64.incrementAll(doubleArray81);
        secondMoment58.incrementAll(doubleArray81);
        secondMoment51.incrementAll(doubleArray81);
        double double85 = secondMoment29.evaluate(doubleArray81);
        boolean boolean86 = secondMoment0.equals((java.lang.Object) doubleArray81);
        secondMoment0.increment((double) 10);
        secondMoment0.increment(4710403.555555556d);
        secondMoment0.clear();
        secondMoment0.increment(644.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4050.0d + "'", double42 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 2L + "'", long43 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 2L + "'", long56 == 2L);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.5d + "'", double63 == 0.5d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.5d + "'", double69 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 74.0d + "'", double80 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2.0d + "'", double85 == 2.0d);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test11841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11841");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (byte) 0);
        long long5 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
    }

    @Test
    public void test11842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11842");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        variance1.increment((double) (short) 100);
        boolean boolean6 = variance1.isBiasCorrected();
        long long7 = variance1.getN();
        variance1.clear();
        variance1.clear();
        boolean boolean10 = variance1.isBiasCorrected();
        variance1.increment(315789.4799999999d);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test11843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11843");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        secondMoment12.increment((double) (short) 0);
        double double17 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double28 = secondMoment12.evaluate(doubleArray24);
        double[] doubleArray29 = new double[] {};
        secondMoment12.incrementAll(doubleArray29);
        secondMoment6.incrementAll(doubleArray29);
        secondMoment6.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double[] doubleArray47 = new double[] { 10, (byte) 100 };
        double double48 = secondMoment35.evaluate(doubleArray47);
        double double49 = variance34.evaluate(doubleArray47);
        double double50 = secondMoment1.evaluate(doubleArray47);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long54 = variance53.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        secondMoment55.increment((double) (short) 0);
        double double60 = secondMoment55.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        double[] doubleArray67 = new double[] { (-1L), 0, 10L };
        secondMoment61.incrementAll(doubleArray67, 0, 0);
        double double71 = secondMoment55.evaluate(doubleArray67);
        double double73 = variance53.evaluate(doubleArray67, (double) 4L);
        double double74 = secondMoment1.evaluate(doubleArray67);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        boolean boolean76 = variance75.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.5d + "'", double17 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 74.0d + "'", double28 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.5d + "'", double60 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 74.0d + "'", double71 == 74.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 37.0d + "'", double73 == 37.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 74.0d + "'", double74 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test11844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11844");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        secondMoment1.increment(74.0d);
        double double8 = secondMoment1.getResult();
        double double9 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double[] doubleArray11 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double15 = variance10.evaluate(doubleArray11, 9714674.75d, (int) (short) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 3602.0d + "'", double8 == 3602.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 3602.0d + "'", double9 == 3602.0d);
    }

    @Test
    public void test11845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11845");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        secondMoment3.incrementAll(doubleArray9, 0, 0);
        double[] doubleArray15 = new double[] { 10, (byte) 100 };
        double double16 = secondMoment3.evaluate(doubleArray15);
        double double17 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        long long19 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment((double) ' ');
        secondMoment20.increment((double) (-1.0f));
        secondMoment20.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        long long37 = variance36.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        secondMoment38.incrementAll(doubleArray44, 0, 0);
        double double49 = variance36.evaluate(doubleArray44, (double) (short) -1);
        double double50 = secondMoment20.evaluate(doubleArray44);
        double double51 = secondMoment3.evaluate(doubleArray44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        double double53 = secondMoment3.getResult();
        secondMoment3.increment(688.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        double double57 = secondMoment3.getResult();
        secondMoment3.clear();
        secondMoment3.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        variance60.increment(2446472.0d);
        variance60.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 37.0d + "'", double49 == 37.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 74.0d + "'", double50 == 74.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 74.0d + "'", double51 == 74.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 74.0d + "'", double53 == 74.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 351992.75d + "'", double57 == 351992.75d);
    }

    @Test
    public void test11846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11846");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double[] doubleArray19 = new double[] { 10, (byte) 100 };
        double double20 = secondMoment7.evaluate(doubleArray19);
        double double21 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        secondMoment23.increment((double) (short) 0);
        double double28 = secondMoment23.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double double39 = secondMoment23.evaluate(doubleArray35);
        double[] doubleArray40 = new double[] {};
        secondMoment23.incrementAll(doubleArray40);
        variance22.incrementAll(doubleArray40);
        double double43 = secondMoment0.evaluate(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment((double) ' ');
        double double48 = secondMoment45.getResult();
        double double49 = secondMoment45.getResult();
        double double50 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        long long61 = secondMoment51.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment51);
        variance62.increment(2.880385675555556E7d);
        variance62.increment((double) 0);
        long long67 = variance62.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        variance62.incrementAll(doubleArray74);
        secondMoment45.incrementAll(doubleArray74);
        double double80 = secondMoment0.evaluate(doubleArray74);
        secondMoment0.increment(4.373460066666667E7d);
        long long83 = secondMoment0.getN();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.5d + "'", double28 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 74.0d + "'", double39 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 200.0d + "'", double43 == 200.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 74.0d + "'", double80 == 74.0d);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 4L + "'", long83 == 4L);
    }

    @Test
    public void test11847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11847");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance7.increment(0.0d);
        long long10 = variance7.getN();
        variance7.clear();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test11848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11848");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        double double16 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        long long18 = secondMoment1.getN();
        double double19 = secondMoment1.getResult();
        secondMoment1.increment(7.703419152040815E7d);
        double double22 = secondMoment1.getResult();
        double double23 = secondMoment1.getResult();
        secondMoment1.increment(5000.0d);
        double double26 = secondMoment1.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4050.0d + "'", double19 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 3.9561721263006375E15d + "'", double22 == 3.9561721263006375E15d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 3.9561721263006375E15d + "'", double23 == 3.9561721263006375E15d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.450503193524933E15d + "'", double26 == 4.450503193524933E15d);
    }

    @Test
    public void test11849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11849");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        double double7 = secondMoment1.getResult();
        long long8 = secondMoment1.getN();
        double double9 = secondMoment1.getResult();
        secondMoment1.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double[] doubleArray24 = new double[] { 10, (byte) 100 };
        double double25 = secondMoment12.evaluate(doubleArray24);
        secondMoment1.incrementAll(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        long long28 = variance27.getN();
        boolean boolean29 = variance27.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.5d + "'", double9 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 5L + "'", long28 == 5L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test11850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11850");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        long long8 = secondMoment2.getN();
        double double9 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.increment(2.880385675555556E7d);
        long long13 = secondMoment2.getN();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.clear();
        secondMoment2.clear();
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 544.5d + "'", double9 == 544.5d);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 3L + "'", long13 == 3L);
    }

    @Test
    public void test11851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11851");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        variance7.increment(0.0d);
        variance7.increment(30671.375d);
        boolean boolean12 = secondMoment0.equals((java.lang.Object) variance7);
        long long13 = secondMoment0.getN();
        long long14 = secondMoment0.getN();
        secondMoment0.increment(4050.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test11852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11852");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        secondMoment1.increment((double) (short) -1);
        double[] doubleArray19 = new double[] { (short) 1 };
        secondMoment1.incrementAll(doubleArray19);
        long long21 = secondMoment1.getN();
        secondMoment1.increment((double) 10L);
        double double24 = secondMoment1.getResult();
        double double25 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 4L + "'", long21 == 4L);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7322.0d + "'", double24 == 7322.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7322.0d + "'", double25 == 7322.0d);
    }

    @Test
    public void test11853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11853");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long5 = variance4.getN();
        boolean boolean6 = variance4.isBiasCorrected();
        boolean boolean7 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long10 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        double double27 = secondMoment11.evaluate(doubleArray23);
        variance9.incrementAll(doubleArray23);
        variance4.incrementAll(doubleArray23);
        long long30 = variance4.getN();
        boolean boolean31 = variance4.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test11854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11854");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        secondMoment18.increment((double) (-1.0f));
        secondMoment18.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        long long35 = variance34.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double double47 = variance34.evaluate(doubleArray42, (double) (short) -1);
        double double48 = secondMoment18.evaluate(doubleArray42);
        double double49 = secondMoment1.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance51.increment((double) (byte) -1);
        variance51.setBiasCorrected(false);
        boolean boolean56 = variance51.isBiasCorrected();
        long long57 = variance51.getN();
        variance51.setBiasCorrected(false);
        variance51.increment(4663.407407407407d);
        variance51.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 37.0d + "'", double47 == 37.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 3L + "'", long57 == 3L);
    }

    @Test
    public void test11855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11855");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        long long17 = variance16.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double29 = variance16.evaluate(doubleArray24, (double) (short) -1);
        double double30 = secondMoment0.evaluate(doubleArray24);
        secondMoment0.increment((double) 10L);
        double double33 = secondMoment0.getResult();
        secondMoment0.increment(3082.666666666667d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 110.75d + "'", double33 == 110.75d);
    }

    @Test
    public void test11856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11856");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        secondMoment5.increment((double) (short) 0);
        double double10 = secondMoment5.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        double double27 = secondMoment11.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] {};
        secondMoment11.incrementAll(doubleArray28);
        secondMoment5.incrementAll(doubleArray28);
        secondMoment5.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double[] doubleArray46 = new double[] { 10, (byte) 100 };
        double double47 = secondMoment34.evaluate(doubleArray46);
        double double48 = variance33.evaluate(doubleArray46);
        double double49 = secondMoment0.evaluate(doubleArray46);
        secondMoment0.increment(5304.666666666667d);
        double double52 = secondMoment0.getResult();
        secondMoment0.increment(4049.9999999999995d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long56 = secondMoment0.getN();
        double double57 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.5d + "'", double10 == 0.5d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.8376716740740743E7d + "'", double52 == 1.8376716740740743E7d);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 4L + "'", long56 == 4L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2.2157109666666664E7d + "'", double57 == 2.2157109666666664E7d);
    }

    @Test
    public void test11857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11857");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        secondMoment18.increment((double) (-1.0f));
        secondMoment18.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        long long35 = variance34.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double double47 = variance34.evaluate(doubleArray42, (double) (short) -1);
        double double48 = secondMoment18.evaluate(doubleArray42);
        double double49 = secondMoment1.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double51 = secondMoment1.getResult();
        secondMoment1.increment(806.0d);
        double double54 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 37.0d + "'", double47 == 37.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 74.0d + "'", double51 == 74.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 483680.75d + "'", double54 == 483680.75d);
    }

    @Test
    public void test11858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11858");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double double24 = secondMoment8.evaluate(doubleArray20);
        secondMoment0.incrementAll(doubleArray20, 0, (int) (short) 0);
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        double double31 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        long long44 = secondMoment34.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment34);
        double[] doubleArray47 = new double[] {};
        double double48 = secondMoment34.evaluate(doubleArray47);
        secondMoment34.clear();
        secondMoment34.increment(12413.42857142857d);
        boolean boolean52 = secondMoment0.equals((java.lang.Object) secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment34);
        long long54 = variance53.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 74.0d + "'", double24 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
    }

    @Test
    public void test11859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11859");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        secondMoment1.increment(0.0d);
        secondMoment1.increment((double) 0);
        secondMoment1.clear();
        secondMoment1.clear();
        secondMoment1.increment(4402.666666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        secondMoment17.increment((double) (short) -1);
        secondMoment17.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        double double25 = secondMoment17.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double[] doubleArray39 = new double[] { 10, (byte) 100 };
        double double40 = secondMoment27.evaluate(doubleArray39);
        double double41 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        secondMoment44.increment((double) (short) 0);
        double double49 = secondMoment44.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double double60 = secondMoment44.evaluate(doubleArray56);
        double[] doubleArray61 = new double[] {};
        secondMoment44.incrementAll(doubleArray61);
        double double65 = variance43.evaluate(doubleArray61, (int) (byte) 0, 0);
        double double66 = variance42.evaluate(doubleArray61);
        secondMoment17.incrementAll(doubleArray61);
        double double68 = variance16.evaluate(doubleArray61);
        variance16.setBiasCorrected(true);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4050.0d + "'", double40 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4050.0d + "'", double41 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.5d + "'", double49 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 74.0d + "'", double60 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
    }

    @Test
    public void test11860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11860");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        long long1 = secondMoment0.getN();
        double double2 = secondMoment0.getResult();
        secondMoment0.increment(4049.9999999999995d);
        secondMoment0.clear();
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
    }

    @Test
    public void test11861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11861");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        long long8 = secondMoment2.getN();
        double double9 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long12 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        double double23 = secondMoment13.getResult();
        long long24 = secondMoment13.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        secondMoment25.increment((double) (short) 0);
        double double30 = secondMoment25.getResult();
        secondMoment25.clear();
        secondMoment25.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment25);
        double double35 = variance34.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        secondMoment39.incrementAll(doubleArray45, 0, 0);
        double[] doubleArray51 = new double[] { 10, (byte) 100 };
        double double52 = secondMoment39.evaluate(doubleArray51);
        double double53 = secondMoment39.getResult();
        secondMoment39.increment((double) (short) -1);
        double[] doubleArray57 = new double[] { (short) 1 };
        secondMoment39.incrementAll(doubleArray57);
        secondMoment36.incrementAll(doubleArray57);
        variance34.incrementAll(doubleArray57);
        secondMoment13.incrementAll(doubleArray57, (int) (short) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            secondMoment2.incrementAll(doubleArray57, (int) (byte) 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 544.5d + "'", double9 == 544.5d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.5d + "'", double30 == 0.5d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4050.0d + "'", double52 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4050.0d + "'", double53 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
    }

    @Test
    public void test11862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11862");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        secondMoment1.increment((double) (byte) 0);
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        secondMoment26.increment((double) (short) -1);
        secondMoment26.clear();
        secondMoment26.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment26);
        boolean boolean36 = secondMoment11.equals((java.lang.Object) secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment26);
        boolean boolean38 = variance37.isBiasCorrected();
        variance37.increment(4.321154463792899E13d);
        boolean boolean41 = variance37.isBiasCorrected();
        variance37.clear();
        double double43 = variance37.getResult();
        variance37.increment(5944.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment46);
        secondMoment46.increment((double) (short) -1);
        secondMoment46.clear();
        secondMoment46.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        variance55.incrementAll(doubleArray62);
        variance37.incrementAll(doubleArray62);
        // The following exception was thrown during execution in test generation
        try {
            double double70 = secondMoment1.evaluate(doubleArray62, 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
    }

    @Test
    public void test11863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11863");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        long long17 = variance16.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double29 = variance16.evaluate(doubleArray24, (double) (short) -1);
        double double30 = secondMoment0.evaluate(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double[] doubleArray48 = new double[] { 10, (byte) 100 };
        double double49 = secondMoment36.evaluate(doubleArray48);
        double double50 = secondMoment36.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment36);
        long long52 = secondMoment36.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        double double54 = secondMoment36.getResult();
        secondMoment36.clear();
        secondMoment36.increment(Double.NaN);
        secondMoment36.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long62 = variance61.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        secondMoment63.increment((double) (short) 0);
        double double68 = secondMoment63.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        double[] doubleArray75 = new double[] { (-1L), 0, 10L };
        secondMoment69.incrementAll(doubleArray75, 0, 0);
        double double79 = secondMoment63.evaluate(doubleArray75);
        variance61.incrementAll(doubleArray75);
        secondMoment36.incrementAll(doubleArray75);
        double double82 = secondMoment0.evaluate(doubleArray75);
        secondMoment0.increment(272.25d);
        secondMoment0.increment(0.0d);
        secondMoment0.increment(1.338642088825486E10d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 2L + "'", long52 == 2L);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4050.0d + "'", double54 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.5d + "'", double68 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 74.0d + "'", double79 == 74.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 74.0d + "'", double82 == 74.0d);
    }

    @Test
    public void test11864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11864");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        variance9.incrementAll(doubleArray16);
        variance9.clear();
        variance9.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        secondMoment30.increment((double) (short) 0);
        double double35 = secondMoment30.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double double46 = secondMoment30.evaluate(doubleArray42);
        double[] doubleArray47 = new double[] {};
        secondMoment30.incrementAll(doubleArray47);
        secondMoment24.incrementAll(doubleArray47);
        secondMoment24.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double[] doubleArray65 = new double[] { 10, (byte) 100 };
        double double66 = secondMoment53.evaluate(doubleArray65);
        double double67 = variance52.evaluate(doubleArray65);
        double double69 = variance9.evaluate(doubleArray65, 100.0d);
        long long70 = variance9.getN();
        boolean boolean71 = variance9.isBiasCorrected();
        long long72 = variance9.getN();
        double[] doubleArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance9.incrementAll(doubleArray73, 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.5d + "'", double35 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 74.0d + "'", double46 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4050.0d + "'", double66 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4050.0d + "'", double67 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4050.0d + "'", double69 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
    }

    @Test
    public void test11865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11865");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        secondMoment1.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        long long11 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long14 = variance13.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        secondMoment15.increment((double) (short) 0);
        double double20 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        secondMoment21.incrementAll(doubleArray27, 0, 0);
        double double31 = secondMoment15.evaluate(doubleArray27);
        variance13.incrementAll(doubleArray27);
        double double33 = secondMoment1.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double36 = secondMoment1.getResult();
        secondMoment1.clear();
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5d + "'", double20 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 74.0d + "'", double31 == 74.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 74.0d + "'", double33 == 74.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 74.0d + "'", double36 == 74.0d);
    }

    @Test
    public void test11866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11866");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        secondMoment0.clear();
        secondMoment0.clear();
        double double17 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.clear();
        long long20 = secondMoment0.getN();
        double double21 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test11867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11867");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        secondMoment2.clear();
        secondMoment2.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        double double12 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        double double14 = secondMoment2.getResult();
        long long15 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
    }

    @Test
    public void test11868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11868");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double double26 = secondMoment10.evaluate(doubleArray22);
        double double27 = secondMoment0.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double[] doubleArray40 = new double[] { 10, (byte) 100 };
        double double41 = secondMoment28.evaluate(doubleArray40);
        double double42 = secondMoment28.getResult();
        secondMoment28.increment((double) (short) -1);
        double[] doubleArray46 = new double[] { (short) 1 };
        secondMoment28.incrementAll(doubleArray46);
        double double48 = secondMoment0.evaluate(doubleArray46);
        secondMoment0.increment((double) (short) 1);
        long long51 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment((double) ' ');
        double double55 = secondMoment52.getResult();
        double double56 = secondMoment52.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment(1.0d);
        secondMoment60.increment((double) (short) 0);
        double double65 = secondMoment60.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        double[] doubleArray72 = new double[] { (-1L), 0, 10L };
        secondMoment66.incrementAll(doubleArray72, 0, 0);
        double double76 = secondMoment60.evaluate(doubleArray72);
        double[] doubleArray77 = new double[] {};
        secondMoment60.incrementAll(doubleArray77);
        double double81 = variance59.evaluate(doubleArray77, (int) (byte) 0, 0);
        variance58.incrementAll(doubleArray77);
        double double83 = secondMoment52.evaluate(doubleArray77);
        secondMoment0.incrementAll(doubleArray77);
        secondMoment0.increment(1.7689999324625953E14d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 74.0d + "'", double26 == 74.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4050.0d + "'", double41 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4050.0d + "'", double42 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 2L + "'", long51 == 2L);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.5d + "'", double65 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 74.0d + "'", double76 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
    }

    @Test
    public void test11869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11869");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance6.increment(0.0d);
        variance6.clear();
        variance6.clear();
        variance6.clear();
    }

    @Test
    public void test11870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11870");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        long long16 = secondMoment1.getN();
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        long long19 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        secondMoment21.incrementAll(doubleArray27, 0, 0);
        double[] doubleArray33 = new double[] { 10, (byte) 100 };
        double double34 = secondMoment21.evaluate(doubleArray33);
        double double35 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment21);
        long long37 = secondMoment21.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment((double) ' ');
        secondMoment38.increment((double) (-1.0f));
        secondMoment38.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment44);
        long long55 = variance54.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        double double67 = variance54.evaluate(doubleArray62, (double) (short) -1);
        double double68 = secondMoment38.evaluate(doubleArray62);
        double double69 = secondMoment21.evaluate(doubleArray62);
        secondMoment1.incrementAll(doubleArray62);
        long long71 = secondMoment1.getN();
        long long72 = secondMoment1.getN();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4050.0d + "'", double34 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4050.0d + "'", double35 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 2L + "'", long37 == 2L);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 37.0d + "'", double67 == 37.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 74.0d + "'", double69 == 74.0d);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 5L + "'", long71 == 5L);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 5L + "'", long72 == 5L);
    }

    @Test
    public void test11871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11871");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double[] doubleArray10 = new double[] { 0L, (byte) 1, 6140.666666666667d, 544.5d, (byte) 100 };
        double double11 = secondMoment1.evaluate(doubleArray10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        secondMoment12.increment((double) (short) -1);
        secondMoment12.clear();
        secondMoment12.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        boolean boolean22 = secondMoment1.equals((java.lang.Object) secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) 1);
        double double26 = secondMoment1.getResult();
        double double27 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment28);
        double double39 = variance38.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        secondMoment41.increment((double) (short) 0);
        long long46 = secondMoment41.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment41);
        long long48 = variance47.getN();
        variance47.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long52 = variance51.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        secondMoment53.increment((double) (short) 0);
        double double58 = secondMoment53.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        double double69 = secondMoment53.evaluate(doubleArray65);
        variance51.incrementAll(doubleArray65);
        double double72 = variance47.evaluate(doubleArray65, (double) (short) -1);
        double double73 = variance38.evaluate(doubleArray65);
        double double74 = secondMoment1.evaluate(doubleArray65);
        double double75 = secondMoment1.getResult();
        double double76 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double double78 = variance77.getResult();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 1.0, 6140.666666666667, 544.5, 100.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2.880385675555556E7d + "'", double11 == 2.880385675555556E7d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 3.033666413425926E7d + "'", double26 == 3.033666413425926E7d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 3.033666413425926E7d + "'", double27 == 3.033666413425926E7d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 2L + "'", long46 == 2L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 2L + "'", long48 == 2L);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.5d + "'", double58 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 74.0d + "'", double69 == 74.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 24.666666666666668d + "'", double72 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 37.0d + "'", double73 == 37.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 74.0d + "'", double74 == 74.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 74.0d + "'", double75 == 74.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 74.0d + "'", double76 == 74.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 37.0d + "'", double78 == 37.0d);
    }

    @Test
    public void test11872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11872");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double double24 = secondMoment8.evaluate(doubleArray20);
        secondMoment0.incrementAll(doubleArray20, 0, (int) (short) 0);
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        double double31 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment(1.65781506875E7d);
        secondMoment0.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 74.0d + "'", double24 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test11873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11873");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        secondMoment3.increment((double) (short) -1);
        long long9 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        secondMoment3.clear();
        secondMoment3.increment(4402.666666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        double double15 = secondMoment3.getResult();
        long long16 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        secondMoment3.clear();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 2L + "'", long9 == 2L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
    }

    @Test
    public void test11874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11874");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        secondMoment0.clear();
        secondMoment0.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        double[] doubleArray25 = new double[] { 10, (byte) 100 };
        double double26 = secondMoment13.evaluate(doubleArray25);
        double double27 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment13);
        long long29 = secondMoment13.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment30);
        secondMoment30.increment((double) (short) -1);
        secondMoment30.clear();
        secondMoment30.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        secondMoment40.increment((double) (short) 0);
        double double45 = secondMoment40.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double double56 = secondMoment40.evaluate(doubleArray52);
        double double57 = secondMoment30.evaluate(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        secondMoment58.incrementAll(doubleArray64, 0, 0);
        double[] doubleArray70 = new double[] { 10, (byte) 100 };
        double double71 = secondMoment58.evaluate(doubleArray70);
        double double72 = secondMoment58.getResult();
        secondMoment58.increment((double) (short) -1);
        double[] doubleArray76 = new double[] { (short) 1 };
        secondMoment58.incrementAll(doubleArray76);
        double double78 = secondMoment30.evaluate(doubleArray76);
        double double79 = secondMoment13.evaluate(doubleArray76);
        secondMoment0.incrementAll(doubleArray76);
        double double81 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4050.0d + "'", double26 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4050.0d + "'", double27 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 2L + "'", long29 == 2L);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5d + "'", double45 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 74.0d + "'", double56 == 74.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 74.0d + "'", double57 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4050.0d + "'", double71 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 4050.0d + "'", double72 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 40.5d + "'", double81 == 40.5d);
    }

    @Test
    public void test11875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11875");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        boolean boolean14 = secondMoment0.equals((java.lang.Object) secondMoment9);
        secondMoment0.clear();
        long long16 = secondMoment0.getN();
        secondMoment0.clear();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long21 = variance20.getN();
        variance20.increment((double) 4L);
        variance20.increment(80.75d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        double[] doubleArray38 = new double[] { 10, (byte) 100 };
        double double39 = secondMoment26.evaluate(doubleArray38);
        double double40 = secondMoment26.getResult();
        secondMoment26.increment((double) (short) -1);
        double[] doubleArray44 = new double[] { (short) 1 };
        secondMoment26.incrementAll(doubleArray44);
        secondMoment26.increment(4034.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        variance48.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment((double) ' ');
        secondMoment50.increment((double) (-1.0f));
        secondMoment50.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment56);
        long long67 = variance66.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double double79 = variance66.evaluate(doubleArray74, (double) (short) -1);
        double double80 = secondMoment50.evaluate(doubleArray74);
        secondMoment50.clear();
        double[] doubleArray86 = new double[] { 4L, (byte) 10, '#', 74.0d };
        double double87 = secondMoment50.evaluate(doubleArray86);
        variance48.incrementAll(doubleArray86);
        double double89 = variance20.evaluate(doubleArray86);
        double double90 = secondMoment0.evaluate(doubleArray86);
        java.lang.Class<?> wildcardClass91 = secondMoment0.getClass();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4050.0d + "'", double40 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 37.0d + "'", double79 == 37.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 74.0d + "'", double80 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[4.0, 10.0, 35.0, 74.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 3034.75d + "'", double87 == 3034.75d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1011.5833333333334d + "'", double89 == 1011.5833333333334d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 3034.75d + "'", double90 == 3034.75d);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test11876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11876");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.increment(2.9368999971831663E29d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
    }

    @Test
    public void test11877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11877");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        double double8 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment((double) '4');
        double double16 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        secondMoment17.increment((double) (short) 0);
        double double22 = secondMoment17.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        secondMoment23.increment((double) (short) 0);
        double double28 = secondMoment23.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double double39 = secondMoment23.evaluate(doubleArray35);
        double[] doubleArray40 = new double[] {};
        secondMoment23.incrementAll(doubleArray40);
        secondMoment17.incrementAll(doubleArray40);
        secondMoment17.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double[] doubleArray58 = new double[] { 10, (byte) 100 };
        double double59 = secondMoment46.evaluate(doubleArray58);
        double double60 = variance45.evaluate(doubleArray58);
        double double61 = secondMoment10.evaluate(doubleArray58);
        secondMoment0.incrementAll(doubleArray58);
        secondMoment0.increment(2312.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment((double) ' ');
        secondMoment66.increment((double) (-1.0f));
        secondMoment66.clear();
        secondMoment66.clear();
        double double73 = secondMoment66.getResult();
        double double74 = secondMoment66.getResult();
        double double75 = secondMoment66.getResult();
        secondMoment66.increment((double) '#');
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        variance78.increment(2.880385675555556E7d);
        boolean boolean81 = secondMoment0.equals((java.lang.Object) 2.880385675555556E7d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double[] doubleArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double84 = variance82.evaluate(doubleArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 200.0d + "'", double16 == 200.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.5d + "'", double22 == 0.5d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.5d + "'", double28 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 74.0d + "'", double39 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test11878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11878");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.clear();
        long long7 = secondMoment0.getN();
        double double8 = secondMoment0.getResult();
        long long9 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        boolean boolean11 = variance10.isBiasCorrected();
        boolean boolean12 = variance10.isBiasCorrected();
        long long13 = variance10.getN();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test11879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11879");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double10 = variance9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        secondMoment17.increment((double) (short) 0);
        double double22 = secondMoment17.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        double[] doubleArray29 = new double[] { (-1L), 0, 10L };
        secondMoment23.incrementAll(doubleArray29, 0, 0);
        double double33 = secondMoment17.evaluate(doubleArray29);
        double[] doubleArray34 = new double[] {};
        secondMoment17.incrementAll(doubleArray34);
        secondMoment11.incrementAll(doubleArray34);
        long long37 = secondMoment11.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment38);
        secondMoment38.increment((double) (short) -1);
        secondMoment38.clear();
        secondMoment38.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        secondMoment48.increment((double) (short) 0);
        double double53 = secondMoment48.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        double[] doubleArray60 = new double[] { (-1L), 0, 10L };
        secondMoment54.incrementAll(doubleArray60, 0, 0);
        double double64 = secondMoment48.evaluate(doubleArray60);
        double double65 = secondMoment38.evaluate(doubleArray60);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        double[] doubleArray72 = new double[] { (-1L), 0, 10L };
        secondMoment66.incrementAll(doubleArray72, 0, 0);
        double[] doubleArray78 = new double[] { 10, (byte) 100 };
        double double79 = secondMoment66.evaluate(doubleArray78);
        double double80 = secondMoment66.getResult();
        secondMoment66.increment((double) (short) -1);
        double[] doubleArray84 = new double[] { (short) 1 };
        secondMoment66.incrementAll(doubleArray84);
        double double86 = secondMoment38.evaluate(doubleArray84);
        secondMoment11.incrementAll(doubleArray84);
        variance9.incrementAll(doubleArray84);
        variance9.clear();
        long long90 = variance9.getN();
        variance9.increment(0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.5d + "'", double22 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 74.0d + "'", double33 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 2L + "'", long37 == 2L);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.5d + "'", double53 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 74.0d + "'", double64 == 74.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4050.0d + "'", double79 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 4050.0d + "'", double80 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
    }

    @Test
    public void test11880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11880");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        double double27 = secondMoment11.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] {};
        secondMoment11.incrementAll(doubleArray28);
        double double32 = variance10.evaluate(doubleArray28, (int) (byte) 0, 0);
        long long33 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        secondMoment34.increment((double) (short) 0);
        double double39 = secondMoment34.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        secondMoment40.incrementAll(doubleArray46, 0, 0);
        double double50 = secondMoment34.evaluate(doubleArray46);
        variance10.incrementAll(doubleArray46);
        variance10.increment((double) 10);
        boolean boolean54 = variance9.equals((java.lang.Object) variance10);
        double double55 = variance9.getResult();
        variance9.clear();
        double double57 = variance9.getResult();
        variance9.increment(2.5868031416666664E7d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.5d + "'", double39 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 74.0d + "'", double50 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 688.0d + "'", double55 == 688.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 688.0d + "'", double57 == 688.0d);
    }

    @Test
    public void test11881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11881");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        secondMoment12.increment((double) (short) 0);
        double double17 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double28 = secondMoment12.evaluate(doubleArray24);
        double[] doubleArray29 = new double[] {};
        secondMoment12.incrementAll(doubleArray29);
        secondMoment6.incrementAll(doubleArray29);
        secondMoment6.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double[] doubleArray47 = new double[] { 10, (byte) 100 };
        double double48 = secondMoment35.evaluate(doubleArray47);
        double double49 = variance34.evaluate(doubleArray47);
        double double50 = secondMoment1.evaluate(doubleArray47);
        secondMoment1.clear();
        double double52 = secondMoment1.getResult();
        double double53 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        long long55 = variance54.getN();
        variance54.increment(40.5d);
        long long58 = variance54.getN();
        variance54.setBiasCorrected(false);
        variance54.setBiasCorrected(true);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.5d + "'", double17 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 74.0d + "'", double28 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
    }

    @Test
    public void test11882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11882");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        secondMoment1.increment((double) 10);
        secondMoment1.increment(2.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        variance13.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        secondMoment29.increment((double) (short) 0);
        double double34 = secondMoment29.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double double45 = secondMoment29.evaluate(doubleArray41);
        double[] doubleArray46 = new double[] {};
        secondMoment29.incrementAll(doubleArray46);
        double double48 = secondMoment26.evaluate(doubleArray46);
        double double49 = variance25.evaluate(doubleArray46);
        long long50 = variance25.getN();
        double double51 = variance25.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        secondMoment52.incrementAll(doubleArray58, 0, 0);
        double[] doubleArray64 = new double[] { 10, (byte) 100 };
        double double65 = secondMoment52.evaluate(doubleArray64);
        double double67 = variance25.evaluate(doubleArray64, (double) (-1));
        double double68 = variance13.evaluate(doubleArray64);
        double double69 = variance12.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment70);
        double double81 = secondMoment70.getResult();
        secondMoment70.increment(237360.5d);
        boolean boolean84 = variance12.equals((java.lang.Object) secondMoment70);
        secondMoment70.increment(1.7689999324625953E14d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5d + "'", double34 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4050.0d + "'", double65 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4050.0d + "'", double67 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4050.0d + "'", double68 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4050.0d + "'", double69 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test11883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11883");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double[] doubleArray19 = new double[] { 10, (byte) 100 };
        double double20 = secondMoment7.evaluate(doubleArray19);
        double double21 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        secondMoment23.increment((double) (short) 0);
        double double28 = secondMoment23.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double double39 = secondMoment23.evaluate(doubleArray35);
        double[] doubleArray40 = new double[] {};
        secondMoment23.incrementAll(doubleArray40);
        variance22.incrementAll(doubleArray40);
        double double43 = secondMoment0.evaluate(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double45 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        secondMoment46.increment((double) (short) 0);
        double double51 = secondMoment46.getResult();
        secondMoment46.clear();
        secondMoment46.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment46);
        double double56 = variance55.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment(1.0d);
        double[] doubleArray66 = new double[] { (-1L), 0, 10L };
        secondMoment60.incrementAll(doubleArray66, 0, 0);
        double[] doubleArray72 = new double[] { 10, (byte) 100 };
        double double73 = secondMoment60.evaluate(doubleArray72);
        double double74 = secondMoment60.getResult();
        secondMoment60.increment((double) (short) -1);
        double[] doubleArray78 = new double[] { (short) 1 };
        secondMoment60.incrementAll(doubleArray78);
        secondMoment57.incrementAll(doubleArray78);
        variance55.incrementAll(doubleArray78);
        double double82 = secondMoment0.evaluate(doubleArray78);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(2025.03125d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.5d + "'", double28 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 74.0d + "'", double39 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 200.0d + "'", double43 == 200.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 200.0d + "'", double45 == 200.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.5d + "'", double51 == 0.5d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 4050.0d + "'", double73 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 4050.0d + "'", double74 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
    }

    @Test
    public void test11884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11884");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        double double4 = variance1.getResult();
        double double5 = variance1.getResult();
        double double6 = variance1.getResult();
        double double7 = variance1.getResult();
        variance1.increment(1.2239884749999996E7d);
        boolean boolean10 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test11885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11885");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        secondMoment9.increment((double) (short) -1);
        secondMoment9.clear();
        secondMoment9.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        long long19 = variance18.getN();
        variance18.clear();
        variance18.clear();
        variance18.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        secondMoment30.increment((double) (short) 0);
        double double35 = secondMoment30.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double double46 = secondMoment30.evaluate(doubleArray42);
        double[] doubleArray47 = new double[] {};
        secondMoment30.incrementAll(doubleArray47);
        secondMoment24.incrementAll(doubleArray47);
        double double50 = variance18.evaluate(doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double double53 = variance8.evaluate(doubleArray47, (int) (short) 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.5d + "'", double35 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 74.0d + "'", double46 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
    }

    @Test
    public void test11886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11886");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        long long7 = variance6.getN();
        double double8 = variance6.getResult();
        boolean boolean9 = variance6.isBiasCorrected();
        variance6.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double[] doubleArray24 = new double[] { 10, (byte) 100 };
        double double25 = secondMoment12.evaluate(doubleArray24);
        long long26 = secondMoment12.getN();
        secondMoment12.clear();
        double double28 = secondMoment12.getResult();
        secondMoment12.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        double double41 = variance30.evaluate(doubleArray37);
        variance30.setBiasCorrected(false);
        variance30.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        double double50 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double61 = secondMoment45.evaluate(doubleArray57);
        double double62 = variance30.evaluate(doubleArray57);
        variance6.incrementAll(doubleArray57);
        long long64 = variance6.getN();
        variance6.clear();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 37.0d + "'", double41 == 37.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 74.0d + "'", double61 == 74.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 24.666666666666668d + "'", double62 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
    }

    @Test
    public void test11887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11887");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance9.increment((double) (byte) -1);
        boolean boolean12 = variance9.isBiasCorrected();
        variance9.increment(6338.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment((double) (short) -1);
        secondMoment15.clear();
        secondMoment15.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        long long25 = variance24.getN();
        variance24.increment(200.0d);
        variance24.increment(2025.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        secondMoment44.increment((double) (short) 0);
        double double49 = secondMoment44.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double double60 = secondMoment44.evaluate(doubleArray56);
        double[] doubleArray61 = new double[] {};
        secondMoment44.incrementAll(doubleArray61);
        double double63 = secondMoment41.evaluate(doubleArray61);
        double double64 = variance40.evaluate(doubleArray61);
        double double65 = variance24.evaluate(doubleArray61);
        // The following exception was thrown during execution in test generation
        try {
            double double69 = variance9.evaluate(doubleArray61, (double) 2L, (int) (byte) 10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.5d + "'", double49 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 74.0d + "'", double60 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
    }

    @Test
    public void test11888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11888");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double4 = variance3.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        secondMoment5.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        secondMoment16.increment((double) (short) 0);
        double double21 = secondMoment16.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        double double32 = secondMoment16.evaluate(doubleArray28);
        double[] doubleArray33 = new double[] {};
        secondMoment16.incrementAll(doubleArray33);
        secondMoment10.incrementAll(doubleArray33);
        secondMoment10.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        secondMoment39.incrementAll(doubleArray45, 0, 0);
        double[] doubleArray51 = new double[] { 10, (byte) 100 };
        double double52 = secondMoment39.evaluate(doubleArray51);
        double double53 = variance38.evaluate(doubleArray51);
        double double54 = secondMoment5.evaluate(doubleArray51);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        long long65 = secondMoment55.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        double[] doubleArray72 = new double[] { (-1L), 0, 10L };
        secondMoment66.incrementAll(doubleArray72, 0, 0);
        secondMoment55.incrementAll(doubleArray72, 0, (int) (short) 1);
        double double79 = secondMoment5.evaluate(doubleArray72);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment80.increment(1.0d);
        double[] doubleArray86 = new double[] { (-1L), 0, 10L };
        secondMoment80.incrementAll(doubleArray86, 0, 0);
        secondMoment5.incrementAll(doubleArray86);
        double double91 = variance3.evaluate(doubleArray86);
        variance3.clear();
        boolean boolean93 = variance3.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.5d + "'", double21 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 74.0d + "'", double32 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4050.0d + "'", double52 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4050.0d + "'", double53 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4050.0d + "'", double54 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 74.0d + "'", double79 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 37.0d + "'", double91 == 37.0d);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test11889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11889");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        long long17 = secondMoment2.getN();
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        long long20 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        double[] doubleArray34 = new double[] { 10, (byte) 100 };
        double double35 = secondMoment22.evaluate(doubleArray34);
        double double36 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment22);
        long long38 = secondMoment22.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment((double) ' ');
        secondMoment39.increment((double) (-1.0f));
        secondMoment39.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment45);
        long long56 = variance55.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        double[] doubleArray63 = new double[] { (-1L), 0, 10L };
        secondMoment57.incrementAll(doubleArray63, 0, 0);
        double double68 = variance55.evaluate(doubleArray63, (double) (short) -1);
        double double69 = secondMoment39.evaluate(doubleArray63);
        double double70 = secondMoment22.evaluate(doubleArray63);
        secondMoment2.incrementAll(doubleArray63);
        long long72 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        variance73.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2L + "'", long20 == 2L);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4050.0d + "'", double35 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4050.0d + "'", double36 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 2L + "'", long38 == 2L);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 37.0d + "'", double68 == 37.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 74.0d + "'", double69 == 74.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 74.0d + "'", double70 == 74.0d);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 5L + "'", long72 == 5L);
    }

    @Test
    public void test11890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11890");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double8 = secondMoment0.getResult();
        long long9 = secondMoment0.getN();
        double double10 = secondMoment0.getResult();
        double double11 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        variance22.increment((double) (short) 100);
        variance22.clear();
        variance22.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment28);
        secondMoment28.increment((double) (short) -1);
        secondMoment28.clear();
        secondMoment28.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment28);
        long long38 = secondMoment28.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long41 = variance40.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        secondMoment42.increment((double) (short) 0);
        double double47 = secondMoment42.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        double double58 = secondMoment42.evaluate(doubleArray54);
        variance40.incrementAll(doubleArray54);
        double double60 = secondMoment28.evaluate(doubleArray54);
        double double61 = variance22.evaluate(doubleArray54);
        secondMoment0.incrementAll(doubleArray54);
        secondMoment0.increment(2.3522465301587306E7d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.5d + "'", double47 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 74.0d + "'", double58 == 74.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 74.0d + "'", double60 == 74.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 37.0d + "'", double61 == 37.0d);
    }

    @Test
    public void test11891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11891");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        secondMoment1.increment((double) 10);
        double double10 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        long long12 = variance11.getN();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
    }

    @Test
    public void test11892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11892");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment((double) (short) -1);
        secondMoment16.clear();
        secondMoment16.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        double double28 = secondMoment16.getResult();
        secondMoment16.clear();
        secondMoment16.increment(12413.42857142857d);
        secondMoment16.clear();
        double double33 = secondMoment16.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
    }

    @Test
    public void test11893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11893");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        secondMoment0.increment(3.033666413425926E7d);
        secondMoment0.increment(0.0d);
        secondMoment0.clear();
        java.lang.Class<?> wildcardClass16 = secondMoment0.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test11894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11894");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) '4');
        long long5 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double7 = variance6.getResult();
        variance6.clear();
        variance6.setBiasCorrected(true);
        variance6.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        long long19 = secondMoment14.getN();
        secondMoment14.increment(0.0d);
        secondMoment14.increment((double) 0);
        secondMoment14.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment14);
        boolean boolean27 = variance6.equals((java.lang.Object) variance26);
        variance26.clear();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test11895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11895");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        long long8 = secondMoment2.getN();
        double double9 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long12 = secondMoment2.getN();
        secondMoment2.increment(482.66666666666663d);
        double double15 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        secondMoment16.clear();
        double double20 = secondMoment16.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double37 = secondMoment21.evaluate(doubleArray33);
        double double38 = secondMoment16.evaluate(doubleArray33);
        secondMoment2.incrementAll(doubleArray33);
        secondMoment2.clear();
        double double41 = secondMoment2.getResult();
        double double42 = secondMoment2.getResult();
        double double43 = secondMoment2.getResult();
        double double44 = secondMoment2.getResult();
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 544.5d + "'", double9 == 544.5d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 146040.96296296292d + "'", double15 == 146040.96296296292d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 74.0d + "'", double38 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
    }

    @Test
    public void test11896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11896");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double double45 = secondMoment18.evaluate(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double[] doubleArray58 = new double[] { 10, (byte) 100 };
        double double59 = secondMoment46.evaluate(doubleArray58);
        double double60 = secondMoment46.getResult();
        secondMoment46.increment((double) (short) -1);
        double[] doubleArray64 = new double[] { (short) 1 };
        secondMoment46.incrementAll(doubleArray64);
        double double66 = secondMoment18.evaluate(doubleArray64);
        double double67 = secondMoment1.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        double double70 = secondMoment1.getResult();
        long long71 = secondMoment1.getN();
        secondMoment1.clear();
        secondMoment1.clear();
        secondMoment1.increment(5.380202045661305E14d);
        secondMoment1.increment(301005.3599999999d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
    }

    @Test
    public void test11897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11897");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment((double) (short) -1);
        secondMoment15.clear();
        secondMoment15.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment15);
        boolean boolean25 = secondMoment0.equals((java.lang.Object) secondMoment15);
        long long26 = secondMoment15.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment28);
        double double39 = variance38.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment40);
        secondMoment40.increment((double) '4');
        double double46 = secondMoment40.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        secondMoment53.increment((double) (short) 0);
        double double58 = secondMoment53.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        double double69 = secondMoment53.evaluate(doubleArray65);
        double[] doubleArray70 = new double[] {};
        secondMoment53.incrementAll(doubleArray70);
        secondMoment47.incrementAll(doubleArray70);
        secondMoment47.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment76.increment(1.0d);
        double[] doubleArray82 = new double[] { (-1L), 0, 10L };
        secondMoment76.incrementAll(doubleArray82, 0, 0);
        double[] doubleArray88 = new double[] { 10, (byte) 100 };
        double double89 = secondMoment76.evaluate(doubleArray88);
        double double90 = variance75.evaluate(doubleArray88);
        double double91 = secondMoment40.evaluate(doubleArray88);
        double double92 = variance38.evaluate(doubleArray88);
        variance27.incrementAll(doubleArray88);
        variance27.clear();
        variance27.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 200.0d + "'", double46 == 200.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.5d + "'", double58 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 74.0d + "'", double69 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4050.0d + "'", double89 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4050.0d + "'", double90 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 4050.0d + "'", double91 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 4050.0d + "'", double92 == 4050.0d);
    }

    @Test
    public void test11898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11898");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment((double) (short) -1);
        secondMoment15.clear();
        secondMoment15.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment15);
        boolean boolean25 = secondMoment0.equals((java.lang.Object) secondMoment15);
        secondMoment15.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment30);
        secondMoment30.increment((double) (short) -1);
        secondMoment30.clear();
        secondMoment30.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment30);
        secondMoment30.increment(100.0d);
        secondMoment30.clear();
        secondMoment30.clear();
        secondMoment30.increment((double) 0.0f);
        boolean boolean46 = secondMoment15.equals((java.lang.Object) 0.0f);
        secondMoment15.increment(0.5d);
        java.lang.Class<?> wildcardClass49 = secondMoment15.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test11899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11899");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        secondMoment1.clear();
        double double9 = secondMoment1.getResult();
        long long10 = secondMoment1.getN();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test11900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11900");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        double[] doubleArray27 = new double[] { 10, (byte) 100 };
        double double28 = secondMoment15.evaluate(doubleArray27);
        double double29 = secondMoment15.getResult();
        long long30 = secondMoment15.getN();
        long long31 = secondMoment15.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        boolean boolean33 = secondMoment8.equals((java.lang.Object) secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        secondMoment36.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        secondMoment41.increment((double) (short) 0);
        double double46 = secondMoment41.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double double63 = secondMoment47.evaluate(doubleArray59);
        double[] doubleArray64 = new double[] {};
        secondMoment47.incrementAll(doubleArray64);
        secondMoment41.incrementAll(doubleArray64);
        secondMoment41.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        double[] doubleArray82 = new double[] { 10, (byte) 100 };
        double double83 = secondMoment70.evaluate(doubleArray82);
        double double84 = variance69.evaluate(doubleArray82);
        double double85 = secondMoment36.evaluate(doubleArray82);
        double double86 = variance35.evaluate(doubleArray82);
        secondMoment1.incrementAll(doubleArray82);
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance88.clear();
        long long90 = variance88.getN();
        double double91 = variance88.getResult();
        variance88.increment(8.243836737754167E10d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4050.0d + "'", double28 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4050.0d + "'", double29 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 2L + "'", long30 == 2L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 2L + "'", long31 == 2L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.5d + "'", double46 == 0.5d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 4050.0d + "'", double85 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4050.0d + "'", double86 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 4L + "'", long90 == 4L);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1755.1875d + "'", double91 == 1755.1875d);
    }

    @Test
    public void test11901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11901");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment(1.218679475E7d);
        secondMoment0.clear();
        double double10 = secondMoment0.getResult();
        secondMoment0.increment(2.5868031416666664E7d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test11902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11902");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        double double4 = variance1.getResult();
        long long5 = variance1.getN();
        boolean boolean6 = variance1.isBiasCorrected();
        double double7 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        long long18 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        secondMoment8.incrementAll(doubleArray25, 0, (int) (short) 1);
        double double32 = variance1.evaluate(doubleArray25);
        double double33 = variance1.getResult();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 37.0d + "'", double32 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
    }

    @Test
    public void test11903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11903");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double[] doubleArray19 = new double[] { 10, (byte) 100 };
        double double20 = secondMoment7.evaluate(doubleArray19);
        double double21 = secondMoment7.getResult();
        long long22 = secondMoment7.getN();
        long long23 = secondMoment7.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        boolean boolean25 = secondMoment0.equals((java.lang.Object) secondMoment7);
        double double26 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        long long32 = secondMoment27.getN();
        double double33 = secondMoment27.getResult();
        secondMoment27.increment((double) (byte) 10);
        secondMoment27.clear();
        long long37 = secondMoment27.getN();
        secondMoment27.increment(1.8756123185185187E7d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        double double41 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        secondMoment43.incrementAll(doubleArray49, 0, 0);
        double[] doubleArray55 = new double[] { 10, (byte) 100 };
        double double56 = secondMoment43.evaluate(doubleArray55);
        double double57 = secondMoment43.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment43);
        long long59 = secondMoment43.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment((double) ' ');
        secondMoment60.increment((double) (-1.0f));
        secondMoment60.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        double[] doubleArray72 = new double[] { (-1L), 0, 10L };
        secondMoment66.incrementAll(doubleArray72, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment66);
        long long77 = variance76.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment78.increment(1.0d);
        double[] doubleArray84 = new double[] { (-1L), 0, 10L };
        secondMoment78.incrementAll(doubleArray84, 0, 0);
        double double89 = variance76.evaluate(doubleArray84, (double) (short) -1);
        double double90 = secondMoment60.evaluate(doubleArray84);
        double double91 = secondMoment43.evaluate(doubleArray84);
        secondMoment27.incrementAll(doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            secondMoment0.incrementAll(doubleArray84, (-1), (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 2L + "'", long32 == 2L);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4050.0d + "'", double56 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4050.0d + "'", double57 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 2L + "'", long59 == 2L);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 1L + "'", long77 == 1L);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 37.0d + "'", double89 == 37.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 74.0d + "'", double90 == 74.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 74.0d + "'", double91 == 74.0d);
    }

    @Test
    public void test11904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11904");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.clear();
        secondMoment10.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        secondMoment17.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        secondMoment22.increment((double) (short) 0);
        double double27 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double[] doubleArray45 = new double[] {};
        secondMoment28.incrementAll(doubleArray45);
        secondMoment22.incrementAll(doubleArray45);
        secondMoment22.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double[] doubleArray63 = new double[] { 10, (byte) 100 };
        double double64 = secondMoment51.evaluate(doubleArray63);
        double double65 = variance50.evaluate(doubleArray63);
        double double66 = secondMoment17.evaluate(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        secondMoment67.increment((double) (short) 0);
        double double72 = secondMoment67.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment73.increment(1.0d);
        secondMoment73.increment((double) (short) 0);
        double double78 = secondMoment73.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment79.increment(1.0d);
        double[] doubleArray85 = new double[] { (-1L), 0, 10L };
        secondMoment79.incrementAll(doubleArray85, 0, 0);
        double double89 = secondMoment73.evaluate(doubleArray85);
        double[] doubleArray90 = new double[] {};
        secondMoment73.incrementAll(doubleArray90);
        secondMoment67.incrementAll(doubleArray90);
        double double93 = secondMoment17.evaluate(doubleArray90);
        double double94 = secondMoment10.evaluate(doubleArray90);
        double double95 = variance9.evaluate(doubleArray90);
        long long96 = variance9.getN();
        variance9.setBiasCorrected(false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5d + "'", double27 == 0.5d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4050.0d + "'", double64 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4050.0d + "'", double65 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4050.0d + "'", double66 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5d + "'", double72 == 0.5d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.5d + "'", double78 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 4050.0d + "'", double93 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double95));
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 1L + "'", long96 == 1L);
    }

    @Test
    public void test11905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11905");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.clear();
        double double16 = secondMoment0.getResult();
        double double17 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        secondMoment19.increment((double) '4');
        long long24 = secondMoment19.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        double double26 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        long long45 = secondMoment28.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment28);
        double double47 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment28);
        variance48.increment((double) 10.0f);
        boolean boolean51 = variance48.isBiasCorrected();
        double double52 = variance48.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        secondMoment53.increment((double) (short) 0);
        double double58 = secondMoment53.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        double double69 = secondMoment53.evaluate(doubleArray65);
        double double70 = variance48.evaluate(doubleArray65);
        secondMoment19.incrementAll(doubleArray65);
        double double72 = secondMoment0.evaluate(doubleArray65);
        double double73 = secondMoment0.getResult();
        double double74 = secondMoment0.getResult();
        secondMoment0.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 200.0d + "'", double26 == 200.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 3L + "'", long45 == 3L);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 74.0d + "'", double47 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 24.666666666666668d + "'", double52 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.5d + "'", double58 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 74.0d + "'", double69 == 74.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 24.666666666666668d + "'", double70 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 74.0d + "'", double72 == 74.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 74.0d + "'", double73 == 74.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 74.0d + "'", double74 == 74.0d);
    }

    @Test
    public void test11906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11906");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment(1.218679475E7d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        secondMoment12.increment((double) (short) 0);
        long long17 = secondMoment12.getN();
        double double18 = secondMoment12.getResult();
        secondMoment12.clear();
        double double20 = secondMoment12.getResult();
        double double21 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double[] doubleArray37 = new double[] { 10, (byte) 100 };
        double double38 = secondMoment25.evaluate(doubleArray37);
        double double39 = secondMoment25.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment25);
        long long41 = secondMoment25.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        double double43 = secondMoment25.getResult();
        secondMoment25.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        secondMoment53.increment((double) (short) 0);
        double double58 = secondMoment53.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        double double69 = secondMoment53.evaluate(doubleArray65);
        double[] doubleArray70 = new double[] {};
        secondMoment53.incrementAll(doubleArray70);
        secondMoment47.incrementAll(doubleArray70);
        secondMoment47.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment76.increment(1.0d);
        double[] doubleArray82 = new double[] { (-1L), 0, 10L };
        secondMoment76.incrementAll(doubleArray82, 0, 0);
        double[] doubleArray88 = new double[] { 10, (byte) 100 };
        double double89 = secondMoment76.evaluate(doubleArray88);
        double double90 = variance75.evaluate(doubleArray88);
        double double92 = variance46.evaluate(doubleArray88, 0.0d);
        double double93 = secondMoment12.evaluate(doubleArray88);
        variance10.incrementAll(doubleArray88);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.5d + "'", double18 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4050.0d + "'", double38 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 2L + "'", long41 == 2L);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4050.0d + "'", double43 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.5d + "'", double58 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 74.0d + "'", double69 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4050.0d + "'", double89 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4050.0d + "'", double90 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 4050.0d + "'", double92 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 4050.0d + "'", double93 == 4050.0d);
    }

    @Test
    public void test11907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11907");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (byte) 0);
        secondMoment1.clear();
        double double7 = secondMoment1.getResult();
        secondMoment1.increment(1.0239004E7d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double[] doubleArray24 = new double[] { 10, (byte) 100 };
        double double25 = secondMoment12.evaluate(doubleArray24);
        double double26 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment12);
        long long28 = secondMoment12.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment((double) ' ');
        secondMoment29.increment((double) (-1.0f));
        secondMoment29.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment35);
        long long46 = variance45.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double double58 = variance45.evaluate(doubleArray53, (double) (short) -1);
        double double59 = secondMoment29.evaluate(doubleArray53);
        double double60 = secondMoment12.evaluate(doubleArray53);
        double double61 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment((double) ' ');
        secondMoment62.increment((double) '4');
        secondMoment62.increment((double) 0.0f);
        long long69 = secondMoment62.getN();
        long long70 = secondMoment62.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long73 = variance72.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        secondMoment74.increment((double) (short) 0);
        double double79 = secondMoment74.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment80.increment(1.0d);
        double[] doubleArray86 = new double[] { (-1L), 0, 10L };
        secondMoment80.incrementAll(doubleArray86, 0, 0);
        double double90 = secondMoment74.evaluate(doubleArray86);
        variance72.incrementAll(doubleArray86);
        double double92 = secondMoment62.evaluate(doubleArray86);
        double double93 = secondMoment12.evaluate(doubleArray86);
        secondMoment12.clear();
        boolean boolean95 = secondMoment1.equals((java.lang.Object) secondMoment12);
        double double96 = secondMoment12.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4050.0d + "'", double26 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 2L + "'", long28 == 2L);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 37.0d + "'", double58 == 37.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 74.0d + "'", double59 == 74.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 74.0d + "'", double60 == 74.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 74.0d + "'", double61 == 74.0d);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 3L + "'", long69 == 3L);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 3L + "'", long70 == 3L);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.5d + "'", double79 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 74.0d + "'", double90 == 74.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 74.0d + "'", double92 == 74.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 74.0d + "'", double93 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
    }

    @Test
    public void test11908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11908");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        secondMoment18.increment((double) (-1.0f));
        secondMoment18.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        long long35 = variance34.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double double47 = variance34.evaluate(doubleArray42, (double) (short) -1);
        double double48 = secondMoment18.evaluate(doubleArray42);
        double double49 = secondMoment1.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance51.increment((double) (byte) -1);
        variance51.setBiasCorrected(false);
        long long56 = variance51.getN();
        variance51.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 37.0d + "'", double47 == 37.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 3L + "'", long56 == 3L);
    }

    @Test
    public void test11909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11909");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance9.increment((double) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        secondMoment13.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        long long29 = secondMoment24.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        long long40 = secondMoment30.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        secondMoment41.incrementAll(doubleArray47, 0, 0);
        secondMoment30.incrementAll(doubleArray47, 0, (int) (short) 1);
        secondMoment24.incrementAll(doubleArray47, (int) (byte) 0, (int) (byte) 1);
        secondMoment18.incrementAll(doubleArray47);
        double double58 = variance17.evaluate(doubleArray47);
        double double59 = variance9.evaluate(doubleArray47);
        java.lang.Class<?> wildcardClass60 = variance9.getClass();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 544.5d + "'", double8 == 544.5d);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 2L + "'", long29 == 2L);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 24.666666666666668d + "'", double58 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 24.666666666666668d + "'", double59 == 24.666666666666668d);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test11910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11910");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        secondMoment0.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double[] doubleArray41 = new double[] { 10, (byte) 100 };
        double double42 = secondMoment29.evaluate(doubleArray41);
        double double43 = variance28.evaluate(doubleArray41);
        long long44 = variance28.getN();
        double double45 = variance28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double[] doubleArray58 = new double[] { 10, (byte) 100 };
        double double59 = secondMoment46.evaluate(doubleArray58);
        double double60 = secondMoment46.getResult();
        secondMoment46.increment((double) (short) -1);
        double[] doubleArray64 = new double[] { (short) 1 };
        secondMoment46.incrementAll(doubleArray64);
        double double66 = variance28.evaluate(doubleArray64);
        variance28.increment((double) 10.0f);
        double double69 = variance28.getResult();
        variance28.clear();
        boolean boolean71 = variance28.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4050.0d + "'", double42 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4050.0d + "'", double43 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 3L + "'", long44 == 3L);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test11911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11911");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        secondMoment9.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        long long26 = variance25.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double38 = variance25.evaluate(doubleArray33, (double) (short) -1);
        double double39 = secondMoment9.evaluate(doubleArray33);
        double double40 = secondMoment1.evaluate(doubleArray33);
        long long41 = secondMoment1.getN();
        double double42 = secondMoment1.getResult();
        secondMoment1.clear();
        secondMoment1.increment(1.2283730749999996E7d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 37.0d + "'", double38 == 37.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 74.0d + "'", double39 == 74.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 3L + "'", long41 == 3L);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 74.0d + "'", double42 == 74.0d);
    }

    @Test
    public void test11912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11912");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        secondMoment18.increment((double) (-1.0f));
        secondMoment18.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        long long35 = variance34.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double double47 = variance34.evaluate(doubleArray42, (double) (short) -1);
        double double48 = secondMoment18.evaluate(doubleArray42);
        double double49 = secondMoment1.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance51.setBiasCorrected(true);
        double double54 = variance51.getResult();
        long long55 = variance51.getN();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 37.0d + "'", double47 == 37.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 37.0d + "'", double54 == 37.0d);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 3L + "'", long55 == 3L);
    }

    @Test
    public void test11913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11913");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        secondMoment8.increment((double) (short) -1);
        long long14 = secondMoment8.getN();
        double double15 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment8);
        long long18 = variance17.getN();
        boolean boolean19 = variance17.isBiasCorrected();
        variance17.clear();
        variance17.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        double[] doubleArray41 = new double[] {};
        secondMoment24.incrementAll(doubleArray41);
        double double45 = variance23.evaluate(doubleArray41, (int) (byte) 0, 0);
        long long46 = variance23.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double double63 = secondMoment47.evaluate(doubleArray59);
        variance23.incrementAll(doubleArray59);
        variance23.increment((double) 10);
        boolean boolean67 = variance17.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double[] doubleArray80 = new double[] { 10, (byte) 100 };
        double double81 = secondMoment68.evaluate(doubleArray80);
        double double82 = secondMoment68.getResult();
        secondMoment68.increment((double) (short) -1);
        double[] doubleArray86 = new double[] { (short) 1 };
        secondMoment68.incrementAll(doubleArray86);
        double double88 = variance17.evaluate(doubleArray86);
        double double89 = secondMoment0.evaluate(doubleArray86);
        secondMoment0.increment(3602.0d);
        secondMoment0.clear();
        secondMoment0.increment(13325.5d);
        double double95 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 544.5d + "'", double15 == 544.5d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
    }

    @Test
    public void test11914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11914");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        double double16 = secondMoment0.evaluate(doubleArray12);
        long long17 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double19 = secondMoment0.getResult();
        secondMoment0.increment((double) (byte) 10);
        secondMoment0.increment(9725402.75d);
        double double24 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 74.0d + "'", double16 == 74.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 3L + "'", long17 == 3L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 74.0d + "'", double19 == 74.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.566669300683395E13d + "'", double24 == 7.566669300683395E13d);
    }

    @Test
    public void test11915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11915");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        variance19.clear();
        variance19.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
    }

    @Test
    public void test11916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11916");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment(1.218679475E7d);
        secondMoment0.clear();
        secondMoment0.clear();
        double double11 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test11917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11917");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double double24 = secondMoment8.evaluate(doubleArray20);
        secondMoment0.incrementAll(doubleArray20, 0, (int) (short) 0);
        long long28 = secondMoment0.getN();
        secondMoment0.increment((double) 0L);
        secondMoment0.clear();
        secondMoment0.increment(4062264.9166666665d);
        long long34 = secondMoment0.getN();
        double double35 = secondMoment0.getResult();
        secondMoment0.increment(8247.428571428572d);
        double double38 = secondMoment0.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 74.0d + "'", double24 == 74.0d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 8.217528896891011E12d + "'", double38 == 8.217528896891011E12d);
    }

    @Test
    public void test11918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11918");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        secondMoment19.increment((double) (-1.0f));
        secondMoment19.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment25);
        long long36 = variance35.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double double48 = variance35.evaluate(doubleArray43, (double) (short) -1);
        double double49 = secondMoment19.evaluate(doubleArray43);
        double double50 = secondMoment2.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long54 = variance53.getN();
        double double55 = variance53.getResult();
        variance53.increment((double) (short) 100);
        variance53.increment((double) 3L);
        variance53.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        secondMoment61.increment((double) (short) 0);
        double double66 = secondMoment61.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        double[] doubleArray73 = new double[] { (-1L), 0, 10L };
        secondMoment67.incrementAll(doubleArray73, 0, 0);
        double double77 = secondMoment61.evaluate(doubleArray73);
        double[] doubleArray78 = new double[] {};
        secondMoment61.incrementAll(doubleArray78);
        variance53.incrementAll(doubleArray78);
        secondMoment2.incrementAll(doubleArray78);
        secondMoment2.increment(0.0d);
        secondMoment2.increment(3.033666413425926E7d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long87 = secondMoment2.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 37.0d + "'", double48 == 37.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 74.0d + "'", double50 == 74.0d);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.5d + "'", double66 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 74.0d + "'", double77 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 5L + "'", long87 == 5L);
    }

    @Test
    public void test11919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11919");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double[] doubleArray31 = new double[] { 10, (byte) 100 };
        double double32 = secondMoment19.evaluate(doubleArray31);
        double double33 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment19);
        long long35 = secondMoment19.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        secondMoment37.increment((double) (short) -1);
        secondMoment37.clear();
        secondMoment37.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        variance46.incrementAll(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment58);
        secondMoment58.increment((double) (short) -1);
        secondMoment58.clear();
        secondMoment58.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        secondMoment68.increment((double) (short) 0);
        double double73 = secondMoment68.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        secondMoment74.incrementAll(doubleArray80, 0, 0);
        double double84 = secondMoment68.evaluate(doubleArray80);
        double double85 = secondMoment58.evaluate(doubleArray80);
        double double86 = variance46.evaluate(doubleArray80);
        variance36.incrementAll(doubleArray80);
        secondMoment0.incrementAll(doubleArray80);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.clear();
        double double91 = secondMoment0.getResult();
        secondMoment0.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4050.0d + "'", double32 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4050.0d + "'", double33 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 2L + "'", long35 == 2L);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5d + "'", double73 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 74.0d + "'", double84 == 74.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 74.0d + "'", double85 == 74.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 37.0d + "'", double86 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
    }

    @Test
    public void test11920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11920");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        secondMoment2.clear();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double[] doubleArray32 = new double[] { 10, (byte) 100 };
        double double33 = secondMoment20.evaluate(doubleArray32);
        double double34 = secondMoment20.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment20);
        long long36 = secondMoment20.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        secondMoment20.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        secondMoment40.incrementAll(doubleArray46, 0, 0);
        double[] doubleArray52 = new double[] { 10, (byte) 100 };
        double double53 = secondMoment40.evaluate(doubleArray52);
        double double54 = secondMoment40.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment40);
        long long56 = secondMoment40.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment((double) ' ');
        secondMoment57.increment((double) (-1.0f));
        secondMoment57.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment63);
        long long74 = variance73.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        double double86 = variance73.evaluate(doubleArray81, (double) (short) -1);
        double double87 = secondMoment57.evaluate(doubleArray81);
        double double88 = secondMoment40.evaluate(doubleArray81);
        double double89 = secondMoment20.evaluate(doubleArray81);
        double double90 = secondMoment2.evaluate(doubleArray81);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance93 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long94 = variance93.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4050.0d + "'", double33 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4050.0d + "'", double34 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 2L + "'", long36 == 2L);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4050.0d + "'", double53 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4050.0d + "'", double54 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 2L + "'", long56 == 2L);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 37.0d + "'", double86 == 37.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 74.0d + "'", double87 == 74.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 74.0d + "'", double90 == 74.0d);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 0L + "'", long94 == 0L);
    }

    @Test
    public void test11921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11921");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        double double16 = secondMoment0.evaluate(doubleArray12);
        long long17 = secondMoment0.getN();
        secondMoment0.increment(1779.8518518518517d);
        double double20 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        java.lang.Class<?> wildcardClass22 = variance21.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 74.0d + "'", double16 == 74.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 3L + "'", long17 == 3L);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2367975.877572016d + "'", double20 == 2367975.877572016d);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test11922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11922");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        variance1.increment((double) (short) 100);
        variance1.increment((double) 3L);
        variance1.clear();
        variance1.increment((double) (byte) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        secondMoment11.increment((double) '4');
        double double17 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        secondMoment18.increment((double) (short) 0);
        double double23 = secondMoment18.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        double[] doubleArray41 = new double[] {};
        secondMoment24.incrementAll(doubleArray41);
        secondMoment18.incrementAll(doubleArray41);
        secondMoment18.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double[] doubleArray59 = new double[] { 10, (byte) 100 };
        double double60 = secondMoment47.evaluate(doubleArray59);
        double double61 = variance46.evaluate(doubleArray59);
        double double62 = secondMoment11.evaluate(doubleArray59);
        secondMoment11.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment65);
        secondMoment65.increment((double) (short) -1);
        secondMoment65.clear();
        secondMoment65.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        variance74.incrementAll(doubleArray81);
        variance64.incrementAll(doubleArray81);
        double double87 = variance1.evaluate(doubleArray81);
        variance1.increment((double) (byte) 1);
        variance1.clear();
        boolean boolean91 = variance1.isBiasCorrected();
        variance1.increment(4.3152066666666664E7d);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 200.0d + "'", double17 == 200.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5d + "'", double23 == 0.5d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4050.0d + "'", double62 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 37.0d + "'", double87 == 37.0d);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test11923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11923");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(544.5d);
        secondMoment0.clear();
        double double15 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment(80.75d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test11924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11924");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        secondMoment9.increment((double) (short) -1);
        secondMoment9.clear();
        secondMoment9.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        variance18.incrementAll(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment30);
        secondMoment30.increment((double) (short) -1);
        secondMoment30.clear();
        secondMoment30.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        secondMoment40.increment((double) (short) 0);
        double double45 = secondMoment40.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double double56 = secondMoment40.evaluate(doubleArray52);
        double double57 = secondMoment30.evaluate(doubleArray52);
        double double58 = variance18.evaluate(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment((double) ' ');
        secondMoment59.increment((double) (-1.0f));
        secondMoment59.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        double[] doubleArray71 = new double[] { (-1L), 0, 10L };
        secondMoment65.incrementAll(doubleArray71, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment65);
        long long76 = variance75.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment77.increment(1.0d);
        double[] doubleArray83 = new double[] { (-1L), 0, 10L };
        secondMoment77.incrementAll(doubleArray83, 0, 0);
        double double88 = variance75.evaluate(doubleArray83, (double) (short) -1);
        double double89 = secondMoment59.evaluate(doubleArray83);
        double double90 = variance18.evaluate(doubleArray83);
        double double91 = variance8.evaluate(doubleArray83);
        variance8.clear();
        variance8.increment(200.0d);
        variance8.clear();
        variance8.clear();
        variance8.increment(0.0d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5d + "'", double45 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 74.0d + "'", double56 == 74.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 74.0d + "'", double57 == 74.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 37.0d + "'", double58 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 37.0d + "'", double88 == 37.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 37.0d + "'", double90 == 37.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 24.666666666666668d + "'", double91 == 24.666666666666668d);
    }

    @Test
    public void test11925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11925");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        long long6 = secondMoment0.getN();
        double double7 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        double[] doubleArray22 = new double[] { 10, (byte) 100 };
        double double23 = secondMoment10.evaluate(doubleArray22);
        double double24 = secondMoment10.getResult();
        long long25 = secondMoment10.getN();
        long long26 = secondMoment10.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        long long28 = secondMoment10.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double[] doubleArray42 = new double[] { 10, (byte) 100 };
        double double43 = secondMoment30.evaluate(doubleArray42);
        double double44 = secondMoment30.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment30);
        long long46 = secondMoment30.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment((double) ' ');
        secondMoment47.increment((double) (-1.0f));
        secondMoment47.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment53);
        long long64 = variance63.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        double[] doubleArray71 = new double[] { (-1L), 0, 10L };
        secondMoment65.incrementAll(doubleArray71, 0, 0);
        double double76 = variance63.evaluate(doubleArray71, (double) (short) -1);
        double double77 = secondMoment47.evaluate(doubleArray71);
        double double78 = secondMoment30.evaluate(doubleArray71);
        secondMoment10.incrementAll(doubleArray71);
        boolean boolean80 = secondMoment0.equals((java.lang.Object) secondMoment10);
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 544.5d + "'", double7 == 544.5d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4050.0d + "'", double23 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2L + "'", long25 == 2L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 2L + "'", long28 == 2L);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4050.0d + "'", double43 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4050.0d + "'", double44 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 2L + "'", long46 == 2L);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 37.0d + "'", double76 == 37.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 74.0d + "'", double77 == 74.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 74.0d + "'", double78 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test11926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11926");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        double double15 = secondMoment0.getResult();
        secondMoment0.increment((double) ' ');
        secondMoment0.clear();
        secondMoment0.increment(0.0d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
    }

    @Test
    public void test11927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11927");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        secondMoment2.clear();
        secondMoment2.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.increment(100.0d);
        secondMoment2.clear();
        secondMoment2.clear();
        secondMoment2.increment(369413.7968750001d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.clear();
    }

    @Test
    public void test11928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11928");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.clear();
        variance1.increment(1769.25d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment((double) ' ');
        double double8 = secondMoment5.getResult();
        secondMoment5.increment((double) (short) 100);
        secondMoment5.increment(100.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment13);
        secondMoment13.increment((double) (short) -1);
        secondMoment13.clear();
        secondMoment13.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment13);
        long long23 = variance22.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        double double32 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double double43 = secondMoment27.evaluate(doubleArray39);
        double[] doubleArray44 = new double[] {};
        secondMoment27.incrementAll(doubleArray44);
        double double46 = secondMoment24.evaluate(doubleArray44);
        double double47 = variance22.evaluate(doubleArray44);
        secondMoment5.incrementAll(doubleArray44);
        variance1.incrementAll(doubleArray44);
        double double50 = variance1.getResult();
        long long51 = variance1.getN();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5d + "'", double32 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
    }

    @Test
    public void test11929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11929");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        long long7 = variance6.getN();
        double double8 = variance6.getResult();
        boolean boolean9 = variance6.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        long long20 = secondMoment10.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        double[] doubleArray36 = new double[] { 10, (byte) 100 };
        double double37 = secondMoment24.evaluate(doubleArray36);
        secondMoment24.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        secondMoment39.increment((double) (short) 0);
        double double44 = secondMoment39.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        double double50 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double61 = secondMoment45.evaluate(doubleArray57);
        double[] doubleArray62 = new double[] {};
        secondMoment45.incrementAll(doubleArray62);
        secondMoment39.incrementAll(doubleArray62);
        secondMoment39.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double[] doubleArray80 = new double[] { 10, (byte) 100 };
        double double81 = secondMoment68.evaluate(doubleArray80);
        double double82 = variance67.evaluate(doubleArray80);
        double double83 = secondMoment24.evaluate(doubleArray80);
        secondMoment10.incrementAll(doubleArray80, (int) (short) 1, 1);
        double double88 = variance6.evaluate(doubleArray80, (double) 100L);
        variance6.increment(1.4758017166666666E7d);
        variance6.setBiasCorrected(true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4050.0d + "'", double37 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.5d + "'", double44 == 0.5d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 74.0d + "'", double61 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 4050.0d + "'", double88 == 4050.0d);
    }

    @Test
    public void test11930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11930");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance11.increment(2.880385675555556E7d);
        double double14 = variance11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        secondMoment15.increment((double) (short) 0);
        double double20 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double37 = secondMoment21.evaluate(doubleArray33);
        double[] doubleArray38 = new double[] {};
        secondMoment21.incrementAll(doubleArray38);
        secondMoment15.incrementAll(doubleArray38);
        secondMoment15.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        double[] doubleArray56 = new double[] { 10, (byte) 100 };
        double double57 = secondMoment44.evaluate(doubleArray56);
        double double58 = variance43.evaluate(doubleArray56);
        variance11.incrementAll(doubleArray56);
        double double60 = variance11.getResult();
        variance11.clear();
        variance11.setBiasCorrected(false);
        double double64 = variance11.getResult();
        double double65 = variance11.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5d + "'", double20 == 0.5d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4050.0d + "'", double57 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4050.0d + "'", double58 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test11931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11931");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (-1.0f));
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        long long18 = variance17.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double double30 = variance17.evaluate(doubleArray25, (double) (short) -1);
        double double31 = secondMoment1.evaluate(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.clear();
        secondMoment1.increment((double) 4L);
        secondMoment1.increment(4.3152066666666664E7d);
        secondMoment1.increment(5000.0d);
        secondMoment1.increment(8.217528896891011E12d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 74.0d + "'", double31 == 74.0d);
    }

    @Test
    public void test11932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11932");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        variance27.incrementAll(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        secondMoment39.increment((double) (short) -1);
        secondMoment39.clear();
        secondMoment39.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        secondMoment49.increment((double) (short) 0);
        double double54 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double double65 = secondMoment49.evaluate(doubleArray61);
        double double66 = secondMoment39.evaluate(doubleArray61);
        double double67 = variance27.evaluate(doubleArray61);
        double double68 = secondMoment11.evaluate(doubleArray61);
        secondMoment11.increment(200.0d);
        double double71 = secondMoment11.getResult();
        double double72 = secondMoment11.getResult();
        double double73 = secondMoment11.getResult();
        secondMoment11.increment((double) '#');
        secondMoment11.clear();
        secondMoment11.clear();
        double double78 = secondMoment11.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5d + "'", double54 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 37.0d + "'", double67 == 37.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 29180.75d + "'", double71 == 29180.75d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 29180.75d + "'", double72 == 29180.75d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 29180.75d + "'", double73 == 29180.75d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
    }

    @Test
    public void test11933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11933");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        double double25 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double[] doubleArray45 = new double[] {};
        secondMoment28.incrementAll(doubleArray45);
        double double49 = variance27.evaluate(doubleArray45, (int) (byte) 0, 0);
        double double50 = variance26.evaluate(doubleArray45);
        double double51 = variance9.evaluate(doubleArray45);
        long long52 = variance9.getN();
        variance9.increment((double) 5L);
        variance9.increment((double) (byte) 1);
        double double57 = variance9.getResult();
        variance9.clear();
        variance9.setBiasCorrected(false);
        variance9.increment((double) ' ');
        variance9.clear();
        variance9.clear();
        variance9.setBiasCorrected(false);
        variance9.increment(1.1093903724109656E13d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test11934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11934");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        secondMoment17.increment((double) (short) -1);
        secondMoment17.clear();
        secondMoment17.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment17);
        boolean boolean27 = secondMoment2.equals((java.lang.Object) secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment17);
        secondMoment17.clear();
        long long30 = secondMoment17.getN();
        double double31 = secondMoment17.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment17);
        secondMoment17.increment(6.637293823097785E14d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test11935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11935");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        secondMoment1.increment(74.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        boolean boolean9 = variance8.isBiasCorrected();
        boolean boolean10 = variance8.isBiasCorrected();
        variance8.clear();
        double double12 = variance8.getResult();
        double double13 = variance8.getResult();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1801.0d + "'", double12 == 1801.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1801.0d + "'", double13 == 1801.0d);
    }

    @Test
    public void test11936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11936");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        double double25 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double[] doubleArray45 = new double[] {};
        secondMoment28.incrementAll(doubleArray45);
        double double49 = variance27.evaluate(doubleArray45, (int) (byte) 0, 0);
        double double50 = variance26.evaluate(doubleArray45);
        double double51 = variance9.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        double[] doubleArray60 = new double[] { (-1L), 0, 10L };
        secondMoment54.incrementAll(doubleArray60, 0, 0);
        double[] doubleArray66 = new double[] { 10, (byte) 100 };
        double double67 = secondMoment54.evaluate(doubleArray66);
        double double68 = secondMoment54.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment54);
        long long70 = secondMoment54.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        double double72 = secondMoment54.getResult();
        secondMoment54.clear();
        secondMoment54.increment(Double.NaN);
        secondMoment54.clear();
        boolean boolean77 = variance9.equals((java.lang.Object) secondMoment54);
        secondMoment54.clear();
        double double79 = secondMoment54.getResult();
        secondMoment54.increment(4.177453077714286E7d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4050.0d + "'", double67 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4050.0d + "'", double68 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 2L + "'", long70 == 2L);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 4050.0d + "'", double72 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
    }

    @Test
    public void test11937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11937");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        secondMoment2.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        secondMoment13.increment((double) (short) 0);
        double double18 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double double29 = secondMoment13.evaluate(doubleArray25);
        double[] doubleArray30 = new double[] {};
        secondMoment13.incrementAll(doubleArray30);
        secondMoment7.incrementAll(doubleArray30);
        secondMoment7.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double[] doubleArray48 = new double[] { 10, (byte) 100 };
        double double49 = secondMoment36.evaluate(doubleArray48);
        double double50 = variance35.evaluate(doubleArray48);
        double double51 = secondMoment2.evaluate(doubleArray48);
        secondMoment2.clear();
        double double53 = secondMoment2.getResult();
        double double54 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.clear();
        long long58 = secondMoment2.getN();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.5d + "'", double18 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 74.0d + "'", double29 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4050.0d + "'", double51 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
    }

    @Test
    public void test11938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11938");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        double double22 = secondMoment8.getResult();
        long long23 = secondMoment8.getN();
        long long24 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment8);
        secondMoment1.increment((double) (short) 0);
        long long29 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance30.increment(28.666666666666664d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        secondMoment33.increment((double) (short) 0);
        secondMoment33.increment(74.0d);
        secondMoment33.increment(0.0d);
        double double42 = secondMoment33.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        secondMoment43.increment((double) (short) 0);
        double double48 = secondMoment43.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        secondMoment49.incrementAll(doubleArray55, 0, 0);
        double double59 = secondMoment43.evaluate(doubleArray55);
        long long60 = secondMoment43.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        secondMoment62.increment((double) (short) 0);
        double double67 = secondMoment62.getResult();
        secondMoment62.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment62);
        variance69.increment((double) (short) 0);
        variance69.clear();
        variance69.increment((double) 1L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        double double85 = variance69.evaluate(doubleArray81);
        secondMoment43.incrementAll(doubleArray81);
        secondMoment33.incrementAll(doubleArray81);
        double double88 = variance30.evaluate(doubleArray81);
        long long89 = variance30.getN();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 3L + "'", long29 == 3L);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4070.75d + "'", double42 == 4070.75d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.5d + "'", double48 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 74.0d + "'", double59 == 74.0d);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 3L + "'", long60 == 3L);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.5d + "'", double67 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 24.666666666666668d + "'", double85 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 37.0d + "'", double88 == 37.0d);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 3L + "'", long89 == 3L);
    }

    @Test
    public void test11939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11939");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance6.increment(0.0d);
        variance6.increment(30671.375d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        long long21 = secondMoment11.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        long long23 = secondMoment11.getN();
        secondMoment11.increment(2312.0d);
        secondMoment11.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        secondMoment30.increment((double) (short) 0);
        secondMoment30.increment(74.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        long long38 = secondMoment30.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        double double40 = secondMoment30.getResult();
        secondMoment30.increment(0.0d);
        secondMoment30.increment(7070.8d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment45);
        secondMoment45.clear();
        secondMoment45.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment((double) ' ');
        double double54 = secondMoment51.getResult();
        double double55 = secondMoment51.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        double[] doubleArray68 = new double[] { 10, (byte) 100 };
        double double69 = secondMoment56.evaluate(doubleArray68);
        double double70 = secondMoment51.evaluate(doubleArray68);
        double double71 = secondMoment45.evaluate(doubleArray68);
        double double72 = secondMoment30.evaluate(doubleArray68);
        variance27.incrementAll(doubleArray68);
        double double75 = variance6.evaluate(doubleArray68, 3.925812428E7d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 3L + "'", long38 == 3L);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 3602.0d + "'", double40 == 3602.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4050.0d + "'", double69 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4050.0d + "'", double70 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4050.0d + "'", double71 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 4050.0d + "'", double72 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2025.0d + "'", double75 == 2025.0d);
    }

    @Test
    public void test11940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11940");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        double double8 = secondMoment1.getResult();
        secondMoment1.increment((double) (short) 0);
        double double11 = secondMoment1.getResult();
        secondMoment1.increment((double) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long16 = variance15.getN();
        double double17 = variance15.getResult();
        double double18 = variance15.getResult();
        long long19 = variance15.getN();
        variance15.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance23.clear();
        variance23.increment(1769.25d);
        double double27 = variance23.getResult();
        boolean boolean28 = variance15.equals((java.lang.Object) variance23);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment29);
        secondMoment29.increment((double) (short) -1);
        secondMoment29.clear();
        double double36 = secondMoment29.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        secondMoment37.increment((double) (short) 0);
        double double42 = secondMoment37.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        secondMoment43.incrementAll(doubleArray49, 0, 0);
        double double53 = secondMoment37.evaluate(doubleArray49);
        secondMoment29.incrementAll(doubleArray49, 0, (int) (short) 0);
        secondMoment29.clear();
        double double58 = secondMoment29.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        secondMoment59.increment((double) (short) 0);
        long long64 = secondMoment59.getN();
        double double65 = secondMoment59.getResult();
        long long66 = secondMoment59.getN();
        double double67 = secondMoment59.getResult();
        secondMoment59.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        double[] doubleArray82 = new double[] { 10, (byte) 100 };
        double double83 = secondMoment70.evaluate(doubleArray82);
        secondMoment59.incrementAll(doubleArray82);
        double double85 = secondMoment29.evaluate(doubleArray82);
        variance15.incrementAll(doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double double89 = secondMoment1.evaluate(doubleArray82, (int) (byte) 100, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.5d + "'", double42 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 74.0d + "'", double53 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 2L + "'", long64 == 2L);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.5d + "'", double65 == 0.5d);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 2L + "'", long66 == 2L);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.5d + "'", double67 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 4050.0d + "'", double85 == 4050.0d);
    }

    @Test
    public void test11941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11941");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        double double18 = variance10.getResult();
        long long19 = variance10.getN();
        variance10.increment((double) 100L);
        long long22 = variance10.getN();
        long long23 = variance10.getN();
        variance10.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
    }

    @Test
    public void test11942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11942");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        boolean boolean8 = variance7.isBiasCorrected();
        variance7.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        secondMoment11.increment((double) (short) -1);
        secondMoment11.clear();
        secondMoment11.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        secondMoment21.incrementAll(doubleArray27, 0, 0);
        variance20.incrementAll(doubleArray27);
        long long32 = variance20.getN();
        variance20.clear();
        boolean boolean34 = variance20.isBiasCorrected();
        double double35 = variance20.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long38 = variance37.getN();
        double double39 = variance37.getResult();
        variance37.increment((double) (short) 100);
        variance37.increment((double) 3L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double[] doubleArray57 = new double[] { 10, (byte) 100 };
        double double58 = secondMoment45.evaluate(doubleArray57);
        long long59 = secondMoment45.getN();
        secondMoment45.clear();
        double double61 = secondMoment45.getResult();
        secondMoment45.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        secondMoment64.incrementAll(doubleArray70, 0, 0);
        double double74 = variance63.evaluate(doubleArray70);
        double double76 = variance37.evaluate(doubleArray70, (double) 100);
        double double78 = variance20.evaluate(doubleArray70, (double) 'a');
        double double80 = variance7.evaluate(doubleArray70, 344.5185185185186d);
        variance7.clear();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4050.0d + "'", double58 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 2L + "'", long59 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 37.0d + "'", double74 == 37.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 37.0d + "'", double76 == 37.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 37.0d + "'", double78 == 37.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 37.000000000029104d + "'", double80 == 37.000000000029104d);
    }

    @Test
    public void test11943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11943");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        secondMoment2.increment((double) (short) 0);
        double double7 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double double24 = secondMoment8.evaluate(doubleArray20);
        double[] doubleArray25 = new double[] {};
        secondMoment8.incrementAll(doubleArray25);
        secondMoment2.incrementAll(doubleArray25);
        long long28 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.increment(1576.2666666666667d);
        double double32 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        double double34 = variance33.getResult();
        double double35 = variance33.getResult();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 74.0d + "'", double24 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 2L + "'", long28 == 2L);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1655360.891851852d + "'", double32 == 1655360.891851852d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 551786.9639506174d + "'", double34 == 551786.9639506174d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 551786.9639506174d + "'", double35 == 551786.9639506174d);
    }

    @Test
    public void test11944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11944");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double8 = secondMoment0.getResult();
        long long9 = secondMoment0.getN();
        double double10 = secondMoment0.getResult();
        double double11 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment(2099.2d);
        double double15 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment((double) (short) -1);
        secondMoment16.clear();
        secondMoment16.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        long long26 = variance25.getN();
        variance25.increment(200.0d);
        variance25.increment(2025.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        double double50 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double61 = secondMoment45.evaluate(doubleArray57);
        double[] doubleArray62 = new double[] {};
        secondMoment45.incrementAll(doubleArray62);
        double double64 = secondMoment42.evaluate(doubleArray62);
        double double65 = variance41.evaluate(doubleArray62);
        double double66 = variance25.evaluate(doubleArray62);
        double double67 = secondMoment0.evaluate(doubleArray62);
        secondMoment0.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 74.0d + "'", double61 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
    }

    @Test
    public void test11945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11945");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double10 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        secondMoment13.increment((double) (short) 0);
        double double18 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double double29 = secondMoment13.evaluate(doubleArray25);
        double[] doubleArray30 = new double[] {};
        secondMoment13.incrementAll(doubleArray30);
        double double34 = variance12.evaluate(doubleArray30, (int) (byte) 0, 0);
        long long35 = variance12.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        secondMoment36.increment((double) (short) 0);
        double double41 = secondMoment36.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        secondMoment42.incrementAll(doubleArray48, 0, 0);
        double double52 = secondMoment36.evaluate(doubleArray48);
        variance12.incrementAll(doubleArray48);
        double double54 = secondMoment1.evaluate(doubleArray48);
        double double55 = secondMoment1.getResult();
        double double56 = secondMoment1.getResult();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 544.5d + "'", double10 == 544.5d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.5d + "'", double18 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 74.0d + "'", double29 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.5d + "'", double41 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 74.0d + "'", double52 == 74.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 74.0d + "'", double54 == 74.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 74.0d + "'", double55 == 74.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 74.0d + "'", double56 == 74.0d);
    }

    @Test
    public void test11946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11946");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.clear();
        secondMoment1.increment(4402.666666666667d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        secondMoment12.increment((double) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double[] doubleArray30 = new double[] { 10, (byte) 100 };
        double double31 = secondMoment18.evaluate(doubleArray30);
        double double32 = secondMoment18.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment18);
        long long34 = secondMoment18.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment((double) ' ');
        secondMoment35.increment((double) (-1.0f));
        secondMoment35.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        secondMoment41.incrementAll(doubleArray47, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment41);
        long long52 = variance51.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double double64 = variance51.evaluate(doubleArray59, (double) (short) -1);
        double double65 = secondMoment35.evaluate(doubleArray59);
        double double66 = secondMoment18.evaluate(doubleArray59);
        secondMoment12.incrementAll(doubleArray59);
        secondMoment1.incrementAll(doubleArray59);
        double double69 = secondMoment1.getResult();
        secondMoment1.clear();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4050.0d + "'", double31 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4050.0d + "'", double32 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 2L + "'", long34 == 2L);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 37.0d + "'", double64 == 37.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.4517874083333334E7d + "'", double69 == 1.4517874083333334E7d);
    }

    @Test
    public void test11947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11947");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        secondMoment0.increment(0.0d);
        secondMoment0.clear();
        secondMoment0.increment(5.9118157428691766E13d);
        long long13 = secondMoment0.getN();
        secondMoment0.increment(9.33322763454E7d);
        secondMoment0.increment(704.7500000000001d);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
    }

    @Test
    public void test11948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11948");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        secondMoment0.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(9696140.055555556d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
    }

    @Test
    public void test11949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11949");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        secondMoment13.increment((double) (short) 0);
        double double18 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double double29 = secondMoment13.evaluate(doubleArray25);
        double[] doubleArray30 = new double[] {};
        secondMoment13.incrementAll(doubleArray30);
        secondMoment7.incrementAll(doubleArray30);
        secondMoment7.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double[] doubleArray48 = new double[] { 10, (byte) 100 };
        double double49 = secondMoment36.evaluate(doubleArray48);
        double double50 = variance35.evaluate(doubleArray48);
        double double51 = secondMoment0.evaluate(doubleArray48);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long54 = secondMoment0.getN();
        double double55 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(2446472.0d);
        secondMoment0.increment(4710403.555555556d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.5d + "'", double18 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 74.0d + "'", double29 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4050.0d + "'", double51 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
    }

    @Test
    public void test11950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11950");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        long long11 = variance9.getN();
        boolean boolean12 = variance9.isBiasCorrected();
        java.lang.Object obj13 = null;
        boolean boolean14 = variance9.equals(obj13);
        long long15 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment((double) '4');
        double double22 = secondMoment16.getResult();
        secondMoment16.increment((double) (short) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean29 = variance28.isBiasCorrected();
        variance28.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment31);
        long long42 = variance41.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        secondMoment43.incrementAll(doubleArray49, 0, 0);
        double double54 = variance41.evaluate(doubleArray49, (double) (short) -1);
        double double55 = variance28.evaluate(doubleArray49);
        double double56 = secondMoment16.evaluate(doubleArray49);
        double double57 = variance9.evaluate(doubleArray49);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 200.0d + "'", double22 == 200.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 37.0d + "'", double54 == 37.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 24.666666666666668d + "'", double55 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 74.0d + "'", double56 == 74.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 37.0d + "'", double57 == 37.0d);
    }

    @Test
    public void test11951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11951");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        variance1.increment((double) (short) 100);
        boolean boolean6 = variance1.isBiasCorrected();
        long long7 = variance1.getN();
        boolean boolean8 = variance1.isBiasCorrected();
        variance1.clear();
        variance1.increment(1.5296396104640088E29d);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test11952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11952");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        secondMoment0.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double[] doubleArray41 = new double[] { 10, (byte) 100 };
        double double42 = secondMoment29.evaluate(doubleArray41);
        double double43 = variance28.evaluate(doubleArray41);
        long long44 = variance28.getN();
        double double45 = variance28.getResult();
        variance28.increment(8100.0d);
        double double48 = variance28.getResult();
        double double49 = variance28.getResult();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4050.0d + "'", double42 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4050.0d + "'", double43 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 3L + "'", long44 == 3L);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
    }

    @Test
    public void test11953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11953");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        secondMoment12.increment((double) (short) -1);
        secondMoment12.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        double double20 = secondMoment12.getResult();
        long long21 = secondMoment12.getN();
        double double22 = secondMoment12.getResult();
        double double23 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        variance34.increment((double) (short) 100);
        variance34.clear();
        variance34.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment40);
        secondMoment40.increment((double) (short) -1);
        secondMoment40.clear();
        secondMoment40.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment40);
        long long50 = secondMoment40.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long53 = variance52.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        secondMoment54.increment((double) (short) 0);
        double double59 = secondMoment54.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment(1.0d);
        double[] doubleArray66 = new double[] { (-1L), 0, 10L };
        secondMoment60.incrementAll(doubleArray66, 0, 0);
        double double70 = secondMoment54.evaluate(doubleArray66);
        variance52.incrementAll(doubleArray66);
        double double72 = secondMoment40.evaluate(doubleArray66);
        double double73 = variance34.evaluate(doubleArray66);
        secondMoment12.incrementAll(doubleArray66);
        variance11.incrementAll(doubleArray66);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5d + "'", double59 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 74.0d + "'", double70 == 74.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 74.0d + "'", double72 == 74.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 37.0d + "'", double73 == 37.0d);
    }

    @Test
    public void test11954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11954");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long11 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double23 = variance10.evaluate(doubleArray18, (double) (short) -1);
        double double24 = variance10.getResult();
        variance10.setBiasCorrected(true);
        variance10.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment29);
        secondMoment29.increment((double) (short) -1);
        secondMoment29.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment29);
        variance36.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        secondMoment39.increment((double) (short) 0);
        double double44 = secondMoment39.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        double double50 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double61 = secondMoment45.evaluate(doubleArray57);
        double[] doubleArray62 = new double[] {};
        secondMoment45.incrementAll(doubleArray62);
        secondMoment39.incrementAll(doubleArray62);
        secondMoment39.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        secondMoment39.increment(0.5d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment70);
        long long81 = variance80.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment82 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment82.increment(1.0d);
        double[] doubleArray88 = new double[] { (-1L), 0, 10L };
        secondMoment82.incrementAll(doubleArray88, 0, 0);
        double double93 = variance80.evaluate(doubleArray88, (double) (short) -1);
        double double96 = secondMoment39.evaluate(doubleArray88, (int) (byte) 1, (int) (byte) 1);
        double double97 = variance36.evaluate(doubleArray88);
        variance10.incrementAll(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 37.0d + "'", double23 == 37.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.5d + "'", double44 == 0.5d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 74.0d + "'", double61 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 1L + "'", long81 == 1L);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 37.0d + "'", double93 == 37.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 37.0d + "'", double97 == 37.0d);
    }

    @Test
    public void test11955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11955");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment((double) ' ');
        double double8 = secondMoment5.getResult();
        secondMoment5.increment((double) (short) 100);
        long long11 = secondMoment5.getN();
        secondMoment5.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        secondMoment18.increment((double) (short) 0);
        double double23 = secondMoment18.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double[] doubleArray37 = new double[] { 10, (byte) 100 };
        double double38 = secondMoment25.evaluate(doubleArray37);
        double double39 = secondMoment25.getResult();
        long long40 = secondMoment25.getN();
        long long41 = secondMoment25.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        boolean boolean43 = secondMoment18.equals((java.lang.Object) secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        variance45.clear();
        variance45.clear();
        double double48 = variance45.getResult();
        variance45.clear();
        long long50 = variance45.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        long long61 = secondMoment51.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        secondMoment62.incrementAll(doubleArray68, 0, 0);
        secondMoment51.incrementAll(doubleArray68, 0, (int) (short) 1);
        double double75 = variance45.evaluate(doubleArray68);
        secondMoment13.incrementAll(doubleArray68);
        secondMoment5.incrementAll(doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            double double80 = variance4.evaluate(doubleArray68, (int) (byte) 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5d + "'", double23 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4050.0d + "'", double38 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 2L + "'", long40 == 2L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 2L + "'", long41 == 2L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.5d + "'", double48 == 0.5d);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 2L + "'", long50 == 2L);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 37.0d + "'", double75 == 37.0d);
    }

    @Test
    public void test11956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11956");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        secondMoment1.clear();
        long long8 = secondMoment1.getN();
        secondMoment1.increment(5226.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long12 = secondMoment1.getN();
        double double13 = secondMoment1.getResult();
        secondMoment1.clear();
        secondMoment1.increment(1.2133739E7d);
        secondMoment1.clear();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test11957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11957");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        secondMoment0.clear();
        secondMoment0.increment(7077.0d);
        double double17 = secondMoment0.getResult();
        secondMoment0.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test11958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11958");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        double double6 = secondMoment0.getResult();
        long long7 = secondMoment0.getN();
        double double8 = secondMoment0.getResult();
        double double9 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        double double14 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        long long16 = variance15.getN();
        boolean boolean17 = variance15.isBiasCorrected();
        boolean boolean18 = variance15.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long21 = variance20.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        secondMoment22.increment((double) (short) 0);
        double double27 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double double38 = secondMoment22.evaluate(doubleArray34);
        variance20.incrementAll(doubleArray34);
        variance15.incrementAll(doubleArray34);
        // The following exception was thrown during execution in test generation
        try {
            double double43 = secondMoment0.evaluate(doubleArray34, (-1), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5d + "'", double8 == 0.5d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.5d + "'", double9 == 0.5d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5d + "'", double27 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 74.0d + "'", double38 == 74.0d);
    }

    @Test
    public void test11959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11959");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        variance1.increment((double) (short) 100);
        boolean boolean6 = variance1.isBiasCorrected();
        long long7 = variance1.getN();
        boolean boolean8 = variance1.isBiasCorrected();
        variance1.clear();
        long long10 = variance1.getN();
        long long11 = variance1.getN();
        double double12 = variance1.getResult();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test11960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11960");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double37 = secondMoment21.evaluate(doubleArray33);
        double[] doubleArray38 = new double[] {};
        secondMoment21.incrementAll(doubleArray38);
        double double42 = variance20.evaluate(doubleArray38, (int) (byte) 0, 0);
        long long43 = variance20.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        secondMoment44.increment((double) (short) 0);
        double double49 = secondMoment44.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double double60 = secondMoment44.evaluate(doubleArray56);
        variance20.incrementAll(doubleArray56);
        long long62 = variance20.getN();
        variance20.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double[] doubleArray80 = new double[] { 10, (byte) 100 };
        double double81 = secondMoment68.evaluate(doubleArray80);
        double double82 = secondMoment65.evaluate(doubleArray80);
        variance20.incrementAll(doubleArray80);
        secondMoment1.incrementAll(doubleArray80);
        long long85 = secondMoment1.getN();
        double double86 = secondMoment1.getResult();
        double double87 = secondMoment1.getResult();
        secondMoment1.increment((double) 5L);
        secondMoment1.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.5d + "'", double49 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 74.0d + "'", double60 == 74.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 3L + "'", long62 == 3L);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 2L + "'", long85 == 2L);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4050.0d + "'", double86 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 4050.0d + "'", double87 == 4050.0d);
    }

    @Test
    public void test11961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11961");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        secondMoment12.increment((double) (short) 0);
        double double17 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double28 = secondMoment12.evaluate(doubleArray24);
        double[] doubleArray29 = new double[] {};
        secondMoment12.incrementAll(doubleArray29);
        secondMoment6.incrementAll(doubleArray29);
        secondMoment6.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double[] doubleArray47 = new double[] { 10, (byte) 100 };
        double double48 = secondMoment35.evaluate(doubleArray47);
        double double49 = variance34.evaluate(doubleArray47);
        double double50 = secondMoment1.evaluate(doubleArray47);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        secondMoment51.increment((double) (short) 0);
        double double56 = secondMoment51.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        secondMoment57.increment((double) (short) 0);
        double double62 = secondMoment57.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        double double73 = secondMoment57.evaluate(doubleArray69);
        double[] doubleArray74 = new double[] {};
        secondMoment57.incrementAll(doubleArray74);
        secondMoment51.incrementAll(doubleArray74);
        double double77 = secondMoment1.evaluate(doubleArray74);
        long long78 = secondMoment1.getN();
        secondMoment1.clear();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double82 = variance81.getResult();
        variance81.increment(2.81474976710656E14d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.5d + "'", double17 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 74.0d + "'", double28 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.5d + "'", double56 == 0.5d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.5d + "'", double62 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 74.0d + "'", double73 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4050.0d + "'", double77 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 2L + "'", long78 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
    }

    @Test
    public void test11962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11962");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        variance10.setBiasCorrected(false);
        boolean boolean20 = variance10.isBiasCorrected();
        variance10.increment(9.850627577102172E13d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test11963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11963");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        long long16 = secondMoment2.getN();
        secondMoment2.clear();
        double double18 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        variance21.increment((double) 0);
        long long24 = variance21.getN();
        variance21.increment(2.880385675555556E7d);
        variance21.clear();
        double double28 = variance21.getResult();
        variance21.increment(2.4694275851851854E7d);
        double double31 = variance21.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test11964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11964");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        secondMoment1.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double[] doubleArray32 = new double[] { 10, (byte) 100 };
        double double33 = secondMoment20.evaluate(doubleArray32);
        double double34 = secondMoment20.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment20);
        long long36 = secondMoment20.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment38);
        secondMoment38.increment((double) (short) -1);
        secondMoment38.clear();
        secondMoment38.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        variance47.incrementAll(doubleArray54);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment59);
        secondMoment59.increment((double) (short) -1);
        secondMoment59.clear();
        secondMoment59.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        secondMoment69.increment((double) (short) 0);
        double double74 = secondMoment69.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        double double85 = secondMoment69.evaluate(doubleArray81);
        double double86 = secondMoment59.evaluate(doubleArray81);
        double double87 = variance47.evaluate(doubleArray81);
        variance37.incrementAll(doubleArray81);
        secondMoment1.incrementAll(doubleArray81);
        long long90 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance91 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance91.increment(5.0419610915007175E14d);
        variance91.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4050.0d + "'", double33 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4050.0d + "'", double34 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 2L + "'", long36 == 2L);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.5d + "'", double74 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 74.0d + "'", double85 == 74.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 74.0d + "'", double86 == 74.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 37.0d + "'", double87 == 37.0d);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 6L + "'", long90 == 6L);
    }

    @Test
    public void test11965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11965");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        long long8 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.increment(5226.0d);
        long long14 = secondMoment2.getN();
        double double15 = secondMoment2.getResult();
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 3L + "'", long14 == 3L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.8100084666666664E7d + "'", double15 == 1.8100084666666664E7d);
    }

    @Test
    public void test11966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11966");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        secondMoment8.increment((double) (short) -1);
        secondMoment8.clear();
        secondMoment8.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        secondMoment17.increment((double) (short) 0);
        boolean boolean22 = secondMoment8.equals((java.lang.Object) secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        double[] doubleArray38 = new double[] { 10, (byte) 100 };
        double double39 = secondMoment26.evaluate(doubleArray38);
        double double40 = secondMoment23.evaluate(doubleArray38);
        secondMoment8.incrementAll(doubleArray38);
        secondMoment1.incrementAll(doubleArray38, (int) (short) 0, 0);
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        double double49 = secondMoment1.getResult();
        long long50 = secondMoment1.getN();
        double double51 = secondMoment1.getResult();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4050.0d + "'", double40 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test11967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11967");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        double double18 = variance10.getResult();
        variance10.increment(3602.0d);
        double double21 = variance10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment23);
        secondMoment23.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        secondMoment23.clear();
        secondMoment23.increment((double) 10);
        secondMoment23.increment(2.0d);
        long long34 = secondMoment23.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        secondMoment49.increment((double) (short) 0);
        double double54 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double double65 = secondMoment49.evaluate(doubleArray61);
        double[] doubleArray66 = new double[] {};
        secondMoment49.incrementAll(doubleArray66);
        double double68 = secondMoment46.evaluate(doubleArray66);
        double double69 = variance45.evaluate(doubleArray66);
        double double72 = secondMoment23.evaluate(doubleArray66, 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double75 = variance10.evaluate(doubleArray66, (int) (byte) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 2L + "'", long34 == 2L);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5d + "'", double54 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 32.0d + "'", double72 == 32.0d);
    }

    @Test
    public void test11968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11968");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
    }

    @Test
    public void test11969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11969");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        secondMoment1.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        long long11 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long14 = variance13.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        secondMoment15.increment((double) (short) 0);
        double double20 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        secondMoment21.incrementAll(doubleArray27, 0, 0);
        double double31 = secondMoment15.evaluate(doubleArray27);
        variance13.incrementAll(doubleArray27);
        double double33 = secondMoment1.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment((double) 100);
        secondMoment1.clear();
        secondMoment1.clear();
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5d + "'", double20 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 74.0d + "'", double31 == 74.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 74.0d + "'", double33 == 74.0d);
    }

    @Test
    public void test11970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11970");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        variance9.incrementAll(doubleArray16);
        variance9.clear();
        variance9.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        secondMoment30.increment((double) (short) 0);
        double double35 = secondMoment30.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double double46 = secondMoment30.evaluate(doubleArray42);
        double[] doubleArray47 = new double[] {};
        secondMoment30.incrementAll(doubleArray47);
        secondMoment24.incrementAll(doubleArray47);
        secondMoment24.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double[] doubleArray65 = new double[] { 10, (byte) 100 };
        double double66 = secondMoment53.evaluate(doubleArray65);
        double double67 = variance52.evaluate(doubleArray65);
        double double69 = variance9.evaluate(doubleArray65, 100.0d);
        long long70 = variance9.getN();
        double double71 = variance9.getResult();
        double double72 = variance9.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.5d + "'", double35 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 74.0d + "'", double46 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4050.0d + "'", double66 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4050.0d + "'", double67 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4050.0d + "'", double69 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test11971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11971");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance10.increment((double) (short) 100);
        variance10.clear();
        variance10.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment((double) (short) -1);
        secondMoment16.clear();
        secondMoment16.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        variance25.incrementAll(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        secondMoment37.increment((double) (short) -1);
        secondMoment37.clear();
        secondMoment37.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double double63 = secondMoment47.evaluate(doubleArray59);
        double double64 = secondMoment37.evaluate(doubleArray59);
        double double65 = variance25.evaluate(doubleArray59);
        double double66 = variance10.evaluate(doubleArray59);
        variance10.setBiasCorrected(false);
        variance10.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 74.0d + "'", double64 == 74.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 37.0d + "'", double65 == 37.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 37.0d + "'", double66 == 37.0d);
    }

    @Test
    public void test11972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11972");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(272.25d);
        long long6 = secondMoment0.getN();
        secondMoment0.clear();
        long long8 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long11 = variance10.getN();
        double double12 = variance10.getResult();
        double double13 = variance10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment14);
        secondMoment14.increment((double) (short) -1);
        secondMoment14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment14);
        double double22 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        double[] doubleArray36 = new double[] { 10, (byte) 100 };
        double double37 = secondMoment24.evaluate(doubleArray36);
        double double38 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        secondMoment41.increment((double) (short) 0);
        double double46 = secondMoment41.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double double57 = secondMoment41.evaluate(doubleArray53);
        double[] doubleArray58 = new double[] {};
        secondMoment41.incrementAll(doubleArray58);
        double double62 = variance40.evaluate(doubleArray58, (int) (byte) 0, 0);
        double double63 = variance39.evaluate(doubleArray58);
        secondMoment14.incrementAll(doubleArray58);
        double double65 = variance10.evaluate(doubleArray58);
        double double66 = secondMoment0.evaluate(doubleArray58);
        secondMoment0.clear();
        secondMoment0.increment(1984.5d);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4050.0d + "'", double37 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4050.0d + "'", double38 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.5d + "'", double46 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 74.0d + "'", double57 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
    }

    @Test
    public void test11973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11973");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        double double14 = secondMoment9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        double double25 = secondMoment9.evaluate(doubleArray21);
        secondMoment1.incrementAll(doubleArray21, 0, (int) (short) 0);
        long long29 = secondMoment1.getN();
        secondMoment1.increment((double) 0L);
        secondMoment1.increment((double) 1L);
        java.lang.Object obj34 = null;
        boolean boolean35 = secondMoment1.equals(obj34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment(126683.55555555556d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.5d + "'", double14 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 74.0d + "'", double25 == 74.0d);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test11974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11974");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.increment(74.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        secondMoment8.increment((double) (short) -1);
        secondMoment8.clear();
        secondMoment8.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        variance17.incrementAll(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment29);
        secondMoment29.increment((double) (short) -1);
        secondMoment29.clear();
        secondMoment29.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        secondMoment39.increment((double) (short) 0);
        double double44 = secondMoment39.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double double55 = secondMoment39.evaluate(doubleArray51);
        double double56 = secondMoment29.evaluate(doubleArray51);
        double double57 = variance17.evaluate(doubleArray51);
        double double58 = secondMoment0.evaluate(doubleArray51);
        secondMoment0.clear();
        double double60 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.5d + "'", double44 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 74.0d + "'", double55 == 74.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 74.0d + "'", double56 == 74.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 37.0d + "'", double57 == 37.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 74.0d + "'", double58 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
    }

    @Test
    public void test11975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11975");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        secondMoment0.incrementAll(doubleArray17, 0, (int) (short) 1);
        secondMoment0.clear();
        double double25 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        secondMoment26.increment((double) (short) -1);
        secondMoment26.clear();
        secondMoment26.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        secondMoment35.increment((double) (short) 0);
        boolean boolean40 = secondMoment26.equals((java.lang.Object) secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        double[] doubleArray56 = new double[] { 10, (byte) 100 };
        double double57 = secondMoment44.evaluate(doubleArray56);
        double double58 = secondMoment41.evaluate(doubleArray56);
        secondMoment26.incrementAll(doubleArray56);
        double double60 = secondMoment0.evaluate(doubleArray56);
        secondMoment0.increment(806.0d);
        secondMoment0.increment(110.75d);
        double double65 = secondMoment0.getResult();
        double double66 = secondMoment0.getResult();
        double double67 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4050.0d + "'", double57 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4050.0d + "'", double58 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 408447.671875d + "'", double65 == 408447.671875d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 408447.671875d + "'", double66 == 408447.671875d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 408447.671875d + "'", double67 == 408447.671875d);
    }

    @Test
    public void test11976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11976");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        secondMoment1.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        boolean boolean15 = secondMoment1.equals((java.lang.Object) secondMoment10);
        secondMoment1.increment((double) 5L);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test11977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11977");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        long long17 = variance16.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double29 = variance16.evaluate(doubleArray24, (double) (short) -1);
        double double30 = secondMoment0.evaluate(doubleArray24);
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.increment(5944.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        boolean boolean36 = variance35.isBiasCorrected();
        variance35.increment((double) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        secondMoment39.increment((double) (short) -1);
        secondMoment39.clear();
        double double46 = secondMoment39.getResult();
        secondMoment39.increment(7186.0d);
        secondMoment39.increment((double) 100);
        double double51 = secondMoment39.getResult();
        double double52 = secondMoment39.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment53);
        secondMoment53.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment59);
        long long70 = variance69.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment(1.0d);
        double[] doubleArray77 = new double[] { (-1L), 0, 10L };
        secondMoment71.incrementAll(doubleArray77, 0, 0);
        double double82 = variance69.evaluate(doubleArray77, (double) (short) -1);
        double double83 = secondMoment53.evaluate(doubleArray77);
        double double84 = secondMoment39.evaluate(doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            double double87 = variance35.evaluate(doubleArray77, 10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2.5105698E7d + "'", double51 == 2.5105698E7d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2.5105698E7d + "'", double52 == 2.5105698E7d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 37.0d + "'", double82 == 37.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 74.0d + "'", double83 == 74.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 74.0d + "'", double84 == 74.0d);
    }

    @Test
    public void test11978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11978");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        variance27.incrementAll(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        secondMoment39.increment((double) (short) -1);
        secondMoment39.clear();
        secondMoment39.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        secondMoment49.increment((double) (short) 0);
        double double54 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double double65 = secondMoment49.evaluate(doubleArray61);
        double double66 = secondMoment39.evaluate(doubleArray61);
        double double67 = variance27.evaluate(doubleArray61);
        double double68 = secondMoment11.evaluate(doubleArray61);
        secondMoment11.increment((double) (byte) 0);
        secondMoment11.increment((double) 100L);
        double double73 = secondMoment11.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5d + "'", double54 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 37.0d + "'", double67 == 37.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 7724.8d + "'", double73 == 7724.8d);
    }

    @Test
    public void test11979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11979");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        secondMoment2.increment((double) (-1.0f));
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        long long19 = variance18.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double31 = variance18.evaluate(doubleArray26, (double) (short) -1);
        double double32 = secondMoment2.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        long long34 = secondMoment2.getN();
        secondMoment2.increment(4049.9999999999995d);
        double double37 = secondMoment2.getResult();
        long long38 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        double double42 = secondMoment2.getResult();
        secondMoment2.increment(86.0d);
        double double45 = secondMoment2.getResult();
        java.lang.Class<?> wildcardClass46 = secondMoment2.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 37.0d + "'", double31 == 37.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 74.0d + "'", double32 == 74.0d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 3L + "'", long34 == 3L);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.2283730749999996E7d + "'", double37 == 1.2283730749999996E7d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 4L + "'", long38 == 4L);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.2283730749999996E7d + "'", double42 == 1.2283730749999996E7d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.2973791999999996E7d + "'", double45 == 1.2973791999999996E7d);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test11980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11980");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) 0);
        secondMoment0.clear();
        double double10 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        secondMoment12.increment((double) (byte) 0);
        secondMoment12.clear();
        secondMoment12.increment(272.25d);
        boolean boolean20 = secondMoment0.equals((java.lang.Object) 272.25d);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double23 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test11981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11981");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        secondMoment0.clear();
        double double16 = secondMoment0.getResult();
        secondMoment0.increment((double) 1.0f);
        secondMoment0.increment((-1.0d));
        secondMoment0.clear();
        double double22 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.increment(2046.888888888889d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }

    @Test
    public void test11982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11982");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (short) 10);
        secondMoment0.increment((double) 2L);
        double double7 = secondMoment0.getResult();
        secondMoment0.increment(0.0d);
        double double10 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        secondMoment11.increment((double) (short) -1);
        secondMoment11.clear();
        double double18 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        variance19.setBiasCorrected(false);
        variance19.increment(482.66666666666663d);
        variance19.setBiasCorrected(true);
        variance19.increment(60.666666666666664d);
        long long28 = variance19.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment29);
        secondMoment29.increment((double) (short) -1);
        secondMoment29.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment29);
        variance36.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        secondMoment39.increment((double) (short) 0);
        double double44 = secondMoment39.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        double double50 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double61 = secondMoment45.evaluate(doubleArray57);
        double[] doubleArray62 = new double[] {};
        secondMoment45.incrementAll(doubleArray62);
        secondMoment39.incrementAll(doubleArray62);
        secondMoment39.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        secondMoment39.increment(0.5d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment70);
        long long81 = variance80.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment82 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment82.increment(1.0d);
        double[] doubleArray88 = new double[] { (-1L), 0, 10L };
        secondMoment82.incrementAll(doubleArray88, 0, 0);
        double double93 = variance80.evaluate(doubleArray88, (double) (short) -1);
        double double96 = secondMoment39.evaluate(doubleArray88, (int) (byte) 1, (int) (byte) 1);
        double double97 = variance36.evaluate(doubleArray88);
        variance19.incrementAll(doubleArray88);
        double double99 = secondMoment0.evaluate(doubleArray88);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 482.66666666666663d + "'", double7 == 482.66666666666663d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 644.0d + "'", double10 == 644.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.5d + "'", double44 == 0.5d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 74.0d + "'", double61 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 1L + "'", long81 == 1L);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 37.0d + "'", double93 == 37.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 37.0d + "'", double97 == 37.0d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 74.0d + "'", double99 == 74.0d);
    }

    @Test
    public void test11983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11983");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        variance9.increment(200.0d);
        long long13 = variance9.getN();
        double double14 = variance9.getResult();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test11984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11984");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) 100);
        secondMoment0.increment(100.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    }

    @Test
    public void test11985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11985");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (-1.0f));
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        secondMoment26.increment((double) (short) -1);
        secondMoment26.clear();
        secondMoment26.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment26);
        boolean boolean36 = secondMoment11.equals((java.lang.Object) secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment26);
        boolean boolean38 = variance37.isBiasCorrected();
        variance37.increment(4.321154463792899E13d);
        boolean boolean41 = variance37.isBiasCorrected();
        variance37.clear();
        double double43 = variance37.getResult();
        variance37.increment(5944.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment46);
        secondMoment46.increment((double) (short) -1);
        secondMoment46.clear();
        secondMoment46.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        variance55.incrementAll(doubleArray62);
        variance37.incrementAll(doubleArray62);
        secondMoment1.incrementAll(doubleArray62);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment(8373.42857142857d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 544.5d + "'", double6 == 544.5d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
    }

    @Test
    public void test11986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11986");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double double24 = secondMoment8.evaluate(doubleArray20);
        secondMoment0.incrementAll(doubleArray20, 0, (int) (short) 0);
        long long28 = secondMoment0.getN();
        long long29 = secondMoment0.getN();
        double double30 = secondMoment0.getResult();
        long long31 = secondMoment0.getN();
        secondMoment0.increment((double) (byte) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 74.0d + "'", double24 == 74.0d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
    }

    @Test
    public void test11987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11987");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) 0);
        long long6 = secondMoment0.getN();
        secondMoment0.clear();
        secondMoment0.increment(4050.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
    }

    @Test
    public void test11988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11988");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        double double6 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double[] doubleArray21 = new double[] { 10, (byte) 100 };
        double double22 = secondMoment9.evaluate(doubleArray21);
        double double23 = secondMoment9.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment9);
        long long25 = secondMoment9.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        variance26.increment(10.0d);
        java.lang.Class<?> wildcardClass29 = variance26.getClass();
        boolean boolean30 = secondMoment0.equals((java.lang.Object) variance26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long33 = variance32.getN();
        double double34 = variance32.getResult();
        variance32.increment((double) (short) 100);
        boolean boolean37 = variance32.isBiasCorrected();
        double double38 = variance32.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        secondMoment40.incrementAll(doubleArray46, 0, 0);
        double[] doubleArray52 = new double[] { 10, (byte) 100 };
        double double53 = secondMoment40.evaluate(doubleArray52);
        double double54 = secondMoment40.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment40);
        secondMoment40.increment(24.666666666666668d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        secondMoment61.increment((double) (short) 0);
        double double66 = secondMoment61.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        double[] doubleArray73 = new double[] { (-1L), 0, 10L };
        secondMoment67.incrementAll(doubleArray73, 0, 0);
        double double77 = secondMoment61.evaluate(doubleArray73);
        double[] doubleArray78 = new double[] {};
        secondMoment61.incrementAll(doubleArray78);
        double double80 = secondMoment58.evaluate(doubleArray78);
        secondMoment40.incrementAll(doubleArray78);
        double double83 = variance32.evaluate(doubleArray78, 40.5d);
        double double84 = secondMoment0.evaluate(doubleArray78);
        long long85 = secondMoment0.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4050.0d + "'", double23 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2L + "'", long25 == 2L);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4050.0d + "'", double53 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4050.0d + "'", double54 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.5d + "'", double66 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 74.0d + "'", double77 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 0L + "'", long85 == 0L);
    }

    @Test
    public void test11989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11989");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (-1.0f));
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        long long18 = variance17.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double double30 = variance17.evaluate(doubleArray25, (double) (short) -1);
        double double31 = secondMoment1.evaluate(doubleArray25);
        secondMoment1.increment((double) (-1L));
        secondMoment1.increment(32.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance36.clear();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 74.0d + "'", double31 == 74.0d);
    }

    @Test
    public void test11990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11990");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        secondMoment18.increment((double) (-1.0f));
        secondMoment18.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        long long35 = variance34.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double double47 = variance34.evaluate(doubleArray42, (double) (short) -1);
        double double48 = secondMoment18.evaluate(doubleArray42);
        double double49 = secondMoment1.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        secondMoment1.increment(7200964.18888889d);
        double double55 = secondMoment1.getResult();
        secondMoment1.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 37.0d + "'", double47 == 37.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test11991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11991");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double37 = secondMoment21.evaluate(doubleArray33);
        double[] doubleArray38 = new double[] {};
        secondMoment21.incrementAll(doubleArray38);
        double double42 = variance20.evaluate(doubleArray38, (int) (byte) 0, 0);
        long long43 = variance20.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        secondMoment44.increment((double) (short) 0);
        double double49 = secondMoment44.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double double60 = secondMoment44.evaluate(doubleArray56);
        variance20.incrementAll(doubleArray56);
        long long62 = variance20.getN();
        variance20.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double[] doubleArray80 = new double[] { 10, (byte) 100 };
        double double81 = secondMoment68.evaluate(doubleArray80);
        double double82 = secondMoment65.evaluate(doubleArray80);
        variance20.incrementAll(doubleArray80);
        secondMoment1.incrementAll(doubleArray80);
        long long85 = secondMoment1.getN();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double88 = secondMoment1.getResult();
        secondMoment1.clear();
        double double90 = secondMoment1.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.5d + "'", double49 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 74.0d + "'", double60 == 74.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 3L + "'", long62 == 3L);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 2L + "'", long85 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue(Double.isNaN(double90));
    }

    @Test
    public void test11992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11992");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        double double34 = variance9.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        secondMoment38.increment((double) (short) 0);
        double double43 = secondMoment38.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        double double54 = secondMoment38.evaluate(doubleArray50);
        double[] doubleArray55 = new double[] {};
        secondMoment38.incrementAll(doubleArray55);
        double double57 = secondMoment35.evaluate(doubleArray55);
        variance9.incrementAll(doubleArray55);
        variance9.clear();
        double double60 = variance9.getResult();
        variance9.setBiasCorrected(true);
        double double63 = variance9.getResult();
        variance9.clear();
        variance9.setBiasCorrected(true);
        double double67 = variance9.getResult();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.5d + "'", double43 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 74.0d + "'", double54 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
    }

    @Test
    public void test11993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11993");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        secondMoment1.increment(0.0d);
        double double9 = secondMoment1.getResult();
        double double10 = secondMoment1.getResult();
        double double11 = secondMoment1.getResult();
        secondMoment1.increment(551786.9639506174d);
        secondMoment1.increment(148.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.6666666666666666d + "'", double9 == 0.6666666666666666d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.6666666666666666d + "'", double10 == 0.6666666666666666d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.6666666666666666d + "'", double11 == 0.6666666666666666d);
    }

    @Test
    public void test11994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11994");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double11 = variance10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        secondMoment26.increment((double) (short) 0);
        double double31 = secondMoment26.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        secondMoment32.incrementAll(doubleArray38, 0, 0);
        double double42 = secondMoment26.evaluate(doubleArray38);
        double[] doubleArray43 = new double[] {};
        secondMoment26.incrementAll(doubleArray43);
        double double45 = secondMoment23.evaluate(doubleArray43);
        double double46 = variance22.evaluate(doubleArray43);
        long long47 = variance22.getN();
        variance22.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment50);
        secondMoment50.increment((double) (short) -1);
        secondMoment50.clear();
        secondMoment50.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment50);
        long long60 = variance59.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        secondMoment64.increment((double) (short) 0);
        double double69 = secondMoment64.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        double double80 = secondMoment64.evaluate(doubleArray76);
        double[] doubleArray81 = new double[] {};
        secondMoment64.incrementAll(doubleArray81);
        double double83 = secondMoment61.evaluate(doubleArray81);
        double double84 = variance59.evaluate(doubleArray81);
        double double85 = variance22.evaluate(doubleArray81);
        double double86 = variance10.evaluate(doubleArray81);
        long long87 = variance10.getN();
        variance10.increment((double) (byte) 10);
        double double90 = variance10.getResult();
        variance10.increment(12207.5d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5d + "'", double31 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 74.0d + "'", double42 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.5d + "'", double69 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 74.0d + "'", double80 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 1L + "'", long87 == 1L);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
    }

    @Test
    public void test11995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11995");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance6.increment(59187.95d);
        variance6.increment(3349744.0d);
        double double11 = variance6.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test11996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11996");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) 0);
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double13 = variance12.getResult();
        variance12.increment(77.2d);
        variance12.clear();
        boolean boolean17 = variance12.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        long long24 = secondMoment19.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment19);
        variance25.increment(29180.75d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        long long33 = secondMoment28.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        long long44 = secondMoment34.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        secondMoment34.incrementAll(doubleArray51, 0, (int) (short) 1);
        secondMoment28.incrementAll(doubleArray51, (int) (byte) 0, (int) (byte) 1);
        secondMoment28.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment((double) ' ');
        secondMoment62.increment((double) '4');
        secondMoment62.increment((double) 0.0f);
        long long69 = secondMoment62.getN();
        long long70 = secondMoment62.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long73 = variance72.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        secondMoment74.increment((double) (short) 0);
        double double79 = secondMoment74.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment80.increment(1.0d);
        double[] doubleArray86 = new double[] { (-1L), 0, 10L };
        secondMoment80.incrementAll(doubleArray86, 0, 0);
        double double90 = secondMoment74.evaluate(doubleArray86);
        variance72.incrementAll(doubleArray86);
        double double92 = secondMoment62.evaluate(doubleArray86);
        double double93 = secondMoment28.evaluate(doubleArray86);
        double double95 = variance25.evaluate(doubleArray86, 1874.75d);
        // The following exception was thrown during execution in test generation
        try {
            double double98 = variance12.evaluate(doubleArray86, 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 2L + "'", long33 == 2L);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 3L + "'", long69 == 3L);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 3L + "'", long70 == 3L);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.5d + "'", double79 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 74.0d + "'", double90 == 74.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 74.0d + "'", double92 == 74.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 74.0d + "'", double93 == 74.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 24.666666666666668d + "'", double95 == 24.666666666666668d);
    }

    @Test
    public void test11997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11997");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double4 = variance3.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment5);
        secondMoment5.increment((double) (short) -1);
        secondMoment5.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment5);
        variance12.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        secondMoment15.increment((double) (short) 0);
        double double20 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double37 = secondMoment21.evaluate(doubleArray33);
        double[] doubleArray38 = new double[] {};
        secondMoment21.incrementAll(doubleArray38);
        secondMoment15.incrementAll(doubleArray38);
        secondMoment15.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment(0.5d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment46);
        long long57 = variance56.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        secondMoment58.incrementAll(doubleArray64, 0, 0);
        double double69 = variance56.evaluate(doubleArray64, (double) (short) -1);
        double double72 = secondMoment15.evaluate(doubleArray64, (int) (byte) 1, (int) (byte) 1);
        double double73 = variance12.evaluate(doubleArray64);
        variance3.incrementAll(doubleArray64);
        long long75 = variance3.getN();
        variance3.setBiasCorrected(true);
        double double78 = variance3.getResult();
        variance3.increment(7.864508752001081E13d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5d + "'", double20 == 0.5d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1L + "'", long57 == 1L);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 37.0d + "'", double69 == 37.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 37.0d + "'", double73 == 37.0d);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test11998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11998");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        secondMoment19.increment((double) (short) -1);
        secondMoment19.clear();
        secondMoment19.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        secondMoment29.increment((double) (short) 0);
        double double34 = secondMoment29.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double double45 = secondMoment29.evaluate(doubleArray41);
        double double46 = secondMoment19.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double[] doubleArray59 = new double[] { 10, (byte) 100 };
        double double60 = secondMoment47.evaluate(doubleArray59);
        double double61 = secondMoment47.getResult();
        secondMoment47.increment((double) (short) -1);
        double[] doubleArray65 = new double[] { (short) 1 };
        secondMoment47.incrementAll(doubleArray65);
        double double67 = secondMoment19.evaluate(doubleArray65);
        double double68 = secondMoment2.evaluate(doubleArray65);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        variance70.setBiasCorrected(false);
        variance70.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5d + "'", double34 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 74.0d + "'", double46 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    }

    @Test
    public void test11999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11999");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        double double16 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        boolean boolean18 = variance17.isBiasCorrected();
        variance17.clear();
        variance17.increment(5.49755813888E11d);
        variance17.setBiasCorrected(true);
        double double24 = variance17.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        secondMoment26.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        secondMoment26.clear();
        secondMoment26.clear();
        double double34 = secondMoment26.getResult();
        long long35 = secondMoment26.getN();
        double double36 = secondMoment26.getResult();
        secondMoment26.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        secondMoment38.increment((double) (short) 0);
        double double43 = secondMoment38.getResult();
        long long44 = secondMoment38.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment45);
        secondMoment45.increment((double) (short) -1);
        secondMoment45.clear();
        double double52 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        secondMoment53.increment((double) (short) 0);
        double double58 = secondMoment53.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        double double69 = secondMoment53.evaluate(doubleArray65);
        secondMoment45.incrementAll(doubleArray65, 0, (int) (short) 0);
        secondMoment38.incrementAll(doubleArray65);
        double double74 = secondMoment26.evaluate(doubleArray65);
        double double75 = variance17.evaluate(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.5d + "'", double43 == 0.5d);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 2L + "'", long44 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.5d + "'", double58 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 74.0d + "'", double69 == 74.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 74.0d + "'", double74 == 74.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 37.0d + "'", double75 == 37.0d);
    }

    @Test
    public void test12000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test12000");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        variance9.incrementAll(doubleArray16);
        variance9.clear();
        variance9.increment((double) 10.0f);
        variance9.increment(2025.0d);
        variance9.increment((double) 4L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment28);
        secondMoment28.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        secondMoment34.increment((double) (short) 0);
        long long39 = secondMoment34.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        secondMoment40.incrementAll(doubleArray46, 0, 0);
        long long50 = secondMoment40.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        secondMoment40.incrementAll(doubleArray57, 0, (int) (short) 1);
        secondMoment34.incrementAll(doubleArray57, (int) (byte) 0, (int) (byte) 1);
        secondMoment28.incrementAll(doubleArray57);
        secondMoment28.increment((double) 1L);
        double double70 = secondMoment28.getResult();
        boolean boolean71 = variance9.equals((java.lang.Object) secondMoment28);
        long long72 = secondMoment28.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 2L + "'", long39 == 2L);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 846.8333333333334d + "'", double70 == 846.8333333333334d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 6L + "'", long72 == 6L);
    }
}

