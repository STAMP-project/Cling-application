import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test00801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00801");
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList1 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "");
        com.google.common.collect.UnmodifiableIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = strComparableList1.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = strComparableList1.iterator();
        boolean boolean4 = strComparableList1.isEmpty();
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = strComparableList1.retainAll(strComparableCollection5);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparableList1);
        org.junit.Assert.assertNotNull(strComparableItor2);
        org.junit.Assert.assertNotNull(strComparableItor3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00802");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean3 = node2.isGetProp();
        boolean boolean4 = node2.isNumber();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int16 = node15.getType();
        boolean boolean17 = node15.isBlock();
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) (short) 10, node2, node9, node15, (int) (byte) 10, 44);
        com.google.javascript.rhino.Node node21 = node2.getNext();
        boolean boolean22 = com.google.javascript.jscomp.NodeUtil.isSymmetricOperation(node21);
        com.google.javascript.rhino.Node node23 = node21.cloneNode();
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean29 = node28.isDefaultCase();
        boolean boolean30 = node28.isTry();
        com.google.javascript.rhino.Node node31 = node28.getLastSibling();
        boolean boolean32 = node28.isBlock();
        boolean boolean33 = node21.isEquivalentTo(node28);
        int int34 = node21.getSourceOffset();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 45 + "'", int16 == 45);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test00803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00803");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean4 = node3.isGetProp();
        boolean boolean5 = node3.isNumber();
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder11 = node10.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int17 = node16.getType();
        boolean boolean18 = node16.isBlock();
        com.google.javascript.rhino.Node node21 = new com.google.javascript.rhino.Node((int) (short) 10, node3, node10, node16, (int) (byte) 10, 44);
        com.google.javascript.rhino.Node node22 = node3.detachFromParent();
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node30 = node27.useSourceInfoIfMissingFromForTree(node29);
        com.google.javascript.rhino.Node node35 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean36 = node35.isDefaultCase();
        node35.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId39 = node35.getInputId();
        node35.detachChildren();
        com.google.javascript.rhino.Node node41 = node29.copyInformationFrom(node35);
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node49 = node46.useSourceInfoIfMissingFromForTree(node48);
        node49.setLineno(10);
        com.google.javascript.rhino.Node node52 = node35.copyInformationFrom(node49);
        com.google.javascript.rhino.Node node55 = new com.google.javascript.rhino.Node((-1), node22, node35, (int) ' ', 1);
        com.google.javascript.rhino.Node node60 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node62 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node63 = node60.useSourceInfoIfMissingFromForTree(node62);
        com.google.javascript.rhino.Node node70 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder71 = node70.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node76 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean77 = node76.isDefaultCase();
        node76.setVarArgs(true);
        com.google.javascript.rhino.Node node84 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node85 = new com.google.javascript.rhino.Node((int) 'a', node70, node76, node84);
        boolean boolean86 = node85.isGetterDef();
        com.google.javascript.rhino.Node node88 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node91 = new com.google.javascript.rhino.Node(45, node85, node88, 44, 16);
        boolean boolean92 = node85.isOptionalArg();
        com.google.javascript.rhino.Node node93 = node85.getNext();
        com.google.javascript.jscomp.CodingConvention.Bind bind94 = new com.google.javascript.jscomp.CodingConvention.Bind(node55, node63, node85);
        boolean boolean95 = node55.isScript();
        boolean boolean96 = node55.isWhile();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder11);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 45 + "'", int17 == 45);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(inputId39);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder71);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(node93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test00804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00804");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        boolean boolean69 = parameterizedType67.isConstructor();
        boolean boolean70 = parameterizedType67.isEmptyType();
        boolean boolean72 = parameterizedType67.isPropertyTypeDeclared("");
        com.google.javascript.rhino.jstype.JSType jSType74 = parameterizedType67.findPropertyType("[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        java.lang.String str75 = parameterizedType67.getDisplayName();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean76 = parameterizedType67.hasAnyTemplateInternal();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(jSType74);
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test00805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00805");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable10 = jSTypeRegistry8.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean11 = jSTypeRegistry8.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType12 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray13 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList14 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14, jSTypeArray13);
        com.google.javascript.rhino.jstype.FunctionType functionType16 = jSTypeRegistry8.createFunctionTypeWithVarArgs(jSType12, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList14);
        boolean boolean17 = functionType16.canBeCalled();
        boolean boolean18 = functionType16.hasAnyTemplateInternal();
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.FunctionType functionType20 = jSTypeRegistry2.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType16, jSTypeArray19);
        java.util.List<com.google.javascript.rhino.jstype.FunctionType> functionTypeList21 = functionType20.getSubTypes();
        java.util.List<com.google.javascript.rhino.jstype.FunctionType> functionTypeList22 = functionType20.getSubTypes();
        com.google.common.collect.ImmutableList<java.lang.String> strList23 = functionType20.getTemplateTypeNames();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(functionType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertNotNull(functionType20);
        org.junit.Assert.assertNull(functionTypeList21);
        org.junit.Assert.assertNull(functionTypeList22);
        org.junit.Assert.assertNotNull(strList23);
    }

    @Test
    public void test00806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00806");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        jSTypeRegistry2.forwardDeclareType("{1063101054}");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative7 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.FunctionType functionType8 = jSTypeRegistry2.getNativeFunctionType(jSTypeNative7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
    }

    @Test
    public void test00807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00807");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable11 = jSTypeRegistry9.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean12 = jSTypeRegistry9.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable17 = jSTypeRegistry15.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean18 = jSTypeRegistry15.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable23 = jSTypeRegistry21.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean24 = jSTypeRegistry21.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter25 = jSTypeRegistry21.getErrorReporter();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.jstype.JSTypeRegistry> jSTypeRegistryList26 = com.google.common.collect.ImmutableList.of(jSTypeRegistry2, jSTypeRegistry9, jSTypeRegistry15, jSTypeRegistry21);
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable31 = jSTypeRegistry29.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean32 = jSTypeRegistry29.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType33 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList35 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList35, jSTypeArray34);
        com.google.javascript.rhino.jstype.FunctionType functionType37 = jSTypeRegistry29.createFunctionTypeWithVarArgs(jSType33, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList35);
        boolean boolean38 = functionType37.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable43 = jSTypeRegistry41.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean44 = jSTypeRegistry41.shouldTolerateUndefinedValues();
        boolean boolean45 = jSTypeRegistry41.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node51 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node53 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node54 = node51.useSourceInfoIfMissingFromForTree(node53);
        boolean boolean55 = node53.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter56 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry58 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter56, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable60 = jSTypeRegistry58.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean61 = jSTypeRegistry58.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType62 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray63 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList64 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList64, jSTypeArray63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = jSTypeRegistry58.createFunctionTypeWithVarArgs(jSType62, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList64);
        boolean boolean67 = functionType66.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType68 = jSTypeRegistry41.createEnumType("false", node53, (com.google.javascript.rhino.jstype.JSType) functionType66);
        java.util.Set<java.lang.String> strSet69 = functionType66.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair70 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType37, (com.google.javascript.rhino.jstype.JSType) functionType66);
        com.google.javascript.rhino.Node node71 = functionType37.getSource();
        com.google.javascript.rhino.jstype.JSType jSType73 = functionType37.getPropertyType("hi!");
        boolean boolean75 = functionType37.isPropertyTypeDeclared("{1584882754}");
        boolean boolean76 = functionType37.isConstructor();
        com.google.javascript.rhino.Node node81 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node83 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node84 = node81.useSourceInfoIfMissingFromForTree(node83);
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable85 = node83.getAncestors();
        boolean boolean86 = node83.isOnlyModifiesThisCall();
        com.google.javascript.rhino.jstype.FunctionType functionType87 = jSTypeRegistry2.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType37, node83);
        com.google.javascript.rhino.jstype.JSType jSType88 = functionType87.getTypeOfThis();
        java.util.Set<java.lang.String> strSet89 = functionType87.getOwnPropertyNames();
        boolean boolean91 = functionType87.hasProperty("{1579917861}");
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(errorReporter25);
        org.junit.Assert.assertNotNull(jSTypeRegistryList26);
        org.junit.Assert.assertNotNull(jSTypeIterable31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(functionType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(jSTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(functionType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(enumType68);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertNotNull(jSType73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertNotNull(ancestorIterable85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(functionType87);
        org.junit.Assert.assertNotNull(jSType88);
        org.junit.Assert.assertNotNull(strSet89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test00808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00808");
        com.google.javascript.rhino.Node[] nodeArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node2 = new com.google.javascript.rhino.Node(37, nodeArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00809");
        int int1 = com.google.javascript.jscomp.NodeUtil.getInverseOperator(32);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
    }

    @Test
    public void test00810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00810");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        boolean boolean69 = parameterizedType67.isConstructor();
        boolean boolean70 = parameterizedType67.isEmptyType();
        boolean boolean72 = parameterizedType67.isPropertyTypeDeclared("");
        com.google.javascript.rhino.jstype.FunctionType functionType73 = parameterizedType67.getConstructor();
        boolean boolean74 = parameterizedType67.isInstanceType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo76 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str77 = jSDocInfo76.getDescription();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression78 = jSDocInfo76.getType();
        parameterizedType67.setPropertyJSDocInfo("NUMBER 100.0", jSDocInfo76);
        boolean boolean80 = parameterizedType67.isOrdinaryFunction();
        boolean boolean81 = parameterizedType67.isNoType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(functionType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(jSTypeExpression78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test00811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00811");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int5 = node4.getType();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder12 = node11.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean18 = node17.isDefaultCase();
        node17.setVarArgs(true);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = new com.google.javascript.rhino.Node((int) 'a', node11, node17, node25);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile27 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node25);
        com.google.javascript.rhino.Node node28 = node4.useSourceInfoFromForTree(node25);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile29 = node25.getStaticSourceFile();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable34 = jSTypeRegistry32.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean35 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType36 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.jstype.FunctionType functionType40 = jSTypeRegistry32.createFunctionTypeWithVarArgs(jSType36, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        boolean boolean41 = functionType40.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable46 = jSTypeRegistry44.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean47 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        boolean boolean48 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node57 = node54.useSourceInfoIfMissingFromForTree(node56);
        boolean boolean58 = node56.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable63 = jSTypeRegistry61.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean64 = jSTypeRegistry61.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType65 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry61.createFunctionTypeWithVarArgs(jSType65, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        boolean boolean70 = functionType69.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType71 = jSTypeRegistry44.createEnumType("false", node56, (com.google.javascript.rhino.jstype.JSType) functionType69);
        java.util.Set<java.lang.String> strSet72 = functionType69.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair73 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType40, (com.google.javascript.rhino.jstype.JSType) functionType69);
        com.google.javascript.rhino.Node node74 = functionType40.getSource();
        node25.setJSType((com.google.javascript.rhino.jstype.JSType) functionType40);
        com.google.javascript.rhino.jstype.ObjectType objectType76 = functionType40.getPrototype();
        java.lang.String str77 = functionType40.toString();
        com.google.javascript.rhino.jstype.ObjectType objectType78 = com.google.javascript.rhino.jstype.ObjectType.cast((com.google.javascript.rhino.jstype.JSType) functionType40);
        com.google.javascript.rhino.JSDocInfo jSDocInfo79 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str80 = jSDocInfo79.getDescription();
        jSDocInfo79.setLicense("");
        boolean boolean83 = jSDocInfo79.isDeprecated();
        boolean boolean84 = jSDocInfo79.hasReturnType();
        boolean boolean85 = jSDocInfo79.isConstructor();
        objectType78.setJSDocInfo(jSDocInfo79);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression87 = jSDocInfo79.getReturnType();
        boolean boolean88 = jSDocInfo79.isExport();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 45 + "'", int5 == 45);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder12);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(staticSourceFile27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(staticSourceFile29);
        org.junit.Assert.assertNotNull(jSTypeIterable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(functionType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(enumType71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNotNull(objectType76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "function (): ?" + "'", str77, "function (): ?");
        org.junit.Assert.assertNotNull(objectType78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(jSTypeExpression87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test00812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00812");
        java.lang.String[] strArray1 = new java.lang.String[] { "{proxy:function (): {882920012}}" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList5 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList5);
        boolean boolean8 = strComparableList5.equals((java.lang.Object) "{1667996542}");
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList27 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray26);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList46 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray45);
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList65 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray64);
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList84 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray83);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>>> strComparableListList85 = com.google.common.collect.ImmutableList.of(strComparableList27, strComparableList46, strComparableList65, strComparableList84);
        com.google.common.collect.UnmodifiableIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = strComparableList84.iterator();
        java.lang.Object[] objArray87 = strComparableList84.toArray();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean88 = strComparableList5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList84);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strComparableList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strComparableList27);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strComparableList46);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strComparableList65);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strComparableList84);
        org.junit.Assert.assertNotNull(strComparableListList85);
        org.junit.Assert.assertNotNull(strComparableItor86);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
    }

    @Test
    public void test00813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00813");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, false);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable4 = jSTypeRegistry2.getEachReferenceTypeWithProperty("{2044072356}");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable6 = jSTypeRegistry2.getTypesWithProperty("{523756211}");
        jSTypeRegistry2.incrementGeneration();
        org.junit.Assert.assertNotNull(objectTypeIterable4);
        org.junit.Assert.assertNotNull(jSTypeIterable6);
    }

    @Test
    public void test00814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00814");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        com.google.javascript.rhino.ErrorReporter errorReporter11 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable15 = jSTypeRegistry13.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean16 = jSTypeRegistry13.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable33 = jSTypeRegistry31.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean34 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        boolean boolean35 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node44 = node41.useSourceInfoIfMissingFromForTree(node43);
        boolean boolean45 = node43.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry48 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable50 = jSTypeRegistry48.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean51 = jSTypeRegistry48.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType52 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.jstype.FunctionType functionType56 = jSTypeRegistry48.createFunctionTypeWithVarArgs(jSType52, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = functionType56.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType58 = jSTypeRegistry31.createEnumType("false", node43, (com.google.javascript.rhino.jstype.JSType) functionType56);
        java.util.Set<java.lang.String> strSet59 = functionType56.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair60 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType27, (com.google.javascript.rhino.jstype.JSType) functionType56);
        com.google.javascript.rhino.jstype.JSType jSType61 = functionType56.autoboxesTo();
        com.google.javascript.rhino.ErrorReporter errorReporter62 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter62, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable66 = jSTypeRegistry64.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean67 = jSTypeRegistry64.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType68 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList70 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70, jSTypeArray69);
        com.google.javascript.rhino.jstype.FunctionType functionType72 = jSTypeRegistry64.createFunctionTypeWithVarArgs(jSType68, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        com.google.javascript.rhino.jstype.FunctionType functionType73 = jSTypeRegistry13.createFunctionTypeWithVarArgs(jSType61, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        com.google.javascript.rhino.Node node74 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        node74.putIntProp((int) (short) 10, 53);
        boolean boolean78 = node74.hasChildren();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertNotNull(jSTypeIterable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(functionType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(enumType58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNull(jSType61);
        org.junit.Assert.assertNotNull(jSTypeIterable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(functionType72);
        org.junit.Assert.assertNotNull(functionType73);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test00815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00815");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean5 = node4.isDefaultCase();
        boolean boolean6 = node4.isTry();
        com.google.javascript.rhino.Node node7 = node4.getLastSibling();
        int int8 = node4.getChildCount();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test00816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00816");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.matchesStringContext();
        java.lang.String str33 = enumType29.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType34 = enumType29.getConstructor();
        com.google.javascript.rhino.JSDocInfo jSDocInfo35 = enumType29.getJSDocInfo();
        enumType29.clearCachedValues();
        com.google.javascript.rhino.jstype.ObjectType objectType37 = enumType29.getTypeOfThis();
        java.lang.Iterable iterable38 = enumType29.getCtorExtendedInterfaces();
        boolean boolean39 = enumType29.hasReferenceName();
        java.util.Set<java.lang.String> strSet40 = enumType29.getElements();
        java.util.Iterator<java.lang.String> strItor41 = strSet40.iterator();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{515056645}" + "'", str33, "{515056645}");
        org.junit.Assert.assertNull(functionType34);
        org.junit.Assert.assertNull(jSDocInfo35);
        org.junit.Assert.assertNull(objectType37);
        org.junit.Assert.assertNotNull(iterable38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(strItor41);
    }

    @Test
    public void test00817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00817");
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType1 = com.google.javascript.jscomp.CodingConvention.SubclassType.INHERITS;
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder7 = node6.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node8 = node6.getLastSibling();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable9 = node6.siblings();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean13 = node12.isGetProp();
        boolean boolean14 = node12.isNumber();
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder20 = node19.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int26 = node25.getType();
        boolean boolean27 = node25.isBlock();
        com.google.javascript.rhino.Node node30 = new com.google.javascript.rhino.Node((int) (short) 10, node12, node19, node25, (int) (byte) 10, 44);
        node19.setLength(52);
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship33 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType1, node6, node19);
        boolean boolean34 = node19.isArrayLit();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node((int) (short) 100, node19, 15, 42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: new child has existing parent");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + subclassType1 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.INHERITS + "'", subclassType1.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.INHERITS));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder7);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(nodeIterable9);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder20);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 45 + "'", int26 == 45);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test00818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00818");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean13 = node12.isDefaultCase();
        node12.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId16 = node12.getInputId();
        node12.detachChildren();
        com.google.javascript.rhino.Node node18 = node6.copyInformationFrom(node12);
        node18.setCharno(54);
        boolean boolean21 = node18.isCase();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inputId16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test00819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00819");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean3 = node2.isGetProp();
        boolean boolean4 = node2.isNumber();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int16 = node15.getType();
        boolean boolean17 = node15.isBlock();
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) (short) 10, node2, node9, node15, (int) (byte) 10, 44);
        com.google.javascript.rhino.Node node21 = node2.detachFromParent();
        node21.removeProp((int) (short) 0);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 45 + "'", int16 == 45);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node21);
    }

    @Test
    public void test00820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00820");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isBooleanObjectType();
        com.google.javascript.rhino.jstype.JSType jSType69 = parameterizedType67.autobox();
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry72 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable74 = jSTypeRegistry72.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean75 = jSTypeRegistry72.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType76 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray77 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList78 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78, jSTypeArray77);
        com.google.javascript.rhino.jstype.FunctionType functionType80 = jSTypeRegistry72.createFunctionTypeWithVarArgs(jSType76, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        boolean boolean81 = jSType69.canTestForEqualityWith((com.google.javascript.rhino.jstype.JSType) functionType80);
        com.google.javascript.rhino.Node node82 = functionType80.getSource();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable83 = functionType80.getOwnImplementedInterfaces();
        boolean boolean84 = functionType80.isObject();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(jSType69);
        org.junit.Assert.assertNotNull(jSTypeIterable74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(jSTypeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(functionType80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(node82);
        org.junit.Assert.assertNotNull(objectTypeIterable83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test00821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00821");
        boolean boolean1 = com.google.javascript.jscomp.NodeUtil.isValidSimpleName("({633999597})");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test00822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00822");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean13 = node12.isDefaultCase();
        node12.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId16 = node12.getInputId();
        node12.detachChildren();
        com.google.javascript.rhino.Node node18 = node6.copyInformationFrom(node12);
        int int19 = node12.getType();
        java.lang.String[] strArray25 = new java.lang.String[] { "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "Unknown class name", "Unknown class name", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        node12.setDirectives((java.util.Set<java.lang.String>) strSet26);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList47 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray46);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator48 = strComparableList47.spliterator();
        boolean boolean49 = strSet26.equals((java.lang.Object) strComparableList47);
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder56 = node55.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node61 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean62 = node61.isDefaultCase();
        node61.setVarArgs(true);
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node70 = new com.google.javascript.rhino.Node((int) 'a', node55, node61, node69);
        boolean boolean71 = node70.isGetterDef();
        boolean boolean72 = node70.isQuotedString();
        node70.setSourceEncodedPosition(4);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression76 = new com.google.javascript.rhino.JSTypeExpression(node70, "Unknown class name");
        com.google.javascript.rhino.Node node77 = jSTypeExpression76.getRoot();
        int int78 = strComparableList47.lastIndexOf((java.lang.Object) jSTypeExpression76);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList80 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean83 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean84 = strComparableList47.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList80);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable86 = strComparableList47.remove(2);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inputId16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 45 + "'", int19 == 45);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strComparableList47);
        org.junit.Assert.assertNotNull(strComparableSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder56);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test00823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00823");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("Unknown class name", jSTypeNative1);
        com.google.javascript.rhino.Node node8 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node11 = node8.useSourceInfoIfMissingFromForTree(node10);
        node11.setLineno(10);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder20 = node19.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean26 = node25.isDefaultCase();
        node25.setVarArgs(true);
        com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node34 = new com.google.javascript.rhino.Node((int) 'a', node19, node25, node33);
        boolean boolean35 = node34.isGetterDef();
        boolean boolean36 = node34.isQuotedString();
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int42 = node41.getType();
        node41.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node49 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int50 = node49.getType();
        node49.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node53 = new com.google.javascript.rhino.Node(40, node11, node34, node41, node49);
        com.google.javascript.rhino.Node node58 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node60 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node61 = node58.useSourceInfoIfMissingFromForTree(node60);
        node61.setIsSyntheticBlock(true);
        java.lang.String str64 = node61.getString();
        boolean boolean65 = node53.hasChild(node61);
        com.google.javascript.rhino.ErrorReporter errorReporter66 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry68 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter66, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node70 = jSTypeRegistry68.createParameters(jSTypeArray69);
        com.google.javascript.rhino.jstype.JSType jSType71 = assertionFunctionSpec2.getAssertedType(node53, jSTypeRegistry68);
        com.google.javascript.rhino.jstype.ObjectType objectType72 = jSTypeRegistry68.createAnonymousObjectType();
        jSTypeRegistry68.clearTemplateTypeNames();
        jSTypeRegistry68.clearNamedTypes();
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder20);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 45 + "'", int42 == 45);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 45 + "'", int50 == 45);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNull(jSType71);
        org.junit.Assert.assertNotNull(objectType72);
    }

    @Test
    public void test00824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00824");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int5 = node4.getType();
        boolean boolean6 = node4.isDebugger();
        boolean boolean7 = node4.isString();
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder14 = node13.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean20 = node19.isDefaultCase();
        node19.setVarArgs(true);
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node28 = new com.google.javascript.rhino.Node((int) 'a', node13, node19, node27);
        com.google.javascript.rhino.InputId inputId29 = node13.getInputId();
        com.google.javascript.rhino.Node node30 = node4.useSourceInfoFrom(node13);
        boolean boolean31 = node30.isInstanceOf();
        node30.setVarArgs(true);
        boolean boolean34 = node30.isCall();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 45 + "'", int5 == 45);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder14);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNull(inputId29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test00825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00825");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable10 = jSTypeRegistry8.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean11 = jSTypeRegistry8.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType12 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray13 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList14 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14, jSTypeArray13);
        com.google.javascript.rhino.jstype.FunctionType functionType16 = jSTypeRegistry8.createFunctionTypeWithVarArgs(jSType12, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList14);
        boolean boolean17 = functionType16.canBeCalled();
        boolean boolean18 = functionType16.hasAnyTemplateInternal();
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.FunctionType functionType20 = jSTypeRegistry2.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType16, jSTypeArray19);
        com.google.javascript.rhino.jstype.FunctionType functionType21 = functionType16.getOwnerFunction();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(functionType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertNotNull(functionType20);
        org.junit.Assert.assertNull(functionType21);
    }

    @Test
    public void test00826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00826");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("", jSTypeNative1);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int8 = node7.getType();
        boolean boolean9 = node7.isBlock();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node7.getJsDocBuilderForNode();
        node7.setQuotedString();
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node16 = jSTypeRegistry14.createParameters(jSTypeArray15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = jSTypeRegistry14.getErrorReporter();
        com.google.javascript.rhino.ErrorReporter errorReporter18 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter18, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable22 = jSTypeRegistry20.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry25 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable27 = jSTypeRegistry25.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean28 = jSTypeRegistry25.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType29 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.jstype.FunctionType functionType33 = jSTypeRegistry25.createFunctionTypeWithVarArgs(jSType29, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        boolean boolean34 = functionType33.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable39 = jSTypeRegistry37.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean40 = jSTypeRegistry37.shouldTolerateUndefinedValues();
        boolean boolean41 = jSTypeRegistry37.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node47 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node49 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node50 = node47.useSourceInfoIfMissingFromForTree(node49);
        boolean boolean51 = node49.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry54 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable56 = jSTypeRegistry54.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean57 = jSTypeRegistry54.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType58 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray59 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList60 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList60, jSTypeArray59);
        com.google.javascript.rhino.jstype.FunctionType functionType62 = jSTypeRegistry54.createFunctionTypeWithVarArgs(jSType58, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList60);
        boolean boolean63 = functionType62.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType64 = jSTypeRegistry37.createEnumType("false", node49, (com.google.javascript.rhino.jstype.JSType) functionType62);
        java.util.Set<java.lang.String> strSet65 = functionType62.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair66 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType33, (com.google.javascript.rhino.jstype.JSType) functionType62);
        com.google.javascript.rhino.Node node67 = functionType33.getSource();
        com.google.javascript.rhino.jstype.JSType jSType69 = functionType33.getPropertyType("hi!");
        com.google.javascript.rhino.ErrorReporter errorReporter71 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter71, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray74 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node75 = jSTypeRegistry73.createParameters(jSTypeArray74);
        com.google.javascript.rhino.jstype.FunctionType functionType76 = jSTypeRegistry20.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType33, true, jSTypeArray74);
        com.google.javascript.rhino.Node node77 = jSTypeRegistry14.createParameters(jSTypeArray74);
        com.google.javascript.rhino.jstype.JSType jSType78 = assertionFunctionSpec2.getAssertedType(node7, jSTypeRegistry14);
        com.google.javascript.rhino.Node node83 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int84 = node83.getType();
        node83.setSourceEncodedPosition((int) (byte) 0);
        boolean boolean87 = node83.isAssignAdd();
        java.lang.String str88 = node7.checkTreeEquals(node83);
        boolean boolean89 = com.google.javascript.jscomp.NodeUtil.isRelationalOperation(node83);
        java.lang.Object obj91 = node83.getProp(4);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 45 + "'", int8 == 45);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNull(errorReporter17);
        org.junit.Assert.assertNotNull(jSTypeIterable22);
        org.junit.Assert.assertNotNull(jSTypeIterable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(functionType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(jSTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(functionType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(enumType64);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNotNull(jSType69);
        org.junit.Assert.assertNotNull(jSTypeArray74);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(functionType76);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNull(jSType78);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 45 + "'", int84 == 45);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test00827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00827");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType11 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        com.google.javascript.rhino.jstype.FunctionType functionType15 = jSTypeRegistry7.createFunctionTypeWithVarArgs(jSType11, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        boolean boolean16 = functionType15.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        boolean boolean23 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node32 = node29.useSourceInfoIfMissingFromForTree(node31);
        boolean boolean33 = node31.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter34 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter34, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable38 = jSTypeRegistry36.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean39 = jSTypeRegistry36.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType40 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.jstype.FunctionType functionType44 = jSTypeRegistry36.createFunctionTypeWithVarArgs(jSType40, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        boolean boolean45 = functionType44.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType46 = jSTypeRegistry19.createEnumType("false", node31, (com.google.javascript.rhino.jstype.JSType) functionType44);
        java.util.Set<java.lang.String> strSet47 = functionType44.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair48 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType15, (com.google.javascript.rhino.jstype.JSType) functionType44);
        com.google.javascript.rhino.Node node49 = functionType15.getSource();
        com.google.javascript.rhino.jstype.JSType jSType51 = functionType15.getPropertyType("hi!");
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node57 = jSTypeRegistry55.createParameters(jSTypeArray56);
        com.google.javascript.rhino.jstype.FunctionType functionType58 = jSTypeRegistry2.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType15, true, jSTypeArray56);
        boolean boolean59 = functionType15.isEnumType();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(functionType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(functionType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(enumType46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(jSType51);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(functionType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test00828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00828");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable16 = jSTypeRegistry14.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean17 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        boolean boolean18 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node27 = node24.useSourceInfoIfMissingFromForTree(node26);
        boolean boolean28 = node26.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable33 = jSTypeRegistry31.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean34 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType35 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.jstype.FunctionType functionType39 = jSTypeRegistry31.createFunctionTypeWithVarArgs(jSType35, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean40 = functionType39.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType41 = jSTypeRegistry14.createEnumType("false", node26, (com.google.javascript.rhino.jstype.JSType) functionType39);
        java.util.Set<java.lang.String> strSet42 = functionType39.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair43 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType10, (com.google.javascript.rhino.jstype.JSType) functionType39);
        boolean boolean45 = functionType10.hasOwnProperty("{1571838970}");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.ObjectType objectType46 = functionType10.getInstanceType();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(functionType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(enumType41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test00829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00829");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean10 = node9.isFalse();
        boolean boolean11 = node6.hasChild(node9);
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean17 = node16.isDefaultCase();
        node16.setVarArgs(true);
        node16.setVarArgs(false);
        boolean boolean22 = node16.isDebugger();
        boolean boolean23 = node16.isNoSideEffectsCall();
        com.google.javascript.rhino.InputId inputId25 = new com.google.javascript.rhino.InputId("hi!");
        java.lang.String str26 = inputId25.toString();
        node16.setInputId(inputId25);
        node6.setInputId(inputId25);
        com.google.javascript.rhino.Node node29 = com.google.javascript.jscomp.NodeUtil.newExpr(node6);
        boolean boolean30 = node6.isLabel();
        boolean boolean31 = node6.isAssign();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "InputId: hi!" + "'", str26, "InputId: hi!");
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test00830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00830");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int5 = node4.getType();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder12 = node11.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean18 = node17.isDefaultCase();
        node17.setVarArgs(true);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = new com.google.javascript.rhino.Node((int) 'a', node11, node17, node25);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile27 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node25);
        com.google.javascript.rhino.Node node28 = node4.useSourceInfoFromForTree(node25);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile29 = node25.getStaticSourceFile();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable34 = jSTypeRegistry32.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean35 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType36 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.jstype.FunctionType functionType40 = jSTypeRegistry32.createFunctionTypeWithVarArgs(jSType36, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        boolean boolean41 = functionType40.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable46 = jSTypeRegistry44.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean47 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        boolean boolean48 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node57 = node54.useSourceInfoIfMissingFromForTree(node56);
        boolean boolean58 = node56.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable63 = jSTypeRegistry61.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean64 = jSTypeRegistry61.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType65 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry61.createFunctionTypeWithVarArgs(jSType65, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        boolean boolean70 = functionType69.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType71 = jSTypeRegistry44.createEnumType("false", node56, (com.google.javascript.rhino.jstype.JSType) functionType69);
        java.util.Set<java.lang.String> strSet72 = functionType69.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair73 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType40, (com.google.javascript.rhino.jstype.JSType) functionType69);
        com.google.javascript.rhino.Node node74 = functionType40.getSource();
        node25.setJSType((com.google.javascript.rhino.jstype.JSType) functionType40);
        com.google.javascript.rhino.jstype.ObjectType objectType76 = functionType40.getPrototype();
        com.google.javascript.rhino.Node node77 = functionType40.getParametersNode();
        boolean boolean78 = node77.isLabel();
        com.google.javascript.rhino.Node node80 = node77.getAncestor(49);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 45 + "'", int5 == 45);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder12);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(staticSourceFile27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(staticSourceFile29);
        org.junit.Assert.assertNotNull(jSTypeIterable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(functionType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(enumType71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNotNull(objectType76);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(node80);
    }

    @Test
    public void test00831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00831");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        jSTypeRegistry2.forwardDeclareType("{1687381779}");
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable18 = jSTypeRegistry16.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean19 = jSTypeRegistry16.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType20 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.jstype.FunctionType functionType24 = jSTypeRegistry16.createFunctionTypeWithVarArgs(jSType20, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        com.google.javascript.rhino.jstype.JSType jSType29 = jSTypeRegistry16.createNamedType("{proxy:function (): {758384265}}", "", 38, 16);
        // The following exception was thrown during execution in test generation
        try {
            jSTypeRegistry2.overwriteDeclaredType("{1903870951}", jSType29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertNotNull(jSTypeIterable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(functionType24);
        org.junit.Assert.assertNotNull(jSType29);
    }

    @Test
    public void test00832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00832");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType jSType3 = null;
        boolean boolean5 = jSTypeRegistry2.canPropertyBeDefined(jSType3, "Unknown class name");
        jSTypeRegistry2.clearNamedTypes();
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable11 = jSTypeRegistry9.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean12 = jSTypeRegistry9.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType13 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList15 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15, jSTypeArray14);
        com.google.javascript.rhino.jstype.FunctionType functionType17 = jSTypeRegistry9.createFunctionTypeWithVarArgs(jSType13, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList15);
        boolean boolean18 = functionType17.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable23 = jSTypeRegistry21.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean24 = jSTypeRegistry21.shouldTolerateUndefinedValues();
        boolean boolean25 = jSTypeRegistry21.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node34 = node31.useSourceInfoIfMissingFromForTree(node33);
        boolean boolean35 = node33.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType42 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray43 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList44 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList44, jSTypeArray43);
        com.google.javascript.rhino.jstype.FunctionType functionType46 = jSTypeRegistry38.createFunctionTypeWithVarArgs(jSType42, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList44);
        boolean boolean47 = functionType46.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType48 = jSTypeRegistry21.createEnumType("false", node33, (com.google.javascript.rhino.jstype.JSType) functionType46);
        java.util.Set<java.lang.String> strSet49 = functionType46.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair50 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType17, (com.google.javascript.rhino.jstype.JSType) functionType46);
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet51 = functionType46.getPossibleToBooleanOutcomes();
        functionType46.clearResolved();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node57 = jSTypeRegistry55.createParameters(jSTypeArray56);
        com.google.javascript.rhino.jstype.FunctionType functionType58 = jSTypeRegistry2.createConstructorTypeWithVarArgs((com.google.javascript.rhino.jstype.JSType) functionType46, jSTypeArray56);
        boolean boolean59 = functionType46.isEmptyType();
        com.google.javascript.rhino.jstype.ObjectType objectType60 = functionType46.getImplicitPrototype();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(functionType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(jSTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(functionType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(enumType48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + booleanLiteralSet51 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE + "'", booleanLiteralSet51.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE));
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(functionType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objectType60);
    }

    @Test
    public void test00833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00833");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int5 = node4.getType();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder12 = node11.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean18 = node17.isDefaultCase();
        node17.setVarArgs(true);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = new com.google.javascript.rhino.Node((int) 'a', node11, node17, node25);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile27 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node25);
        com.google.javascript.rhino.Node node28 = node4.useSourceInfoFromForTree(node25);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile29 = node25.getStaticSourceFile();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable34 = jSTypeRegistry32.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean35 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType36 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.jstype.FunctionType functionType40 = jSTypeRegistry32.createFunctionTypeWithVarArgs(jSType36, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        boolean boolean41 = functionType40.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable46 = jSTypeRegistry44.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean47 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        boolean boolean48 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node57 = node54.useSourceInfoIfMissingFromForTree(node56);
        boolean boolean58 = node56.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable63 = jSTypeRegistry61.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean64 = jSTypeRegistry61.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType65 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry61.createFunctionTypeWithVarArgs(jSType65, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        boolean boolean70 = functionType69.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType71 = jSTypeRegistry44.createEnumType("false", node56, (com.google.javascript.rhino.jstype.JSType) functionType69);
        java.util.Set<java.lang.String> strSet72 = functionType69.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair73 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType40, (com.google.javascript.rhino.jstype.JSType) functionType69);
        com.google.javascript.rhino.Node node74 = functionType40.getSource();
        node25.setJSType((com.google.javascript.rhino.jstype.JSType) functionType40);
        com.google.javascript.rhino.jstype.ObjectType objectType76 = functionType40.getPrototype();
        com.google.javascript.rhino.jstype.ObjectType objectType77 = com.google.javascript.rhino.jstype.ObjectType.cast((com.google.javascript.rhino.jstype.JSType) functionType40);
        com.google.javascript.rhino.JSDocInfo jSDocInfo79 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean80 = jSDocInfo79.hasFileOverview();
        java.util.Collection<java.lang.String> strCollection81 = jSDocInfo79.getReferences();
        java.util.Collection<java.lang.String> strCollection82 = jSDocInfo79.getReferences();
        functionType40.setPropertyJSDocInfo("{1551784408}", jSDocInfo79);
        java.util.List<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList84 = jSDocInfo79.getExtendedInterfaces();
        boolean boolean85 = jSDocInfo79.hasModifies();
        java.util.Set<java.lang.String> strSet86 = jSDocInfo79.getSuppressions();
        com.google.javascript.rhino.JSDocInfo.Visibility visibility87 = jSDocInfo79.getVisibility();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 45 + "'", int5 == 45);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder12);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(staticSourceFile27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(staticSourceFile29);
        org.junit.Assert.assertNotNull(jSTypeIterable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(functionType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(enumType71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNotNull(objectType76);
        org.junit.Assert.assertNotNull(objectType77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(strCollection81);
        org.junit.Assert.assertNull(strCollection82);
        org.junit.Assert.assertNotNull(jSTypeExpressionList84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strSet86);
        org.junit.Assert.assertNull(visibility87);
    }

    @Test
    public void test00834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00834");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable16 = jSTypeRegistry14.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean17 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        boolean boolean18 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node27 = node24.useSourceInfoIfMissingFromForTree(node26);
        boolean boolean28 = node26.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable33 = jSTypeRegistry31.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean34 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType35 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.jstype.FunctionType functionType39 = jSTypeRegistry31.createFunctionTypeWithVarArgs(jSType35, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean40 = functionType39.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType41 = jSTypeRegistry14.createEnumType("false", node26, (com.google.javascript.rhino.jstype.JSType) functionType39);
        com.google.javascript.rhino.jstype.FunctionType functionType42 = functionType39.getConstructor();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair43 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType10, (com.google.javascript.rhino.jstype.JSType) functionType39);
        com.google.javascript.rhino.jstype.ObjectType objectType44 = functionType10.getPrototype();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable45 = functionType10.getImplementedInterfaces();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(functionType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(enumType41);
        org.junit.Assert.assertNull(functionType42);
        org.junit.Assert.assertNotNull(objectType44);
        org.junit.Assert.assertNotNull(objectTypeIterable45);
    }

    @Test
    public void test00835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00835");
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable6 = jSTypeRegistry4.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean7 = jSTypeRegistry4.shouldTolerateUndefinedValues();
        boolean boolean8 = jSTypeRegistry4.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node17 = node14.useSourceInfoIfMissingFromForTree(node16);
        boolean boolean18 = node16.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable23 = jSTypeRegistry21.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean24 = jSTypeRegistry21.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType25 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray26 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList27 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList27, jSTypeArray26);
        com.google.javascript.rhino.jstype.FunctionType functionType29 = jSTypeRegistry21.createFunctionTypeWithVarArgs(jSType25, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList27);
        boolean boolean30 = functionType29.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType31 = jSTypeRegistry4.createEnumType("false", node16, (com.google.javascript.rhino.jstype.JSType) functionType29);
        boolean boolean33 = enumType31.isPropertyTypeDeclared("");
        boolean boolean34 = enumType31.matchesStringContext();
        boolean boolean35 = enumType31.isConstructor();
        com.google.javascript.rhino.jstype.EnumType enumType36 = enumType31.toMaybeEnumType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType37 = enumType31.toMaybeEnumElementType();
        com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean44 = node43.isDefaultCase();
        java.util.Collection<com.google.javascript.rhino.Node> nodeCollection45 = com.google.javascript.jscomp.NodeUtil.getVarsDeclaredInBranch(node43);
        boolean boolean46 = node43.isLabel();
        boolean boolean47 = node43.isGetterDef();
        boolean boolean48 = enumType31.defineElement("{proxy:function (): {125279184}}", node43);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean55 = node54.isDefaultCase();
        node54.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId58 = node54.getInputId();
        node54.detachChildren();
        boolean boolean60 = node54.isNull();
        com.google.javascript.rhino.Node node61 = new com.google.javascript.rhino.Node((int) 'a', node54);
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean64 = node63.isFalse();
        boolean boolean65 = node63.isQualifiedName();
        boolean boolean66 = node63.isExprResult();
        com.google.javascript.rhino.Node node69 = new com.google.javascript.rhino.Node(52, node43, node61, node63, 8, 42);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node72 = new com.google.javascript.rhino.Node((int) (short) 1, node43, (int) (short) 10, 46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: new child has existing parent");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(jSTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(functionType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(enumType31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(enumType36);
        org.junit.Assert.assertNull(enumElementType37);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(nodeCollection45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(inputId58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test00836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00836");
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder7 = node6.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean13 = node12.isDefaultCase();
        node12.setVarArgs(true);
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node21 = new com.google.javascript.rhino.Node((int) 'a', node6, node12, node20);
        boolean boolean22 = node21.isGetterDef();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node27 = new com.google.javascript.rhino.Node(45, node21, node24, 44, 16);
        boolean boolean28 = node21.isOptionalArg();
        // The following exception was thrown during execution in test generation
        try {
            node21.setSideEffectFlags(47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: setIsNoSideEffectsCall only supports CALL and NEW nodes, got ASSIGN_MOD");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder7);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test00837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00837");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        com.google.javascript.rhino.jstype.FunctionType functionType30 = enumType29.getConstructor();
        java.lang.Iterable iterable31 = enumType29.getCtorImplementedInterfaces();
        boolean boolean33 = enumType29.isPropertyInExterns("NUMBER 100.0");
        com.google.javascript.rhino.Node node34 = enumType29.getSource();
        boolean boolean35 = enumType29.isNumberValueType();
        boolean boolean37 = enumType29.isPropertyTypeInferred("{677544374}");
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertNull(functionType30);
        org.junit.Assert.assertNotNull(iterable31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test00838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00838");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType33 = enumType29.toMaybeUnionType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType34 = enumType29.getElementsType();
        boolean boolean35 = enumElementType34.hasReferenceName();
        boolean boolean36 = enumElementType34.matchesStringContext();
        com.google.javascript.rhino.jstype.JSType jSType38 = enumElementType34.findPropertyType("{815546278}");
        boolean boolean39 = enumElementType34.hasReferenceName();
        com.google.javascript.rhino.jstype.JSType jSType41 = enumElementType34.getPropertyType("{680394635}");
        com.google.javascript.rhino.jstype.ObjectType.Property property43 = enumElementType34.getSlot("{33678463}");
        boolean boolean44 = enumElementType34.canBeCalled();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(unionType33);
        org.junit.Assert.assertNotNull(enumElementType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(jSType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(jSType41);
        org.junit.Assert.assertNull(property43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test00839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00839");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        functionType10.clearCachedValues();
        boolean boolean13 = functionType10.isPropertyTypeDeclared("{1822158766}");
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable14 = functionType10.getAllExtendedInterfaces();
        com.google.javascript.rhino.Node node15 = functionType10.getRootNode();
        boolean boolean16 = functionType10.matchesInt32Context();
        boolean boolean17 = functionType10.isInstanceType();
        boolean boolean18 = functionType10.isOrdinaryFunction();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.ObjectType objectType19 = functionType10.getInstanceType();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objectTypeIterable14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test00840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00840");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean4 = node3.isGetProp();
        boolean boolean5 = node3.isNumber();
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder11 = node10.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int17 = node16.getType();
        boolean boolean18 = node16.isBlock();
        com.google.javascript.rhino.Node node21 = new com.google.javascript.rhino.Node((int) (short) 10, node3, node10, node16, (int) (byte) 10, 44);
        com.google.javascript.rhino.Node node22 = node3.detachFromParent();
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node30 = node27.useSourceInfoIfMissingFromForTree(node29);
        com.google.javascript.rhino.Node node35 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean36 = node35.isDefaultCase();
        node35.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId39 = node35.getInputId();
        node35.detachChildren();
        com.google.javascript.rhino.Node node41 = node29.copyInformationFrom(node35);
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node49 = node46.useSourceInfoIfMissingFromForTree(node48);
        node49.setLineno(10);
        com.google.javascript.rhino.Node node52 = node35.copyInformationFrom(node49);
        com.google.javascript.rhino.Node node55 = new com.google.javascript.rhino.Node((-1), node22, node35, (int) ' ', 1);
        com.google.javascript.rhino.Node node60 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node62 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node63 = node60.useSourceInfoIfMissingFromForTree(node62);
        com.google.javascript.rhino.Node node70 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder71 = node70.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node76 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean77 = node76.isDefaultCase();
        node76.setVarArgs(true);
        com.google.javascript.rhino.Node node84 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node85 = new com.google.javascript.rhino.Node((int) 'a', node70, node76, node84);
        boolean boolean86 = node85.isGetterDef();
        com.google.javascript.rhino.Node node88 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node91 = new com.google.javascript.rhino.Node(45, node85, node88, 44, 16);
        boolean boolean92 = node85.isOptionalArg();
        com.google.javascript.rhino.Node node93 = node85.getNext();
        com.google.javascript.jscomp.CodingConvention.Bind bind94 = new com.google.javascript.jscomp.CodingConvention.Bind(node55, node63, node85);
        node55.setSourceEncodedPositionForTree(37);
        boolean boolean97 = node55.isCase();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder11);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 45 + "'", int17 == 45);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(inputId39);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder71);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(node93);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test00841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00841");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int5 = node4.getType();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder12 = node11.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean18 = node17.isDefaultCase();
        node17.setVarArgs(true);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = new com.google.javascript.rhino.Node((int) 'a', node11, node17, node25);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile27 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node25);
        com.google.javascript.rhino.Node node28 = node4.useSourceInfoFromForTree(node25);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile29 = node25.getStaticSourceFile();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable34 = jSTypeRegistry32.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean35 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType36 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.jstype.FunctionType functionType40 = jSTypeRegistry32.createFunctionTypeWithVarArgs(jSType36, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        boolean boolean41 = functionType40.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable46 = jSTypeRegistry44.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean47 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        boolean boolean48 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node57 = node54.useSourceInfoIfMissingFromForTree(node56);
        boolean boolean58 = node56.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable63 = jSTypeRegistry61.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean64 = jSTypeRegistry61.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType65 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry61.createFunctionTypeWithVarArgs(jSType65, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        boolean boolean70 = functionType69.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType71 = jSTypeRegistry44.createEnumType("false", node56, (com.google.javascript.rhino.jstype.JSType) functionType69);
        java.util.Set<java.lang.String> strSet72 = functionType69.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair73 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType40, (com.google.javascript.rhino.jstype.JSType) functionType69);
        com.google.javascript.rhino.Node node74 = functionType40.getSource();
        node25.setJSType((com.google.javascript.rhino.jstype.JSType) functionType40);
        com.google.javascript.rhino.Node node77 = functionType40.getPropertyNode("{375517443}");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.ObjectType objectType78 = functionType40.getInstanceType();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 45 + "'", int5 == 45);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder12);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(staticSourceFile27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(staticSourceFile29);
        org.junit.Assert.assertNotNull(jSTypeIterable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(functionType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(enumType71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNull(node77);
    }

    @Test
    public void test00842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00842");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int8 = node7.getType();
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder15 = node14.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean21 = node20.isDefaultCase();
        node20.setVarArgs(true);
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node29 = new com.google.javascript.rhino.Node((int) 'a', node14, node20, node28);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile30 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node28);
        com.google.javascript.rhino.Node node31 = node7.useSourceInfoFromForTree(node28);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile32 = node28.getStaticSourceFile();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry35 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable37 = jSTypeRegistry35.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean38 = jSTypeRegistry35.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType39 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.jstype.FunctionType functionType43 = jSTypeRegistry35.createFunctionTypeWithVarArgs(jSType39, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        boolean boolean44 = functionType43.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable49 = jSTypeRegistry47.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean50 = jSTypeRegistry47.shouldTolerateUndefinedValues();
        boolean boolean51 = jSTypeRegistry47.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node57 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node60 = node57.useSourceInfoIfMissingFromForTree(node59);
        boolean boolean61 = node59.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter62 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter62, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable66 = jSTypeRegistry64.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean67 = jSTypeRegistry64.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType68 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList70 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70, jSTypeArray69);
        com.google.javascript.rhino.jstype.FunctionType functionType72 = jSTypeRegistry64.createFunctionTypeWithVarArgs(jSType68, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        boolean boolean73 = functionType72.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType74 = jSTypeRegistry47.createEnumType("false", node59, (com.google.javascript.rhino.jstype.JSType) functionType72);
        java.util.Set<java.lang.String> strSet75 = functionType72.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair76 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType43, (com.google.javascript.rhino.jstype.JSType) functionType72);
        com.google.javascript.rhino.Node node77 = functionType43.getSource();
        node28.setJSType((com.google.javascript.rhino.jstype.JSType) functionType43);
        com.google.javascript.rhino.ErrorReporter errorReporter79 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter79, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable83 = jSTypeRegistry81.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean84 = jSTypeRegistry81.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType85 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray86 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList87 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList87, jSTypeArray86);
        com.google.javascript.rhino.jstype.FunctionType functionType89 = jSTypeRegistry81.createFunctionTypeWithVarArgs(jSType85, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList87);
        com.google.javascript.rhino.jstype.FunctionType functionType90 = jSTypeRegistry2.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType43, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList87);
        boolean boolean92 = functionType90.removeProperty("{790410060}");
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 45 + "'", int8 == 45);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder15);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(staticSourceFile30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNull(staticSourceFile32);
        org.junit.Assert.assertNotNull(jSTypeIterable37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(functionType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(functionType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(enumType74);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNotNull(jSTypeIterable83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(jSTypeArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(functionType89);
        org.junit.Assert.assertNotNull(functionType90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test00843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00843");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.matchesStringContext();
        java.lang.String str33 = enumType29.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType34 = enumType29.getConstructor();
        com.google.javascript.rhino.JSDocInfo jSDocInfo35 = enumType29.getJSDocInfo();
        enumType29.clearCachedValues();
        com.google.javascript.rhino.jstype.ObjectType objectType37 = enumType29.getTypeOfThis();
        java.lang.Iterable iterable38 = enumType29.getCtorExtendedInterfaces();
        com.google.javascript.rhino.Node node39 = enumType29.getSource();
        com.google.javascript.rhino.jstype.JSType jSType40 = enumType29.unboxesTo();
        boolean boolean41 = enumType29.hasCachedValues();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{1884478059}" + "'", str33, "{1884478059}");
        org.junit.Assert.assertNull(functionType34);
        org.junit.Assert.assertNull(jSDocInfo35);
        org.junit.Assert.assertNull(objectType37);
        org.junit.Assert.assertNotNull(iterable38);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNull(jSType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test00844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00844");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        boolean boolean69 = parameterizedType67.isConstructor();
        boolean boolean70 = parameterizedType67.isEmptyType();
        boolean boolean72 = parameterizedType67.isPropertyTypeDeclared("false");
        java.lang.Iterable iterable73 = parameterizedType67.getCtorImplementedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType75 = parameterizedType67.findPropertyType("{1558223005}");
        com.google.javascript.rhino.jstype.TemplateType templateType76 = parameterizedType67.toMaybeTemplateType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(iterable73);
        org.junit.Assert.assertNull(jSType75);
        org.junit.Assert.assertNull(templateType76);
    }

    @Test
    public void test00845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00845");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        functionType10.clearCachedValues();
        boolean boolean13 = functionType10.isPropertyTypeDeclared("{1822158766}");
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable14 = functionType10.getAllExtendedInterfaces();
        com.google.javascript.rhino.Node node15 = functionType10.getRootNode();
        boolean boolean16 = functionType10.matchesInt32Context();
        boolean boolean17 = functionType10.isInstanceType();
        boolean boolean18 = functionType10.isOrdinaryFunction();
        com.google.javascript.rhino.jstype.FunctionType functionType19 = functionType10.getConstructor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = functionType19.getReferenceName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objectTypeIterable14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(functionType19);
    }

    @Test
    public void test00846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00846");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        boolean boolean8 = node6.isExprResult();
        com.google.javascript.rhino.Node node9 = node6.cloneTree();
        int int10 = node9.getSourcePosition();
        boolean boolean11 = node9.isWith();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = node9.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: NUMBER 100.0 is not a string node");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test00847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00847");
        int int1 = com.google.javascript.jscomp.NodeUtil.getInverseOperator(15);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 17 + "'", int1 == 17);
    }

    @Test
    public void test00848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00848");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        java.util.Set<java.lang.String> strSet30 = functionType27.getOwnPropertyNames();
        boolean boolean31 = functionType27.isInterface();
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable36 = jSTypeRegistry34.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean37 = jSTypeRegistry34.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.jstype.FunctionType functionType42 = jSTypeRegistry34.createFunctionTypeWithVarArgs(jSType38, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        boolean boolean43 = functionType42.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable48 = jSTypeRegistry46.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean49 = jSTypeRegistry46.shouldTolerateUndefinedValues();
        boolean boolean50 = jSTypeRegistry46.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node58 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node59 = node56.useSourceInfoIfMissingFromForTree(node58);
        boolean boolean60 = node58.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry63 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable65 = jSTypeRegistry63.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean66 = jSTypeRegistry63.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType67 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.jstype.FunctionType functionType71 = jSTypeRegistry63.createFunctionTypeWithVarArgs(jSType67, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        boolean boolean72 = functionType71.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType73 = jSTypeRegistry46.createEnumType("false", node58, (com.google.javascript.rhino.jstype.JSType) functionType71);
        java.util.Set<java.lang.String> strSet74 = functionType71.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair75 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType42, (com.google.javascript.rhino.jstype.JSType) functionType71);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable76 = functionType71.getImplementedInterfaces();
        boolean boolean77 = functionType27.hasEqualCallType(functionType71);
        boolean boolean78 = functionType71.isNoResolvedType();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(functionType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(functionType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(enumType73);
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertNotNull(objectTypeIterable76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test00849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00849");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.matchesStringContext();
        java.lang.String str33 = enumType29.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType34 = enumType29.getConstructor();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet35 = functionType34.getPropertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{1087401133}" + "'", str33, "{1087401133}");
        org.junit.Assert.assertNull(functionType34);
    }

    @Test
    public void test00850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00850");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList37 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray36);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList56 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray55);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList75 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray74);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>>> strComparableListList76 = com.google.common.collect.ImmutableList.of(strComparableList18, strComparableList37, strComparableList56, strComparableList75);
        com.google.common.collect.UnmodifiableIterator<java.lang.Comparable<java.lang.String>> strComparableItor77 = strComparableList56.iterator();
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList78 = strComparableList56.reverse();
        com.google.common.collect.UnmodifiableIterator<java.lang.Comparable<java.lang.String>> strComparableItor79 = strComparableList56.iterator();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strComparableList37);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strComparableList56);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strComparableList75);
        org.junit.Assert.assertNotNull(strComparableListList76);
        org.junit.Assert.assertNotNull(strComparableItor77);
        org.junit.Assert.assertNotNull(strComparableList78);
        org.junit.Assert.assertNotNull(strComparableItor79);
    }

    @Test
    public void test00851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00851");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str1 = jSDocInfo0.getDescription();
        java.lang.String str2 = jSDocInfo0.getDeprecationReason();
        java.lang.String str3 = jSDocInfo0.getMeaning();
        int int4 = jSDocInfo0.getExtendedInterfacesCount();
        java.lang.String str5 = jSDocInfo0.getDeprecationReason();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test00852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00852");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder6 = node5.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean12 = node11.isDefaultCase();
        node11.setVarArgs(true);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) 'a', node5, node11, node19);
        boolean boolean21 = node5.isScript();
        int int22 = node5.getLineno();
        boolean boolean23 = node5.isQualifiedName();
        boolean boolean24 = node5.isArrayLit();
        boolean boolean25 = node5.isParamList();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder6);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test00853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00853");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        jSTypeRegistry1.incrementGeneration();
        com.google.javascript.rhino.Node node8 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean9 = node8.isDefaultCase();
        java.util.Collection<com.google.javascript.rhino.Node> nodeCollection10 = com.google.javascript.jscomp.NodeUtil.getVarsDeclaredInBranch(node8);
        boolean boolean11 = node8.isLabel();
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable16 = jSTypeRegistry14.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean17 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        boolean boolean18 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node27 = node24.useSourceInfoIfMissingFromForTree(node26);
        boolean boolean28 = node26.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable33 = jSTypeRegistry31.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean34 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType35 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.jstype.FunctionType functionType39 = jSTypeRegistry31.createFunctionTypeWithVarArgs(jSType35, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean40 = functionType39.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType41 = jSTypeRegistry14.createEnumType("false", node26, (com.google.javascript.rhino.jstype.JSType) functionType39);
        com.google.javascript.rhino.jstype.FunctionType functionType42 = functionType39.getConstructor();
        com.google.javascript.rhino.jstype.EnumType enumType43 = jSTypeRegistry1.createEnumType("SHEQ  1 [var_args_name: 1]\n", node8, (com.google.javascript.rhino.jstype.JSType) functionType39);
        boolean boolean45 = functionType39.hasProperty("{1891986765}");
        com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> jSTypeStaticSlot47 = functionType39.getOwnSlot("{1018263462}");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.ObjectType objectType49 = functionType39.getTopMostDefiningType("{1913790113}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(nodeCollection10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(functionType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(enumType41);
        org.junit.Assert.assertNull(functionType42);
        org.junit.Assert.assertNotNull(enumType43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(jSTypeStaticSlot47);
    }

    @Test
    public void test00854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00854");
        boolean boolean1 = com.google.javascript.jscomp.NodeUtil.isValidSimpleName("{1356711439}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test00855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00855");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = enumType29.getOwnPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n");
        com.google.javascript.rhino.jstype.FunctionType functionType34 = enumType29.getConstructor();
        boolean boolean35 = enumType29.matchesUint32Context();
        com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> jSTypeStaticScope36 = enumType29.getParentScope();
        com.google.javascript.rhino.jstype.ObjectType.Property property38 = enumType29.getSlot("{1453078922}");
        com.google.javascript.rhino.JSDocInfo jSDocInfo39 = enumType29.getJSDocInfo();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(jSDocInfo33);
        org.junit.Assert.assertNull(functionType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(jSTypeStaticScope36);
        org.junit.Assert.assertNull(property38);
        org.junit.Assert.assertNull(jSDocInfo39);
    }

    @Test
    public void test00856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00856");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        java.lang.String str68 = functionType32.toString();
        java.lang.Iterable iterable69 = functionType32.getCtorImplementedInterfaces();
        boolean boolean70 = functionType32.hasAnyTemplateInternal();
        boolean boolean72 = functionType32.hasOwnProperty("");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.ObjectType objectType73 = functionType32.getInstanceType();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "function (): ?" + "'", str68, "function (): ?");
        org.junit.Assert.assertNotNull(iterable69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test00857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00857");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean1 = jSDocInfo0.hasReturnType();
        boolean boolean2 = jSDocInfo0.hasFileOverview();
        java.util.List<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList3 = jSDocInfo0.getThrownTypes();
        boolean boolean4 = jSDocInfo0.isJavaDispatch();
        boolean boolean5 = jSDocInfo0.isDeprecated();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jSTypeExpressionList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test00858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00858");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable23 = jSTypeRegistry21.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean24 = jSTypeRegistry21.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType25 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray26 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList27 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList27, jSTypeArray26);
        com.google.javascript.rhino.jstype.FunctionType functionType29 = jSTypeRegistry21.createFunctionTypeWithVarArgs(jSType25, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList27);
        boolean boolean30 = functionType29.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable35 = jSTypeRegistry33.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean36 = jSTypeRegistry33.shouldTolerateUndefinedValues();
        boolean boolean37 = jSTypeRegistry33.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node45 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node46 = node43.useSourceInfoIfMissingFromForTree(node45);
        boolean boolean47 = node45.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter48 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry50 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter48, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable52 = jSTypeRegistry50.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean53 = jSTypeRegistry50.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType54 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray55 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56, jSTypeArray55);
        com.google.javascript.rhino.jstype.FunctionType functionType58 = jSTypeRegistry50.createFunctionTypeWithVarArgs(jSType54, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        boolean boolean59 = functionType58.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType60 = jSTypeRegistry33.createEnumType("false", node45, (com.google.javascript.rhino.jstype.JSType) functionType58);
        java.util.Set<java.lang.String> strSet61 = functionType58.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair62 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType29, (com.google.javascript.rhino.jstype.JSType) functionType58);
        com.google.javascript.rhino.jstype.JSType jSType63 = functionType58.autoboxesTo();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot65 = functionType58.getSlot("{1361096798}");
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType58.getOwnerFunction();
        boolean boolean67 = strComparableList18.contains((java.lang.Object) functionType58);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable69 = strComparableList18.remove(44);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertNotNull(jSTypeIterable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(jSTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(functionType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(jSTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(functionType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(enumType60);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNull(jSType63);
        org.junit.Assert.assertNull(staticSlot65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test00859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00859");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList37 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray36);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList56 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray55);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList75 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray74);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>>> strComparableListList76 = com.google.common.collect.ImmutableList.of(strComparableList18, strComparableList37, strComparableList56, strComparableList75);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator77 = strComparableList56.spliterator();
        java.util.ListIterator<java.lang.Comparable<java.lang.String>> strComparableItor78 = strComparableList56.listIterator();
        com.google.common.collect.UnmodifiableIterator<java.lang.Comparable<java.lang.String>> strComparableItor79 = strComparableList56.iterator();
        boolean boolean81 = strComparableList56.contains((java.lang.Object) "{209777139}");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strComparableList37);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strComparableList56);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strComparableList75);
        org.junit.Assert.assertNotNull(strComparableListList76);
        org.junit.Assert.assertNotNull(strComparableSpliterator77);
        org.junit.Assert.assertNotNull(strComparableItor78);
        org.junit.Assert.assertNotNull(strComparableItor79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test00860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00860");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("", jSTypeNative1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 2, 54, (int) (short) 100);
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node14 = node11.useSourceInfoIfMissingFromForTree(node13);
        boolean boolean15 = com.google.javascript.jscomp.NodeUtil.isRelationalOperation(node11);
        boolean boolean16 = node6.isEquivalentTo(node11);
        com.google.javascript.rhino.Node node17 = node6.removeFirstChild();
        com.google.javascript.rhino.ErrorReporter errorReporter18 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter18, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node22 = jSTypeRegistry20.createParameters(jSTypeArray21);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry25 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable27 = jSTypeRegistry25.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean28 = jSTypeRegistry25.shouldTolerateUndefinedValues();
        boolean boolean29 = jSTypeRegistry25.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node35 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node37 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node38 = node35.useSourceInfoIfMissingFromForTree(node37);
        boolean boolean39 = node37.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry42 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable44 = jSTypeRegistry42.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean45 = jSTypeRegistry42.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType46 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.jstype.FunctionType functionType50 = jSTypeRegistry42.createFunctionTypeWithVarArgs(jSType46, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        boolean boolean51 = functionType50.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType52 = jSTypeRegistry25.createEnumType("false", node37, (com.google.javascript.rhino.jstype.JSType) functionType50);
        boolean boolean54 = enumType52.isPropertyTypeDeclared("");
        boolean boolean55 = enumType52.matchesStringContext();
        java.lang.String str56 = enumType52.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType57 = enumType52.getConstructor();
        com.google.javascript.rhino.JSDocInfo jSDocInfo58 = enumType52.getJSDocInfo();
        enumType52.clearCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType64 = jSTypeRegistry20.getType((com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) enumType52, "", "Not declared as a type name", 36, (int) '#');
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry67 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node69 = jSTypeRegistry67.createParameters(jSTypeArray68);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry20.createParametersWithVarArgs(jSTypeArray68);
        com.google.javascript.rhino.jstype.JSType jSType71 = assertionFunctionSpec2.getAssertedType(node17, jSTypeRegistry20);
        boolean boolean73 = jSTypeRegistry20.isForwardDeclaredType("{1414344704}");
        jSTypeRegistry20.clearTemplateTypeNames();
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative75 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.FunctionType functionType76 = jSTypeRegistry20.getNativeFunctionType(jSTypeNative75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(jSTypeIterable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(functionType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(enumType52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{133668048}" + "'", str56, "{133668048}");
        org.junit.Assert.assertNull(functionType57);
        org.junit.Assert.assertNull(jSDocInfo58);
        org.junit.Assert.assertNotNull(jSType64);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNull(jSType71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test00861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00861");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType33 = enumType29.toMaybeUnionType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType34 = enumType29.getElementsType();
        boolean boolean35 = enumElementType34.hasReferenceName();
        boolean boolean36 = enumElementType34.matchesStringContext();
        boolean boolean38 = enumElementType34.isPropertyTypeDeclared("{393150955}");
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(unionType33);
        org.junit.Assert.assertNotNull(enumElementType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test00862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00862");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean13 = node12.isDefaultCase();
        node12.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId16 = node12.getInputId();
        node12.detachChildren();
        com.google.javascript.rhino.Node node18 = node6.copyInformationFrom(node12);
        int int19 = node12.getType();
        java.lang.String[] strArray25 = new java.lang.String[] { "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "Unknown class name", "Unknown class name", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        node12.setDirectives((java.util.Set<java.lang.String>) strSet26);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList47 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray46);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator48 = strComparableList47.spliterator();
        boolean boolean49 = strSet26.equals((java.lang.Object) strComparableList47);
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder56 = node55.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node61 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean62 = node61.isDefaultCase();
        node61.setVarArgs(true);
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node70 = new com.google.javascript.rhino.Node((int) 'a', node55, node61, node69);
        boolean boolean71 = node70.isGetterDef();
        boolean boolean72 = node70.isQuotedString();
        node70.setSourceEncodedPosition(4);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression76 = new com.google.javascript.rhino.JSTypeExpression(node70, "Unknown class name");
        com.google.javascript.rhino.Node node77 = jSTypeExpression76.getRoot();
        int int78 = strComparableList47.lastIndexOf((java.lang.Object) jSTypeExpression76);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList80 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean83 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean84 = strComparableList47.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList80);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = strComparableList47.add((java.lang.Comparable<java.lang.String>) "{656021098}");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inputId16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 45 + "'", int19 == 45);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strComparableList47);
        org.junit.Assert.assertNotNull(strComparableSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder56);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test00863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00863");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList6 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean7 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        boolean boolean8 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "Unknown class name");
        boolean boolean9 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean10 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        boolean boolean11 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "SHEQ  1 [var_args_name: 1]\n");
        boolean boolean12 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        boolean boolean14 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "Unknown class name");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList33 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray32);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList52 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray51);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList71 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray70);
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList90 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray89);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>>> strComparableListList91 = com.google.common.collect.ImmutableList.of(strComparableList33, strComparableList52, strComparableList71, strComparableList90);
        com.google.common.collect.UnmodifiableIterator<java.lang.Comparable<java.lang.String>> strComparableItor92 = strComparableList90.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor93 = strComparableList90.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream94 = strComparableList90.stream();
        boolean boolean95 = strComparableList6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList90);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strComparableList33);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strComparableList52);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strComparableList71);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strComparableList90);
        org.junit.Assert.assertNotNull(strComparableListList91);
        org.junit.Assert.assertNotNull(strComparableItor92);
        org.junit.Assert.assertNotNull(strComparableItor93);
        org.junit.Assert.assertNotNull(strComparableStream94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test00864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00864");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable16 = jSTypeRegistry14.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean17 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        boolean boolean18 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node27 = node24.useSourceInfoIfMissingFromForTree(node26);
        boolean boolean28 = node26.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable33 = jSTypeRegistry31.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean34 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType35 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.jstype.FunctionType functionType39 = jSTypeRegistry31.createFunctionTypeWithVarArgs(jSType35, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean40 = functionType39.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType41 = jSTypeRegistry14.createEnumType("false", node26, (com.google.javascript.rhino.jstype.JSType) functionType39);
        com.google.javascript.rhino.jstype.FunctionType functionType42 = functionType39.getConstructor();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair43 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType10, (com.google.javascript.rhino.jstype.JSType) functionType39);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable48 = jSTypeRegistry46.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean49 = jSTypeRegistry46.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType50 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray51 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList52 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList52, jSTypeArray51);
        com.google.javascript.rhino.jstype.FunctionType functionType54 = jSTypeRegistry46.createFunctionTypeWithVarArgs(jSType50, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList52);
        boolean boolean55 = functionType54.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter56 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry58 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter56, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable60 = jSTypeRegistry58.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean61 = jSTypeRegistry58.shouldTolerateUndefinedValues();
        boolean boolean62 = jSTypeRegistry58.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node70 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node71 = node68.useSourceInfoIfMissingFromForTree(node70);
        boolean boolean72 = node70.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter73 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry75 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter73, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable77 = jSTypeRegistry75.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean78 = jSTypeRegistry75.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType79 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray80 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList81 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList81, jSTypeArray80);
        com.google.javascript.rhino.jstype.FunctionType functionType83 = jSTypeRegistry75.createFunctionTypeWithVarArgs(jSType79, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList81);
        boolean boolean84 = functionType83.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType85 = jSTypeRegistry58.createEnumType("false", node70, (com.google.javascript.rhino.jstype.JSType) functionType83);
        java.util.Set<java.lang.String> strSet86 = functionType83.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair87 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType54, (com.google.javascript.rhino.jstype.JSType) functionType83);
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.jstype.JSType.TypePair> typePairList88 = com.google.common.collect.ImmutableList.of(typePair43, typePair87);
        com.google.javascript.rhino.jstype.JSType jSType89 = typePair43.typeA;
        boolean boolean90 = jSType89.isInterface();
        boolean boolean91 = jSType89.isFunctionPrototypeType();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(functionType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(enumType41);
        org.junit.Assert.assertNull(functionType42);
        org.junit.Assert.assertNotNull(jSTypeIterable48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(jSTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(functionType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(jSTypeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(functionType83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(enumType85);
        org.junit.Assert.assertNotNull(strSet86);
        org.junit.Assert.assertNotNull(typePairList88);
        org.junit.Assert.assertNotNull(jSType89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test00865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00865");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = null;
        enumType29.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo33);
        com.google.javascript.rhino.jstype.ObjectType.Property property36 = enumType29.getSlot("{585923242}");
        com.google.javascript.rhino.jstype.EnumType enumType37 = enumType29.toMaybeEnumType();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(property36);
        org.junit.Assert.assertNotNull(enumType37);
    }

    @Test
    public void test00866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00866");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException((java.lang.Throwable) iOException0);
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        java.lang.Throwable throwable5 = null;
        java.io.IOException iOException6 = new java.io.IOException("SHEQ  1 [var_args_name: 1]\n", throwable5);
        java.lang.Throwable throwable9 = null;
        java.io.IOException iOException10 = new java.io.IOException("SHEQ  1 [var_args_name: 1]\n", throwable9);
        java.io.IOException iOException11 = new java.io.IOException("{proxy:function (): {882920012}}", (java.lang.Throwable) iOException10);
        java.lang.Throwable throwable13 = null;
        java.io.IOException iOException14 = new java.io.IOException("SHEQ  1 [var_args_name: 1]\n", throwable13);
        java.lang.Throwable throwable16 = null;
        java.io.IOException iOException17 = new java.io.IOException("SHEQ  1 [var_args_name: 1]\n", throwable16);
        java.lang.Throwable throwable20 = null;
        java.io.IOException iOException21 = new java.io.IOException("SHEQ  1 [var_args_name: 1]\n", throwable20);
        java.io.IOException iOException22 = new java.io.IOException("{proxy:function (): {882920012}}", (java.lang.Throwable) iOException21);
        com.google.common.collect.ImmutableList<java.lang.Exception> exceptionList23 = com.google.common.collect.ImmutableList.of((java.lang.Exception) iOException6, (java.lang.Exception) iOException10, (java.lang.Exception) iOException14, (java.lang.Exception) iOException17, (java.lang.Exception) iOException21);
        java.io.IOException iOException24 = new java.io.IOException("{1056232439}", (java.lang.Throwable) iOException21);
        java.lang.Throwable throwable26 = null;
        java.io.IOException iOException27 = new java.io.IOException("SHEQ  1 [var_args_name: 1]\n", throwable26);
        java.lang.Throwable[] throwableArray28 = iOException27.getSuppressed();
        java.lang.Throwable throwable30 = null;
        java.io.IOException iOException31 = new java.io.IOException("SHEQ  1 [var_args_name: 1]\n", throwable30);
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("SHEQ  1 [var_args_name: 1]\n", throwable34);
        java.io.IOException iOException36 = new java.io.IOException("{proxy:function (): {882920012}}", (java.lang.Throwable) iOException35);
        java.lang.Throwable throwable38 = null;
        java.io.IOException iOException39 = new java.io.IOException("SHEQ  1 [var_args_name: 1]\n", throwable38);
        java.lang.Throwable throwable41 = null;
        java.io.IOException iOException42 = new java.io.IOException("SHEQ  1 [var_args_name: 1]\n", throwable41);
        java.lang.Throwable throwable45 = null;
        java.io.IOException iOException46 = new java.io.IOException("SHEQ  1 [var_args_name: 1]\n", throwable45);
        java.io.IOException iOException47 = new java.io.IOException("{proxy:function (): {882920012}}", (java.lang.Throwable) iOException46);
        com.google.common.collect.ImmutableList<java.lang.Exception> exceptionList48 = com.google.common.collect.ImmutableList.of((java.lang.Exception) iOException31, (java.lang.Exception) iOException35, (java.lang.Exception) iOException39, (java.lang.Exception) iOException42, (java.lang.Exception) iOException46);
        iOException27.addSuppressed((java.lang.Throwable) iOException31);
        iOException24.addSuppressed((java.lang.Throwable) iOException31);
        iOException1.addSuppressed((java.lang.Throwable) iOException24);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(exceptionList23);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(exceptionList48);
    }

    @Test
    public void test00867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00867");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec1 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("ASSIGN_MOD");
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node8 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node9 = node6.useSourceInfoIfMissingFromForTree(node8);
        boolean boolean10 = node8.isExprResult();
        boolean boolean11 = node8.isDelProp();
        com.google.javascript.rhino.InputId inputId12 = node8.getInputId();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node21 = node18.useSourceInfoIfMissingFromForTree(node20);
        node21.setLineno(10);
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder30 = node29.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node35 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean36 = node35.isDefaultCase();
        node35.setVarArgs(true);
        com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node44 = new com.google.javascript.rhino.Node((int) 'a', node29, node35, node43);
        boolean boolean45 = node44.isGetterDef();
        boolean boolean46 = node44.isQuotedString();
        com.google.javascript.rhino.Node node51 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int52 = node51.getType();
        node51.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int60 = node59.getType();
        node59.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node63 = new com.google.javascript.rhino.Node(40, node21, node44, node51, node59);
        boolean boolean64 = node44.isArrayLit();
        com.google.javascript.rhino.Node node65 = node8.useSourceInfoIfMissingFromForTree(node44);
        int int66 = node44.getChildCount();
        boolean boolean67 = node44.isVar();
        com.google.javascript.rhino.Node node68 = assertionFunctionSpec1.getAssertedParam(node44);
        boolean boolean69 = node44.isNumber();
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(inputId12);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder30);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 45 + "'", int52 == 45);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 45 + "'", int60 == 45);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 3 + "'", int66 == 3);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test00868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00868");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean3 = node2.isGetProp();
        boolean boolean4 = node2.isNumber();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int16 = node15.getType();
        boolean boolean17 = node15.isBlock();
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) (short) 10, node2, node9, node15, (int) (byte) 10, 44);
        com.google.javascript.rhino.Node node21 = node2.getNext();
        int int22 = node2.getCharno();
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node30 = node27.useSourceInfoIfMissingFromForTree(node29);
        com.google.javascript.rhino.Node node35 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean36 = node35.isDefaultCase();
        node35.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId39 = node35.getInputId();
        node35.detachChildren();
        com.google.javascript.rhino.Node node41 = node29.copyInformationFrom(node35);
        int int42 = node35.getType();
        java.lang.String[] strArray48 = new java.lang.String[] { "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "Unknown class name", "Unknown class name", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" };
        java.util.LinkedHashSet<java.lang.String> strSet49 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet49, strArray48);
        node35.setDirectives((java.util.Set<java.lang.String>) strSet49);
        com.google.javascript.rhino.Node node53 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean54 = strSet49.remove((java.lang.Object) node53);
        com.google.javascript.rhino.Node node56 = node53.getAncestor(53);
        boolean boolean57 = node53.isNumber();
        node53.setCharno(31);
        com.google.javascript.rhino.Node node60 = node2.srcrefTree(node53);
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable61 = node53.children();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 45 + "'", int16 == 45);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(inputId39);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 45 + "'", int42 == 45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(nodeIterable61);
    }

    @Test
    public void test00869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00869");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, false);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable4 = jSTypeRegistry2.getEachReferenceTypeWithProperty("{2044072356}");
        com.google.javascript.rhino.jstype.ObjectType objectType5 = null;
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable10 = jSTypeRegistry8.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean11 = jSTypeRegistry8.shouldTolerateUndefinedValues();
        boolean boolean12 = jSTypeRegistry8.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node21 = node18.useSourceInfoIfMissingFromForTree(node20);
        boolean boolean22 = node20.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry25 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable27 = jSTypeRegistry25.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean28 = jSTypeRegistry25.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType29 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.jstype.FunctionType functionType33 = jSTypeRegistry25.createFunctionTypeWithVarArgs(jSType29, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        boolean boolean34 = functionType33.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType35 = jSTypeRegistry8.createEnumType("false", node20, (com.google.javascript.rhino.jstype.JSType) functionType33);
        java.util.Set<java.lang.String> strSet36 = functionType33.getOwnPropertyNames();
        boolean boolean37 = functionType33.isInterface();
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable42 = jSTypeRegistry40.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean43 = jSTypeRegistry40.shouldTolerateUndefinedValues();
        boolean boolean44 = jSTypeRegistry40.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node52 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node53 = node50.useSourceInfoIfMissingFromForTree(node52);
        boolean boolean54 = node52.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter55 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry57 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter55, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable59 = jSTypeRegistry57.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean60 = jSTypeRegistry57.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType61 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray62 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList63 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63, jSTypeArray62);
        com.google.javascript.rhino.jstype.FunctionType functionType65 = jSTypeRegistry57.createFunctionTypeWithVarArgs(jSType61, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        boolean boolean66 = functionType65.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType67 = jSTypeRegistry40.createEnumType("false", node52, (com.google.javascript.rhino.jstype.JSType) functionType65);
        boolean boolean69 = enumType67.isPropertyTypeDeclared("");
        boolean boolean70 = enumType67.matchesStringContext();
        java.lang.String str71 = enumType67.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType72 = enumType67.getConstructor();
        boolean boolean73 = functionType33.isEquivalentTo((com.google.javascript.rhino.jstype.JSType) enumType67);
        com.google.javascript.rhino.ErrorReporter errorReporter74 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry76 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter74, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable78 = jSTypeRegistry76.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean79 = jSTypeRegistry76.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType80 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray81 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList82 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList82, jSTypeArray81);
        com.google.javascript.rhino.jstype.FunctionType functionType84 = jSTypeRegistry76.createFunctionTypeWithVarArgs(jSType80, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList82);
        com.google.javascript.rhino.jstype.JSType jSType85 = jSTypeRegistry2.createFunctionTypeWithVarArgs(objectType5, (com.google.javascript.rhino.jstype.JSType) functionType33, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList82);
        boolean boolean87 = jSTypeRegistry2.hasNamespace("false");
        com.google.javascript.rhino.jstype.JSType jSType92 = jSTypeRegistry2.createNamedType("{1412226743}", "{1544533104}", 97, 38);
        jSTypeRegistry2.clearNamedTypes();
        org.junit.Assert.assertNotNull(objectTypeIterable4);
        org.junit.Assert.assertNotNull(jSTypeIterable10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(functionType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(enumType35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(jSTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(functionType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(enumType67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{351375601}" + "'", str71, "{351375601}");
        org.junit.Assert.assertNull(functionType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(jSTypeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(functionType84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(jSType92);
    }

    @Test
    public void test00870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00870");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        com.google.javascript.rhino.ErrorReporter errorReporter11 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable15 = jSTypeRegistry13.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean16 = jSTypeRegistry13.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable33 = jSTypeRegistry31.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean34 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        boolean boolean35 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node44 = node41.useSourceInfoIfMissingFromForTree(node43);
        boolean boolean45 = node43.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry48 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable50 = jSTypeRegistry48.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean51 = jSTypeRegistry48.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType52 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.jstype.FunctionType functionType56 = jSTypeRegistry48.createFunctionTypeWithVarArgs(jSType52, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = functionType56.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType58 = jSTypeRegistry31.createEnumType("false", node43, (com.google.javascript.rhino.jstype.JSType) functionType56);
        java.util.Set<java.lang.String> strSet59 = functionType56.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair60 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType27, (com.google.javascript.rhino.jstype.JSType) functionType56);
        com.google.javascript.rhino.jstype.JSType jSType61 = functionType56.autoboxesTo();
        com.google.javascript.rhino.ErrorReporter errorReporter62 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter62, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable66 = jSTypeRegistry64.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean67 = jSTypeRegistry64.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType68 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList70 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70, jSTypeArray69);
        com.google.javascript.rhino.jstype.FunctionType functionType72 = jSTypeRegistry64.createFunctionTypeWithVarArgs(jSType68, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        com.google.javascript.rhino.jstype.FunctionType functionType73 = jSTypeRegistry13.createFunctionTypeWithVarArgs(jSType61, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        com.google.javascript.rhino.Node node74 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        node74.putIntProp((int) (short) 10, 53);
        com.google.javascript.rhino.Node node78 = node74.removeFirstChild();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertNotNull(jSTypeIterable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(functionType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(enumType58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNull(jSType61);
        org.junit.Assert.assertNotNull(jSTypeIterable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(functionType72);
        org.junit.Assert.assertNotNull(functionType73);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNull(node78);
    }

    @Test
    public void test00871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00871");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.canBeCalled();
        boolean boolean12 = functionType10.isStringValueType();
        boolean boolean13 = functionType10.isNoObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType14 = functionType10.getTypeOfThis();
        boolean boolean16 = functionType10.isPropertyInExterns("{1056232439}");
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test00872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00872");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node8 = node5.useSourceInfoIfMissingFromForTree(node7);
        node8.setLineno(10);
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder17 = node16.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean23 = node22.isDefaultCase();
        node22.setVarArgs(true);
        com.google.javascript.rhino.Node node30 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node31 = new com.google.javascript.rhino.Node((int) 'a', node16, node22, node30);
        boolean boolean32 = node31.isGetterDef();
        boolean boolean33 = node31.isQuotedString();
        com.google.javascript.rhino.Node node38 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int39 = node38.getType();
        node38.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int47 = node46.getType();
        node46.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node50 = new com.google.javascript.rhino.Node(40, node8, node31, node38, node46);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.JSDocInfo jSDocInfo51 = com.google.javascript.jscomp.NodeUtil.getFunctionJSDocInfo(node38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder17);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 45 + "'", int39 == 45);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 45 + "'", int47 == 45);
    }

    @Test
    public void test00873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00873");
        boolean boolean1 = com.google.javascript.jscomp.NodeUtil.isValidSimpleName("{1757077116}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test00874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00874");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = null;
        enumType29.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo33);
        com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> jSTypeStaticSlot36 = enumType29.getSlot("{proxy:function (): {882920012}}");
        boolean boolean37 = enumType29.matchesNumberContext();
        java.util.Set set38 = enumType29.getOwnPropertyNames();
        int int39 = set38.size();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(jSTypeStaticSlot36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test00875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00875");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        com.google.javascript.rhino.jstype.JSType jSType69 = parameterizedType67.getIndexType();
        com.google.javascript.rhino.jstype.TemplateType templateType70 = parameterizedType67.toMaybeTemplateType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(jSType69);
        org.junit.Assert.assertNull(templateType70);
    }

    @Test
    public void test00876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00876");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        java.util.Set<java.lang.String> strSet30 = functionType27.getOwnPropertyNames();
        boolean boolean31 = functionType27.isInterface();
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable36 = jSTypeRegistry34.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean37 = jSTypeRegistry34.shouldTolerateUndefinedValues();
        boolean boolean38 = jSTypeRegistry34.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node44 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node47 = node44.useSourceInfoIfMissingFromForTree(node46);
        boolean boolean48 = node46.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry51 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable53 = jSTypeRegistry51.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean54 = jSTypeRegistry51.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType55 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.jstype.FunctionType functionType59 = jSTypeRegistry51.createFunctionTypeWithVarArgs(jSType55, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        boolean boolean60 = functionType59.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType61 = jSTypeRegistry34.createEnumType("false", node46, (com.google.javascript.rhino.jstype.JSType) functionType59);
        boolean boolean63 = enumType61.isPropertyTypeDeclared("");
        boolean boolean64 = enumType61.matchesStringContext();
        java.lang.String str65 = enumType61.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType66 = enumType61.getConstructor();
        boolean boolean67 = functionType27.isEquivalentTo((com.google.javascript.rhino.jstype.JSType) enumType61);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable68 = functionType27.getAllImplementedInterfaces();
        boolean boolean70 = functionType27.isPropertyTypeInferred("{1290150195}");
        boolean boolean71 = functionType27.isObject();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(functionType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(enumType61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{1979018079}" + "'", str65, "{1979018079}");
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objectTypeIterable68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test00877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00877");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType jSType3 = null;
        boolean boolean5 = jSTypeRegistry2.canPropertyBeDefined(jSType3, "Unknown class name");
        jSTypeRegistry2.clearNamedTypes();
        com.google.javascript.rhino.ErrorReporter errorReporter7 = jSTypeRegistry2.getErrorReporter();
        jSTypeRegistry2.setLastGeneration(true);
        com.google.javascript.rhino.Node node11 = null;
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable16 = jSTypeRegistry14.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean17 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        boolean boolean18 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node27 = node24.useSourceInfoIfMissingFromForTree(node26);
        boolean boolean28 = node26.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable33 = jSTypeRegistry31.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean34 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType35 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.jstype.FunctionType functionType39 = jSTypeRegistry31.createFunctionTypeWithVarArgs(jSType35, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean40 = functionType39.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType41 = jSTypeRegistry14.createEnumType("false", node26, (com.google.javascript.rhino.jstype.JSType) functionType39);
        boolean boolean43 = enumType41.isPropertyTypeDeclared("");
        boolean boolean44 = enumType41.matchesStringContext();
        java.lang.String str45 = enumType41.toDebugHashCodeString();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable46 = enumType41.getCtorExtendedInterfaces();
        boolean boolean48 = enumType41.hasOwnProperty("{1631953089}");
        com.google.javascript.rhino.jstype.EnumType enumType49 = jSTypeRegistry2.createEnumType("", node11, (com.google.javascript.rhino.jstype.JSType) enumType41);
        boolean boolean50 = enumType49.isFunctionPrototypeType();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(errorReporter7);
        org.junit.Assert.assertNotNull(jSTypeIterable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(functionType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(enumType41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{1352570602}" + "'", str45, "{1352570602}");
        org.junit.Assert.assertNotNull(objectTypeIterable46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(enumType49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test00878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00878");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(37, "{1891986765}", 30, 3);
        boolean boolean5 = node4.isAdd();
        boolean boolean6 = node4.isStringKey();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test00879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00879");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        com.google.javascript.rhino.jstype.FunctionType functionType68 = parameterizedType67.getConstructor();
        com.google.javascript.rhino.jstype.TemplateType templateType69 = parameterizedType67.toMaybeTemplateType();
        com.google.javascript.rhino.jstype.JSType jSType70 = parameterizedType67.collapseUnion();
        com.google.javascript.rhino.jstype.JSType jSType71 = parameterizedType67.getParameterType();
        boolean boolean72 = parameterizedType67.isNoObjectType();
        boolean boolean73 = parameterizedType67.isNoObjectType();
        com.google.javascript.rhino.jstype.JSType jSType75 = parameterizedType67.getRestrictedTypeGivenToBooleanOutcome(false);
        com.google.javascript.rhino.jstype.ObjectType.Property property77 = parameterizedType67.getSlot("(Unknown class name)");
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertNull(functionType68);
        org.junit.Assert.assertNull(templateType69);
        org.junit.Assert.assertNotNull(jSType70);
        org.junit.Assert.assertNull(jSType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(jSType75);
        org.junit.Assert.assertNull(property77);
    }

    @Test
    public void test00880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00880");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags1 = new com.google.javascript.rhino.Node.SideEffectFlags(100);
        sideEffectFlags1.setAllFlags();
        boolean boolean3 = sideEffectFlags1.areAllFlagsSet();
        sideEffectFlags1.setMutatesGlobalState();
        sideEffectFlags1.setThrows();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test00881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00881");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean1 = jSDocInfo0.isDefine();
        boolean boolean3 = jSDocInfo0.hasParameter("{796389407}");
        boolean boolean4 = jSDocInfo0.hasType();
        boolean boolean5 = jSDocInfo0.isConsistentIdGenerator();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test00882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00882");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = enumType29.getOwnPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n");
        java.util.Set set34 = enumType29.getOwnPropertyNames();
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection35 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = set34.removeAll(strComparableCollection35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(jSDocInfo33);
        org.junit.Assert.assertNotNull(set34);
    }

    @Test
    public void test00883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00883");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean13 = node12.isDefaultCase();
        node12.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId16 = node12.getInputId();
        node12.detachChildren();
        com.google.javascript.rhino.Node node18 = node6.copyInformationFrom(node12);
        com.google.javascript.rhino.Node node23 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node26 = node23.useSourceInfoIfMissingFromForTree(node25);
        node26.setLineno(10);
        com.google.javascript.rhino.Node node29 = node12.copyInformationFrom(node26);
        node12.putIntProp(46, (int) (short) 1);
        boolean boolean33 = node12.isBreak();
        node12.setSourceEncodedPositionForTree((int) '4');
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inputId16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test00884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00884");
        boolean boolean1 = com.google.javascript.jscomp.NodeUtil.isValidQualifiedName("");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test00885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00885");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable10 = jSTypeRegistry8.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean11 = jSTypeRegistry8.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType12 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray13 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList14 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14, jSTypeArray13);
        com.google.javascript.rhino.jstype.FunctionType functionType16 = jSTypeRegistry8.createFunctionTypeWithVarArgs(jSType12, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList14);
        boolean boolean17 = functionType16.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter18 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter18, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable22 = jSTypeRegistry20.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean23 = jSTypeRegistry20.shouldTolerateUndefinedValues();
        boolean boolean24 = jSTypeRegistry20.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node30 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node32 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node33 = node30.useSourceInfoIfMissingFromForTree(node32);
        boolean boolean34 = node32.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable39 = jSTypeRegistry37.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean40 = jSTypeRegistry37.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType41 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.jstype.FunctionType functionType45 = jSTypeRegistry37.createFunctionTypeWithVarArgs(jSType41, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        boolean boolean46 = functionType45.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType47 = jSTypeRegistry20.createEnumType("false", node32, (com.google.javascript.rhino.jstype.JSType) functionType45);
        java.util.Set<java.lang.String> strSet48 = functionType45.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair49 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType16, (com.google.javascript.rhino.jstype.JSType) functionType45);
        com.google.javascript.rhino.jstype.JSType jSType50 = functionType45.autoboxesTo();
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable55 = jSTypeRegistry53.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean56 = jSTypeRegistry53.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType57 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray58 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList59 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList59, jSTypeArray58);
        com.google.javascript.rhino.jstype.FunctionType functionType61 = jSTypeRegistry53.createFunctionTypeWithVarArgs(jSType57, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList59);
        com.google.javascript.rhino.jstype.FunctionType functionType62 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType50, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList59);
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative63 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.ObjectType objectType64 = jSTypeRegistry2.getNativeObjectType(jSTypeNative63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(functionType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(functionType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(enumType47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNull(jSType50);
        org.junit.Assert.assertNotNull(jSTypeIterable55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(jSTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(functionType61);
        org.junit.Assert.assertNotNull(functionType62);
    }

    @Test
    public void test00886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00886");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isBooleanObjectType();
        com.google.javascript.rhino.jstype.JSType jSType69 = parameterizedType67.getIndexType();
        com.google.javascript.rhino.jstype.FunctionType functionType70 = parameterizedType67.getOwnerFunction();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType71 = parameterizedType67.toMaybeParameterizedType();
        boolean boolean73 = parameterizedType67.removeProperty("{95881195}");
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(jSType69);
        org.junit.Assert.assertNull(functionType70);
        org.junit.Assert.assertNotNull(parameterizedType71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test00887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00887");
        java.io.IOException iOException1 = new java.io.IOException("{proxy:function (): {1664178586}}");
    }

    @Test
    public void test00888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00888");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean5 = node4.isDefaultCase();
        java.util.Collection<com.google.javascript.rhino.Node> nodeCollection6 = com.google.javascript.jscomp.NodeUtil.getVarsDeclaredInBranch(node4);
        boolean boolean7 = node4.isLabel();
        boolean boolean8 = node4.isHook();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean12 = node11.isGetProp();
        boolean boolean13 = node11.isNumber();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder19 = node18.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int25 = node24.getType();
        boolean boolean26 = node24.isBlock();
        com.google.javascript.rhino.Node node29 = new com.google.javascript.rhino.Node((int) (short) 10, node11, node18, node24, (int) (byte) 10, 44);
        node24.setSourceEncodedPositionForTree(45);
        boolean boolean32 = node24.isSetterDef();
        com.google.javascript.rhino.Node node33 = node4.useSourceInfoIfMissingFromForTree(node24);
        boolean boolean34 = node4.isInstanceOf();
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node42 = node39.useSourceInfoIfMissingFromForTree(node41);
        node42.setLineno(10);
        boolean boolean45 = node42.isWith();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node46 = node4.removeChildAfter(node42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: prev is not a child of this node.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(nodeCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder19);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 45 + "'", int25 == 45);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test00889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00889");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable16 = jSTypeRegistry14.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean17 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        boolean boolean18 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node27 = node24.useSourceInfoIfMissingFromForTree(node26);
        boolean boolean28 = node26.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable33 = jSTypeRegistry31.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean34 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType35 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.jstype.FunctionType functionType39 = jSTypeRegistry31.createFunctionTypeWithVarArgs(jSType35, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean40 = functionType39.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType41 = jSTypeRegistry14.createEnumType("false", node26, (com.google.javascript.rhino.jstype.JSType) functionType39);
        com.google.javascript.rhino.jstype.FunctionType functionType42 = functionType39.getConstructor();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair43 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType10, (com.google.javascript.rhino.jstype.JSType) functionType39);
        com.google.javascript.rhino.jstype.JSType jSType45 = functionType10.findPropertyType("");
        com.google.javascript.rhino.jstype.JSType jSType47 = functionType10.getPropertyType("{1789057375}");
        com.google.javascript.rhino.jstype.JSType jSType48 = functionType10.restrictByNotNullOrUndefined();
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry51 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable53 = jSTypeRegistry51.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean54 = jSTypeRegistry51.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType55 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.jstype.FunctionType functionType59 = jSTypeRegistry51.createFunctionTypeWithVarArgs(jSType55, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        boolean boolean60 = functionType59.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType61 = functionType59.autobox();
        boolean boolean62 = functionType59.isString();
        boolean boolean63 = functionType59.isConstructor();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable64 = functionType59.getAllExtendedInterfaces();
        boolean boolean65 = functionType10.hasEqualCallType(functionType59);
        java.util.List<com.google.javascript.rhino.jstype.FunctionType> functionTypeList66 = functionType10.getSubTypes();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(functionType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(enumType41);
        org.junit.Assert.assertNull(functionType42);
        org.junit.Assert.assertNull(jSType45);
        org.junit.Assert.assertNotNull(jSType47);
        org.junit.Assert.assertNotNull(jSType48);
        org.junit.Assert.assertNotNull(jSTypeIterable53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(functionType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(jSType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objectTypeIterable64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(functionTypeList66);
    }

    @Test
    public void test00890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00890");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.matchesStringContext();
        com.google.javascript.rhino.jstype.FunctionType functionType33 = enumType29.getOwnerFunction();
        boolean boolean34 = enumType29.matchesNumberContext();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(functionType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test00891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00891");
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue1 = com.google.javascript.rhino.jstype.TernaryValue.forBoolean(true);
        boolean boolean3 = ternaryValue1.toBoolean(false);
        org.junit.Assert.assertNotNull(ternaryValue1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test00892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00892");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = null;
        enumType29.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo33);
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder42 = node41.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node47 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean48 = node47.isDefaultCase();
        node47.setVarArgs(true);
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node56 = new com.google.javascript.rhino.Node((int) 'a', node41, node47, node55);
        boolean boolean57 = enumType29.defineElement("{209777139}", node55);
        boolean boolean58 = enumType29.hasReferenceName();
        com.google.javascript.rhino.jstype.JSType jSType60 = enumType29.getPropertyType("{796389407}");
        com.google.javascript.rhino.jstype.JSType jSType62 = enumType29.getPropertyType("{1551784408}");
        boolean boolean64 = enumType29.isPropertyTypeDeclared("{1571838970}");
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder42);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSType60);
        org.junit.Assert.assertNotNull(jSType62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test00893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00893");
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue1 = com.google.javascript.rhino.jstype.TernaryValue.forBoolean(false);
        boolean boolean3 = ternaryValue1.toBoolean(true);
        boolean boolean5 = ternaryValue1.toBoolean(false);
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue6 = null;
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue7 = ternaryValue1.and(ternaryValue6);
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue9 = com.google.javascript.rhino.jstype.TernaryValue.forBoolean(false);
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue10 = com.google.javascript.rhino.jstype.TernaryValue.TRUE;
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue11 = ternaryValue9.xor(ternaryValue10);
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue12 = ternaryValue10.not();
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue13 = ternaryValue7.xor(ternaryValue10);
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue15 = com.google.javascript.rhino.jstype.TernaryValue.forBoolean(false);
        java.lang.String str16 = ternaryValue15.toString();
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue17 = com.google.javascript.rhino.jstype.TernaryValue.TRUE;
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue18 = ternaryValue15.or(ternaryValue17);
        boolean boolean20 = ternaryValue18.toBoolean(false);
        java.lang.String str21 = ternaryValue18.toString();
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue22 = ternaryValue13.or(ternaryValue18);
        org.junit.Assert.assertNotNull(ternaryValue1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(ternaryValue7);
        org.junit.Assert.assertNotNull(ternaryValue9);
        org.junit.Assert.assertNotNull(ternaryValue10);
        org.junit.Assert.assertNotNull(ternaryValue11);
        org.junit.Assert.assertNotNull(ternaryValue12);
        org.junit.Assert.assertNotNull(ternaryValue13);
        org.junit.Assert.assertNotNull(ternaryValue15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "false" + "'", str16, "false");
        org.junit.Assert.assertNotNull(ternaryValue17);
        org.junit.Assert.assertNotNull(ternaryValue18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "true" + "'", str21, "true");
        org.junit.Assert.assertNotNull(ternaryValue22);
    }

    @Test
    public void test00894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00894");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable16 = jSTypeRegistry14.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean17 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        boolean boolean18 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node27 = node24.useSourceInfoIfMissingFromForTree(node26);
        boolean boolean28 = node26.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable33 = jSTypeRegistry31.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean34 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType35 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.jstype.FunctionType functionType39 = jSTypeRegistry31.createFunctionTypeWithVarArgs(jSType35, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean40 = functionType39.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType41 = jSTypeRegistry14.createEnumType("false", node26, (com.google.javascript.rhino.jstype.JSType) functionType39);
        java.util.Set<java.lang.String> strSet42 = functionType39.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair43 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType10, (com.google.javascript.rhino.jstype.JSType) functionType39);
        boolean boolean44 = functionType39.isInstanceType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo46 = functionType39.getOwnPropertyJSDocInfo("{142159271}");
        java.lang.String str47 = functionType39.getDisplayName();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(functionType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(enumType41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(jSDocInfo46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test00895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00895");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        boolean boolean69 = parameterizedType67.isConstructor();
        boolean boolean70 = parameterizedType67.isEmptyType();
        boolean boolean72 = parameterizedType67.isPropertyTypeDeclared("");
        com.google.javascript.rhino.jstype.FunctionType functionType73 = parameterizedType67.getConstructor();
        boolean boolean74 = parameterizedType67.isInstanceType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo76 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str77 = jSDocInfo76.getDescription();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression78 = jSDocInfo76.getType();
        parameterizedType67.setPropertyJSDocInfo("NUMBER 100.0", jSDocInfo76);
        boolean boolean80 = parameterizedType67.isOrdinaryFunction();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType81 = parameterizedType67.toMaybeParameterizedType();
        boolean boolean82 = parameterizedType67.isInterface();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(functionType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(jSTypeExpression78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(parameterizedType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test00896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00896");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean2 = node1.isFalse();
        boolean boolean3 = node1.isQualifiedName();
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newNumber((double) 2, 54, (int) (short) 100);
        com.google.javascript.rhino.Node node8 = node1.srcref(node7);
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative10 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec11 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", jSTypeNative10);
        java.lang.String str12 = assertionFunctionSpec11.getFunctionName();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder19 = node18.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean25 = node24.isDefaultCase();
        node24.setVarArgs(true);
        com.google.javascript.rhino.Node node32 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node33 = new com.google.javascript.rhino.Node((int) 'a', node18, node24, node32);
        com.google.javascript.rhino.ErrorReporter errorReporter34 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter34, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable38 = jSTypeRegistry36.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean39 = jSTypeRegistry36.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry42 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable44 = jSTypeRegistry42.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean45 = jSTypeRegistry42.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType46 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.jstype.FunctionType functionType50 = jSTypeRegistry42.createFunctionTypeWithVarArgs(jSType46, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        boolean boolean51 = functionType50.canBeCalled();
        boolean boolean52 = functionType50.hasAnyTemplateInternal();
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.FunctionType functionType54 = jSTypeRegistry36.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType50, jSTypeArray53);
        com.google.javascript.rhino.jstype.JSType jSType55 = assertionFunctionSpec11.getAssertedType(node18, jSTypeRegistry36);
        boolean boolean56 = node18.isGetProp();
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean60 = node59.isGetProp();
        boolean boolean61 = node59.isNumber();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder67 = node66.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node72 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int73 = node72.getType();
        boolean boolean74 = node72.isBlock();
        com.google.javascript.rhino.Node node77 = new com.google.javascript.rhino.Node((int) (short) 10, node59, node66, node72, (int) (byte) 10, 44);
        com.google.javascript.rhino.Node node78 = node59.getNext();
        // The following exception was thrown during execution in test generation
        try {
            node1.addChildBefore(node18, node78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The existing child node of the parent should not be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" + "'", str12, "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder19);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(jSTypeIterable38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(functionType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertNotNull(functionType54);
        org.junit.Assert.assertNull(jSType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder67);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 45 + "'", int73 == 45);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(node78);
    }

    @Test
    public void test00897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00897");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isBooleanObjectType();
        com.google.javascript.rhino.jstype.JSType jSType69 = parameterizedType67.autobox();
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry72 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable74 = jSTypeRegistry72.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean75 = jSTypeRegistry72.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType76 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray77 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList78 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78, jSTypeArray77);
        com.google.javascript.rhino.jstype.FunctionType functionType80 = jSTypeRegistry72.createFunctionTypeWithVarArgs(jSType76, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        boolean boolean81 = jSType69.canTestForEqualityWith((com.google.javascript.rhino.jstype.JSType) functionType80);
        com.google.javascript.rhino.Node node82 = functionType80.getSource();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable83 = functionType80.getOwnImplementedInterfaces();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable84 = functionType80.getImplementedInterfaces();
        java.lang.Iterable iterable85 = functionType80.getCtorImplementedInterfaces();
        int int86 = functionType80.getMinArguments();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(jSType69);
        org.junit.Assert.assertNotNull(jSTypeIterable74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(jSTypeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(functionType80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(node82);
        org.junit.Assert.assertNotNull(objectTypeIterable83);
        org.junit.Assert.assertNotNull(objectTypeIterable84);
        org.junit.Assert.assertNotNull(iterable85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test00898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00898");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = enumType29.getOwnPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n");
        java.util.Set<java.lang.String> strSet34 = enumType29.getElements();
        boolean boolean35 = strSet34.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean37 = strSet34.add("{1236548498}");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(jSDocInfo33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test00899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00899");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable16 = jSTypeRegistry14.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean17 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        boolean boolean18 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node27 = node24.useSourceInfoIfMissingFromForTree(node26);
        boolean boolean28 = node26.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable33 = jSTypeRegistry31.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean34 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType35 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.jstype.FunctionType functionType39 = jSTypeRegistry31.createFunctionTypeWithVarArgs(jSType35, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean40 = functionType39.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType41 = jSTypeRegistry14.createEnumType("false", node26, (com.google.javascript.rhino.jstype.JSType) functionType39);
        com.google.javascript.rhino.jstype.FunctionType functionType42 = functionType39.getConstructor();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair43 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType10, (com.google.javascript.rhino.jstype.JSType) functionType39);
        com.google.javascript.rhino.jstype.JSType jSType45 = functionType10.findPropertyType("");
        com.google.javascript.rhino.jstype.ObjectType objectType46 = functionType10.getTypeOfThis();
        java.util.List<com.google.javascript.rhino.jstype.ObjectType> objectTypeList47 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionType10.setImplementedInterfaces(objectTypeList47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(functionType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(enumType41);
        org.junit.Assert.assertNull(functionType42);
        org.junit.Assert.assertNull(jSType45);
        org.junit.Assert.assertNotNull(objectType46);
    }

    @Test
    public void test00900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00900");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, false);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable4 = jSTypeRegistry2.getEachReferenceTypeWithProperty("{2044072356}");
        jSTypeRegistry2.identifyNonNullableName("{796389407}");
        jSTypeRegistry2.forwardDeclareType("SHEQ ");
        com.google.javascript.rhino.jstype.JSTypeNative[] jSTypeNativeArray9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.JSType jSType10 = jSTypeRegistry2.createUnionType(jSTypeNativeArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectTypeIterable4);
    }

    @Test
    public void test00901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00901");
        com.google.javascript.rhino.JSDocInfo.Marker marker0 = new com.google.javascript.rhino.JSDocInfo.Marker();
        com.google.javascript.rhino.SourcePosition<com.google.javascript.rhino.Node> nodeSourcePosition1 = marker0.getNameNode();
        com.google.javascript.rhino.JSDocInfo.TypePosition typePosition2 = marker0.getType();
        com.google.javascript.rhino.JSDocInfo.StringPosition stringPosition3 = marker0.getName();
        org.junit.Assert.assertNull(nodeSourcePosition1);
        org.junit.Assert.assertNull(typePosition2);
        org.junit.Assert.assertNull(stringPosition3);
    }

    @Test
    public void test00902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00902");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.size();
        com.google.javascript.rhino.JSDocInfo jSDocInfo6 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str7 = jSDocInfo6.getDescription();
        java.lang.String str8 = jSDocInfo6.getLicense();
        boolean boolean9 = strComparableList2.contains((java.lang.Object) str8);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test00903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00903");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean3 = node2.isGetProp();
        boolean boolean4 = node2.isNumber();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int16 = node15.getType();
        boolean boolean17 = node15.isBlock();
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) (short) 10, node2, node9, node15, (int) (byte) 10, 44);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder26 = node25.getJsDocBuilderForNode();
        node20.addChildrenToFront(node25);
        node20.setCharno(0);
        boolean boolean30 = node20.isTypeOf();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 45 + "'", int16 == 45);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test00904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00904");
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList1 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "");
        com.google.common.collect.UnmodifiableIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = strComparableList1.iterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator3 = strComparableList1.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.common.collect.UnmodifiableListIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = strComparableList1.listIterator(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: index (16) must not be greater than size (1)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparableList1);
        org.junit.Assert.assertNotNull(strComparableItor2);
        org.junit.Assert.assertNotNull(strComparableSpliterator3);
    }

    @Test
    public void test00905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00905");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isBooleanObjectType();
        com.google.javascript.rhino.jstype.JSType jSType69 = parameterizedType67.autobox();
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry72 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable74 = jSTypeRegistry72.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean75 = jSTypeRegistry72.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType76 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray77 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList78 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78, jSTypeArray77);
        com.google.javascript.rhino.jstype.FunctionType functionType80 = jSTypeRegistry72.createFunctionTypeWithVarArgs(jSType76, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        boolean boolean81 = jSType69.canTestForEqualityWith((com.google.javascript.rhino.jstype.JSType) functionType80);
        com.google.javascript.rhino.Node node82 = functionType80.getSource();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable83 = functionType80.getOwnImplementedInterfaces();
        boolean boolean84 = functionType80.isNativeObjectType();
        com.google.common.collect.ImmutableList<java.lang.String> strList85 = functionType80.getTemplateTypeNames();
        boolean boolean86 = functionType80.isFunctionPrototypeType();
        int int87 = functionType80.getMaxArguments();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(jSType69);
        org.junit.Assert.assertNotNull(jSTypeIterable74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(jSTypeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(functionType80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(node82);
        org.junit.Assert.assertNotNull(objectTypeIterable83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test00906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00906");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.matchesStringContext();
        boolean boolean33 = enumType29.isConstructor();
        com.google.javascript.rhino.jstype.EnumType enumType34 = enumType29.toMaybeEnumType();
        boolean boolean35 = enumType34.isDateType();
        boolean boolean36 = enumType34.matchesNumberContext();
        java.lang.String str37 = enumType34.toAnnotationString();
        boolean boolean38 = enumType34.isObject();
        boolean boolean39 = enumType34.isInterface();
        java.lang.Iterable iterable40 = enumType34.getCtorImplementedInterfaces();
        boolean boolean42 = enumType34.isPropertyTypeInferred("{1522172454}");
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Object" + "'", str37, "Object");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(iterable40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test00907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00907");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean3 = node2.isGetProp();
        boolean boolean4 = node2.isNumber();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int16 = node15.getType();
        boolean boolean17 = node15.isBlock();
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) (short) 10, node2, node9, node15, (int) (byte) 10, 44);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node28 = node25.useSourceInfoIfMissingFromForTree(node27);
        com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean34 = node33.isDefaultCase();
        node33.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId37 = node33.getInputId();
        node33.detachChildren();
        com.google.javascript.rhino.Node node39 = node27.copyInformationFrom(node33);
        int int40 = node33.getType();
        com.google.javascript.rhino.Node node41 = node15.copyInformationFrom(node33);
        boolean boolean42 = node33.isArrayLit();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 45 + "'", int16 == 45);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(inputId37);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 45 + "'", int40 == 45);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test00908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00908");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = enumType29.getOwnPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n");
        java.util.Set<java.lang.String> strSet34 = enumType29.getElements();
        enumType29.clearCachedValues();
        com.google.javascript.rhino.jstype.ObjectType objectType36 = enumType29.getImplicitPrototype();
        boolean boolean37 = objectType36.isRecordType();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(jSDocInfo33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(objectType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test00909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00909");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType69 = parameterizedType67.toMaybeEnumElementType();
        com.google.javascript.rhino.jstype.TemplateType templateType70 = parameterizedType67.toMaybeTemplateType();
        boolean boolean72 = parameterizedType67.isPropertyTypeInferred("hi!");
        com.google.javascript.rhino.jstype.JSType jSType74 = parameterizedType67.findPropertyType("{1687381779}");
        com.google.javascript.rhino.jstype.ObjectType.Property property76 = parameterizedType67.getOwnSlot("hi!");
        boolean boolean77 = parameterizedType67.isInterface();
        com.google.javascript.rhino.jstype.ObjectType objectType78 = parameterizedType67.getTypeOfThis();
        boolean boolean79 = parameterizedType67.isNoObjectType();
        boolean boolean80 = parameterizedType67.isConstructor();
        boolean boolean81 = parameterizedType67.isParameterizedType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(enumElementType69);
        org.junit.Assert.assertNull(templateType70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(jSType74);
        org.junit.Assert.assertNull(property76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objectType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test00910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00910");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        com.google.javascript.rhino.ErrorReporter errorReporter11 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node15 = jSTypeRegistry13.createParameters(jSTypeArray14);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable20 = jSTypeRegistry18.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean21 = jSTypeRegistry18.shouldTolerateUndefinedValues();
        boolean boolean22 = jSTypeRegistry18.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node30 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node31 = node28.useSourceInfoIfMissingFromForTree(node30);
        boolean boolean32 = node30.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry35 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable37 = jSTypeRegistry35.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean38 = jSTypeRegistry35.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType39 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.jstype.FunctionType functionType43 = jSTypeRegistry35.createFunctionTypeWithVarArgs(jSType39, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        boolean boolean44 = functionType43.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType45 = jSTypeRegistry18.createEnumType("false", node30, (com.google.javascript.rhino.jstype.JSType) functionType43);
        java.util.Set<java.lang.String> strSet46 = functionType43.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter47 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry49 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter47, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable51 = jSTypeRegistry49.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean52 = jSTypeRegistry49.shouldTolerateUndefinedValues();
        boolean boolean53 = jSTypeRegistry49.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node61 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node62 = node59.useSourceInfoIfMissingFromForTree(node61);
        boolean boolean63 = node61.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter64 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter64, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable68 = jSTypeRegistry66.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean69 = jSTypeRegistry66.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType70 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList72 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72, jSTypeArray71);
        com.google.javascript.rhino.jstype.FunctionType functionType74 = jSTypeRegistry66.createFunctionTypeWithVarArgs(jSType70, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        boolean boolean75 = functionType74.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType76 = jSTypeRegistry49.createEnumType("false", node61, (com.google.javascript.rhino.jstype.JSType) functionType74);
        com.google.javascript.rhino.jstype.FunctionType functionType77 = functionType74.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType78 = jSTypeRegistry13.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType43, (com.google.javascript.rhino.jstype.JSType) functionType77);
        boolean boolean79 = parameterizedType78.isBooleanObjectType();
        com.google.javascript.rhino.jstype.JSType jSType80 = parameterizedType78.autobox();
        com.google.javascript.rhino.ErrorReporter errorReporter81 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry83 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter81, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable85 = jSTypeRegistry83.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean86 = jSTypeRegistry83.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType87 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray88 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList89 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList89, jSTypeArray88);
        com.google.javascript.rhino.jstype.FunctionType functionType91 = jSTypeRegistry83.createFunctionTypeWithVarArgs(jSType87, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList89);
        boolean boolean92 = jSType80.canTestForEqualityWith((com.google.javascript.rhino.jstype.JSType) functionType91);
        com.google.javascript.rhino.Node node93 = functionType91.getSource();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair94 = new com.google.javascript.rhino.jstype.JSType.TypePair(jSType6, (com.google.javascript.rhino.jstype.JSType) functionType91);
        com.google.javascript.rhino.jstype.JSType jSType95 = typePair94.typeA;
        com.google.javascript.rhino.jstype.JSType jSType96 = typePair94.typeA;
        com.google.javascript.rhino.jstype.JSType jSType97 = typePair94.typeB;
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(jSTypeIterable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(functionType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(enumType45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(jSTypeIterable51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(functionType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(enumType76);
        org.junit.Assert.assertNull(functionType77);
        org.junit.Assert.assertNotNull(parameterizedType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(jSType80);
        org.junit.Assert.assertNotNull(jSTypeIterable85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSTypeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(functionType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(node93);
        org.junit.Assert.assertNull(jSType95);
        org.junit.Assert.assertNull(jSType96);
        org.junit.Assert.assertNotNull(jSType97);
    }

    @Test
    public void test00911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00911");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo70 = parameterizedType67.getOwnPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean71 = parameterizedType67.matchesStringContext();
        com.google.javascript.rhino.JSDocInfo jSDocInfo72 = parameterizedType67.getJSDocInfo();
        boolean boolean74 = parameterizedType67.removeProperty("function (): {985971941}");
        boolean boolean76 = parameterizedType67.isPropertyTypeInferred("({proxy:function (): {1209554252}})");
        boolean boolean77 = parameterizedType67.isFunctionType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(jSDocInfo70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(jSDocInfo72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test00912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00912");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        boolean boolean69 = parameterizedType67.isConstructor();
        boolean boolean70 = parameterizedType67.isEmptyType();
        boolean boolean72 = parameterizedType67.isPropertyTypeDeclared("false");
        java.lang.Iterable iterable73 = parameterizedType67.getCtorImplementedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType75 = parameterizedType67.findPropertyType("{1558223005}");
        boolean boolean76 = parameterizedType67.isNoObjectType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(iterable73);
        org.junit.Assert.assertNull(jSType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test00913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00913");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, false);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable4 = jSTypeRegistry2.getEachReferenceTypeWithProperty("{2044072356}");
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType11 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        com.google.javascript.rhino.jstype.FunctionType functionType15 = jSTypeRegistry7.createFunctionTypeWithVarArgs(jSType11, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        jSTypeRegistry7.forwardDeclareType("{1687381779}");
        com.google.javascript.rhino.jstype.JSTypeNative[] jSTypeNativeArray18 = new com.google.javascript.rhino.jstype.JSTypeNative[] {};
        com.google.javascript.rhino.jstype.JSType jSType19 = jSTypeRegistry7.createUnionType(jSTypeNativeArray18);
        com.google.javascript.rhino.ErrorReporter errorReporter20 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter20, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node24 = jSTypeRegistry22.createParameters(jSTypeArray23);
        com.google.javascript.rhino.ErrorReporter errorReporter25 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter25, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable29 = jSTypeRegistry27.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean30 = jSTypeRegistry27.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType31 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.jstype.FunctionType functionType35 = jSTypeRegistry27.createFunctionTypeWithVarArgs(jSType31, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        com.google.javascript.rhino.Node node36 = jSTypeRegistry22.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        com.google.javascript.rhino.Node node37 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        com.google.javascript.rhino.jstype.JSTypeNative[] jSTypeNativeArray38 = new com.google.javascript.rhino.jstype.JSTypeNative[] {};
        com.google.javascript.rhino.jstype.JSType jSType39 = jSTypeRegistry7.createUnionType(jSTypeNativeArray38);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry2.createUnionType(jSTypeNativeArray38);
        com.google.javascript.rhino.jstype.JSType jSType42 = jSTypeRegistry2.getType("{1780576940}");
        org.junit.Assert.assertNotNull(objectTypeIterable4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(functionType15);
        org.junit.Assert.assertNotNull(jSTypeNativeArray18);
        org.junit.Assert.assertNotNull(jSType19);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeIterable29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(functionType35);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(jSTypeNativeArray38);
        org.junit.Assert.assertNotNull(jSType39);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertNull(jSType42);
    }

    @Test
    public void test00914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00914");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder6 = node5.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean12 = node11.isDefaultCase();
        node11.setVarArgs(true);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) 'a', node5, node11, node19);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile21 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node19);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node29 = node26.useSourceInfoIfMissingFromForTree(node28);
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean32 = node31.isFalse();
        boolean boolean33 = node28.hasChild(node31);
        com.google.javascript.rhino.Node node34 = node19.useSourceInfoFromForTree(node28);
        // The following exception was thrown during execution in test generation
        try {
            node34.setSideEffectFlags(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: setIsNoSideEffectsCall only supports CALL and NEW nodes, got SHEQ");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder6);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNull(staticSourceFile21);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
    }

    @Test
    public void test00915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00915");
        int int1 = com.google.javascript.jscomp.NodeUtil.getInverseOperator(30);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
    }

    @Test
    public void test00916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00916");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean5 = node4.isDefaultCase();
        node4.setVarArgs(true);
        node4.setVarArgs(false);
        node4.setLength((int) (byte) 0);
        node4.removeProp((int) 'a');
        node4.setIsSyntheticBlock(true);
        boolean boolean17 = node4.getBooleanProp((-1));
        boolean boolean18 = node4.isFor();
        boolean boolean19 = node4.isAdd();
        java.util.Set<java.lang.String> strSet20 = node4.getDirectives();
        com.google.javascript.rhino.Node node21 = node4.getLastChild();
        boolean boolean22 = node4.isLabelName();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(strSet20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test00917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00917");
        com.google.common.collect.ImmutableList.Builder<com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>>> strComparableListBuilder0 = com.google.common.collect.ImmutableList.builder();
        org.junit.Assert.assertNotNull(strComparableListBuilder0);
    }

    @Test
    public void test00918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00918");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.matchesObjectContext();
        int int12 = functionType10.getMinArguments();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable17 = jSTypeRegistry15.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean18 = jSTypeRegistry15.shouldTolerateUndefinedValues();
        boolean boolean19 = jSTypeRegistry15.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node28 = node25.useSourceInfoIfMissingFromForTree(node27);
        boolean boolean29 = node27.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable34 = jSTypeRegistry32.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean35 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType36 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.jstype.FunctionType functionType40 = jSTypeRegistry32.createFunctionTypeWithVarArgs(jSType36, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        boolean boolean41 = functionType40.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType42 = jSTypeRegistry15.createEnumType("false", node27, (com.google.javascript.rhino.jstype.JSType) functionType40);
        boolean boolean44 = enumType42.isPropertyTypeDeclared("");
        boolean boolean45 = enumType42.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType46 = enumType42.toMaybeUnionType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType47 = enumType42.getElementsType();
        boolean boolean48 = enumElementType47.matchesObjectContext();
        boolean boolean50 = enumElementType47.isPropertyTypeInferred("{1063101054}");
        com.google.javascript.rhino.jstype.FunctionType functionType51 = enumElementType47.getConstructor();
        boolean boolean52 = functionType10.canTestForEqualityWith((com.google.javascript.rhino.jstype.JSType) enumElementType47);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable53 = functionType10.getOwnImplementedInterfaces();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(jSTypeIterable17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(functionType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(enumType42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(unionType46);
        org.junit.Assert.assertNotNull(enumElementType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(functionType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objectTypeIterable53);
    }

    @Test
    public void test00919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00919");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType11 = jSTypeRegistry2.createNamedType("{1386736703}", "{1837470344}", 52, (int) (short) -1);
        com.google.javascript.rhino.JSDocInfo.TypePosition typePosition12 = new com.google.javascript.rhino.JSDocInfo.TypePosition();
        boolean boolean13 = typePosition12.hasBrackets();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean19 = node18.isDefaultCase();
        node18.setVarArgs(true);
        node18.setVarArgs(false);
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable24 = node18.getAncestors();
        typePosition12.setItem(node18);
        boolean boolean26 = node18.isFromExterns();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node32 = jSTypeRegistry30.createParameters(jSTypeArray31);
        com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode resolveMode33 = com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode.LAZY_NAMES;
        jSTypeRegistry30.setResolveMode(resolveMode33);
        com.google.javascript.rhino.jstype.JSType jSType35 = null;
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable41 = jSTypeRegistry39.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean42 = jSTypeRegistry39.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable47 = jSTypeRegistry45.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean48 = jSTypeRegistry45.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType49 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray50 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList51 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList51, jSTypeArray50);
        com.google.javascript.rhino.jstype.FunctionType functionType53 = jSTypeRegistry45.createFunctionTypeWithVarArgs(jSType49, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList51);
        boolean boolean54 = functionType53.canBeCalled();
        boolean boolean55 = functionType53.hasAnyTemplateInternal();
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.FunctionType functionType57 = jSTypeRegistry39.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType53, jSTypeArray56);
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry60 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable62 = jSTypeRegistry60.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean63 = jSTypeRegistry60.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType64 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList66 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList66, jSTypeArray65);
        com.google.javascript.rhino.jstype.FunctionType functionType68 = jSTypeRegistry60.createFunctionTypeWithVarArgs(jSType64, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList66);
        boolean boolean69 = functionType68.canBeCalled();
        java.util.Set<java.lang.String> strSet70 = functionType68.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.FunctionType functionType72 = functionType68.getBindReturnType(40);
        boolean boolean73 = functionType68.isNominalType();
        com.google.javascript.rhino.ErrorReporter errorReporter75 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry77 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter75, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray78 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node79 = jSTypeRegistry77.createParameters(jSTypeArray78);
        com.google.javascript.rhino.jstype.FunctionType functionType80 = jSTypeRegistry39.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType68, false, jSTypeArray78);
        com.google.javascript.rhino.jstype.FunctionType functionType81 = jSTypeRegistry30.createConstructorType(jSType35, false, jSTypeArray78);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.JSType jSType82 = jSTypeRegistry2.createFromTypeNodes(node18, "{1780576940}", (com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unexpected node in type expression: SHEQ  1");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(jSType11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(ancestorIterable24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + resolveMode33 + "' != '" + com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode.LAZY_NAMES + "'", resolveMode33.equals(com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode.LAZY_NAMES));
        org.junit.Assert.assertNotNull(jSTypeIterable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(jSTypeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(functionType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertNotNull(functionType57);
        org.junit.Assert.assertNotNull(jSTypeIterable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(functionType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertNotNull(functionType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(jSTypeArray78);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertNotNull(functionType80);
        org.junit.Assert.assertNotNull(functionType81);
    }

    @Test
    public void test00920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00920");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean6 = node5.isDefaultCase();
        boolean boolean7 = node5.isTry();
        com.google.javascript.rhino.Node node8 = node5.getLastSibling();
        com.google.javascript.rhino.Node node9 = new com.google.javascript.rhino.Node(4095, node5);
        node5.putIntProp(43, (int) (short) 100);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node8);
    }

    @Test
    public void test00921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00921");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean1 = jSDocInfo0.hasReturnType();
        boolean boolean2 = jSDocInfo0.hasFileOverview();
        boolean boolean3 = jSDocInfo0.isHidden();
        boolean boolean4 = jSDocInfo0.isDeprecated();
        boolean boolean5 = jSDocInfo0.isInterface();
        boolean boolean6 = jSDocInfo0.hasTypedefType();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test00922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00922");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        node4.setQuotedString();
        boolean boolean9 = node4.isThrow();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test00923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00923");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        jSTypeRegistry2.clearNamedTypes();
        boolean boolean13 = jSTypeRegistry2.isForwardDeclaredType("{1747963529}");
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test00924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00924");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable11 = jSTypeRegistry9.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean12 = jSTypeRegistry9.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable17 = jSTypeRegistry15.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean18 = jSTypeRegistry15.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable23 = jSTypeRegistry21.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean24 = jSTypeRegistry21.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter25 = jSTypeRegistry21.getErrorReporter();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.jstype.JSTypeRegistry> jSTypeRegistryList26 = com.google.common.collect.ImmutableList.of(jSTypeRegistry2, jSTypeRegistry9, jSTypeRegistry15, jSTypeRegistry21);
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable31 = jSTypeRegistry29.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean32 = jSTypeRegistry29.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry35 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable37 = jSTypeRegistry35.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean38 = jSTypeRegistry35.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType39 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.jstype.FunctionType functionType43 = jSTypeRegistry35.createFunctionTypeWithVarArgs(jSType39, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        boolean boolean44 = functionType43.canBeCalled();
        boolean boolean45 = functionType43.hasAnyTemplateInternal();
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.FunctionType functionType47 = jSTypeRegistry29.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType43, jSTypeArray46);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry9.createOptionalParameters(jSTypeArray46);
        jSTypeRegistry9.identifyNonNullableName("{1780576940}");
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable55 = jSTypeRegistry53.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean56 = jSTypeRegistry53.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter57 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter57, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable61 = jSTypeRegistry59.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean62 = jSTypeRegistry59.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType63 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray64 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList65 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList65, jSTypeArray64);
        com.google.javascript.rhino.jstype.FunctionType functionType67 = jSTypeRegistry59.createFunctionTypeWithVarArgs(jSType63, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList65);
        boolean boolean68 = functionType67.canBeCalled();
        boolean boolean69 = functionType67.hasAnyTemplateInternal();
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray70 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.FunctionType functionType71 = jSTypeRegistry53.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType67, jSTypeArray70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry74 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable76 = jSTypeRegistry74.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean77 = jSTypeRegistry74.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType78 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray79 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList80 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList80, jSTypeArray79);
        com.google.javascript.rhino.jstype.FunctionType functionType82 = jSTypeRegistry74.createFunctionTypeWithVarArgs(jSType78, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList80);
        boolean boolean83 = functionType82.canBeCalled();
        java.util.Set<java.lang.String> strSet84 = functionType82.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.FunctionType functionType86 = functionType82.getBindReturnType(40);
        boolean boolean87 = functionType82.isNominalType();
        com.google.javascript.rhino.ErrorReporter errorReporter89 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry91 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter89, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray92 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node93 = jSTypeRegistry91.createParameters(jSTypeArray92);
        com.google.javascript.rhino.jstype.FunctionType functionType94 = jSTypeRegistry53.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType82, false, jSTypeArray92);
        com.google.javascript.rhino.Node node95 = jSTypeRegistry9.createParameters(jSTypeArray92);
        // The following exception was thrown during execution in test generation
        try {
            node95.setQuotedString();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: not a StringNode");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(errorReporter25);
        org.junit.Assert.assertNotNull(jSTypeRegistryList26);
        org.junit.Assert.assertNotNull(jSTypeIterable31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(functionType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertNotNull(functionType47);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(jSTypeIterable55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(jSTypeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(functionType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(jSTypeArray70);
        org.junit.Assert.assertNotNull(functionType71);
        org.junit.Assert.assertNotNull(jSTypeIterable76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(jSTypeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(functionType82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertNotNull(functionType86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(jSTypeArray92);
        org.junit.Assert.assertNotNull(node93);
        org.junit.Assert.assertNotNull(functionType94);
        org.junit.Assert.assertNotNull(node95);
    }

    @Test
    public void test00925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00925");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType11 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        com.google.javascript.rhino.jstype.FunctionType functionType15 = jSTypeRegistry7.createFunctionTypeWithVarArgs(jSType11, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        com.google.javascript.rhino.Node node16 = jSTypeRegistry2.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry25 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable27 = jSTypeRegistry25.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean28 = jSTypeRegistry25.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType29 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.jstype.FunctionType functionType33 = jSTypeRegistry25.createFunctionTypeWithVarArgs(jSType29, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        boolean boolean34 = functionType33.canBeCalled();
        boolean boolean35 = functionType33.hasAnyTemplateInternal();
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.FunctionType functionType37 = jSTypeRegistry19.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType33, jSTypeArray36);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable42 = jSTypeRegistry40.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean43 = jSTypeRegistry40.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType44 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.jstype.FunctionType functionType48 = jSTypeRegistry40.createFunctionTypeWithVarArgs(jSType44, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        boolean boolean49 = functionType48.canBeCalled();
        java.util.Set<java.lang.String> strSet50 = functionType48.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.FunctionType functionType52 = functionType48.getBindReturnType(40);
        boolean boolean53 = functionType48.isNominalType();
        com.google.javascript.rhino.ErrorReporter errorReporter55 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry57 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter55, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray58 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node59 = jSTypeRegistry57.createParameters(jSTypeArray58);
        com.google.javascript.rhino.jstype.FunctionType functionType60 = jSTypeRegistry19.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType48, false, jSTypeArray58);
        com.google.javascript.rhino.Node node61 = jSTypeRegistry2.createParametersWithVarArgs(jSTypeArray58);
        com.google.javascript.rhino.InputId inputId62 = com.google.javascript.jscomp.NodeUtil.getInputId(node61);
        node61.setType((int) (short) 100);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(functionType15);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(functionType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertNotNull(functionType37);
        org.junit.Assert.assertNotNull(jSTypeIterable42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(functionType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(functionType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(jSTypeArray58);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(functionType60);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNull(inputId62);
    }

    @Test
    public void test00926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00926");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str1 = jSDocInfo0.getDescription();
        java.lang.String str2 = jSDocInfo0.getLicense();
        int int3 = jSDocInfo0.getImplementedInterfaceCount();
        java.lang.String str4 = jSDocInfo0.getFileOverview();
        java.lang.String str5 = jSDocInfo0.getDeprecationReason();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression7 = jSDocInfo0.getParameterType("{949411725}");
        boolean boolean8 = jSDocInfo0.isOverride();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(jSTypeExpression7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test00927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00927");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("", jSTypeNative1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 2, 54, (int) (short) 100);
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node14 = node11.useSourceInfoIfMissingFromForTree(node13);
        boolean boolean15 = com.google.javascript.jscomp.NodeUtil.isRelationalOperation(node11);
        boolean boolean16 = node6.isEquivalentTo(node11);
        com.google.javascript.rhino.Node node17 = node6.removeFirstChild();
        com.google.javascript.rhino.ErrorReporter errorReporter18 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter18, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node22 = jSTypeRegistry20.createParameters(jSTypeArray21);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry25 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable27 = jSTypeRegistry25.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean28 = jSTypeRegistry25.shouldTolerateUndefinedValues();
        boolean boolean29 = jSTypeRegistry25.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node35 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node37 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node38 = node35.useSourceInfoIfMissingFromForTree(node37);
        boolean boolean39 = node37.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry42 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable44 = jSTypeRegistry42.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean45 = jSTypeRegistry42.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType46 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.jstype.FunctionType functionType50 = jSTypeRegistry42.createFunctionTypeWithVarArgs(jSType46, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        boolean boolean51 = functionType50.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType52 = jSTypeRegistry25.createEnumType("false", node37, (com.google.javascript.rhino.jstype.JSType) functionType50);
        boolean boolean54 = enumType52.isPropertyTypeDeclared("");
        boolean boolean55 = enumType52.matchesStringContext();
        java.lang.String str56 = enumType52.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType57 = enumType52.getConstructor();
        com.google.javascript.rhino.JSDocInfo jSDocInfo58 = enumType52.getJSDocInfo();
        enumType52.clearCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType64 = jSTypeRegistry20.getType((com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) enumType52, "", "Not declared as a type name", 36, (int) '#');
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry67 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node69 = jSTypeRegistry67.createParameters(jSTypeArray68);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry20.createParametersWithVarArgs(jSTypeArray68);
        com.google.javascript.rhino.jstype.JSType jSType71 = assertionFunctionSpec2.getAssertedType(node17, jSTypeRegistry20);
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative72 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.ObjectType objectType73 = jSTypeRegistry20.getNativeObjectType(jSTypeNative72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(jSTypeIterable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(functionType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(enumType52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{1510958085}" + "'", str56, "{1510958085}");
        org.junit.Assert.assertNull(functionType57);
        org.junit.Assert.assertNull(jSDocInfo58);
        org.junit.Assert.assertNotNull(jSType64);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNull(jSType71);
    }

    @Test
    public void test00928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00928");
        boolean boolean1 = com.google.javascript.jscomp.NodeUtil.isValidQualifiedName("{1395256719}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test00929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00929");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isBooleanObjectType();
        com.google.javascript.rhino.jstype.JSType jSType69 = parameterizedType67.getIndexType();
        boolean boolean71 = parameterizedType67.isPropertyTypeInferred("Unknown class name");
        com.google.javascript.rhino.jstype.TemplateType templateType72 = parameterizedType67.toMaybeTemplateType();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.JSType jSType73 = templateType72.getParameterType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(jSType69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(templateType72);
    }

    @Test
    public void test00930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00930");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        boolean boolean8 = node6.isExprResult();
        com.google.javascript.rhino.Node node9 = node6.cloneTree();
        node6.setCharno(29);
        boolean boolean12 = node6.isCall();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.JSDocInfo jSDocInfo13 = com.google.javascript.jscomp.NodeUtil.getFunctionJSDocInfo(node6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test00931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00931");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder6 = node5.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean12 = node11.isDefaultCase();
        node11.setVarArgs(true);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) 'a', node5, node11, node19);
        boolean boolean21 = node20.isGetterDef();
        boolean boolean22 = node20.isQuotedString();
        node20.setSourceEncodedPosition(4);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression26 = new com.google.javascript.rhino.JSTypeExpression(node20, "Unknown class name");
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression27 = com.google.javascript.rhino.JSTypeExpression.makeOptionalArg(jSTypeExpression26);
        boolean boolean28 = jSTypeExpression26.isVarArgs();
        boolean boolean29 = jSTypeExpression26.isOptionalArg();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.JSTypeExpression jSTypeExpression30 = com.google.javascript.rhino.JSTypeExpression.makeOptionalArg(jSTypeExpression26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: new child has existing parent");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder6);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeExpression27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test00932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00932");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int8 = node7.getType();
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder15 = node14.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean21 = node20.isDefaultCase();
        node20.setVarArgs(true);
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node29 = new com.google.javascript.rhino.Node((int) 'a', node14, node20, node28);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile30 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node28);
        com.google.javascript.rhino.Node node31 = node7.useSourceInfoFromForTree(node28);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile32 = node28.getStaticSourceFile();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry35 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable37 = jSTypeRegistry35.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean38 = jSTypeRegistry35.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType39 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.jstype.FunctionType functionType43 = jSTypeRegistry35.createFunctionTypeWithVarArgs(jSType39, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        boolean boolean44 = functionType43.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable49 = jSTypeRegistry47.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean50 = jSTypeRegistry47.shouldTolerateUndefinedValues();
        boolean boolean51 = jSTypeRegistry47.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node57 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node60 = node57.useSourceInfoIfMissingFromForTree(node59);
        boolean boolean61 = node59.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter62 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter62, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable66 = jSTypeRegistry64.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean67 = jSTypeRegistry64.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType68 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList70 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70, jSTypeArray69);
        com.google.javascript.rhino.jstype.FunctionType functionType72 = jSTypeRegistry64.createFunctionTypeWithVarArgs(jSType68, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        boolean boolean73 = functionType72.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType74 = jSTypeRegistry47.createEnumType("false", node59, (com.google.javascript.rhino.jstype.JSType) functionType72);
        java.util.Set<java.lang.String> strSet75 = functionType72.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair76 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType43, (com.google.javascript.rhino.jstype.JSType) functionType72);
        com.google.javascript.rhino.Node node77 = functionType43.getSource();
        node28.setJSType((com.google.javascript.rhino.jstype.JSType) functionType43);
        com.google.javascript.rhino.ErrorReporter errorReporter79 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter79, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable83 = jSTypeRegistry81.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean84 = jSTypeRegistry81.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType85 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray86 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList87 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList87, jSTypeArray86);
        com.google.javascript.rhino.jstype.FunctionType functionType89 = jSTypeRegistry81.createFunctionTypeWithVarArgs(jSType85, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList87);
        com.google.javascript.rhino.jstype.FunctionType functionType90 = jSTypeRegistry2.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType43, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList87);
        boolean boolean91 = functionType90.hasAnyTemplate();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable92 = functionType90.getOwnImplementedInterfaces();
        boolean boolean93 = functionType90.canBeCalled();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.FunctionType functionType94 = functionType90.getSuperClassConstructor();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 45 + "'", int8 == 45);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder15);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(staticSourceFile30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNull(staticSourceFile32);
        org.junit.Assert.assertNotNull(jSTypeIterable37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(functionType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(functionType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(enumType74);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNotNull(jSTypeIterable83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(jSTypeArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(functionType89);
        org.junit.Assert.assertNotNull(functionType90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objectTypeIterable92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test00933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00933");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("{proxy:function (): {125279184}}", jSTypeNative1);
    }

    @Test
    public void test00934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00934");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean13 = node12.isDefaultCase();
        node12.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId16 = node12.getInputId();
        node12.detachChildren();
        com.google.javascript.rhino.Node node18 = node6.copyInformationFrom(node12);
        com.google.javascript.rhino.Node node23 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node26 = node23.useSourceInfoIfMissingFromForTree(node25);
        node26.setLineno(10);
        com.google.javascript.rhino.Node node29 = node12.copyInformationFrom(node26);
        boolean boolean30 = node26.isInstanceOf();
        com.google.javascript.rhino.Node node32 = node26.getAncestor(43);
        com.google.javascript.rhino.Node node37 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean38 = node37.isDefaultCase();
        node37.setVarArgs(true);
        node37.setVarArgs(false);
        node37.setLength((int) (byte) 0);
        node37.removeProp((int) 'a');
        node37.setIsSyntheticBlock(true);
        boolean boolean50 = node37.getBooleanProp((-1));
        boolean boolean52 = node37.getBooleanProp(44);
        node26.addChildrenToBack(node37);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inputId16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test00935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00935");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = null;
        enumType29.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo33);
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder42 = node41.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node47 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean48 = node47.isDefaultCase();
        node47.setVarArgs(true);
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node56 = new com.google.javascript.rhino.Node((int) 'a', node41, node47, node55);
        boolean boolean57 = enumType29.defineElement("{209777139}", node55);
        java.lang.Iterable iterable58 = enumType29.getCtorExtendedInterfaces();
        java.lang.Iterable iterable59 = enumType29.getCtorExtendedInterfaces();
        com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> jSTypeStaticSlot61 = enumType29.getOwnSlot("{710165698}");
        com.google.javascript.rhino.jstype.JSType jSType62 = enumType29.unboxesTo();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder42);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(iterable58);
        org.junit.Assert.assertNotNull(iterable59);
        org.junit.Assert.assertNull(jSTypeStaticSlot61);
        org.junit.Assert.assertNull(jSType62);
    }

    @Test
    public void test00936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00936");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType69 = parameterizedType67.toMaybeEnumElementType();
        com.google.javascript.rhino.jstype.TemplateType templateType70 = parameterizedType67.toMaybeTemplateType();
        boolean boolean72 = parameterizedType67.isPropertyTypeInferred("hi!");
        com.google.javascript.rhino.jstype.JSType jSType74 = parameterizedType67.findPropertyType("{1687381779}");
        com.google.javascript.rhino.JSDocInfo jSDocInfo75 = parameterizedType67.getJSDocInfo();
        java.util.Set<java.lang.String> strSet76 = parameterizedType67.getOwnPropertyNames();
        java.lang.Object[] objArray77 = strSet76.toArray();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(enumElementType69);
        org.junit.Assert.assertNull(templateType70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(jSType74);
        org.junit.Assert.assertNull(jSDocInfo75);
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
    }

    @Test
    public void test00937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00937");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType33 = enumType29.toMaybeUnionType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType34 = enumType29.getElementsType();
        boolean boolean35 = enumElementType34.hasReferenceName();
        boolean boolean36 = enumElementType34.matchesStringContext();
        com.google.javascript.rhino.jstype.FunctionType functionType37 = enumElementType34.getConstructor();
        boolean boolean38 = enumElementType34.isObject();
        com.google.javascript.rhino.jstype.JSType jSType40 = enumElementType34.getPropertyType("{97196323}");
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(unionType33);
        org.junit.Assert.assertNotNull(enumElementType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(functionType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(jSType40);
    }

    @Test
    public void test00938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00938");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList37 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray36);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList56 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray55);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList75 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray74);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>>> strComparableListList76 = com.google.common.collect.ImmutableList.of(strComparableList18, strComparableList37, strComparableList56, strComparableList75);
        java.lang.String str77 = strComparableList37.toString();
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList78 = strComparableList37.asList();
        // The following exception was thrown during execution in test generation
        try {
            strComparableList78.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strComparableList37);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strComparableList56);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strComparableList75);
        org.junit.Assert.assertNotNull(strComparableListList76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" + "'", str77, "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(strComparableList78);
    }

    @Test
    public void test00939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00939");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.canBeCalled();
        boolean boolean12 = functionType10.isStringValueType();
        boolean boolean13 = functionType10.isNoObjectType();
        boolean boolean14 = functionType10.isRecordType();
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable19 = jSTypeRegistry17.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean20 = jSTypeRegistry17.shouldTolerateUndefinedValues();
        boolean boolean21 = jSTypeRegistry17.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node30 = node27.useSourceInfoIfMissingFromForTree(node29);
        boolean boolean31 = node29.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable36 = jSTypeRegistry34.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean37 = jSTypeRegistry34.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.jstype.FunctionType functionType42 = jSTypeRegistry34.createFunctionTypeWithVarArgs(jSType38, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        boolean boolean43 = functionType42.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType44 = jSTypeRegistry17.createEnumType("false", node29, (com.google.javascript.rhino.jstype.JSType) functionType42);
        boolean boolean46 = enumType44.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo48 = null;
        enumType44.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo48);
        boolean boolean51 = enumType44.isPropertyInExterns("Unknown class name");
        com.google.javascript.rhino.Node node53 = enumType44.getPropertyNode("Not declared as a type name");
        boolean boolean55 = enumType44.isPropertyTypeInferred("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean56 = functionType10.isSubtype((com.google.javascript.rhino.jstype.JSType) enumType44);
        boolean boolean58 = functionType10.isPropertyInExterns("{142159271}");
        boolean boolean59 = functionType10.matchesUint32Context();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.ObjectType objectType60 = functionType10.getInstanceType();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(functionType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(enumType44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test00940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00940");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean5 = node4.isDefaultCase();
        node4.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId8 = node4.getInputId();
        boolean boolean9 = node4.isScript();
        boolean boolean10 = node4.isFalse();
        boolean boolean11 = node4.isVarArgs();
        // The following exception was thrown during execution in test generation
        try {
            node4.setSideEffectFlags(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: setIsNoSideEffectsCall only supports CALL and NEW nodes, got SHEQ");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inputId8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test00941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00941");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec1 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("{981605091}");
    }

    @Test
    public void test00942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00942");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.canBeCalled();
        boolean boolean12 = functionType10.hasAnyTemplateInternal();
        int int13 = functionType10.getPropertiesCount();
        com.google.javascript.rhino.jstype.ObjectType objectType14 = functionType10.getParentScope();
        java.lang.String str15 = functionType10.getNormalizedReferenceName();
        boolean boolean16 = functionType10.isReturnTypeInferred();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test00943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00943");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator19 = strComparableList18.spliterator();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean23 = node22.isGetProp();
        boolean boolean24 = node22.isNumber();
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder30 = node29.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node35 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int36 = node35.getType();
        boolean boolean37 = node35.isBlock();
        com.google.javascript.rhino.Node node40 = new com.google.javascript.rhino.Node((int) (short) 10, node22, node29, node35, (int) (byte) 10, 44);
        boolean boolean41 = strComparableList18.contains((java.lang.Object) 44);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList18.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertNotNull(strComparableSpliterator19);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder30);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 45 + "'", int36 == 45);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test00944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00944");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str1 = jSDocInfo0.getDescription();
        java.lang.String str2 = jSDocInfo0.getLicense();
        int int3 = jSDocInfo0.getImplementedInterfaceCount();
        java.lang.String str4 = jSDocInfo0.getFileOverview();
        java.lang.String str5 = jSDocInfo0.getOriginalCommentString();
        boolean boolean6 = jSDocInfo0.isOverride();
        boolean boolean8 = jSDocInfo0.hasDescriptionForParameter("{1270882157}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test00945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00945");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        com.google.javascript.rhino.Node node70 = parameterizedType67.getPropertyNode("");
        boolean boolean71 = parameterizedType67.isUnknownType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo73 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str74 = jSDocInfo73.getDescription();
        boolean boolean75 = jSDocInfo73.hasFileOverview();
        boolean boolean76 = jSDocInfo73.isConstructor();
        parameterizedType67.setPropertyJSDocInfo("{60400957}", jSDocInfo73);
        com.google.javascript.rhino.jstype.FunctionType functionType78 = parameterizedType67.getConstructor();
        com.google.javascript.rhino.jstype.EnumType enumType79 = parameterizedType67.toMaybeEnumType();
        boolean boolean80 = parameterizedType67.isNullable();
        com.google.javascript.rhino.JSDocInfo jSDocInfo82 = parameterizedType67.getOwnPropertyJSDocInfo("function (): {985971941}");
        boolean boolean83 = parameterizedType67.isCheckedUnknownType();
        boolean boolean84 = parameterizedType67.isBooleanValueType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(functionType78);
        org.junit.Assert.assertNull(enumType79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(jSDocInfo82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test00946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00946");
        com.google.javascript.rhino.JSDocInfo.TypePosition typePosition0 = new com.google.javascript.rhino.JSDocInfo.TypePosition();
        boolean boolean1 = typePosition0.hasBrackets();
        int int2 = typePosition0.getPositionOnEndLine();
        com.google.javascript.rhino.Node node3 = typePosition0.getItem();
        int int4 = typePosition0.getStartLine();
        boolean boolean5 = typePosition0.hasBrackets();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test00947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00947");
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue1 = com.google.javascript.rhino.jstype.TernaryValue.forBoolean(false);
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue2 = com.google.javascript.rhino.jstype.TernaryValue.TRUE;
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue3 = ternaryValue1.xor(ternaryValue2);
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue4 = com.google.javascript.rhino.jstype.TernaryValue.UNKNOWN;
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue5 = ternaryValue2.or(ternaryValue4);
        boolean boolean7 = ternaryValue2.toBoolean(false);
        org.junit.Assert.assertNotNull(ternaryValue1);
        org.junit.Assert.assertNotNull(ternaryValue2);
        org.junit.Assert.assertNotNull(ternaryValue3);
        org.junit.Assert.assertNotNull(ternaryValue4);
        org.junit.Assert.assertNotNull(ternaryValue5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test00948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00948");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType33 = enumType29.toMaybeUnionType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType34 = enumType29.getElementsType();
        boolean boolean35 = enumElementType34.hasReferenceName();
        boolean boolean36 = enumElementType34.matchesStringContext();
        boolean boolean38 = enumElementType34.hasProperty("{1667996542}");
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable43 = jSTypeRegistry41.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean44 = jSTypeRegistry41.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType45 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.jstype.FunctionType functionType49 = jSTypeRegistry41.createFunctionTypeWithVarArgs(jSType45, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        functionType49.clearCachedValues();
        int int51 = functionType49.getExtendedInterfacesCount();
        com.google.javascript.rhino.jstype.ObjectType objectType52 = functionType49.getTypeOfThis();
        boolean boolean53 = functionType49.isNominalType();
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry56 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable58 = jSTypeRegistry56.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean59 = jSTypeRegistry56.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType60 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        com.google.javascript.rhino.jstype.FunctionType functionType64 = jSTypeRegistry56.createFunctionTypeWithVarArgs(jSType60, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        boolean boolean65 = functionType64.canBeCalled();
        boolean boolean66 = functionType64.hasAnyTemplateInternal();
        int int67 = functionType64.getPropertiesCount();
        com.google.javascript.rhino.jstype.ObjectType objectType68 = functionType64.getParentScope();
        functionType49.setPrototypeBasedOn((com.google.javascript.rhino.jstype.ObjectType) functionType64);
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue70 = enumElementType34.testForEquality((com.google.javascript.rhino.jstype.JSType) functionType49);
        boolean boolean71 = enumElementType34.isNullable();
        com.google.javascript.rhino.Node node73 = enumElementType34.getPropertyNode("{proxy:function (): {693061641}}");
        boolean boolean74 = enumElementType34.matchesStringContext();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(unionType33);
        org.junit.Assert.assertNotNull(enumElementType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(functionType49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(objectType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(functionType64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(objectType68);
        org.junit.Assert.assertNotNull(ternaryValue70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test00949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00949");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable10 = jSTypeRegistry8.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean11 = jSTypeRegistry8.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType12 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray13 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList14 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14, jSTypeArray13);
        com.google.javascript.rhino.jstype.FunctionType functionType16 = jSTypeRegistry8.createFunctionTypeWithVarArgs(jSType12, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList14);
        boolean boolean17 = functionType16.canBeCalled();
        boolean boolean18 = functionType16.hasAnyTemplateInternal();
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.FunctionType functionType20 = jSTypeRegistry2.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType16, jSTypeArray19);
        com.google.javascript.rhino.jstype.JSType jSType21 = functionType16.getIndexType();
        functionType16.clearCachedValues();
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet23 = functionType16.getPossibleToBooleanOutcomes();
        boolean boolean24 = functionType16.isNoObjectType();
        boolean boolean25 = functionType16.isFunctionPrototypeType();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(functionType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertNotNull(functionType20);
        org.junit.Assert.assertNull(jSType21);
        org.junit.Assert.assertTrue("'" + booleanLiteralSet23 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE + "'", booleanLiteralSet23.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test00950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00950");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node5 = node4.getParent();
        int int6 = node4.getChildCount();
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative8 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec9 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", jSTypeNative8);
        java.lang.String str10 = assertionFunctionSpec9.getFunctionName();
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder17 = node16.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean23 = node22.isDefaultCase();
        node22.setVarArgs(true);
        com.google.javascript.rhino.Node node30 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node31 = new com.google.javascript.rhino.Node((int) 'a', node16, node22, node30);
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable36 = jSTypeRegistry34.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean37 = jSTypeRegistry34.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable42 = jSTypeRegistry40.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean43 = jSTypeRegistry40.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType44 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.jstype.FunctionType functionType48 = jSTypeRegistry40.createFunctionTypeWithVarArgs(jSType44, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        boolean boolean49 = functionType48.canBeCalled();
        boolean boolean50 = functionType48.hasAnyTemplateInternal();
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray51 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.FunctionType functionType52 = jSTypeRegistry34.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType48, jSTypeArray51);
        com.google.javascript.rhino.jstype.JSType jSType53 = assertionFunctionSpec9.getAssertedType(node16, jSTypeRegistry34);
        com.google.javascript.rhino.Node node58 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int59 = node58.getType();
        boolean boolean60 = node58.isBlock();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder61 = node58.getJsDocBuilderForNode();
        node58.setQuotedString();
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile63 = null;
        node58.setStaticSourceFile(staticSourceFile63);
        com.google.javascript.rhino.Node node65 = assertionFunctionSpec9.getAssertedParam(node58);
        com.google.javascript.rhino.Node node71 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean72 = node71.isDefaultCase();
        node71.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId75 = node71.getInputId();
        node71.detachChildren();
        boolean boolean77 = node71.isNull();
        com.google.javascript.rhino.Node node78 = new com.google.javascript.rhino.Node((int) 'a', node71);
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable79 = node71.children();
        boolean boolean80 = node71.isIn();
        com.google.javascript.rhino.Node node81 = node71.detachFromParent();
        com.google.javascript.rhino.Node node82 = node65.srcrefTree(node71);
        com.google.javascript.rhino.Node node85 = com.google.javascript.rhino.Node.newString(52, "{1544533104}");
        java.lang.String str86 = node65.checkTreeEquals(node85);
        com.google.javascript.rhino.Node node87 = node4.copyInformationFrom(node65);
        boolean boolean88 = node65.isVoid();
        com.google.javascript.rhino.Node node90 = node65.getAncestor(50);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" + "'", str10, "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder17);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(jSTypeIterable36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(functionType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSTypeArray51);
        org.junit.Assert.assertNotNull(functionType52);
        org.junit.Assert.assertNull(jSType53);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 45 + "'", int59 == 45);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder61);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(inputId75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(nodeIterable79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Node tree inequality:\nTree1:\nSHEQ  1 [quoted: 1]\n\n\nTree2:\nINSTANCEOF {1544533104}\n\n\nSubtree1: SHEQ  1 [quoted: 1]\n\n\nSubtree2: INSTANCEOF {1544533104}\n" + "'", str86, "Node tree inequality:\nTree1:\nSHEQ  1 [quoted: 1]\n\n\nTree2:\nINSTANCEOF {1544533104}\n\n\nSubtree1: SHEQ  1 [quoted: 1]\n\n\nSubtree2: INSTANCEOF {1544533104}\n");
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(node90);
    }

    @Test
    public void test00951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00951");
        com.google.javascript.rhino.JSDocInfo.Marker marker0 = new com.google.javascript.rhino.JSDocInfo.Marker();
        com.google.javascript.rhino.SourcePosition<com.google.javascript.rhino.Node> nodeSourcePosition1 = marker0.getNameNode();
        com.google.javascript.rhino.JSDocInfo.StringPosition stringPosition2 = marker0.getName();
        com.google.javascript.rhino.JSDocInfo.StringPosition stringPosition3 = marker0.getAnnotation();
        com.google.javascript.rhino.JSDocInfo.StringPosition stringPosition4 = marker0.getName();
        org.junit.Assert.assertNull(nodeSourcePosition1);
        org.junit.Assert.assertNull(stringPosition2);
        org.junit.Assert.assertNull(stringPosition3);
        org.junit.Assert.assertNull(stringPosition4);
    }

    @Test
    public void test00952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00952");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        java.util.Set<java.lang.String> strSet30 = functionType27.getOwnPropertyNames();
        com.google.javascript.rhino.JSDocInfo jSDocInfo32 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean33 = jSDocInfo32.hasReturnType();
        boolean boolean34 = jSDocInfo32.isExterns();
        java.lang.String str35 = jSDocInfo32.getLendsName();
        java.util.Collection<com.google.javascript.rhino.JSDocInfo.Marker> markerCollection36 = jSDocInfo32.getMarkers();
        functionType27.setPropertyJSDocInfo("{1468267617}", jSDocInfo32);
        int int38 = functionType27.getPropertiesCount();
        com.google.javascript.rhino.jstype.FunctionType functionType39 = functionType27.getConstructor();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(markerCollection36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNull(functionType39);
    }

    @Test
    public void test00953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00953");
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder7 = node6.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean13 = node12.isDefaultCase();
        node12.setVarArgs(true);
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node21 = new com.google.javascript.rhino.Node((int) 'a', node6, node12, node20);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile22 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node20);
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node30 = node27.useSourceInfoIfMissingFromForTree(node29);
        com.google.javascript.rhino.Node node32 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean33 = node32.isFalse();
        boolean boolean34 = node29.hasChild(node32);
        com.google.javascript.rhino.Node node35 = node20.useSourceInfoFromForTree(node29);
        boolean boolean36 = node35.isOptionalArg();
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean42 = node41.isDefaultCase();
        java.util.Collection<com.google.javascript.rhino.Node> nodeCollection43 = com.google.javascript.jscomp.NodeUtil.getVarsDeclaredInBranch(node41);
        boolean boolean44 = node41.isLabel();
        boolean boolean45 = node41.isHook();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean49 = node48.isGetProp();
        boolean boolean50 = node48.isNumber();
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder56 = node55.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node61 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int62 = node61.getType();
        boolean boolean63 = node61.isBlock();
        com.google.javascript.rhino.Node node66 = new com.google.javascript.rhino.Node((int) (short) 10, node48, node55, node61, (int) (byte) 10, 44);
        node61.setSourceEncodedPositionForTree(45);
        boolean boolean69 = node61.isSetterDef();
        com.google.javascript.rhino.Node node70 = node41.useSourceInfoIfMissingFromForTree(node61);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 1, node35, node41, 38, 40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: first new child has existing parent");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder7);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNull(staticSourceFile22);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(nodeCollection43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder56);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 45 + "'", int62 == 45);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
    }

    @Test
    public void test00954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00954");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str1 = jSDocInfo0.getDescription();
        java.lang.String str2 = jSDocInfo0.getLicense();
        int int3 = jSDocInfo0.getImplementedInterfaceCount();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression4 = jSDocInfo0.getEnumParameterType();
        boolean boolean6 = jSDocInfo0.hasParameterType("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(jSTypeExpression4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test00955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00955");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean3 = node2.isGetProp();
        boolean boolean4 = node2.isNumber();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int16 = node15.getType();
        boolean boolean17 = node15.isBlock();
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) (short) 10, node2, node9, node15, (int) (byte) 10, 44);
        node9.setLength(52);
        boolean boolean23 = node9.isSetterDef();
        boolean boolean24 = node9.isBlock();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 45 + "'", int16 == 45);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test00956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00956");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int5 = node4.getType();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder12 = node11.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean18 = node17.isDefaultCase();
        node17.setVarArgs(true);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = new com.google.javascript.rhino.Node((int) 'a', node11, node17, node25);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile27 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node25);
        com.google.javascript.rhino.Node node28 = node4.useSourceInfoFromForTree(node25);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile29 = node25.getStaticSourceFile();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable34 = jSTypeRegistry32.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean35 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType36 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.jstype.FunctionType functionType40 = jSTypeRegistry32.createFunctionTypeWithVarArgs(jSType36, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        boolean boolean41 = functionType40.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable46 = jSTypeRegistry44.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean47 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        boolean boolean48 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node57 = node54.useSourceInfoIfMissingFromForTree(node56);
        boolean boolean58 = node56.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable63 = jSTypeRegistry61.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean64 = jSTypeRegistry61.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType65 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry61.createFunctionTypeWithVarArgs(jSType65, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        boolean boolean70 = functionType69.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType71 = jSTypeRegistry44.createEnumType("false", node56, (com.google.javascript.rhino.jstype.JSType) functionType69);
        java.util.Set<java.lang.String> strSet72 = functionType69.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair73 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType40, (com.google.javascript.rhino.jstype.JSType) functionType69);
        com.google.javascript.rhino.Node node74 = functionType40.getSource();
        node25.setJSType((com.google.javascript.rhino.jstype.JSType) functionType40);
        com.google.javascript.rhino.jstype.ObjectType objectType76 = functionType40.getPrototype();
        java.lang.String str77 = functionType40.toString();
        com.google.javascript.rhino.jstype.ObjectType objectType78 = com.google.javascript.rhino.jstype.ObjectType.cast((com.google.javascript.rhino.jstype.JSType) functionType40);
        com.google.javascript.rhino.JSDocInfo jSDocInfo79 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str80 = jSDocInfo79.getDescription();
        jSDocInfo79.setLicense("");
        boolean boolean83 = jSDocInfo79.isDeprecated();
        boolean boolean84 = jSDocInfo79.hasReturnType();
        boolean boolean85 = jSDocInfo79.isConstructor();
        objectType78.setJSDocInfo(jSDocInfo79);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression87 = jSDocInfo79.getReturnType();
        jSDocInfo79.setLicense("{243674960}");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 45 + "'", int5 == 45);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder12);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(staticSourceFile27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(staticSourceFile29);
        org.junit.Assert.assertNotNull(jSTypeIterable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(functionType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(enumType71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNotNull(objectType76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "function (): ?" + "'", str77, "function (): ?");
        org.junit.Assert.assertNotNull(objectType78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(jSTypeExpression87);
    }

    @Test
    public void test00957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00957");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        boolean boolean69 = parameterizedType67.isConstructor();
        boolean boolean70 = parameterizedType67.isEmptyType();
        boolean boolean72 = parameterizedType67.isPropertyTypeDeclared("");
        com.google.javascript.rhino.jstype.JSType jSType74 = parameterizedType67.findPropertyType("[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        java.util.Set set75 = parameterizedType67.getOwnPropertyNames();
        boolean boolean76 = parameterizedType67.isInstanceType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo77 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str78 = jSDocInfo77.getDescription();
        boolean boolean79 = jSDocInfo77.hasFileOverview();
        parameterizedType67.setJSDocInfo(jSDocInfo77);
        com.google.javascript.rhino.jstype.FunctionType functionType81 = parameterizedType67.toMaybeFunctionType();
        boolean boolean82 = functionType81.hasImplementedInterfaces();
        java.util.List<com.google.javascript.rhino.jstype.ObjectType> objectTypeList83 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionType81.setImplementedInterfaces(objectTypeList83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(jSType74);
        org.junit.Assert.assertNotNull(set75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(functionType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test00958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00958");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        com.google.javascript.rhino.ErrorReporter errorReporter11 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node15 = jSTypeRegistry13.createParameters(jSTypeArray14);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable20 = jSTypeRegistry18.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean21 = jSTypeRegistry18.shouldTolerateUndefinedValues();
        boolean boolean22 = jSTypeRegistry18.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node30 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node31 = node28.useSourceInfoIfMissingFromForTree(node30);
        boolean boolean32 = node30.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry35 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable37 = jSTypeRegistry35.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean38 = jSTypeRegistry35.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType39 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.jstype.FunctionType functionType43 = jSTypeRegistry35.createFunctionTypeWithVarArgs(jSType39, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        boolean boolean44 = functionType43.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType45 = jSTypeRegistry18.createEnumType("false", node30, (com.google.javascript.rhino.jstype.JSType) functionType43);
        java.util.Set<java.lang.String> strSet46 = functionType43.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter47 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry49 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter47, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable51 = jSTypeRegistry49.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean52 = jSTypeRegistry49.shouldTolerateUndefinedValues();
        boolean boolean53 = jSTypeRegistry49.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node61 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node62 = node59.useSourceInfoIfMissingFromForTree(node61);
        boolean boolean63 = node61.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter64 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter64, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable68 = jSTypeRegistry66.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean69 = jSTypeRegistry66.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType70 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList72 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72, jSTypeArray71);
        com.google.javascript.rhino.jstype.FunctionType functionType74 = jSTypeRegistry66.createFunctionTypeWithVarArgs(jSType70, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        boolean boolean75 = functionType74.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType76 = jSTypeRegistry49.createEnumType("false", node61, (com.google.javascript.rhino.jstype.JSType) functionType74);
        com.google.javascript.rhino.jstype.FunctionType functionType77 = functionType74.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType78 = jSTypeRegistry13.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType43, (com.google.javascript.rhino.jstype.JSType) functionType77);
        boolean boolean79 = parameterizedType78.isBooleanObjectType();
        com.google.javascript.rhino.jstype.JSType jSType80 = parameterizedType78.autobox();
        com.google.javascript.rhino.ErrorReporter errorReporter81 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry83 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter81, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable85 = jSTypeRegistry83.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean86 = jSTypeRegistry83.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType87 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray88 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList89 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList89, jSTypeArray88);
        com.google.javascript.rhino.jstype.FunctionType functionType91 = jSTypeRegistry83.createFunctionTypeWithVarArgs(jSType87, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList89);
        boolean boolean92 = jSType80.canTestForEqualityWith((com.google.javascript.rhino.jstype.JSType) functionType91);
        com.google.javascript.rhino.Node node93 = functionType91.getSource();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair94 = new com.google.javascript.rhino.jstype.JSType.TypePair(jSType6, (com.google.javascript.rhino.jstype.JSType) functionType91);
        boolean boolean95 = functionType91.hasInstanceType();
        com.google.javascript.rhino.jstype.FunctionType functionType96 = functionType91.toMaybeFunctionType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo98 = functionType91.getOwnPropertyJSDocInfo("{1129850345}");
        com.google.common.collect.ImmutableList<java.lang.String> strList99 = functionType91.getTemplateTypeNames();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(jSTypeIterable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(functionType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(enumType45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(jSTypeIterable51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(functionType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(enumType76);
        org.junit.Assert.assertNull(functionType77);
        org.junit.Assert.assertNotNull(parameterizedType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(jSType80);
        org.junit.Assert.assertNotNull(jSTypeIterable85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSTypeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(functionType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(node93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(functionType96);
        org.junit.Assert.assertNull(jSDocInfo98);
        org.junit.Assert.assertNotNull(strList99);
    }

    @Test
    public void test00959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00959");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder6 = node5.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean12 = node11.isDefaultCase();
        node11.setVarArgs(true);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) 'a', node5, node11, node19);
        boolean boolean21 = node5.isScript();
        boolean boolean22 = node5.isObjectLit();
        node5.setString("{12965601}");
        boolean boolean25 = node5.isSwitch();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder6);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test00960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00960");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean13 = node12.isDefaultCase();
        node12.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId16 = node12.getInputId();
        node12.detachChildren();
        com.google.javascript.rhino.Node node18 = node6.copyInformationFrom(node12);
        int int19 = node12.getType();
        boolean boolean20 = node12.isFunction();
        node12.setType(4097);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inputId16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 45 + "'", int19 == 45);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test00961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00961");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int5 = node4.getType();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder12 = node11.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean18 = node17.isDefaultCase();
        node17.setVarArgs(true);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = new com.google.javascript.rhino.Node((int) 'a', node11, node17, node25);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile27 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node25);
        com.google.javascript.rhino.Node node28 = node4.useSourceInfoFromForTree(node25);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile29 = node25.getStaticSourceFile();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable34 = jSTypeRegistry32.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean35 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType36 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.jstype.FunctionType functionType40 = jSTypeRegistry32.createFunctionTypeWithVarArgs(jSType36, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        boolean boolean41 = functionType40.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable46 = jSTypeRegistry44.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean47 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        boolean boolean48 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node57 = node54.useSourceInfoIfMissingFromForTree(node56);
        boolean boolean58 = node56.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable63 = jSTypeRegistry61.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean64 = jSTypeRegistry61.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType65 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry61.createFunctionTypeWithVarArgs(jSType65, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        boolean boolean70 = functionType69.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType71 = jSTypeRegistry44.createEnumType("false", node56, (com.google.javascript.rhino.jstype.JSType) functionType69);
        java.util.Set<java.lang.String> strSet72 = functionType69.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair73 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType40, (com.google.javascript.rhino.jstype.JSType) functionType69);
        com.google.javascript.rhino.Node node74 = functionType40.getSource();
        node25.setJSType((com.google.javascript.rhino.jstype.JSType) functionType40);
        com.google.javascript.rhino.jstype.ObjectType objectType76 = functionType40.getPrototype();
        java.lang.String str77 = functionType40.toString();
        com.google.javascript.rhino.jstype.ObjectType objectType78 = com.google.javascript.rhino.jstype.ObjectType.cast((com.google.javascript.rhino.jstype.JSType) functionType40);
        com.google.javascript.rhino.JSDocInfo jSDocInfo79 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str80 = jSDocInfo79.getDescription();
        jSDocInfo79.setLicense("");
        boolean boolean83 = jSDocInfo79.isDeprecated();
        boolean boolean84 = jSDocInfo79.hasReturnType();
        boolean boolean85 = jSDocInfo79.isConstructor();
        objectType78.setJSDocInfo(jSDocInfo79);
        boolean boolean87 = jSDocInfo79.isIdGenerator();
        boolean boolean88 = jSDocInfo79.hasType();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 45 + "'", int5 == 45);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder12);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(staticSourceFile27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(staticSourceFile29);
        org.junit.Assert.assertNotNull(jSTypeIterable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(functionType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(enumType71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNotNull(objectType76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "function (): ?" + "'", str77, "function (): ?");
        org.junit.Assert.assertNotNull(objectType78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test00962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00962");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType11 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        com.google.javascript.rhino.jstype.FunctionType functionType15 = jSTypeRegistry7.createFunctionTypeWithVarArgs(jSType11, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        boolean boolean16 = functionType15.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        boolean boolean23 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node32 = node29.useSourceInfoIfMissingFromForTree(node31);
        boolean boolean33 = node31.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter34 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter34, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable38 = jSTypeRegistry36.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean39 = jSTypeRegistry36.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType40 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.jstype.FunctionType functionType44 = jSTypeRegistry36.createFunctionTypeWithVarArgs(jSType40, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        boolean boolean45 = functionType44.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType46 = jSTypeRegistry19.createEnumType("false", node31, (com.google.javascript.rhino.jstype.JSType) functionType44);
        java.util.Set<java.lang.String> strSet47 = functionType44.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair48 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType15, (com.google.javascript.rhino.jstype.JSType) functionType44);
        com.google.javascript.rhino.Node node49 = functionType15.getSource();
        com.google.javascript.rhino.jstype.JSType jSType51 = functionType15.getPropertyType("hi!");
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node57 = jSTypeRegistry55.createParameters(jSTypeArray56);
        com.google.javascript.rhino.jstype.FunctionType functionType58 = jSTypeRegistry2.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType15, true, jSTypeArray56);
        boolean boolean60 = functionType58.hasOwnProperty("{1789792193}");
        com.google.javascript.rhino.jstype.FunctionType functionType61 = functionType58.cloneWithoutArrowType();
        boolean boolean62 = functionType58.isNoObjectType();
        boolean boolean63 = functionType58.isNoType();
        boolean boolean64 = functionType58.matchesNumberContext();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(functionType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(functionType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(enumType46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(jSType51);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(functionType58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(functionType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test00963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00963");
        com.google.javascript.rhino.InputId inputId1 = new com.google.javascript.rhino.InputId("hi!");
        java.lang.String str2 = inputId1.toString();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean6 = node5.isGetProp();
        boolean boolean7 = node5.isNumber();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder13 = node12.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int19 = node18.getType();
        boolean boolean20 = node18.isBlock();
        com.google.javascript.rhino.Node node23 = new com.google.javascript.rhino.Node((int) (short) 10, node5, node12, node18, (int) (byte) 10, 44);
        boolean boolean24 = node5.isFor();
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder30 = node29.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node31 = node29.getLastSibling();
        boolean boolean33 = node29.getBooleanProp(17);
        com.google.javascript.rhino.Node node38 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node41 = node38.useSourceInfoIfMissingFromForTree(node40);
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean47 = node46.isDefaultCase();
        node46.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId50 = node46.getInputId();
        node46.detachChildren();
        com.google.javascript.rhino.Node node52 = node40.copyInformationFrom(node46);
        int int53 = node46.getType();
        java.lang.String[] strArray59 = new java.lang.String[] { "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "Unknown class name", "Unknown class name", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" };
        java.util.LinkedHashSet<java.lang.String> strSet60 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet60, strArray59);
        node46.setDirectives((java.util.Set<java.lang.String>) strSet60);
        com.google.javascript.rhino.Node node64 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean65 = strSet60.remove((java.lang.Object) node64);
        boolean boolean66 = node64.isString();
        com.google.javascript.rhino.Node node67 = node29.useSourceInfoFromForTree(node64);
        com.google.javascript.rhino.Node node68 = node5.srcref(node64);
        boolean boolean69 = node68.isCatch();
        boolean boolean70 = inputId1.equals((java.lang.Object) boolean69);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "InputId: hi!" + "'", str2, "InputId: hi!");
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder13);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 45 + "'", int19 == 45);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(inputId50);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 45 + "'", int53 == 45);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test00964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00964");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean13 = node12.isDefaultCase();
        node12.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId16 = node12.getInputId();
        node12.detachChildren();
        com.google.javascript.rhino.Node node18 = node6.copyInformationFrom(node12);
        int int19 = node12.getType();
        java.lang.String[] strArray25 = new java.lang.String[] { "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "Unknown class name", "Unknown class name", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        node12.setDirectives((java.util.Set<java.lang.String>) strSet26);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList47 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray46);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator48 = strComparableList47.spliterator();
        boolean boolean49 = strSet26.equals((java.lang.Object) strComparableList47);
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList68 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray67);
        boolean boolean69 = strComparableList68.isEmpty();
        com.google.javascript.rhino.Node node74 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int75 = node74.getType();
        boolean boolean76 = strComparableList68.equals((java.lang.Object) int75);
        boolean boolean77 = strSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList68);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator78 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList68.replaceAll(strComparableUnaryOperator78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inputId16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 45 + "'", int19 == 45);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strComparableList47);
        org.junit.Assert.assertNotNull(strComparableSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strComparableList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 45 + "'", int75 == 45);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test00965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00965");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        com.google.javascript.rhino.Node node70 = parameterizedType67.getPropertyNode("");
        boolean boolean71 = parameterizedType67.isUnknownType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo73 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str74 = jSDocInfo73.getDescription();
        boolean boolean75 = jSDocInfo73.hasFileOverview();
        boolean boolean76 = jSDocInfo73.isConstructor();
        parameterizedType67.setPropertyJSDocInfo("{60400957}", jSDocInfo73);
        com.google.javascript.rhino.jstype.FunctionType functionType78 = parameterizedType67.getConstructor();
        com.google.javascript.rhino.jstype.EnumType enumType79 = parameterizedType67.toMaybeEnumType();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = enumType79.isUnknownType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(functionType78);
        org.junit.Assert.assertNull(enumType79);
    }

    @Test
    public void test00966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00966");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int8 = node7.getType();
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder15 = node14.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean21 = node20.isDefaultCase();
        node20.setVarArgs(true);
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node29 = new com.google.javascript.rhino.Node((int) 'a', node14, node20, node28);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile30 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node28);
        com.google.javascript.rhino.Node node31 = node7.useSourceInfoFromForTree(node28);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile32 = node28.getStaticSourceFile();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry35 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable37 = jSTypeRegistry35.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean38 = jSTypeRegistry35.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType39 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.jstype.FunctionType functionType43 = jSTypeRegistry35.createFunctionTypeWithVarArgs(jSType39, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        boolean boolean44 = functionType43.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable49 = jSTypeRegistry47.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean50 = jSTypeRegistry47.shouldTolerateUndefinedValues();
        boolean boolean51 = jSTypeRegistry47.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node57 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node60 = node57.useSourceInfoIfMissingFromForTree(node59);
        boolean boolean61 = node59.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter62 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter62, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable66 = jSTypeRegistry64.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean67 = jSTypeRegistry64.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType68 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList70 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70, jSTypeArray69);
        com.google.javascript.rhino.jstype.FunctionType functionType72 = jSTypeRegistry64.createFunctionTypeWithVarArgs(jSType68, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        boolean boolean73 = functionType72.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType74 = jSTypeRegistry47.createEnumType("false", node59, (com.google.javascript.rhino.jstype.JSType) functionType72);
        java.util.Set<java.lang.String> strSet75 = functionType72.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair76 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType43, (com.google.javascript.rhino.jstype.JSType) functionType72);
        com.google.javascript.rhino.Node node77 = functionType43.getSource();
        node28.setJSType((com.google.javascript.rhino.jstype.JSType) functionType43);
        com.google.javascript.rhino.ErrorReporter errorReporter79 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter79, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable83 = jSTypeRegistry81.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean84 = jSTypeRegistry81.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType85 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray86 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList87 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList87, jSTypeArray86);
        com.google.javascript.rhino.jstype.FunctionType functionType89 = jSTypeRegistry81.createFunctionTypeWithVarArgs(jSType85, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList87);
        com.google.javascript.rhino.jstype.FunctionType functionType90 = jSTypeRegistry2.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType43, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList87);
        java.util.List<com.google.javascript.rhino.jstype.FunctionType> functionTypeList91 = functionType90.getSubTypes();
        boolean boolean93 = functionType90.isPropertyInExterns("{proxy:function (): {1035050169}}");
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 45 + "'", int8 == 45);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder15);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(staticSourceFile30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNull(staticSourceFile32);
        org.junit.Assert.assertNotNull(jSTypeIterable37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(functionType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(functionType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(enumType74);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNotNull(jSTypeIterable83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(jSTypeArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(functionType89);
        org.junit.Assert.assertNotNull(functionType90);
        org.junit.Assert.assertNull(functionTypeList91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test00967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00967");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType69 = parameterizedType67.getTypeOfThis();
        boolean boolean71 = parameterizedType67.isPropertyTypeInferred("InputId: hi!");
        com.google.javascript.rhino.jstype.FunctionType functionType72 = parameterizedType67.toMaybeFunctionType();
        boolean boolean73 = parameterizedType67.isNoResolvedType();
        int int74 = parameterizedType67.getPropertiesCount();
        boolean boolean75 = parameterizedType67.isNominalConstructor();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objectType69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(functionType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test00968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00968");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = null;
        enumType29.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo33);
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder42 = node41.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node47 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean48 = node47.isDefaultCase();
        node47.setVarArgs(true);
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node56 = new com.google.javascript.rhino.Node((int) 'a', node41, node47, node55);
        boolean boolean57 = enumType29.defineElement("{209777139}", node55);
        boolean boolean58 = enumType29.hasReferenceName();
        com.google.javascript.rhino.jstype.JSType jSType60 = enumType29.getPropertyType("{796389407}");
        com.google.javascript.rhino.jstype.JSType jSType62 = enumType29.getPropertyType("{1551784408}");
        boolean boolean63 = enumType29.isTemplateType();
        boolean boolean64 = enumType29.isNativeObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType65 = com.google.javascript.rhino.jstype.ObjectType.cast((com.google.javascript.rhino.jstype.JSType) enumType29);
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder42);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSType60);
        org.junit.Assert.assertNotNull(jSType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objectType65);
    }

    @Test
    public void test00969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00969");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable10 = jSTypeRegistry8.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean11 = jSTypeRegistry8.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType12 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray13 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList14 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14, jSTypeArray13);
        com.google.javascript.rhino.jstype.FunctionType functionType16 = jSTypeRegistry8.createFunctionTypeWithVarArgs(jSType12, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList14);
        boolean boolean17 = functionType16.canBeCalled();
        boolean boolean18 = functionType16.hasAnyTemplateInternal();
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.FunctionType functionType20 = jSTypeRegistry2.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType16, jSTypeArray19);
        java.util.List<com.google.javascript.rhino.jstype.FunctionType> functionTypeList21 = functionType20.getSubTypes();
        com.google.common.collect.ImmutableList<java.lang.String> strList22 = functionType20.getTemplateTypeNames();
        com.google.common.collect.ImmutableList<java.lang.String> strList23 = functionType20.getTemplateTypeNames();
        com.google.javascript.rhino.jstype.FunctionType functionType24 = functionType20.getSuperClassConstructor();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(functionType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertNotNull(functionType20);
        org.junit.Assert.assertNull(functionTypeList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(functionType24);
    }

    @Test
    public void test00970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00970");
        java.lang.Throwable throwable1 = null;
        java.io.IOException iOException2 = new java.io.IOException("SHEQ  1 [var_args_name: 1]\n", throwable1);
        java.lang.Throwable throwable5 = null;
        java.io.IOException iOException6 = new java.io.IOException("SHEQ  1 [var_args_name: 1]\n", throwable5);
        java.io.IOException iOException7 = new java.io.IOException("{proxy:function (): {882920012}}", (java.lang.Throwable) iOException6);
        java.lang.Throwable throwable9 = null;
        java.io.IOException iOException10 = new java.io.IOException("SHEQ  1 [var_args_name: 1]\n", throwable9);
        java.lang.Throwable throwable12 = null;
        java.io.IOException iOException13 = new java.io.IOException("SHEQ  1 [var_args_name: 1]\n", throwable12);
        java.lang.Throwable throwable16 = null;
        java.io.IOException iOException17 = new java.io.IOException("SHEQ  1 [var_args_name: 1]\n", throwable16);
        java.io.IOException iOException18 = new java.io.IOException("{proxy:function (): {882920012}}", (java.lang.Throwable) iOException17);
        com.google.common.collect.ImmutableList<java.lang.Exception> exceptionList19 = com.google.common.collect.ImmutableList.of((java.lang.Exception) iOException2, (java.lang.Exception) iOException6, (java.lang.Exception) iOException10, (java.lang.Exception) iOException13, (java.lang.Exception) iOException17);
        java.lang.Throwable[] throwableArray20 = iOException6.getSuppressed();
        org.junit.Assert.assertNotNull(exceptionList19);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test00971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00971");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", jSTypeNative1);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean8 = node7.isDefaultCase();
        node7.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId11 = node7.getInputId();
        node7.detachChildren();
        boolean boolean13 = node7.isNot();
        boolean boolean14 = node7.isSetterDef();
        com.google.javascript.rhino.Node node15 = assertionFunctionSpec2.getAssertedParam(node7);
        java.lang.String str16 = assertionFunctionSpec2.getFunctionName();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder23 = node22.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean29 = node28.isDefaultCase();
        node28.setVarArgs(true);
        com.google.javascript.rhino.Node node36 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node((int) 'a', node22, node28, node36);
        com.google.javascript.rhino.InputId inputId38 = node22.getInputId();
        com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node45 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node46 = node43.useSourceInfoIfMissingFromForTree(node45);
        node46.setLineno(10);
        int int49 = node46.getType();
        java.util.Set<java.lang.String> strSet50 = node46.getDirectives();
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean56 = node55.isDefaultCase();
        node55.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId59 = node55.getInputId();
        boolean boolean60 = node55.isCase();
        boolean boolean61 = node55.isInc();
        com.google.javascript.jscomp.CodingConvention.Bind bind62 = new com.google.javascript.jscomp.CodingConvention.Bind(node22, node46, node55);
        com.google.javascript.rhino.Node node63 = assertionFunctionSpec2.getAssertedParam(node55);
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int69 = node68.getType();
        boolean boolean70 = node68.isDebugger();
        boolean boolean71 = node68.isThrow();
        com.google.javascript.rhino.Node node72 = assertionFunctionSpec2.getAssertedParam(node68);
        boolean boolean73 = node72.isTry();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.JSDocInfo jSDocInfo74 = com.google.javascript.jscomp.NodeUtil.getFunctionJSDocInfo(node72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(inputId11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" + "'", str16, "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder23);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNull(inputId38);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 45 + "'", int49 == 45);
        org.junit.Assert.assertNull(strSet50);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(inputId59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 45 + "'", int69 == 45);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test00972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00972");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int5 = node4.getType();
        boolean boolean6 = node4.isDebugger();
        boolean boolean7 = node4.isString();
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder14 = node13.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean20 = node19.isDefaultCase();
        node19.setVarArgs(true);
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node28 = new com.google.javascript.rhino.Node((int) 'a', node13, node19, node27);
        com.google.javascript.rhino.InputId inputId29 = node13.getInputId();
        com.google.javascript.rhino.Node node30 = node4.useSourceInfoFrom(node13);
        com.google.javascript.rhino.Node node31 = node4.cloneTree();
        boolean boolean32 = node4.isNE();
        boolean boolean33 = node4.isInstanceOf();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 45 + "'", int5 == 45);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder14);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNull(inputId29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test00973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00973");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        boolean boolean69 = parameterizedType67.isConstructor();
        boolean boolean70 = parameterizedType67.isEmptyType();
        boolean boolean71 = parameterizedType67.isStringObjectType();
        com.google.javascript.rhino.jstype.TemplateType templateType72 = parameterizedType67.toMaybeTemplateType();
        boolean boolean73 = parameterizedType67.isEnumType();
        boolean boolean74 = parameterizedType67.isNativeObjectType();
        boolean boolean75 = parameterizedType67.isString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = parameterizedType67.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(templateType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test00974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00974");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean6 = node5.isDefaultCase();
        boolean boolean7 = node5.isTry();
        com.google.javascript.rhino.Node node8 = node5.getLastSibling();
        com.google.javascript.rhino.Node node9 = new com.google.javascript.rhino.Node(4095, node5);
        boolean boolean10 = node9.isOr();
        boolean boolean11 = node9.isCall();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test00975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00975");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean6 = node5.isDefaultCase();
        node5.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId9 = node5.getInputId();
        node5.detachChildren();
        boolean boolean11 = node5.isNull();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList14 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean16 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "");
        int int17 = strComparableList14.size();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean23 = node22.isDefaultCase();
        node22.setVarArgs(true);
        node22.setVarArgs(false);
        boolean boolean28 = strComparableList14.contains((java.lang.Object) node22);
        com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int34 = node33.getType();
        node33.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node(54, node5, node22, node33);
        java.lang.Object obj39 = node5.getProp(10);
        com.google.javascript.rhino.Node node40 = node5.getLastChild();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(inputId9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 45 + "'", int34 == 45);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(node40);
    }

    @Test
    public void test00976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00976");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node8 = node5.useSourceInfoIfMissingFromForTree(node7);
        node8.setLineno(10);
        int int11 = node8.getType();
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative13 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec14 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", jSTypeNative13);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean20 = node19.isDefaultCase();
        node19.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId23 = node19.getInputId();
        node19.detachChildren();
        boolean boolean25 = node19.isNot();
        boolean boolean26 = node19.isSetterDef();
        com.google.javascript.rhino.Node node27 = assertionFunctionSpec14.getAssertedParam(node19);
        java.lang.String str28 = assertionFunctionSpec14.getFunctionName();
        com.google.javascript.rhino.Node node34 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder35 = node34.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean41 = node40.isDefaultCase();
        node40.setVarArgs(true);
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node49 = new com.google.javascript.rhino.Node((int) 'a', node34, node40, node48);
        com.google.javascript.rhino.InputId inputId50 = node34.getInputId();
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node57 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node58 = node55.useSourceInfoIfMissingFromForTree(node57);
        node58.setLineno(10);
        int int61 = node58.getType();
        java.util.Set<java.lang.String> strSet62 = node58.getDirectives();
        com.google.javascript.rhino.Node node67 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean68 = node67.isDefaultCase();
        node67.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId71 = node67.getInputId();
        boolean boolean72 = node67.isCase();
        boolean boolean73 = node67.isInc();
        com.google.javascript.jscomp.CodingConvention.Bind bind74 = new com.google.javascript.jscomp.CodingConvention.Bind(node34, node58, node67);
        com.google.javascript.rhino.Node node75 = assertionFunctionSpec14.getAssertedParam(node67);
        com.google.javascript.rhino.Node node80 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int81 = node80.getType();
        boolean boolean82 = node80.isDebugger();
        boolean boolean83 = node80.isThrow();
        com.google.javascript.rhino.Node node84 = assertionFunctionSpec14.getAssertedParam(node80);
        com.google.javascript.rhino.Node node85 = new com.google.javascript.rhino.Node(46, node8, node84);
        // The following exception was thrown during execution in test generation
        try {
            node84.setDouble((double) 38);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: SHEQ  1 is not a string node");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 45 + "'", int11 == 45);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(inputId23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" + "'", str28, "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNull(inputId50);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 45 + "'", int61 == 45);
        org.junit.Assert.assertNull(strSet62);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(inputId71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 45 + "'", int81 == 45);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(node84);
    }

    @Test
    public void test00977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00977");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        boolean boolean19 = strComparableList18.isEmpty();
        java.lang.Object[] objArray20 = strComparableList18.toArray();
        // The following exception was thrown during execution in test generation
        try {
            strComparableList18.add(39, (java.lang.Comparable<java.lang.String>) "{1546859156}");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
    }

    @Test
    public void test00978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00978");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.canBeCalled();
        com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> jSTypeStaticSlot13 = functionType10.getOwnSlot("[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        boolean boolean14 = functionType10.isUnionType();
        com.google.javascript.rhino.Node node16 = functionType10.getPropertyNode("{1332930746}");
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(jSTypeStaticSlot13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(node16);
    }

    @Test
    public void test00979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00979");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str1 = jSDocInfo0.getDescription();
        jSDocInfo0.setLicense("");
        boolean boolean4 = jSDocInfo0.isDeprecated();
        boolean boolean6 = jSDocInfo0.hasParameterType("InputId: hi!");
        boolean boolean7 = jSDocInfo0.isExterns();
        boolean boolean8 = jSDocInfo0.isConsistentIdGenerator();
        java.util.Collection<java.lang.String> strCollection9 = jSDocInfo0.getAuthors();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strCollection9);
    }

    @Test
    public void test00980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00980");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = null;
        enumType29.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo33);
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder42 = node41.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node47 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean48 = node47.isDefaultCase();
        node47.setVarArgs(true);
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node56 = new com.google.javascript.rhino.Node((int) 'a', node41, node47, node55);
        boolean boolean57 = enumType29.defineElement("{209777139}", node55);
        java.lang.Iterable iterable58 = enumType29.getCtorExtendedInterfaces();
        com.google.javascript.rhino.Node node59 = enumType29.getSource();
        com.google.javascript.rhino.jstype.FunctionType functionType60 = enumType29.getOwnerFunction();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = functionType60.isNullType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder42);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(iterable58);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNull(functionType60);
    }

    @Test
    public void test00981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00981");
        com.google.javascript.rhino.Node[] nodeArray2 = new com.google.javascript.rhino.Node[] {};
        com.google.javascript.rhino.Node node3 = new com.google.javascript.rhino.Node(4095, nodeArray2);
        com.google.javascript.rhino.Node node4 = new com.google.javascript.rhino.Node(4, nodeArray2);
        boolean boolean5 = node4.isNE();
        com.google.javascript.rhino.Node node6 = node4.removeFirstChild();
        org.junit.Assert.assertNotNull(nodeArray2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(node6);
    }

    @Test
    public void test00982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00982");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        com.google.javascript.rhino.jstype.FunctionType functionType68 = parameterizedType67.getConstructor();
        boolean boolean69 = parameterizedType67.isAllType();
        com.google.javascript.rhino.jstype.FunctionType functionType70 = parameterizedType67.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.FunctionType functionType71 = parameterizedType67.getOwnerFunction();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertNull(functionType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(functionType70);
        org.junit.Assert.assertNull(functionType71);
    }

    @Test
    public void test00983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00983");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType jSType3 = null;
        boolean boolean5 = jSTypeRegistry2.canPropertyBeDefined(jSType3, "Unknown class name");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable10 = jSTypeRegistry8.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean11 = jSTypeRegistry8.shouldTolerateUndefinedValues();
        boolean boolean12 = jSTypeRegistry8.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node21 = node18.useSourceInfoIfMissingFromForTree(node20);
        boolean boolean22 = node20.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry25 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable27 = jSTypeRegistry25.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean28 = jSTypeRegistry25.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType29 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.jstype.FunctionType functionType33 = jSTypeRegistry25.createFunctionTypeWithVarArgs(jSType29, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        boolean boolean34 = functionType33.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType35 = jSTypeRegistry8.createEnumType("false", node20, (com.google.javascript.rhino.jstype.JSType) functionType33);
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        boolean boolean67 = enumType65.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo69 = null;
        enumType65.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo69);
        boolean boolean72 = enumType65.isPropertyInExterns("Unknown class name");
        com.google.javascript.rhino.jstype.JSType jSType73 = jSTypeRegistry8.createOptionalType((com.google.javascript.rhino.jstype.JSType) enumType65);
        com.google.javascript.rhino.ErrorReporter errorReporter74 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry76 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter74, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray77 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node78 = jSTypeRegistry76.createParameters(jSTypeArray77);
        com.google.javascript.rhino.Node node79 = jSTypeRegistry8.createParametersWithVarArgs(jSTypeArray77);
        com.google.javascript.rhino.Node node80 = jSTypeRegistry2.createParameters(jSTypeArray77);
        jSTypeRegistry2.resetForTypeCheck();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(functionType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(enumType35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(jSType73);
        org.junit.Assert.assertNotNull(jSTypeArray77);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertNotNull(node80);
    }

    @Test
    public void test00984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00984");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags1 = new com.google.javascript.rhino.Node.SideEffectFlags((int) (byte) 10);
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags3 = new com.google.javascript.rhino.Node.SideEffectFlags(100);
        sideEffectFlags3.setAllFlags();
        boolean boolean5 = sideEffectFlags3.areAllFlagsSet();
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags7 = new com.google.javascript.rhino.Node.SideEffectFlags(100);
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags9 = new com.google.javascript.rhino.Node.SideEffectFlags(100);
        sideEffectFlags9.setAllFlags();
        boolean boolean11 = sideEffectFlags9.areAllFlagsSet();
        boolean boolean12 = sideEffectFlags9.areAllFlagsSet();
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags14 = new com.google.javascript.rhino.Node.SideEffectFlags(100);
        sideEffectFlags14.setAllFlags();
        sideEffectFlags14.setMutatesGlobalState();
        sideEffectFlags14.setThrows();
        sideEffectFlags14.setMutatesThis();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.Node.SideEffectFlags> sideEffectFlagsList19 = com.google.common.collect.ImmutableList.of(sideEffectFlags1, sideEffectFlags3, sideEffectFlags7, sideEffectFlags9, sideEffectFlags14);
        int int20 = sideEffectFlags1.valueOf();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(sideEffectFlagsList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
    }

    @Test
    public void test00985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00985");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = null;
        enumType29.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo33);
        com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> jSTypeStaticSlot36 = enumType29.getSlot("{proxy:function (): {882920012}}");
        java.util.Set set37 = enumType29.getOwnPropertyNames();
        int int38 = set37.size();
        int int39 = set37.size();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry42 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable44 = jSTypeRegistry42.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean45 = jSTypeRegistry42.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry48 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable50 = jSTypeRegistry48.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean51 = jSTypeRegistry48.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType52 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.jstype.FunctionType functionType56 = jSTypeRegistry48.createFunctionTypeWithVarArgs(jSType52, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = functionType56.canBeCalled();
        boolean boolean58 = functionType56.hasAnyTemplateInternal();
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray59 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.FunctionType functionType60 = jSTypeRegistry42.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType56, jSTypeArray59);
        java.util.List<com.google.javascript.rhino.jstype.FunctionType> functionTypeList61 = functionType60.getSubTypes();
        com.google.common.collect.ImmutableList<java.lang.String> strList62 = functionType60.getTemplateTypeNames();
        com.google.common.collect.ImmutableList<java.lang.String> strList63 = functionType60.getTemplateTypeNames();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable64 = functionType60.getCtorExtendedInterfaces();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean65 = set37.remove((java.lang.Object) functionType60);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.jstype.FunctionType cannot be cast to java.lang.Comparable");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(jSTypeStaticSlot36);
        org.junit.Assert.assertNotNull(set37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(jSTypeIterable44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(functionType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeArray59);
        org.junit.Assert.assertNotNull(functionType60);
        org.junit.Assert.assertNull(functionTypeList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(objectTypeIterable64);
    }

    @Test
    public void test00986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00986");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean1 = jSDocInfo0.hasFileOverview();
        java.util.Collection<java.lang.String> strCollection2 = jSDocInfo0.getReferences();
        java.util.Collection<java.lang.String> strCollection3 = jSDocInfo0.getReferences();
        boolean boolean4 = jSDocInfo0.isNoAlias();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression5 = jSDocInfo0.getType();
        boolean boolean6 = jSDocInfo0.hasTypedefType();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(strCollection2);
        org.junit.Assert.assertNull(strCollection3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(jSTypeExpression5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test00987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00987");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType69 = parameterizedType67.toMaybeEnumElementType();
        int int70 = parameterizedType67.getPropertiesCount();
        com.google.javascript.rhino.jstype.ObjectType objectType71 = parameterizedType67.getTypeOfThis();
        com.google.javascript.rhino.jstype.ObjectType objectType72 = parameterizedType67.getTypeOfThis();
        boolean boolean73 = parameterizedType67.isNativeObjectType();
        boolean boolean74 = parameterizedType67.isInterface();
        boolean boolean76 = parameterizedType67.isPropertyTypeDeclared("{928842531}");
        com.google.javascript.rhino.JSDocInfo jSDocInfo78 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str79 = jSDocInfo78.getDescription();
        jSDocInfo78.setLicense("");
        boolean boolean82 = jSDocInfo78.isDeprecated();
        boolean boolean84 = jSDocInfo78.hasParameterType("InputId: hi!");
        int int85 = jSDocInfo78.getParameterCount();
        boolean boolean86 = jSDocInfo78.hasBaseType();
        parameterizedType67.setPropertyJSDocInfo("{875098400}", jSDocInfo78);
        com.google.javascript.rhino.JSDocInfo jSDocInfo88 = parameterizedType67.getJSDocInfo();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(enumElementType69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(objectType71);
        org.junit.Assert.assertNotNull(objectType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(jSDocInfo88);
    }

    @Test
    public void test00988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00988");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("{259317208}", jSTypeNative1);
    }

    @Test
    public void test00989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00989");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = null;
        enumType29.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo33);
        com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> jSTypeStaticSlot36 = enumType29.getSlot("{proxy:function (): {882920012}}");
        java.util.Set set37 = enumType29.getOwnPropertyNames();
        boolean boolean39 = set37.contains((java.lang.Object) 47);
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(jSTypeStaticSlot36);
        org.junit.Assert.assertNotNull(set37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test00990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00990");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList37 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray36);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList56 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray55);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList75 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray74);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>>> strComparableListList76 = com.google.common.collect.ImmutableList.of(strComparableList18, strComparableList37, strComparableList56, strComparableList75);
        com.google.common.collect.UnmodifiableIterator<java.lang.Comparable<java.lang.String>> strComparableItor77 = strComparableList56.iterator();
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList78 = strComparableList56.reverse();
        java.lang.String str79 = strComparableList56.toString();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strComparableList37);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strComparableList56);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strComparableList75);
        org.junit.Assert.assertNotNull(strComparableListList76);
        org.junit.Assert.assertNotNull(strComparableItor77);
        org.junit.Assert.assertNotNull(strComparableList78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" + "'", str79, "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
    }

    @Test
    public void test00991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00991");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        boolean boolean19 = strComparableList18.isEmpty();
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = strComparableList18.addAll(47, strComparableCollection21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test00992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00992");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str1 = jSDocInfo0.getDescription();
        jSDocInfo0.setLicense("");
        boolean boolean4 = jSDocInfo0.isDeprecated();
        boolean boolean5 = jSDocInfo0.hasReturnType();
        boolean boolean6 = jSDocInfo0.isNoCompile();
        boolean boolean7 = jSDocInfo0.isNoShadow();
        boolean boolean8 = jSDocInfo0.hasFileOverview();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test00993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00993");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        boolean boolean19 = strComparableList18.isEmpty();
        boolean boolean20 = strComparableList18.isEmpty();
        java.lang.Object[] objArray21 = strComparableList18.toArray();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList40 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray39);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator41 = strComparableList40.spliterator();
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative43 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec44 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", jSTypeNative43);
        com.google.javascript.rhino.Node node49 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean50 = node49.isDefaultCase();
        node49.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId53 = node49.getInputId();
        node49.detachChildren();
        boolean boolean55 = node49.isNot();
        boolean boolean56 = node49.isSetterDef();
        com.google.javascript.rhino.Node node57 = assertionFunctionSpec44.getAssertedParam(node49);
        int int58 = strComparableList40.indexOf((java.lang.Object) assertionFunctionSpec44);
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList77 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray76);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator78 = strComparableList77.spliterator();
        com.google.javascript.rhino.Node node83 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node85 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node86 = node83.useSourceInfoIfMissingFromForTree(node85);
        com.google.javascript.rhino.Node node88 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean89 = node88.isFalse();
        boolean boolean90 = node85.hasChild(node88);
        boolean boolean91 = strComparableList77.contains((java.lang.Object) boolean90);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor92 = strComparableList77.iterator();
        boolean boolean93 = strComparableList40.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList77);
        int int94 = strComparableList40.size();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = strComparableList18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strComparableList40);
        org.junit.Assert.assertNotNull(strComparableSpliterator41);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(inputId53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strComparableList77);
        org.junit.Assert.assertNotNull(strComparableSpliterator78);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertNotNull(node86);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strComparableItor92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 17 + "'", int94 == 17);
    }

    @Test
    public void test00994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00994");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType jSType3 = null;
        boolean boolean5 = jSTypeRegistry2.canPropertyBeDefined(jSType3, "Unknown class name");
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node14 = node11.useSourceInfoIfMissingFromForTree(node13);
        boolean boolean15 = node13.isExprResult();
        com.google.javascript.rhino.Node node16 = node13.cloneTree();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        boolean boolean23 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node32 = node29.useSourceInfoIfMissingFromForTree(node31);
        boolean boolean33 = node31.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter34 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter34, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable38 = jSTypeRegistry36.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean39 = jSTypeRegistry36.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType40 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.jstype.FunctionType functionType44 = jSTypeRegistry36.createFunctionTypeWithVarArgs(jSType40, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        boolean boolean45 = functionType44.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType46 = jSTypeRegistry19.createEnumType("false", node31, (com.google.javascript.rhino.jstype.JSType) functionType44);
        boolean boolean48 = enumType46.isPropertyTypeDeclared("");
        boolean boolean49 = enumType46.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType50 = enumType46.toMaybeUnionType();
        com.google.javascript.rhino.jstype.ObjectType objectType51 = jSTypeRegistry2.createObjectType("{581538441}", node13, (com.google.javascript.rhino.jstype.ObjectType) enumType46);
        boolean boolean52 = enumType46.isTemplateType();
        boolean boolean53 = enumType46.matchesUint32Context();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(functionType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(enumType46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(unionType50);
        org.junit.Assert.assertNotNull(objectType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test00995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00995");
        boolean boolean1 = com.google.javascript.jscomp.NodeUtil.isValidSimpleName("{1137307325}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test00996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00996");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo70 = parameterizedType67.getOwnPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n");
        java.lang.String str71 = parameterizedType67.toDebugHashCodeString();
        java.lang.String str72 = parameterizedType67.toDebugHashCodeString();
        com.google.javascript.rhino.JSDocInfo jSDocInfo74 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str75 = jSDocInfo74.getDescription();
        jSDocInfo74.setLicense("");
        boolean boolean78 = jSDocInfo74.isDeprecated();
        java.lang.String str79 = jSDocInfo74.getReturnDescription();
        jSDocInfo74.setLicense("{60400957}");
        parameterizedType67.setPropertyJSDocInfo("{1123380231}", jSDocInfo74);
        boolean boolean84 = jSDocInfo74.hasDescriptionForParameter("function (): {709506}");
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(jSDocInfo70);
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{proxy:function (): {551588428}}" + "'", str71, "{proxy:function (): {551588428}}");
// flaky:         org.junit.Assert.assertEquals("'" + str72 + "' != '" + "{proxy:function (): {551588428}}" + "'", str72, "{proxy:function (): {551588428}}");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test00997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00997");
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition0 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition1 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition2 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition3 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.javascript.rhino.JSDocInfo.NamePosition namePosition4 = new com.google.javascript.rhino.JSDocInfo.NamePosition();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo.NamePosition> namePositionList5 = com.google.common.collect.ImmutableList.of(namePosition0, namePosition1, namePosition2, namePosition3, namePosition4);
        int int6 = namePosition3.getPositionOnEndLine();
        org.junit.Assert.assertNotNull(namePositionList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test00998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00998");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean2 = node1.isGetProp();
        boolean boolean3 = node1.isNumber();
        com.google.javascript.rhino.jstype.JSType jSType4 = node1.getJSType();
        boolean boolean5 = node1.isTypeOf();
        node1.addSuppression("");
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable12 = jSTypeRegistry10.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable17 = jSTypeRegistry15.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean18 = jSTypeRegistry15.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType19 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray20 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList21 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList21, jSTypeArray20);
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry15.createFunctionTypeWithVarArgs(jSType19, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList21);
        boolean boolean24 = functionType23.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter25 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter25, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable29 = jSTypeRegistry27.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean30 = jSTypeRegistry27.shouldTolerateUndefinedValues();
        boolean boolean31 = jSTypeRegistry27.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node37 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node40 = node37.useSourceInfoIfMissingFromForTree(node39);
        boolean boolean41 = node39.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable46 = jSTypeRegistry44.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean47 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType48 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray49 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList50 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList50, jSTypeArray49);
        com.google.javascript.rhino.jstype.FunctionType functionType52 = jSTypeRegistry44.createFunctionTypeWithVarArgs(jSType48, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList50);
        boolean boolean53 = functionType52.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType54 = jSTypeRegistry27.createEnumType("false", node39, (com.google.javascript.rhino.jstype.JSType) functionType52);
        java.util.Set<java.lang.String> strSet55 = functionType52.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair56 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType23, (com.google.javascript.rhino.jstype.JSType) functionType52);
        com.google.javascript.rhino.Node node57 = functionType23.getSource();
        com.google.javascript.rhino.jstype.JSType jSType59 = functionType23.getPropertyType("hi!");
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry63 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray64 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node65 = jSTypeRegistry63.createParameters(jSTypeArray64);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = jSTypeRegistry10.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType23, true, jSTypeArray64);
        com.google.javascript.rhino.Node node67 = functionType66.getParametersNode();
        node1.addChildrenToBack(node67);
        int int69 = node67.getSideEffectFlags();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(jSType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable12);
        org.junit.Assert.assertNotNull(jSTypeIterable17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(jSTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(jSTypeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(functionType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(enumType54);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(jSType59);
        org.junit.Assert.assertNotNull(jSTypeArray64);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(functionType66);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
    }

    @Test
    public void test00999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test00999");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable34 = jSTypeRegistry32.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean35 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType36 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.jstype.FunctionType functionType40 = jSTypeRegistry32.createFunctionTypeWithVarArgs(jSType36, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        boolean boolean41 = functionType40.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable46 = jSTypeRegistry44.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean47 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        boolean boolean48 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node57 = node54.useSourceInfoIfMissingFromForTree(node56);
        boolean boolean58 = node56.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable63 = jSTypeRegistry61.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean64 = jSTypeRegistry61.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType65 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry61.createFunctionTypeWithVarArgs(jSType65, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        boolean boolean70 = functionType69.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType71 = jSTypeRegistry44.createEnumType("false", node56, (com.google.javascript.rhino.jstype.JSType) functionType69);
        java.util.Set<java.lang.String> strSet72 = functionType69.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair73 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType40, (com.google.javascript.rhino.jstype.JSType) functionType69);
        com.google.javascript.rhino.Node node74 = functionType40.getSource();
        com.google.javascript.rhino.jstype.JSType jSType76 = functionType40.getPropertyType("hi!");
        com.google.javascript.rhino.jstype.JSType jSType77 = jSTypeRegistry2.createOptionalType((com.google.javascript.rhino.jstype.JSType) functionType40);
        com.google.javascript.rhino.jstype.JSType jSType78 = functionType40.getTypeOfThis();
        com.google.javascript.rhino.jstype.ObjectType objectType79 = functionType40.getTypeOfThis();
        com.google.javascript.rhino.jstype.TemplateType templateType80 = functionType40.toMaybeTemplateType();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertNotNull(jSTypeIterable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(functionType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(enumType71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNotNull(jSType76);
        org.junit.Assert.assertNotNull(jSType77);
        org.junit.Assert.assertNotNull(jSType78);
        org.junit.Assert.assertNotNull(objectType79);
        org.junit.Assert.assertNull(templateType80);
    }

    @Test
    public void test01000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test01000");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType69 = parameterizedType67.toMaybeEnumElementType();
        com.google.javascript.rhino.jstype.TemplateType templateType70 = parameterizedType67.toMaybeTemplateType();
        boolean boolean72 = parameterizedType67.isPropertyTypeInferred("hi!");
        com.google.javascript.rhino.jstype.JSType jSType74 = parameterizedType67.findPropertyType("{1687381779}");
        boolean boolean75 = parameterizedType67.isUnknownType();
        com.google.common.base.Predicate<com.google.javascript.rhino.jstype.JSType> jSTypePredicate76 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean77 = parameterizedType67.setValidator(jSTypePredicate76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(enumElementType69);
        org.junit.Assert.assertNull(templateType70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(jSType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }
}
